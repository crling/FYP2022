{"ast":null,"code":"function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport { copyObject } from \"utils/object\";\nimport { genDefaultPalette, withDefaultPalette, genPaletteMap } from \"oviz-common/palette\";\nvar cbpPalette = {\n  cBioPortal: {\n    name: \"cBioPortal\",\n    // miss, inframe, trunc, other, text, active layer, line, icon stroke\n    colors: [\"#3d7f08\", \"#913810\", \"#000000\", \"#c55ebc\", \"#000000\", \"#777\", \"#555\", \"#fff\"]\n  }\n};\n\nfunction run(v) {\n  v.data._changed = true;\n  v.run();\n}\n\nexport var editorRef = {};\nexport function editorConfig(v) {\n  var _genDefaultPalette = genDefaultPalette(v.data.colors),\n      _genDefaultPalette2 = _slicedToArray(_genDefaultPalette, 1),\n      defaultPalette = _genDefaultPalette2[0];\n\n  return {\n    sections: [{\n      id: \"settings\",\n      title: \"Settings\",\n      layout: \"single-page\",\n      view: {\n        type: \"list\",\n        items: [{\n          type: \"vue\",\n          title: \"\",\n          component: \"color-picker\",\n          data: {\n            title: \"Customize colors\",\n            scheme: copyObject(v.data.colors),\n            palettes: withDefaultPalette(defaultPalette, cbpPalette),\n            id: \"pwcolor\",\n            paletteMap: genPaletteMap(Object.keys(v.data.colors)),\n            callback: function callback(colors) {\n              v.data.colors = colors;\n              v.forceRedraw = true;\n              run(v);\n            }\n          }\n        }, {\n          title: \"Outliers\",\n          type: \"checkbox\",\n          value: {\n            current: true,\n            callback: function callback(value) {\n              v.data.config.showOutliers = value;\n              run(v);\n            }\n          }\n        }, {\n          title: \"X-Label Rotation Angle\",\n          type: \"input\",\n          format: \"int\",\n          value: {\n            current: 45,\n            callback: function callback(newValue) {\n              var val = parseInt(newValue);\n              if (val < 0) val = 0;\n              if (val > 90) val = 90;\n              v.data.config.xLabelRotation = val;\n              run(v);\n            }\n          }\n        }]\n      }\n    }]\n  };\n}","map":{"version":3,"sources":["/Users/wangzhenyu/Desktop/fyp_workspace/meta_platform/app/javascript/viz/continuos-grouped-boxplot/editor.ts"],"names":["copyObject","genDefaultPalette","withDefaultPalette","genPaletteMap","cbpPalette","cBioPortal","name","colors","run","v","data","_changed","editorRef","editorConfig","defaultPalette","sections","id","title","layout","view","type","items","component","scheme","palettes","paletteMap","Object","keys","callback","forceRedraw","value","current","config","showOutliers","format","newValue","val","parseInt","xLabelRotation"],"mappings":"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","sourcesContent":["import { defaultLayoutConf as conf} from \"utils/editor\";\nimport { EditorDef } from \"utils/editor\";\nimport { copyObject } from \"utils/object\";\nimport { genDefaultPalette, withDefaultPalette, genPaletteMap} from \"oviz-common/palette\";\n\nconst cbpPalette = {\n    cBioPortal: {\n        name: \"cBioPortal\",\n        // miss, inframe, trunc, other, text, active layer, line, icon stroke\n        colors: [\"#3d7f08\", \"#913810\", \"#000000\", \"#c55ebc\", \"#000000\", \"#777\", \"#555\", \"#fff\"],\n    },\n};\n\nfunction run(v) {\n    v.data._changed = true;\n    v.run();\n}\nexport const editorRef = {} as any;\n\nexport function editorConfig(v): EditorDef {\n    const [defaultPalette] = genDefaultPalette(v.data.colors);\n    return {\n        sections: [\n            {\n                id: \"settings\",\n                title: \"Settings\",\n                layout: \"single-page\",\n                view: {\n                    type: \"list\",\n                    items: [\n                        {\n                            type: \"vue\",\n                            title: \"\",\n                            component: \"color-picker\",\n                            data: {\n                                title: \"Customize colors\",\n                                scheme: copyObject(v.data.colors),\n                                palettes: withDefaultPalette(defaultPalette, cbpPalette),\n                                id: \"pwcolor\",\n                                paletteMap: genPaletteMap(Object.keys(v.data.colors)),\n                                callback(colors) {\n                                    v.data.colors = colors;\n                                    v.forceRedraw = true;\n                                    run(v);\n                                },\n                            },\n                        },\n                        {\n                            title: \"Outliers\",\n                            type: \"checkbox\",\n                            value: {\n                                current: true,\n                                callback(value) {\n                                    v.data.config.showOutliers = value\n                                    run(v);\n                                },\n                            },\n                        },\n                        {\n                            title: \"X-Label Rotation Angle\",\n                            type: \"input\",\n                            format: \"int\",\n                            value: {\n                                current: 45,\n                                callback(newValue) {\n                                    let val = parseInt(newValue as any);\n                                    if (val < 0) val = 0;\n                                    if (val > 90) val = 90;\n                                    v.data.config.xLabelRotation = val;\n                                    run(v);\n                                }\n                              }\n                        },\n                    ]\n                }\n            }\n        ],\n    };\n}\n"]},"metadata":{},"sourceType":"module"}