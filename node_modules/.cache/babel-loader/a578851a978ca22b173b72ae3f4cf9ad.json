{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport { genDefaultPalette, withDefaultPalette } from \"oviz-common/palette\";\nimport { copyObject } from \"utils/object\";\n\nfunction run(v) {\n  v.run();\n}\n\nexport var editorRef = {};\nvar cbpPalette = {\n  cBioPortal: {\n    name: \"cBioPortal\",\n    // miss, inframe, trunc, other, text, active layer, line, icon stroke\n    colors: [\"#3d7f08\", \"#913810\", \"#000000\", \"#c55ebc\", \"#000000\", \"#777\", \"#555\", \"#fff\"]\n  }\n};\nexport function editorConfig(v) {\n  var _genDefaultPalette = genDefaultPalette(v.data.colors),\n      _genDefaultPalette2 = _slicedToArray(_genDefaultPalette, 1),\n      defaultPalette = _genDefaultPalette2[0];\n\n  var paletteMap = {};\n  Object.keys(v.data.colors).forEach(function (k, i) {\n    paletteMap[k] = i;\n  });\n  return {\n    sections: [{\n      id: \"settings\",\n      title: \"Settings\",\n      layout: \"single-page\",\n      view: {\n        type: \"list\",\n        items: [{\n          type: \"vue\",\n          title: \"\",\n          component: \"color-picker\",\n          data: {\n            title: \"Customize colors\",\n            scheme: copyObject(v.data.colors),\n            palettes: withDefaultPalette(defaultPalette, cbpPalette),\n            paletteMap: paletteMap,\n            id: \"pwcolor\",\n            callback: function callback(colors) {\n              v.data.colors = _objectSpread({}, colors);\n              v.forceRedraw = true;\n              run(v);\n            }\n          }\n        }]\n      }\n    }]\n  };\n}","map":{"version":3,"sources":["/Users/wangzhenyu/Desktop/fyp_workspace/meta_platform/app/javascript/viz/signed-barchart/editor.ts"],"names":["genDefaultPalette","withDefaultPalette","copyObject","run","v","editorRef","cbpPalette","cBioPortal","name","colors","editorConfig","data","defaultPalette","paletteMap","Object","keys","forEach","k","i","sections","id","title","layout","view","type","items","component","scheme","palettes","callback","forceRedraw"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAASA,iBAAT,EAA4BC,kBAA5B,QAAsD,qBAAtD;AAEA,SAASC,UAAT,QAA2B,cAA3B;;AAEA,SAASC,GAAT,CAAaC,CAAb,EAAgB;AACZA,EAAAA,CAAC,CAACD,GAAF;AACH;;AACD,OAAO,IAAME,SAAS,GAAG,EAAlB;AAEP,IAAMC,UAAU,GAAG;AACfC,EAAAA,UAAU,EAAE;AACRC,IAAAA,IAAI,EAAE,YADE;AAER;AACAC,IAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,MAAxD,EAAgE,MAAhE,EAAwE,MAAxE;AAHA;AADG,CAAnB;AAQA,OAAO,SAASC,YAAT,CAAsBN,CAAtB,EAAoC;AAAA,2BACdJ,iBAAiB,CAACI,CAAC,CAACO,IAAF,CAAOF,MAAR,CADH;AAAA;AAAA,MAChCG,cADgC;;AAEvC,MAAMC,UAAU,GAAG,EAAnB;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYX,CAAC,CAACO,IAAF,CAAOF,MAAnB,EAA2BO,OAA3B,CAAmC,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACzCL,IAAAA,UAAU,CAACI,CAAD,CAAV,GAAgBC,CAAhB;AACH,GAFD;AAGA,SAAO;AACHC,IAAAA,QAAQ,EAAE,CACN;AACIC,MAAAA,EAAE,EAAE,UADR;AAEIC,MAAAA,KAAK,EAAE,UAFX;AAGIC,MAAAA,MAAM,EAAE,aAHZ;AAIIC,MAAAA,IAAI,EAAE;AACFC,QAAAA,IAAI,EAAE,MADJ;AAEFC,QAAAA,KAAK,EAAE,CACH;AACID,UAAAA,IAAI,EAAE,KADV;AAEIH,UAAAA,KAAK,EAAE,EAFX;AAGIK,UAAAA,SAAS,EAAE,cAHf;AAIIf,UAAAA,IAAI,EAAE;AACFU,YAAAA,KAAK,EAAE,kBADL;AAEFM,YAAAA,MAAM,EAAEzB,UAAU,CAACE,CAAC,CAACO,IAAF,CAAOF,MAAR,CAFhB;AAGFmB,YAAAA,QAAQ,EAAE3B,kBAAkB,CAACW,cAAD,EAAiBN,UAAjB,CAH1B;AAIFO,YAAAA,UAAU,EAAVA,UAJE;AAKFO,YAAAA,EAAE,EAAE,SALF;AAMFS,YAAAA,QANE,oBAMOpB,MANP,EAMe;AACbL,cAAAA,CAAC,CAACO,IAAF,CAAOF,MAAP,qBAAoBA,MAApB;AACAL,cAAAA,CAAC,CAAC0B,WAAF,GAAgB,IAAhB;AACA3B,cAAAA,GAAG,CAACC,CAAD,CAAH;AACH;AAVC;AAJV,SADG;AAFL;AAJV,KADM;AADP,GAAP;AA+BH","sourcesContent":["import { genDefaultPalette, withDefaultPalette } from \"oviz-common/palette\";\nimport { EditorDef } from \"utils/editor\";\nimport { copyObject } from \"utils/object\";\n\nfunction run(v) {\n    v.run();\n}\nexport const editorRef = {} as any;\n\nconst cbpPalette = {\n    cBioPortal: {\n        name: \"cBioPortal\",\n        // miss, inframe, trunc, other, text, active layer, line, icon stroke\n        colors: [\"#3d7f08\", \"#913810\", \"#000000\", \"#c55ebc\", \"#000000\", \"#777\", \"#555\", \"#fff\"],\n    },\n};\n\nexport function editorConfig(v): EditorDef {\n    const [defaultPalette] = genDefaultPalette(v.data.colors);\n    const paletteMap = {};\n    Object.keys(v.data.colors).forEach((k, i) => {\n        paletteMap[k] = i;\n    });\n    return {\n        sections: [\n            {\n                id: \"settings\",\n                title: \"Settings\",\n                layout: \"single-page\",\n                view: {\n                    type: \"list\",\n                    items: [\n                        {\n                            type: \"vue\",\n                            title: \"\",\n                            component: \"color-picker\",\n                            data: {\n                                title: \"Customize colors\",\n                                scheme: copyObject(v.data.colors),\n                                palettes: withDefaultPalette(defaultPalette, cbpPalette),\n                                paletteMap,\n                                id: \"pwcolor\",\n                                callback(colors) {\n                                    v.data.colors = {...colors};\n                                    v.forceRedraw = true;\n                                    run(v);\n                                },\n                            },\n                        },\n                    ],\n                },\n            },\n        ],\n    };\n}\n"]},"metadata":{},"sourceType":"module"}