{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    Component {\\n        @for (layer, l) in points {\\n            @for (p, i) in layer {\\n                Circle.centered {\\n                    key = l + \\\",\\\" + i\\n                    x = p.pos\\n                    y = getR(l)\\n                    points = points\\n                    fill = p.color || \\\"#f66\\\"\\n                    r = prop.pointSize\\n                    @props prop.opt.dot\\n                }\\n            }\\n        }\\n    }\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport { stackedLayout } from \"../../../algo\";\nimport { template } from \"../../../template/tag\";\nimport { CircosContent } from \"./content\";\nexport var CircosContentStackedDot = /*#__PURE__*/function (_CircosContent) {\n  _inherits(CircosContentStackedDot, _CircosContent);\n\n  var _super = _createSuper(CircosContentStackedDot);\n\n  function CircosContentStackedDot() {\n    var _this;\n\n    _classCallCheck(this, CircosContentStackedDot);\n\n    _this = _super.apply(this, arguments);\n    _this.render = template(_templateObject());\n    return _this;\n  } // @ts-ignore\n\n\n  _createClass(CircosContentStackedDot, [{\n    key: \"getR\",\n    value: function getR(layer) {\n      return Math.min(this.prop.pointSize + this.layer.innerR + layer * this.prop.pointSize * 2, this.layer.outerR);\n    }\n  }, {\n    key: \"willRender\",\n    value: function willRender() {\n      var _this2 = this;\n\n      var pg = this.prop.posGetter;\n      var cg = this.prop.colorGetter;\n      var ps = this.prop.pointSize;\n      var points = this.prop.data.map(function (d) {\n        var pos = _this2._scale(pg(d), true);\n\n        return {\n          pos: pos,\n          d: d,\n          color: cg ? cg(d) : null,\n          xPos: pos * _this2.layer.innerR\n        };\n      });\n      this.points = stackedLayout(points).value(function (d) {\n        return d.xPos;\n      }).extent(function (d) {\n        return [d.xPos - ps, d.xPos + ps];\n      }).run();\n    }\n  }, {\n    key: \"defaultProp\",\n    value: function defaultProp() {\n      return Object.assign(Object.assign({}, _get(_getPrototypeOf(CircosContentStackedDot.prototype), \"defaultProp\", this).call(this)), {\n        posGetter: function posGetter(d, i) {\n          return i;\n        },\n        pointSize: 2\n      });\n    }\n  }]);\n\n  return CircosContentStackedDot;\n}(CircosContent);","map":null,"metadata":{},"sourceType":"module"}