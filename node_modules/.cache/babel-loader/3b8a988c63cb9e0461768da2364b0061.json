{"ast":null,"code":"function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { ColorSchemeCategory, ColorSchemeGradient } from \"crux/dist/color\";\nimport { measuredTextSize } from \"crux/dist/utils/text-size\";\nimport { schemeSet1, schemeSet2, schemeSet3 } from \"d3-scale-chromatic\";\nimport { applyDefaultSpeciesSort } from \"./editor\";\nimport * as d3 from \"d3\";\nimport * as _ from \"lodash\";\nimport { getGroups } from \"utils/array\";\nvar schemeSets = [schemeSet1, schemeSet2, schemeSet3];\nexport var rainbowL = [\"hsl(0, 73%, 80%)\", \"hsl(36, 100%, 75%)\", // \"hsl(45, 100%, 75%)\",\n\"hsl(54, 90%, 72%)\", \"hsl(66, 71%, 77%)\", \"hsl(88, 50%, 76%)\", \"hsl(122, 37%, 74%)\", \"hsl(174, 42%, 65%)\", \"hsl(187, 72%, 71%)\", \"hsl(199, 92%, 74%)\", \"hsl(231, 44%, 74%)\", \"hsl(291, 47%, 71%)\", \"hsl(340, 80%, 74%)\"];\nvar paletteColors = [\"#c30\", \"#ffc\", \"#03c\"];\nexport function main(data) {\n  var _this = this;\n\n  this.data.hiddenSpecies = new Set();\n  this.data.species = this.data.filteredSpecies = getGroups(data, \"Species\").sort();\n  this.data.maxSpeciesLength = Math.max.apply(Math, _toConsumableArray(this.data.filteredSpecies.map(function (x) {\n    return measuredTextSize(x, 12).width;\n  })));\n  this.data.speciesCount = this.data.species.length;\n  this.data.samples = getGroups(data, \"Sample\").sort();\n  this.data.sources = getGroups(data, \"Source\").sort();\n  this.data.mainDict = _.groupBy(data, \"Sample\");\n  this.data.colorDict = {};\n  var palette = d3.scaleLinear().domain([0, 1, 2]).range(paletteColors);\n  this.data.sources.forEach(function (s, i) {\n    var value = i / _this.data.sources.length * 2;\n    _this.data.colorDict[s] = palette(value);\n  });\n  computeSortingScore(this.data);\n  return null;\n}\nexport function computeSortingScore(data) {\n  data.speciesSortingScore = {};\n  data.species.forEach(function (s) {\n    data.speciesSortingScore[s] = 0;\n  });\n  data.samples.forEach(function (s, i) {\n    var sampleWeight = Math.pow(0.5, i);\n\n    if (!!data.mainDict[s]) {\n      var groupedData = _.groupBy(data.mainDict[s], \"Source\");\n\n      data.sources.forEach(function (k, j) {\n        var sourceWeight = 1 - j / data.sources.length;\n\n        if (!!groupedData[k]) {\n          groupedData[k].forEach(function (x) {\n            data.speciesSortingScore[x.Species] += sampleWeight * sourceWeight * parseFloat(x.Abd) / 100;\n          });\n        }\n      });\n      getGroups(data.mainDict[s], \"Species\").forEach(function (sp) {\n        data.speciesSortingScore[sp] += Math.pow(0.5, i - 1);\n      });\n    }\n  });\n}\nexport function generateHistData(data) {\n  var hist = {\n    indexes: data.sources,\n    result: {},\n    samples: []\n  };\n  data.samples.forEach(function (s) {\n    if (!!data.mainDict[s]) {\n      var groupedData = _.groupBy(data.mainDict[s], \"Source\");\n\n      hist.result[s] = {};\n      hist.indexes.forEach(function (k) {\n        var species = _toConsumableArray(data.filteredSpecies);\n\n        if (!!groupedData[k]) {\n          var _hist$result$s$k;\n\n          hist.result[s][k] = [];\n          groupedData[k].forEach(function (x) {\n            if (species.indexOf(x.Species) >= 0) {\n              species.splice(species.indexOf(x.Species), 1);\n              hist.result[s][k].push([x.Species, parseFloat(x.Abd)]);\n            }\n          });\n\n          (_hist$result$s$k = hist.result[s][k]).push.apply(_hist$result$s$k, _toConsumableArray(species.map(function (x) {\n            return [x, 0];\n          })));\n\n          hist.result[s][k].sort(function (a, b) {\n            return data.filteredSpecies.indexOf(a[0]) - data.filteredSpecies.indexOf(b[0]);\n          });\n        } else {\n          hist.result[s][k] = species.map(function (x) {\n            return [x, 0];\n          });\n        }\n      });\n    }\n  });\n  hist.samples = Object.keys(hist.result);\n  return hist;\n}\nexport function meta(d) {\n  var _this2 = this;\n\n  this.data.metaFeatures = d.columns.slice(1, d.columns.length);\n  this.data.metaDict = {};\n  d.forEach(function (x) {\n    var species = x[d.columns[0]];\n    delete x[d.columns[0]];\n    _this2.data.metaDict[species] = x;\n  });\n  this.data.metaData = {};\n  this.data.metaInfo = {};\n  var index = 0;\n  this.data.metaFeatures.forEach(function (k) {\n    // if (k === \"Age\" || k === \"BMI\") {\n    //     const [min, max] = minmax(d.map(x => x[k]));\n    //     this.data.metaInfo[k] = new MetaInfo(k, true, min, max, []);\n    //     this.data.metaData[k] = this.data.samples.map(x => this.data.metaDict[x][k]);\n    // } else {\n    //     const values = d.map(x => x[k]).reduce((a, x) => {\n    //         if (a.indexOf(x) < 0 && x !== \"NA\") a.push(x);\n    //         return a;\n    //     }, []);\n    //     this.data.metaInfo[k] = new MetaInfo(k, false, null, null, values);\n    //     this.data.metaData[k] = this.data.samples.map(x => this.data.metaDict[x][k]);\n    // }\n    var values = d.map(function (x) {\n      return x[k];\n    }).reduce(function (a, x) {\n      if (a.indexOf(x) < 0 && x !== \"NA\") a.push(x);\n      return a;\n    }, []).sort();\n    _this2.data.metaInfo[k] = new MetaInfo(k, schemeSets[index], false, null, null, values);\n    _this2.data.metaData[k] = _this2.data.species.map(function (x) {\n      return !!_this2.data.metaDict[x] ? _this2.data.metaDict[x][k] : \"NA\";\n    });\n    index++;\n  });\n  applyDefaultSpeciesSort(this);\n}\nexport var MetaInfo = /*#__PURE__*/function () {\n  function MetaInfo(key, schemeSet, isNumber, min, max, values) {\n    _classCallCheck(this, MetaInfo);\n\n    this.key = key;\n    this.isNumber = isNumber;\n    this.min = min;\n    this.max = max;\n    this.values = values;\n    this.useNumber = false;\n    this.useGroup = false;\n    this.groupCount = 4;\n    this.useThres = false;\n    this.thres = [];\n    this.minDistinct = false;\n    this.maxDistinct = false;\n    this.rangeMin = void 0;\n    this.rangeMax = void 0;\n    this.colorStart = \"#e5f0ff\";\n    this.colorEnd = \"#1a79ff\";\n    this.colorMap = null;\n    this.simpleKey = void 0;\n    this.scheme = void 0;\n    this.useNumber = isNumber;\n    this.rangeMin = min;\n    this.rangeMax = max;\n    this.simpleKey = key.replace(/\\(|\\)| /g, \"_\");\n    this.updateColorGetter(schemeSet);\n  }\n\n  _createClass(MetaInfo, [{\n    key: \"updateColorGetter\",\n    value: function updateColorGetter(schemeSet) {\n      if (this.colorMap === null && this.values) {\n        this.colorMap = ColorSchemeCategory.create(this.values, schemeSet).colors;\n      }\n\n      if (this.useNumber) {\n        var opt;\n\n        if (this.useGroup) {\n          if (this.useThres) {\n            opt = {\n              type: \"threshold\",\n              thresholds: this.thres,\n              domain: [this.min, this.max],\n              minDistinct: this.minDistinct,\n              maxDistinct: this.maxDistinct\n            };\n          } else {\n            opt = {\n              type: \"quantize\",\n              groups: this.groupCount,\n              domain: [this.min, this.max]\n            };\n          }\n        } else {\n          opt = {\n            type: \"linear\",\n            domain: [this.rangeMin, this.rangeMax]\n          };\n        }\n\n        this.scheme = ColorSchemeGradient.create(this.colorStart, this.colorEnd, opt); // v.defineGradient(`md_${this.simpleKey}`, \"horizontal\", [this.colorStart, this.colorEnd]);\n      } else {\n        this.scheme = new ColorSchemeCategory(this.colorMap);\n      }\n    }\n  }, {\n    key: \"color\",\n    value: function color(c) {\n      if (c === \"NA\") return null;\n      return this.scheme.get(c);\n    }\n  }, {\n    key: \"legendData\",\n    value: function legendData() {\n      if (this.useNumber && !this.useGroup) {\n        return [null, \"md_\".concat(this.simpleKey), this.rangeMin, this.rangeMax];\n      }\n\n      var lgData = this.scheme.legendData();\n      return this.useNumber ? lgData : this.values.map(function (v) {\n        return lgData.find(function (x) {\n          return x.label === v;\n        });\n      });\n    }\n  }, {\n    key: \"toObject\",\n    value: function toObject() {\n      var obj = {\n        hasValues: !!this.values\n      };\n\n      var _iterator = _createForOfIteratorHelper(MetaInfo.keys),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var k = _step.value;\n          obj[k] = this[k];\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return obj;\n    }\n  }, {\n    key: \"update\",\n    value: function update(v, obj) {\n      var _iterator2 = _createForOfIteratorHelper(MetaInfo.keys),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var k = _step2.value;\n\n          if (k === \"thres\" || k === \"values\" && obj[k]) {\n            this[k] = _toConsumableArray(obj[k]);\n          } else {\n            this[k] = obj[k];\n          }\n        } // this.updateColorGetter();\n\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }]);\n\n  return MetaInfo;\n}();\nMetaInfo.keys = [\"isNumber\", \"useNumber\", \"useGroup\", \"min\", \"max\", \"groupCount\", \"useThres\", \"thres\", \"minDistinct\", \"maxDistinct\", \"values\", \"colorMap\", \"colorStart\", \"colorEnd\", \"rangeMin\", \"rangeMax\"];\nexport function filterSpecies(v) {\n  var hidden = v.data.hiddenSpecies;\n  v.data.filteredSpecies = v.data.species.filter(function (s) {\n    return !hidden.has(s);\n  });\n  v.data.speciesCount = v.data.filteredSpecies.length;\n  v.data.hist = generateHistData(v.data);\n  Object.keys(v.data.metaData).forEach(function (k) {\n    v.data.metaData[k] = v.data.filteredSpecies.map(function (x) {\n      return !!v.data.metaDict[x] ? v.data.metaDict[x][k] : \"NA\";\n    });\n  });\n}","map":{"version":3,"sources":["/Users/wangzhenyu/Desktop/fyp_workspace/meta_platform/app/javascript/viz/fmt-overview/data.ts"],"names":["ColorSchemeCategory","ColorSchemeGradient","measuredTextSize","schemeSet1","schemeSet2","schemeSet3","applyDefaultSpeciesSort","d3","_","getGroups","schemeSets","rainbowL","paletteColors","main","data","hiddenSpecies","Set","species","filteredSpecies","sort","maxSpeciesLength","Math","max","map","x","width","speciesCount","length","samples","sources","mainDict","groupBy","colorDict","palette","scaleLinear","domain","range","forEach","s","i","value","computeSortingScore","speciesSortingScore","sampleWeight","pow","groupedData","k","j","sourceWeight","Species","parseFloat","Abd","sp","generateHistData","hist","indexes","result","indexOf","splice","push","a","b","Object","keys","meta","d","metaFeatures","columns","slice","metaDict","metaData","metaInfo","index","values","reduce","MetaInfo","key","schemeSet","isNumber","min","useNumber","useGroup","groupCount","useThres","thres","minDistinct","maxDistinct","rangeMin","rangeMax","colorStart","colorEnd","colorMap","simpleKey","scheme","replace","updateColorGetter","create","colors","opt","type","thresholds","groups","c","get","lgData","legendData","v","find","label","obj","hasValues","filterSpecies","hidden","filter","has"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,SAAsBA,mBAAtB,EAA2CC,mBAA3C,QAAsE,iBAAtE;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,UAAjC,QAAmD,oBAAnD;AACA,SAASC,uBAAT,QAAwC,UAAxC;AAEA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAO,KAAKC,CAAZ,MAAmB,QAAnB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,IAAMC,UAAU,GAAG,CAACP,UAAD,EAAaC,UAAb,EAAyBC,UAAzB,CAAnB;AAEA,OAAO,IAAMM,QAAQ,GAAG,CAAC,kBAAD,EACxB,oBADwB,EAExB;AACA,mBAHwB,EAIxB,mBAJwB,EAKxB,mBALwB,EAMxB,oBANwB,EAOxB,oBAPwB,EAQxB,oBARwB,EASxB,oBATwB,EAUxB,oBAVwB,EAWxB,oBAXwB,EAYxB,oBAZwB,CAAjB;AAeP,IAAMC,aAAa,GAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,CAAtB;AAEA,OAAO,SAASC,IAAT,CAAcC,IAAd,EAAoB;AAAA;;AACvB,OAAKA,IAAL,CAAUC,aAAV,GAA0B,IAAIC,GAAJ,EAA1B;AACA,OAAKF,IAAL,CAAUG,OAAV,GAAoB,KAAKH,IAAL,CAAUI,eAAV,GAA4BT,SAAS,CAACK,IAAD,EAAO,SAAP,CAAT,CAA2BK,IAA3B,EAAhD;AACA,OAAKL,IAAL,CAAUM,gBAAV,GAA6BC,IAAI,CAACC,GAAL,OAAAD,IAAI,qBAAQ,KAAKP,IAAL,CAAUI,eAAV,CACJK,GADI,CACA,UAAAC,CAAC;AAAA,WAAItB,gBAAgB,CAACsB,CAAD,EAAI,EAAJ,CAAhB,CAAwBC,KAA5B;AAAA,GADD,CAAR,EAAjC;AAEA,OAAKX,IAAL,CAAUY,YAAV,GAAyB,KAAKZ,IAAL,CAAUG,OAAV,CAAkBU,MAA3C;AACA,OAAKb,IAAL,CAAUc,OAAV,GAAoBnB,SAAS,CAACK,IAAD,EAAO,QAAP,CAAT,CAA0BK,IAA1B,EAApB;AACA,OAAKL,IAAL,CAAUe,OAAV,GAAoBpB,SAAS,CAACK,IAAD,EAAO,QAAP,CAAT,CAA0BK,IAA1B,EAApB;AACA,OAAKL,IAAL,CAAUgB,QAAV,GAAqBtB,CAAC,CAACuB,OAAF,CAAUjB,IAAV,EAAgB,QAAhB,CAArB;AACA,OAAKA,IAAL,CAAUkB,SAAV,GAAsB,EAAtB;AACA,MAAMC,OAAO,GAAG1B,EAAE,CAAC2B,WAAH,GAAiBC,MAAjB,CAAwB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAxB,EAAmCC,KAAnC,CAAyCxB,aAAzC,CAAhB;AACA,OAAKE,IAAL,CAAUe,OAAV,CAAkBQ,OAAlB,CAA0B,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAChC,QAAMC,KAAK,GAAGD,CAAC,GAAG,KAAI,CAACzB,IAAL,CAAUe,OAAV,CAAkBF,MAAtB,GAA+B,CAA7C;AACA,IAAA,KAAI,CAACb,IAAL,CAAUkB,SAAV,CAAoBM,CAApB,IAAyBL,OAAO,CAACO,KAAD,CAAhC;AACH,GAHD;AAIAC,EAAAA,mBAAmB,CAAC,KAAK3B,IAAN,CAAnB;AACA,SAAO,IAAP;AACH;AAED,OAAO,SAAS2B,mBAAT,CAA6B3B,IAA7B,EAAmC;AAEtCA,EAAAA,IAAI,CAAC4B,mBAAL,GAA2B,EAA3B;AACA5B,EAAAA,IAAI,CAACG,OAAL,CAAaoB,OAAb,CAAqB,UAAAC,CAAC,EAAI;AACtBxB,IAAAA,IAAI,CAAC4B,mBAAL,CAAyBJ,CAAzB,IAA8B,CAA9B;AACH,GAFD;AAGAxB,EAAAA,IAAI,CAACc,OAAL,CAAaS,OAAb,CAAqB,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAC3B,QAAMI,YAAY,GAAGtB,IAAI,CAACuB,GAAL,CAAS,GAAT,EAAcL,CAAd,CAArB;;AACA,QAAI,CAAC,CAACzB,IAAI,CAACgB,QAAL,CAAcQ,CAAd,CAAN,EAAwB;AACpB,UAAMO,WAAW,GAAGrC,CAAC,CAACuB,OAAF,CAAUjB,IAAI,CAACgB,QAAL,CAAcQ,CAAd,CAAV,EAA4B,QAA5B,CAApB;;AACAxB,MAAAA,IAAI,CAACe,OAAL,CAAaQ,OAAb,CAAqB,UAACS,CAAD,EAAIC,CAAJ,EAAU;AAC3B,YAAMC,YAAY,GAAG,IAAID,CAAC,GAAGjC,IAAI,CAACe,OAAL,CAAaF,MAA1C;;AACA,YAAI,CAAC,CAACkB,WAAW,CAACC,CAAD,CAAjB,EAAsB;AAClBD,UAAAA,WAAW,CAACC,CAAD,CAAX,CAAeT,OAAf,CAAuB,UAAAb,CAAC,EAAI;AACxBV,YAAAA,IAAI,CAAC4B,mBAAL,CAAyBlB,CAAC,CAACyB,OAA3B,KAAuCN,YAAY,GAAGK,YAAf,GAA8BE,UAAU,CAAC1B,CAAC,CAAC2B,GAAH,CAAxC,GAAkD,GAAzF;AACH,WAFD;AAGH;AACJ,OAPD;AAQA1C,MAAAA,SAAS,CAACK,IAAI,CAACgB,QAAL,CAAcQ,CAAd,CAAD,EAAmB,SAAnB,CAAT,CAAuCD,OAAvC,CAA+C,UAAAe,EAAE,EAAI;AACjDtC,QAAAA,IAAI,CAAC4B,mBAAL,CAAyBU,EAAzB,KAAgC/B,IAAI,CAACuB,GAAL,CAAS,GAAT,EAAcL,CAAC,GAAG,CAAlB,CAAhC;AACH,OAFD;AAGH;AACJ,GAhBD;AAiBH;AAED,OAAO,SAASc,gBAAT,CAA0BvC,IAA1B,EAAgC;AACnC,MAAMwC,IAAI,GAAG;AAACC,IAAAA,OAAO,EAAEzC,IAAI,CAACe,OAAf;AAAwB2B,IAAAA,MAAM,EAAE,EAAhC;AAAoC5B,IAAAA,OAAO,EAAE;AAA7C,GAAb;AACAd,EAAAA,IAAI,CAACc,OAAL,CAAaS,OAAb,CAAqB,UAAAC,CAAC,EAAI;AACtB,QAAI,CAAC,CAACxB,IAAI,CAACgB,QAAL,CAAcQ,CAAd,CAAN,EAAwB;AACpB,UAAMO,WAAW,GAAGrC,CAAC,CAACuB,OAAF,CAAUjB,IAAI,CAACgB,QAAL,CAAcQ,CAAd,CAAV,EAA4B,QAA5B,CAApB;;AACAgB,MAAAA,IAAI,CAACE,MAAL,CAAYlB,CAAZ,IAAiB,EAAjB;AACAgB,MAAAA,IAAI,CAACC,OAAL,CAAalB,OAAb,CAAqB,UAAAS,CAAC,EAAI;AACtB,YAAM7B,OAAO,sBAAOH,IAAI,CAACI,eAAZ,CAAb;;AACA,YAAI,CAAC,CAAC2B,WAAW,CAACC,CAAD,CAAjB,EAAsB;AAAA;;AAClBQ,UAAAA,IAAI,CAACE,MAAL,CAAYlB,CAAZ,EAAeQ,CAAf,IAAoB,EAApB;AACAD,UAAAA,WAAW,CAACC,CAAD,CAAX,CAAeT,OAAf,CAAuB,UAAAb,CAAC,EAAI;AACxB,gBAAIP,OAAO,CAACwC,OAAR,CAAgBjC,CAAC,CAACyB,OAAlB,KAA8B,CAAlC,EAAqC;AACjChC,cAAAA,OAAO,CAACyC,MAAR,CAAezC,OAAO,CAACwC,OAAR,CAAgBjC,CAAC,CAACyB,OAAlB,CAAf,EAA2C,CAA3C;AACAK,cAAAA,IAAI,CAACE,MAAL,CAAYlB,CAAZ,EAAeQ,CAAf,EAAkBa,IAAlB,CAAuB,CAACnC,CAAC,CAACyB,OAAH,EAAYC,UAAU,CAAC1B,CAAC,CAAC2B,GAAH,CAAtB,CAAvB;AACH;AACJ,WALD;;AAMA,8BAAAG,IAAI,CAACE,MAAL,CAAYlB,CAAZ,EAAeQ,CAAf,GAAkBa,IAAlB,4CAA0B1C,OAAO,CAACM,GAAR,CAAY,UAAAC,CAAC;AAAA,mBAAI,CAACA,CAAD,EAAI,CAAJ,CAAJ;AAAA,WAAb,CAA1B;;AACA8B,UAAAA,IAAI,CAACE,MAAL,CAAYlB,CAAZ,EAAeQ,CAAf,EAAkB3B,IAAlB,CAAuB,UAACyC,CAAD,EAAIC,CAAJ;AAAA,mBACnB/C,IAAI,CAACI,eAAL,CAAqBuC,OAArB,CAA6BG,CAAC,CAAC,CAAD,CAA9B,IAAqC9C,IAAI,CAACI,eAAL,CAAqBuC,OAArB,CAA6BI,CAAC,CAAC,CAAD,CAA9B,CADlB;AAAA,WAAvB;AAEH,SAXD,MAWO;AACHP,UAAAA,IAAI,CAACE,MAAL,CAAYlB,CAAZ,EAAeQ,CAAf,IAAoB7B,OAAO,CAACM,GAAR,CAAY,UAAAC,CAAC;AAAA,mBAAI,CAACA,CAAD,EAAI,CAAJ,CAAJ;AAAA,WAAb,CAApB;AACH;AACJ,OAhBD;AAiBH;AACJ,GAtBD;AAuBA8B,EAAAA,IAAI,CAAC1B,OAAL,GAAekC,MAAM,CAACC,IAAP,CAAYT,IAAI,CAACE,MAAjB,CAAf;AACA,SAAOF,IAAP;AACH;AAED,OAAO,SAASU,IAAT,CAAcC,CAAd,EAAiB;AAAA;;AACpB,OAAKnD,IAAL,CAAUoD,YAAV,GAAyBD,CAAC,CAACE,OAAF,CAAUC,KAAV,CAAgB,CAAhB,EAAmBH,CAAC,CAACE,OAAF,CAAUxC,MAA7B,CAAzB;AACA,OAAKb,IAAL,CAAUuD,QAAV,GAAqB,EAArB;AACAJ,EAAAA,CAAC,CAAC5B,OAAF,CAAU,UAAAb,CAAC,EAAI;AACX,QAAMP,OAAO,GAAGO,CAAC,CAACyC,CAAC,CAACE,OAAF,CAAU,CAAV,CAAD,CAAjB;AACA,WAAO3C,CAAC,CAACyC,CAAC,CAACE,OAAF,CAAU,CAAV,CAAD,CAAR;AACA,IAAA,MAAI,CAACrD,IAAL,CAAUuD,QAAV,CAAmBpD,OAAnB,IAA8BO,CAA9B;AACH,GAJD;AAKA,OAAKV,IAAL,CAAUwD,QAAV,GAAqB,EAArB;AACA,OAAKxD,IAAL,CAAUyD,QAAV,GAAqB,EAArB;AACA,MAAIC,KAAK,GAAG,CAAZ;AACA,OAAK1D,IAAL,CAAUoD,YAAV,CAAuB7B,OAAvB,CAA+B,UAAAS,CAAC,EAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAM2B,MAAM,GAAGR,CAAC,CAAC1C,GAAF,CAAM,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACsB,CAAD,CAAL;AAAA,KAAP,EAAiB4B,MAAjB,CAAwB,UAACd,CAAD,EAAIpC,CAAJ,EAAU;AAC7C,UAAIoC,CAAC,CAACH,OAAF,CAAUjC,CAAV,IAAe,CAAf,IAAoBA,CAAC,KAAK,IAA9B,EAAoCoC,CAAC,CAACD,IAAF,CAAOnC,CAAP;AACpC,aAAOoC,CAAP;AACH,KAHc,EAGZ,EAHY,EAGRzC,IAHQ,EAAf;AAIA,IAAA,MAAI,CAACL,IAAL,CAAUyD,QAAV,CAAmBzB,CAAnB,IAAwB,IAAI6B,QAAJ,CAAa7B,CAAb,EAAgBpC,UAAU,CAAC8D,KAAD,CAA1B,EAAmC,KAAnC,EAA0C,IAA1C,EAAgD,IAAhD,EAAsDC,MAAtD,CAAxB;AACA,IAAA,MAAI,CAAC3D,IAAL,CAAUwD,QAAV,CAAmBxB,CAAnB,IAAwB,MAAI,CAAChC,IAAL,CAAUG,OAAV,CAAkBM,GAAlB,CAAsB,UAAAC,CAAC;AAAA,aAAI,CAAC,CAAC,MAAI,CAACV,IAAL,CAAUuD,QAAV,CAAmB7C,CAAnB,CAAF,GAA0B,MAAI,CAACV,IAAL,CAAUuD,QAAV,CAAmB7C,CAAnB,EAAsBsB,CAAtB,CAA1B,GAAqD,IAAzD;AAAA,KAAvB,CAAxB;AACA0B,IAAAA,KAAK;AACR,GApBD;AAqBAlE,EAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACH;AAED,WAAaqE,QAAb;AAoCI,oBAAmBC,GAAnB,EAAgCC,SAAhC,EAAkDC,QAAlD,EAA4EC,GAA5E,EAAgGzD,GAAhG,EAAoHmD,MAApH,EAAsI;AAAA;;AAAA,SAAnHG,GAAmH,GAAnHA,GAAmH;AAAA,SAApFE,QAAoF,GAApFA,QAAoF;AAAA,SAA1DC,GAA0D,GAA1DA,GAA0D;AAAA,SAAtCzD,GAAsC,GAAtCA,GAAsC;AAAA,SAAlBmD,MAAkB,GAAlBA,MAAkB;AAAA,SAjB/HO,SAiB+H,GAjBnH,KAiBmH;AAAA,SAhB/HC,QAgB+H,GAhBpH,KAgBoH;AAAA,SAf/HC,UAe+H,GAflH,CAekH;AAAA,SAd/HC,QAc+H,GAdpH,KAcoH;AAAA,SAb/HC,KAa+H,GAb7G,EAa6G;AAAA,SAZ/HC,WAY+H,GAZjH,KAYiH;AAAA,SAX/HC,WAW+H,GAXjH,KAWiH;AAAA,SAT/HC,QAS+H;AAAA,SAR/HC,QAQ+H;AAAA,SAP/HC,UAO+H,GAPlH,SAOkH;AAAA,SAN/HC,QAM+H,GANpH,SAMoH;AAAA,SAL/HC,QAK+H,GAL5F,IAK4F;AAAA,SAH9HC,SAG8H;AAAA,SAF9HC,MAE8H;AAClI,SAAKb,SAAL,GAAiBF,QAAjB;AACA,SAAKS,QAAL,GAAgBR,GAAhB;AACA,SAAKS,QAAL,GAAgBlE,GAAhB;AACA,SAAKsE,SAAL,GAAiBhB,GAAG,CAACkB,OAAJ,CAAY,UAAZ,EAAwB,GAAxB,CAAjB;AACA,SAAKC,iBAAL,CAAuBlB,SAAvB;AACH;;AA1CL;AAAA;AAAA,sCA4C6BA,SA5C7B,EA4CwC;AAChC,UAAI,KAAKc,QAAL,KAAkB,IAAlB,IAA0B,KAAKlB,MAAnC,EAA2C;AACvC,aAAKkB,QAAL,GAAgB3F,mBAAmB,CAACgG,MAApB,CAA2B,KAAKvB,MAAhC,EAAwCI,SAAxC,EAA+DoB,MAA/E;AACH;;AACD,UAAI,KAAKjB,SAAT,EAAoB;AAChB,YAAIkB,GAAJ;;AACA,YAAI,KAAKjB,QAAT,EAAmB;AACf,cAAI,KAAKE,QAAT,EAAmB;AACfe,YAAAA,GAAG,GAAG;AACFC,cAAAA,IAAI,EAAE,WADJ;AAEFC,cAAAA,UAAU,EAAE,KAAKhB,KAFf;AAGFjD,cAAAA,MAAM,EAAE,CAAC,KAAK4C,GAAN,EAAW,KAAKzD,GAAhB,CAHN;AAIF+D,cAAAA,WAAW,EAAE,KAAKA,WAJhB;AAKFC,cAAAA,WAAW,EAAE,KAAKA;AALhB,aAAN;AAOH,WARD,MAQO;AACHY,YAAAA,GAAG,GAAG;AACFC,cAAAA,IAAI,EAAE,UADJ;AAEFE,cAAAA,MAAM,EAAE,KAAKnB,UAFX;AAGF/C,cAAAA,MAAM,EAAE,CAAC,KAAK4C,GAAN,EAAW,KAAKzD,GAAhB;AAHN,aAAN;AAKH;AACJ,SAhBD,MAgBO;AACH4E,UAAAA,GAAG,GAAG;AAAEC,YAAAA,IAAI,EAAE,QAAR;AAAkBhE,YAAAA,MAAM,EAAE,CAAC,KAAKoD,QAAN,EAAgB,KAAKC,QAArB;AAA1B,WAAN;AACH;;AACD,aAAKK,MAAL,GAAc5F,mBAAmB,CAAC+F,MAApB,CAA2B,KAAKP,UAAhC,EAA4C,KAAKC,QAAjD,EAA2DQ,GAA3D,CAAd,CArBgB,CAsBhB;AACH,OAvBD,MAuBO;AACH,aAAKL,MAAL,GAAc,IAAI7F,mBAAJ,CAAwB,KAAK2F,QAA7B,CAAd;AACH;AACJ;AA1EL;AAAA;AAAA,0BA4EiBW,CA5EjB,EA4EqC;AAC7B,UAAIA,CAAC,KAAK,IAAV,EAAgB,OAAO,IAAP;AAChB,aAAO,KAAKT,MAAL,CAAYU,GAAZ,CAAgBD,CAAhB,CAAP;AACH;AA/EL;AAAA;AAAA,iCAiFwB;AAChB,UAAI,KAAKtB,SAAL,IAAkB,CAAC,KAAKC,QAA5B,EAAsC;AAClC,eAAO,CAAC,IAAD,eAAa,KAAKW,SAAlB,GAA+B,KAAKL,QAApC,EAA8C,KAAKC,QAAnD,CAAP;AACH;;AACD,UAAMgB,MAAM,GAAG,KAAKX,MAAL,CAAYY,UAAZ,EAAf;AACA,aAAO,KAAKzB,SAAL,GAAiBwB,MAAjB,GAA0B,KAAK/B,MAAL,CAAYlD,GAAZ,CAAgB,UAAAmF,CAAC;AAAA,eAAIF,MAAM,CAACG,IAAP,CAAY,UAAAnF,CAAC;AAAA,iBAAIA,CAAC,CAACoF,KAAF,KAAYF,CAAhB;AAAA,SAAb,CAAJ;AAAA,OAAjB,CAAjC;AACH;AAvFL;AAAA;AAAA,+BAyFsB;AACd,UAAMG,GAAG,GAAG;AAAEC,QAAAA,SAAS,EAAE,CAAC,CAAC,KAAKrC;AAApB,OAAZ;;AADc,iDAEEE,QAAQ,CAACZ,IAFX;AAAA;;AAAA;AAEd;AAAA,cAAWjB,CAAX;AAA+B+D,UAAAA,GAAG,CAAC/D,CAAD,CAAH,GAAS,KAAKA,CAAL,CAAT;AAA/B;AAFc;AAAA;AAAA;AAAA;AAAA;;AAGd,aAAO+D,GAAP;AACH;AA7FL;AAAA;AAAA,2BA+FkBH,CA/FlB,EA+F0BG,GA/F1B,EA+FoC;AAAA,kDACZlC,QAAQ,CAACZ,IADG;AAAA;;AAAA;AAC5B,+DAA+B;AAAA,cAApBjB,CAAoB;;AAC3B,cAAIA,CAAC,KAAK,OAAN,IAAkBA,CAAC,KAAK,QAAN,IAAkB+D,GAAG,CAAC/D,CAAD,CAA3C,EAAiD;AAC7C,iBAAKA,CAAL,uBAAc+D,GAAG,CAAC/D,CAAD,CAAjB;AACH,WAFD,MAEO;AACH,iBAAKA,CAAL,IAAU+D,GAAG,CAAC/D,CAAD,CAAb;AACH;AACJ,SAP2B,CAQ5B;;AAR4B;AAAA;AAAA;AAAA;AAAA;AAS/B;AAxGL;;AAAA;AAAA;AAAa6B,Q,CACKZ,I,GAAO,CACjB,UADiB,EAEjB,WAFiB,EAGjB,UAHiB,EAIjB,KAJiB,EAKjB,KALiB,EAMjB,YANiB,EAOjB,UAPiB,EAQjB,OARiB,EASjB,aATiB,EAUjB,aAViB,EAWjB,QAXiB,EAYjB,UAZiB,EAajB,YAbiB,EAcjB,UAdiB,EAejB,UAfiB,EAgBjB,UAhBiB,C;AA0GzB,OAAO,SAASgD,aAAT,CAAuBL,CAAvB,EAA+B;AAClC,MAAMM,MAAmB,GAAGN,CAAC,CAAC5F,IAAF,CAAOC,aAAnC;AACA2F,EAAAA,CAAC,CAAC5F,IAAF,CAAOI,eAAP,GAAyBwF,CAAC,CAAC5F,IAAF,CAAOG,OAAP,CAAegG,MAAf,CAAsB,UAAA3E,CAAC;AAAA,WAAI,CAAC0E,MAAM,CAACE,GAAP,CAAW5E,CAAX,CAAL;AAAA,GAAvB,CAAzB;AACAoE,EAAAA,CAAC,CAAC5F,IAAF,CAAOY,YAAP,GAAsBgF,CAAC,CAAC5F,IAAF,CAAOI,eAAP,CAAuBS,MAA7C;AACA+E,EAAAA,CAAC,CAAC5F,IAAF,CAAOwC,IAAP,GAAcD,gBAAgB,CAACqD,CAAC,CAAC5F,IAAH,CAA9B;AACAgD,EAAAA,MAAM,CAACC,IAAP,CAAY2C,CAAC,CAAC5F,IAAF,CAAOwD,QAAnB,EAA6BjC,OAA7B,CAAqC,UAAAS,CAAC,EAAI;AACtC4D,IAAAA,CAAC,CAAC5F,IAAF,CAAOwD,QAAP,CAAgBxB,CAAhB,IAAqB4D,CAAC,CAAC5F,IAAF,CAAOI,eAAP,CAAuBK,GAAvB,CAA2B,UAAAC,CAAC;AAAA,aAAI,CAAC,CAACkF,CAAC,CAAC5F,IAAF,CAAOuD,QAAP,CAAgB7C,CAAhB,CAAF,GAAuBkF,CAAC,CAAC5F,IAAF,CAAOuD,QAAP,CAAgB7C,CAAhB,EAAmBsB,CAAnB,CAAvB,GAA+C,IAAnD;AAAA,KAA5B,CAArB;AACH,GAFD;AAGH","sourcesContent":["import { ColorScheme, ColorSchemeCategory, ColorSchemeGradient } from \"crux/dist/color\";\nimport { measuredTextSize } from \"crux/dist/utils/text-size\";\nimport { schemeSet1, schemeSet2, schemeSet3 } from \"d3-scale-chromatic\";\nimport { applyDefaultSpeciesSort } from \"./editor\";\n\nimport * as d3 from \"d3\";\nimport * as _ from \"lodash\";\nimport { getGroups } from \"utils/array\";\n\nconst schemeSets = [schemeSet1, schemeSet2, schemeSet3];\n\nexport const rainbowL = [\"hsl(0, 73%, 80%)\",\n\"hsl(36, 100%, 75%)\",\n// \"hsl(45, 100%, 75%)\",\n\"hsl(54, 90%, 72%)\",\n\"hsl(66, 71%, 77%)\",\n\"hsl(88, 50%, 76%)\",\n\"hsl(122, 37%, 74%)\",\n\"hsl(174, 42%, 65%)\",\n\"hsl(187, 72%, 71%)\",\n\"hsl(199, 92%, 74%)\",\n\"hsl(231, 44%, 74%)\",\n\"hsl(291, 47%, 71%)\",\n\"hsl(340, 80%, 74%)\",\n];\n\nconst paletteColors = [\"#c30\", \"#ffc\", \"#03c\"];\n\nexport function main(data) {\n    this.data.hiddenSpecies = new Set();\n    this.data.species = this.data.filteredSpecies = getGroups(data, \"Species\").sort();\n    this.data.maxSpeciesLength = Math.max(...this.data.filteredSpecies\n                                        .map(x => measuredTextSize(x, 12).width));\n    this.data.speciesCount = this.data.species.length;\n    this.data.samples = getGroups(data, \"Sample\").sort();\n    this.data.sources = getGroups(data, \"Source\").sort();\n    this.data.mainDict = _.groupBy(data, \"Sample\");\n    this.data.colorDict = {};\n    const palette = d3.scaleLinear().domain([0, 1, 2]).range(paletteColors);\n    this.data.sources.forEach((s, i) => {\n        const value = i / this.data.sources.length * 2;\n        this.data.colorDict[s] = palette(value);\n    });\n    computeSortingScore(this.data);\n    return null;\n}\n\nexport function computeSortingScore(data) {\n\n    data.speciesSortingScore = {};\n    data.species.forEach(s => {\n        data.speciesSortingScore[s] = 0;\n    });\n    data.samples.forEach((s, i) => {\n        const sampleWeight = Math.pow(0.5, i);\n        if (!!data.mainDict[s]) {\n            const groupedData = _.groupBy(data.mainDict[s], \"Source\");\n            data.sources.forEach((k, j) => {\n                const sourceWeight = 1 - j / data.sources.length;\n                if (!!groupedData[k]) {\n                    groupedData[k].forEach(x => {\n                        data.speciesSortingScore[x.Species] += sampleWeight * sourceWeight * parseFloat(x.Abd) / 100;\n                    });\n                }\n            });\n            getGroups(data.mainDict[s], \"Species\").forEach(sp => {\n                data.speciesSortingScore[sp] += Math.pow(0.5, i - 1);\n            });\n        }\n    });\n}\n\nexport function generateHistData(data) {\n    const hist = {indexes: data.sources, result: {}, samples: []};\n    data.samples.forEach(s => {\n        if (!!data.mainDict[s]) {\n            const groupedData = _.groupBy(data.mainDict[s], \"Source\");\n            hist.result[s] = {};\n            hist.indexes.forEach(k => {\n                const species = [...data.filteredSpecies];\n                if (!!groupedData[k]) {\n                    hist.result[s][k] = [];\n                    groupedData[k].forEach(x => {\n                        if (species.indexOf(x.Species) >= 0) {\n                            species.splice(species.indexOf(x.Species), 1);\n                            hist.result[s][k].push([x.Species, parseFloat(x.Abd)]);\n                        }\n                    });\n                    hist.result[s][k].push(...species.map(x => [x, 0 ]));\n                    hist.result[s][k].sort((a, b) =>\n                        data.filteredSpecies.indexOf(a[0]) - data.filteredSpecies.indexOf(b[0]));\n                } else {\n                    hist.result[s][k] = species.map(x => [x, 0 ]);\n                }\n            });\n        }\n    });\n    hist.samples = Object.keys(hist.result);\n    return hist;\n}\n\nexport function meta(d) {\n    this.data.metaFeatures = d.columns.slice(1, d.columns.length);\n    this.data.metaDict = {};\n    d.forEach(x => {\n        const species = x[d.columns[0]];\n        delete x[d.columns[0]];\n        this.data.metaDict[species] = x;\n    });\n    this.data.metaData = {};\n    this.data.metaInfo = {};\n    let index = 0;\n    this.data.metaFeatures.forEach(k => {\n        // if (k === \"Age\" || k === \"BMI\") {\n        //     const [min, max] = minmax(d.map(x => x[k]));\n        //     this.data.metaInfo[k] = new MetaInfo(k, true, min, max, []);\n        //     this.data.metaData[k] = this.data.samples.map(x => this.data.metaDict[x][k]);\n        // } else {\n        //     const values = d.map(x => x[k]).reduce((a, x) => {\n        //         if (a.indexOf(x) < 0 && x !== \"NA\") a.push(x);\n        //         return a;\n        //     }, []);\n        //     this.data.metaInfo[k] = new MetaInfo(k, false, null, null, values);\n        //     this.data.metaData[k] = this.data.samples.map(x => this.data.metaDict[x][k]);\n        // }\n        const values = d.map(x => x[k]).reduce((a, x) => {\n            if (a.indexOf(x) < 0 && x !== \"NA\") a.push(x);\n            return a;\n        }, []).sort();\n        this.data.metaInfo[k] = new MetaInfo(k, schemeSets[index], false, null, null, values);\n        this.data.metaData[k] = this.data.species.map(x => !!this.data.metaDict[x] ? this.data.metaDict[x][k] : \"NA\");\n        index++;\n    });\n    applyDefaultSpeciesSort(this);\n}\n\nexport class MetaInfo {\n    public static keys = [\n        \"isNumber\",\n        \"useNumber\",\n        \"useGroup\",\n        \"min\",\n        \"max\",\n        \"groupCount\",\n        \"useThres\",\n        \"thres\",\n        \"minDistinct\",\n        \"maxDistinct\",\n        \"values\",\n        \"colorMap\",\n        \"colorStart\",\n        \"colorEnd\",\n        \"rangeMin\",\n        \"rangeMax\",\n    ];\n    public useNumber = false;\n    public useGroup = false;\n    public groupCount = 4;\n    public useThres = false;\n    public thres: number[] = [];\n    public minDistinct = false;\n    public maxDistinct = false;\n\n    public rangeMin: number;\n    public rangeMax: number;\n    public colorStart = \"#e5f0ff\";\n    public colorEnd = \"#1a79ff\";\n    public colorMap: Record<string, string> = null;\n\n    private simpleKey: string;\n    private scheme: ColorScheme;\n\n    constructor(public key: string, schemeSet, public isNumber: boolean, public min: number, public max: number, public values: string[]) {\n        this.useNumber = isNumber;\n        this.rangeMin = min;\n        this.rangeMax = max;\n        this.simpleKey = key.replace(/\\(|\\)| /g, \"_\");\n        this.updateColorGetter(schemeSet);\n    }\n\n    public updateColorGetter(schemeSet) {\n        if (this.colorMap === null && this.values) {\n            this.colorMap = ColorSchemeCategory.create(this.values, schemeSet as string[]).colors;\n        }\n        if (this.useNumber) {\n            let opt;\n            if (this.useGroup) {\n                if (this.useThres) {\n                    opt = {\n                        type: \"threshold\",\n                        thresholds: this.thres,\n                        domain: [this.min, this.max],\n                        minDistinct: this.minDistinct,\n                        maxDistinct: this.maxDistinct,\n                    };\n                } else {\n                    opt = {\n                        type: \"quantize\",\n                        groups: this.groupCount,\n                        domain: [this.min, this.max],\n                    };\n                }\n            } else {\n                opt = { type: \"linear\", domain: [this.rangeMin, this.rangeMax] };\n            }\n            this.scheme = ColorSchemeGradient.create(this.colorStart, this.colorEnd, opt);\n            // v.defineGradient(`md_${this.simpleKey}`, \"horizontal\", [this.colorStart, this.colorEnd]);\n        } else {\n            this.scheme = new ColorSchemeCategory(this.colorMap);\n        }\n    }\n\n    public color(c: number | string) {\n        if (c === \"NA\") return null;\n        return this.scheme.get(c);\n    }\n\n    public legendData() {\n        if (this.useNumber && !this.useGroup) {\n            return [null, `md_${this.simpleKey}`, this.rangeMin, this.rangeMax];\n        }\n        const lgData = this.scheme.legendData();\n        return this.useNumber ? lgData : this.values.map(v => lgData.find(x => x.label === v));\n    }\n\n    public toObject() {\n        const obj = { hasValues: !!this.values };\n        for (const k of MetaInfo.keys) obj[k] = this[k];\n        return obj;\n    }\n\n    public update(v: any, obj: any) {\n        for (const k of MetaInfo.keys) {\n            if (k === \"thres\" || (k === \"values\" && obj[k])) {\n                this[k] = [...obj[k]];\n            } else {\n                this[k] = obj[k];\n            }\n        }\n        // this.updateColorGetter();\n    }\n}\n\nexport function filterSpecies(v: any) {\n    const hidden: Set<string> = v.data.hiddenSpecies;\n    v.data.filteredSpecies = v.data.species.filter(s => !hidden.has(s));\n    v.data.speciesCount = v.data.filteredSpecies.length;\n    v.data.hist = generateHistData(v.data);\n    Object.keys(v.data.metaData).forEach(k => {\n        v.data.metaData[k] = v.data.filteredSpecies.map(x => !!v.data.metaDict[x] ? v.data.metaDict[x][k] : \"NA\");\n    });\n}\n"]},"metadata":{},"sourceType":"module"}