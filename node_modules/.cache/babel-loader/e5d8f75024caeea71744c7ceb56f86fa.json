{"ast":null,"code":"import { compile } from \"./compiler\";\nexport function template(literals) {\n  var result = \"\";\n\n  for (var i = 0; i < (arguments.length <= 1 ? 0 : arguments.length - 1); i++) {\n    result += literals[i];\n    result += i + 1 < 1 || arguments.length <= i + 1 ? undefined : arguments[i + 1];\n  }\n\n  result += literals[literals.length - 1];\n  return compile(result).renderer;\n}\nexport function internal(literals) {\n  var code = \"\";\n\n  for (var _len = arguments.length, placeholders = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    placeholders[_key - 1] = arguments[_key];\n  }\n\n  for (var i = 0; i < placeholders.length; i++) {\n    code += literals[i];\n    code += \"$arg[\".concat(i, \"]\");\n  }\n\n  code += literals[literals.length - 1];\n  return \"__internal__(\\\"\".concat(code, \"\\\", [\").concat(placeholders.join(\",\"), \"])\");\n}","map":null,"metadata":{},"sourceType":"module"}