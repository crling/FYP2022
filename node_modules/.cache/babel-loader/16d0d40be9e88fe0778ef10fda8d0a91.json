{"ast":null,"code":"import { mathMax } from '../../../utils/math';\nimport { toInteger } from '../../../utils/number';\nexport default {\n  props: {\n    perPage: {\n      type: [Number, String],\n      \"default\": 0\n    },\n    currentPage: {\n      type: [Number, String],\n      \"default\": 1\n    }\n  },\n  computed: {\n    localPaging: function localPaging() {\n      return this.hasProvider ? !!this.noProviderPaging : true;\n    },\n    paginatedItems: function paginatedItems() {\n      var items = this.sortedItems || this.filteredItems || this.localItems || [];\n      var currentPage = mathMax(toInteger(this.currentPage, 1), 1);\n      var perPage = mathMax(toInteger(this.perPage, 0), 0); // Apply local pagination\n\n      if (this.localPaging && !!perPage) {\n        // Grab the current page of data (which may be past filtered items limit)\n        items = items.slice((currentPage - 1) * perPage, currentPage * perPage);\n      } // Return the items to display in the table\n\n\n      return items;\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}