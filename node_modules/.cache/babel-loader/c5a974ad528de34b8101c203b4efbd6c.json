{"ast":null,"code":"// Bindig `requestAnimationFrame` like this fixes a bug in IE/Edge. See #360 and #409.\nvar raf = typeof window !== \"undefined\" && window.requestAnimationFrame.bind(window) || setTimeout;\n\nvar nextFrame = function nextFrame(fn) {\n  raf(function () {\n    raf(fn);\n  });\n};\n\nvar reflowForced = false;\n\nfunction setNextFrame(obj, prop, val) {\n  nextFrame(function () {\n    obj[prop] = val;\n  });\n}\n\nfunction updateStyle(oldVnode, vnode) {\n  var cur,\n      name,\n      elm = vnode.elm,\n      oldStyle = oldVnode.data.style,\n      style = vnode.data.style;\n  if (!oldStyle && !style) return;\n  if (oldStyle === style) return;\n  oldStyle = oldStyle || {};\n  style = style || {};\n  var oldHasDel = (\"delayed\" in oldStyle);\n\n  for (name in oldStyle) {\n    if (!style[name]) {\n      if (name[0] === \"-\" && name[1] === \"-\") {\n        elm.style.removeProperty(name);\n      } else {\n        elm.style[name] = \"\";\n      }\n    }\n  }\n\n  for (name in style) {\n    cur = style[name];\n\n    if (name === \"delayed\" && style.delayed) {\n      for (var name2 in style.delayed) {\n        cur = style.delayed[name2];\n\n        if (!oldHasDel || cur !== oldStyle.delayed[name2]) {\n          setNextFrame(elm.style, name2, cur);\n        }\n      }\n    } else if (name !== \"remove\" && cur !== oldStyle[name]) {\n      if (name[0] === \"-\" && name[1] === \"-\") {\n        elm.style.setProperty(name, cur);\n      } else {\n        elm.style[name] = cur;\n      }\n    }\n  }\n}\n\nfunction applyDestroyStyle(vnode) {\n  var style,\n      name,\n      elm = vnode.elm,\n      s = vnode.data.style;\n  if (!s || !(style = s.destroy)) return;\n\n  for (name in style) {\n    elm.style[name] = style[name];\n  }\n}\n\nfunction applyRemoveStyle(vnode, rm) {\n  var s = vnode.data.style;\n\n  if (!s || !s.remove) {\n    rm();\n    return;\n  }\n\n  if (!reflowForced) {\n    getComputedStyle(document.body).transform;\n    reflowForced = true;\n  }\n\n  var name,\n      elm = vnode.elm,\n      i = 0,\n      compStyle,\n      style = s.remove,\n      amount = 0,\n      applied = [];\n\n  for (name in style) {\n    applied.push(name);\n    elm.style[name] = style[name];\n  }\n\n  compStyle = getComputedStyle(elm);\n  var props = compStyle[\"transition-property\"].split(\", \");\n\n  for (; i < props.length; ++i) {\n    if (applied.indexOf(props[i]) !== -1) amount++;\n  }\n\n  elm.addEventListener(\"transitionend\", function (ev) {\n    if (ev.target === elm) --amount;\n    if (amount === 0) rm();\n  });\n}\n\nfunction forceReflow() {\n  reflowForced = false;\n}\n\nexport var styleModule = {\n  pre: forceReflow,\n  create: updateStyle,\n  update: updateStyle,\n  destroy: applyDestroyStyle,\n  remove: applyRemoveStyle\n};\nexport default styleModule;","map":null,"metadata":{},"sourceType":"module"}