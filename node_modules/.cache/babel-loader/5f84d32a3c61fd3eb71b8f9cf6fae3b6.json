{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport Oviz from \"crux\";\nimport { Color } from \"crux/dist/color\";\nimport { Component } from \"crux/dist/element\";\nimport { findBoundsForValues } from \"utils/maths\";\nimport template from \"./box.bvt\";\nexport var ComplexBoxplot = /*#__PURE__*/function (_Component) {\n  _inherits(ComplexBoxplot, _Component);\n\n  var _super = _createSuper(ComplexBoxplot);\n\n  function ComplexBoxplot() {\n    var _this;\n\n    _classCallCheck(this, ComplexBoxplot);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.boxMax = void 0;\n    _this.offsetY = 0;\n    _this.getColor = void 0;\n    _this.getViolinColor = void 0;\n    _this.getScatterColor = void 0;\n    _this.violinFillProps = void 0;\n    return _this;\n  }\n\n  _createClass(ComplexBoxplot, [{\n    key: \"render\",\n    value: function render() {\n      return this.t(_templateObject(), template);\n    }\n  }, {\n    key: \"willRender\",\n    value: function willRender() {\n      var _this2 = this;\n\n      if (this._firstRender) {\n        // const this.prop = {values: [], categories: []};\n        if (this.prop.getColor) this.getColor = this.prop.getColor;else this.getColor = function (pos) {\n          var _this2$prop$colors;\n\n          return _this2.prop.useCat ? _this2.prop.colors.cats[pos] : ((_this2$prop$colors = _this2.prop.colors) === null || _this2$prop$colors === void 0 ? void 0 : _this2$prop$colors.box) || \"pink\";\n        };\n        if (this.prop.getScatterColor) this.getScatterColor = this.prop.getScatterColor;else this.getScatterColor = function (pos) {\n          var _this2$prop$colors2;\n\n          return ((_this2$prop$colors2 = _this2.prop.colors) === null || _this2$prop$colors2 === void 0 ? void 0 : _this2$prop$colors2.scatter) || \"#aaa\";\n        };\n        if (this.prop.getViolinColor) this.getViolinColor = this.prop.getViolinColor;else this.getViolinColor = function (pos) {\n          var _this2$prop$colors3;\n\n          return _this2.prop.useCat ? _this2.prop.colors.cats[pos] : ((_this2$prop$colors3 = _this2.prop.colors) === null || _this2$prop$colors3 === void 0 ? void 0 : _this2$prop$colors3.violin) || \"lightsteelblue\";\n        };\n\n        if (this.prop.useCat) {\n          this.violinFillProps = {\n            fill: this.prop.colors.cats\n          };\n        } else {\n          this.violinFillProps = {\n            fill: this.getViolinColor(0)\n          };\n        }\n      } // @ts-ignore\n\n\n      this.boxMax = this.prop.data.boxData.max;\n    }\n  }, {\n    key: \"getBoxColors\",\n    value: function getBoxColors(x) {\n      // [stroke, fill]\n      if (this.prop.hollowBox) return [Color.literal(x).darken(10).string, \"#fff\", x];else return [\"#333\", x, \"#333\"];\n    }\n  }, {\n    key: \"defaultProp\",\n    value: function defaultProp() {\n      return _objectSpread(_objectSpread({}, _get(_getPrototypeOf(ComplexBoxplot.prototype), \"defaultProp\", this).call(this)), {}, {\n        drawBox: true,\n        showOutliers: true,\n        drawViolin: false,\n        drawScatter: false,\n        drawP: true,\n        hollowBox: true // getColor: (pos: number) => \"green\",\n        // getScatterColor: (pos: number) => \"#aaa\",\n\n      });\n    }\n  }, {\n    key: \"dragP\",\n    value: function dragP(ev, el, delta) {\n      this.offsetY += delta[1];\n      this.redraw();\n    }\n  }]);\n\n  return ComplexBoxplot;\n}(Component);\nexport function processBoxData(values, categories) {\n  var boxData = {\n    categories: categories,\n    values: [],\n    outliers: [],\n    means: []\n  };\n  var violinData = {\n    categories: categories,\n    values: [],\n    violins: []\n  };\n  var min, max;\n  categories.forEach(function (_, i) {\n    var stat1 = new Oviz.algo.Statistics(values[i]);\n\n    if (i === 0) {\n      min = stat1.min();\n      max = stat1.max();\n    } else if (stat1.min() < min) min = stat1.min();else if (stat1.max() > max) max = stat1.max();\n\n    var hist = new Oviz.algo.Histogram(values[i], \"count\");\n    violinData.violins.push({\n      stat: stat1,\n      bins: hist.getBins(),\n      maxY: hist.getMax()\n    });\n    violinData.values.push([stat1.min(), stat1.max()]);\n    var interQuartileRange = stat1.Q3() - stat1.Q1();\n    var boxVals = [];\n    values[i].forEach(function (d) {\n      if (d < stat1.Q3() - 1.5 * interQuartileRange || d > stat1.Q3() + 1.5 * interQuartileRange) {\n        boxData.outliers.push([i, d]);\n      } else {\n        boxVals.push(d);\n      }\n    });\n    var stat2 = new Oviz.algo.Statistics(boxVals);\n    boxData.values.push([stat2.min(), stat2.Q1(), stat2.median(), stat2.Q3(), stat2.max()]);\n    boxData.means.push(stat2.mean());\n  });\n  boxData.max = max;\n  boxData.min = min;\n  var result = {\n    data: {\n      boxData: boxData,\n      violinData: violinData,\n      scatterData: categories.map(function (pos, i) {\n        return {\n          pos: pos,\n          values: values[i]\n        };\n      })\n    },\n    categories: categories,\n    valueRange: findBoundsForValues([min, max], 2, false, 0.5)\n  };\n  return result;\n}","map":{"version":3,"sources":["/Users/wangzhenyu/Desktop/fyp_workspace/meta_platform/app/javascript/oviz-components/complex-boxplot.ts"],"names":["Oviz","Color","Component","findBoundsForValues","template","ComplexBoxplot","boxMax","offsetY","getColor","getViolinColor","getScatterColor","violinFillProps","t","_firstRender","prop","pos","useCat","colors","cats","box","scatter","violin","fill","data","boxData","max","x","hollowBox","literal","darken","string","drawBox","showOutliers","drawViolin","drawScatter","drawP","ev","el","delta","redraw","processBoxData","values","categories","outliers","means","violinData","violins","min","forEach","_","i","stat1","algo","Statistics","hist","Histogram","push","stat","bins","getBins","maxY","getMax","interQuartileRange","Q3","Q1","boxVals","d","stat2","median","mean","result","scatterData","map","valueRange"],"mappings":"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","sourcesContent":["\nimport Oviz from \"crux\";\nimport { Color } from \"crux/dist/color\";\nimport { Component, XYPlotOption } from \"crux/dist/element\";\nimport { isThisTypeNode } from \"typescript\";\nimport { findBoundsForValues } from \"utils/maths\";\nimport template from \"./box.bvt\";\nimport { GridPlotOption } from \"./grid-plot\";\n\ninterface ComplexBoxplotOption extends GridPlotOption {\n    drawP: boolean;\n    showOutliers: boolean;\n    drawBox: boolean;\n    drawViolin: boolean;\n    drawScatter: boolean;\n    pData: any;\n    hollowBox: boolean;\n    getColor: (pos: number) => string;\n    getScatterColor: (pos: number) => string;\n    getViolinColor: (pos: number) => string;\n    colors: any;\n    useCat: boolean;\n}\n\nexport class ComplexBoxplot extends Component<ComplexBoxplotOption> {\n\n    protected boxMax: number;\n    protected offsetY: number = 0;\n    protected getColor;\n    protected getViolinColor;\n    protected getScatterColor;\n    protected violinFillProps;\n\n    public render() {\n        return this.t`${template}`;\n    }\n\n    public willRender() {\n        if (this._firstRender) {\n            // const this.prop = {values: [], categories: []};\n            if (this.prop.getColor) this.getColor = this.prop.getColor;\n            else this.getColor = (pos) => this.prop.useCat ? this.prop.colors.cats[pos]\n                : this.prop.colors?.box || \"pink\";\n            if (this.prop.getScatterColor) this.getScatterColor = this.prop.getScatterColor;\n            else this.getScatterColor = (pos) => this.prop.colors?.scatter || \"#aaa\";\n            if (this.prop.getViolinColor) this.getViolinColor = this.prop.getViolinColor;\n            else this.getViolinColor = (pos) => (this.prop.useCat ? this.prop.colors.cats[pos]\n                        : this.prop.colors?.violin || \"lightsteelblue\");\n            if (this.prop.useCat) {\n                this.violinFillProps = {fill: this.prop.colors.cats};\n            } else {\n                this.violinFillProps = {fill: this.getViolinColor(0)};\n            }\n        }\n        // @ts-ignore\n        this.boxMax = this.prop.data.boxData.max;\n    }\n\n    protected getBoxColors(x) {\n        // [stroke, fill]\n        if (this.prop.hollowBox)\n            return [Color.literal(x).darken(10).string, \"#fff\", x];\n        else return [\"#333\", x, \"#333\" ];\n    }\n\n    public defaultProp() {\n        return {\n            ...super.defaultProp(),\n            drawBox: true,\n            showOutliers: true,\n            drawViolin: false,\n            drawScatter: false,\n            drawP: true,\n            hollowBox: true,\n            // getColor: (pos: number) => \"green\",\n            // getScatterColor: (pos: number) => \"#aaa\",\n        };\n    }\n\n    protected dragP(ev, el, delta) {\n        this.offsetY += delta[1];\n        this.redraw();\n    }\n}\nexport type BoxData = {\n    categories: string[];\n    values: any[];\n    outliers: any[];\n    means: any[];\n    min?: number;\n    max?: number;\n};\n\nexport function processBoxData(values: number[][], categories: string[]): any {\n    const boxData: BoxData = {\n        categories,\n        values: [],\n        outliers: [],\n        means: [],\n    };\n    const violinData: any = {\n        categories, values: [], violins: [],\n    };\n    let min, max;\n    categories.forEach((_, i) => {\n        const stat1 = new Oviz.algo.Statistics(values[i]);\n        if (i === 0) {\n            min = stat1.min();\n            max = stat1.max();\n        } else if (stat1.min() < min) min = stat1.min();\n        else if (stat1.max() > max) max = stat1.max();\n        const hist = new Oviz.algo.Histogram(values[i], \"count\");\n        violinData.violins.push({stat: stat1, bins: hist.getBins(),\n            maxY: hist.getMax()});\n        violinData.values.push([stat1.min(), stat1.max()]);\n        const interQuartileRange = stat1.Q3() - stat1.Q1();\n        const boxVals = [];\n        values[i].forEach(d => {\n            if ((d < stat1.Q3() - 1.5 * interQuartileRange) || (d > stat1.Q3() + 1.5 * interQuartileRange))  {\n                boxData.outliers.push([i, d]);\n            } else {\n                boxVals.push(d);\n            }\n        });\n        const stat2 = new Oviz.algo.Statistics(boxVals);\n        boxData.values.push([stat2.min(), stat2.Q1(), stat2.median(), stat2.Q3(), stat2.max()]);\n        boxData.means.push(stat2.mean());\n    });\n    boxData.max = max;\n    boxData.min = min;\n\n    const result = {\n        data: { boxData, violinData,\n            scatterData: categories.map((pos, i) =>\n                ({pos, values: values[i] })),\n        }, categories,\n        valueRange: findBoundsForValues([min, max], 2, false, 0.5),\n    };\n    return result;\n}\n"]},"metadata":{},"sourceType":"module"}