{"ast":null,"code":"import { getComponentConfig } from '../../../utils/config';\nimport { BTfoot } from '../tfoot';\nexport default {\n  props: {\n    footClone: {\n      type: Boolean,\n      \"default\": false\n    },\n    footVariant: {\n      type: String,\n      // 'dark', 'light', or `null` (or custom)\n      \"default\": function _default() {\n        return getComponentConfig('BTable', 'footVariant');\n      }\n    },\n    footRowVariant: {\n      // Any Bootstrap theme variant (or custom). Falls back to `headRowVariant`\n      type: String // default: null\n\n    },\n    tfootClass: {\n      type: [String, Array, Object] // default: null\n\n    },\n    tfootTrClass: {\n      type: [String, Array, Object] // default: null\n\n    }\n  },\n  methods: {\n    renderTFootCustom: function renderTFootCustom() {\n      var h = this.$createElement;\n\n      if (this.hasNormalizedSlot('custom-foot')) {\n        return h(BTfoot, {\n          key: 'bv-tfoot-custom',\n          \"class\": this.tfootClass || null,\n          props: {\n            footVariant: this.footVariant || this.headVariant || null\n          }\n        }, this.normalizeSlot('custom-foot', {\n          items: this.computedItems.slice(),\n          fields: this.computedFields.slice(),\n          columns: this.computedFields.length\n        }));\n      } else {\n        return h();\n      }\n    },\n    renderTfoot: function renderTfoot() {\n      // Passing true to renderThead will make it render a tfoot\n      return this.footClone ? this.renderThead(true) : this.renderTFootCustom();\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}