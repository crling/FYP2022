{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    Container {\\n        padding = prop.padding\\n        Rect.full {\\n            detached = true\\n            fill = \\\"#fff\\\"\\n            stroke = \\\"#000\\\"\\n            @props prop.opt.bg\\n        }\\n        Rows {\\n            x = 4\\n            @if prop.title {\\n                Container {\\n                    height = prop.lineHeight;\\n                    Text(prop.title);\\n                }\\n            }\\n            @for (data, index) in prop.data {\\n                Columns {\\n                    key = index\\n                    height = prop.lineHeight;\\n                    Component {\\n                        width = prop.legendWidth\\n                        height = 100%\\n                        @let t = data.type || prop.type\\n                        @if t === \\\"Custom\\\" {\\n                            @yield legend with data\\n                        }\\n                        @elsif t === \\\"Line\\\" {\\n                            Line {\\n                                x1 = 0; y = @geo(50, 1); x2 = 100%\\n                                stroke = data.stroke\\n                                strokeWidth = 2\\n                            }\\n                        } @else {\\n                            Component(t) {\\n                                x = 50%; y = @geo(50, 1); anchor = @anchor(\\\"m\\\", \\\"c\\\")\\n                                width = 10; height = 10; r = 5\\n                                stroke = data.stroke; fill = data.fill\\n                            }\\n                        }\\n                    }\\n                    Container {\\n                        height = 100%\\n                        Text {\\n                            x = 4\\n                            y = 50%\\n                            anchor = @anchor(\\\"left\\\", \\\"middle\\\")\\n                            text = data.label\\n                            @props prop.opt.label\\n                        }\\n                    }\\n                }\\n            }\\n        }\\n    }\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n// import { template } from \"../../template/tag\";\nimport { Component } from \"../component\";\nexport var Legend = /*#__PURE__*/function (_Component) {\n  _inherits(Legend, _Component);\n\n  var _super = _createSuper(Legend);\n\n  function Legend() {\n    _classCallCheck(this, Legend);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Legend, [{\n    key: \"render\",\n    value: function render() {\n      return this.t(_templateObject());\n    }\n  }, {\n    key: \"defaultProp\",\n    value: function defaultProp() {\n      return Object.assign(Object.assign({}, _get(_getPrototypeOf(Legend.prototype), \"defaultProp\", this).call(this)), {\n        lineHeight: 12,\n        legendWidth: 20,\n        data: [],\n        type: \"Rect\",\n        padding: 4\n      });\n    }\n  }]);\n\n  return Legend;\n}(Component);","map":null,"metadata":{},"sourceType":"module"}