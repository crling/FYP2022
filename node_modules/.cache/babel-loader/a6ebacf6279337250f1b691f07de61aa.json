{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    Component {\\n        Component {\\n            height = 100%\\n            coord = \\\"polar\\\"\\n            coordUseRad = true\\n            @for section in sections {\\n                Component {\\n                    key = section.id\\n                    xScale = section.scale\\n                    @yield layers with section\\n                }\\n            }\\n            Component.lazy {\\n                @for section in sections {\\n                    @let x = ((section.startAngle + section.endAngle) / 2)\\n                    @let y = sectionRadius[section.id] + 5\\n                    Text {\\n                        key = section.id\\n                        text = section.id\\n                        x = x\\n                        y = y\\n                        anchor = section.circos.labelAnchor(x)\\n                        rotation = section.circos.labelRotation(x, y);\\n                        @props prop.opt.sectionLabel\\n                    }\\n                }\\n            }\\n            Component {\\n                @yield chords\\n            }\\n        }\\n    }\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport { Component } from \"../../element\";\nimport { template } from \"../../template/tag\";\nimport { toCartesian } from \"../../utils/math\";\nimport * as d3 from \"d3-shape\";\nexport var Circos = /*#__PURE__*/function (_Component) {\n  _inherits(Circos, _Component);\n\n  var _super = _createSuper(Circos);\n\n  function Circos() {\n    var _this;\n\n    _classCallCheck(this, Circos);\n\n    _this = _super.apply(this, arguments);\n    _this.render = template(_templateObject());\n    _this.sectionById = {};\n    _this.sectionRadius = {};\n    return _this;\n  }\n\n  _createClass(Circos, [{\n    key: \"willRender\",\n    value: function willRender() {\n      var _this2 = this;\n\n      var pie = d3.pie().padAngle(this.prop.padAngle).startAngle(this.prop.startAngle).endAngle(this.prop.endAngle).sortValues(null).value(function (d) {\n        return (d.scale || 1) * (d.end - d.start);\n      });\n      this.sections = pie(this.prop.sections).map(function (s) {\n        return Object.assign(Object.assign({}, s), {\n          id: s.data.id,\n          startAngle: s.startAngle + s.padAngle,\n          endAngle: s.endAngle - s.padAngle,\n          circos: _this2,\n          scale: _this2._createScale(\"linear\", true, [s.data.start, s.data.end], [s.startAngle, s.endAngle])\n        });\n      });\n      this.sectionById = {};\n\n      var _iterator = _createForOfIteratorHelper(this.sections),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var s = _step.value;\n          this.sectionRadius[s.id] = this.prop.innerR;\n          this.sectionById[s.id] = s;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"_updateLayerRadius\",\n    value: function _updateLayerRadius(section, thickness) {\n      var gap = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n      var i = this.sectionRadius[section.id];\n      var o = i + thickness;\n      this.sectionRadius[section.id] = o + (gap < 0 ? this.prop.layerPadding : gap);\n      return [i, o];\n    }\n  }, {\n    key: \"labelRotation\",\n    value: function labelRotation(rx, ry) {\n      var _toCartesian = toCartesian(rx, ry, true),\n          _toCartesian2 = _slicedToArray(_toCartesian, 2),\n          x = _toCartesian2[0],\n          y = _toCartesian2[1];\n\n      var angle = rx * 180 / Math.PI;\n      var adjustedAngle = (rx + this.rotation) * 180 / Math.PI;\n\n      if (adjustedAngle >= 360) {\n        adjustedAngle -= 360;\n      }\n\n      if (adjustedAngle < 0) {\n        adjustedAngle += 360;\n      }\n\n      return [adjustedAngle < 180 ? angle - 90 : angle + 90, x, y];\n    }\n  }, {\n    key: \"labelAnchor\",\n    value: function labelAnchor(angle) {\n      var towardsCenter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var adjustedAngle = (angle + this.rotation) * 180 / Math.PI;\n\n      if (adjustedAngle >= 360) {\n        adjustedAngle -= 360;\n      }\n\n      if (adjustedAngle < 0) {\n        adjustedAngle += 360;\n      }\n\n      return (adjustedAngle > 180 === towardsCenter ? 16\n      /* Left */\n      : 64\n      /* Right */\n      ) | 4\n      /* Middle */\n      ;\n    }\n  }, {\n    key: \"defaultProp\",\n    value: function defaultProp() {\n      return Object.assign(Object.assign({}, _get(_getPrototypeOf(Circos.prototype), \"defaultProp\", this).call(this)), {\n        startAngle: 0,\n        endAngle: 2 * Math.PI,\n        padAngle: 0.0075,\n        layerPadding: 2,\n        innerR: 100\n      });\n    }\n  }, {\n    key: \"rotation\",\n    get: function get() {\n      return 0;\n    }\n  }]);\n\n  return Circos;\n}(Component);","map":null,"metadata":{},"sourceType":"module"}