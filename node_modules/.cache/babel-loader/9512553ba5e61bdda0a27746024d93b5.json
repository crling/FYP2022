{"ast":null,"code":"import Oviz from \"crux\"; //import { editorConfig, editorRef } from \"./editor\";\n\nimport template from \"./template.bvt\";\nimport { register } from \"page/visualizers\";\nvar color = \"#3d8eff\";\nvar xlabel = \"\";\nvar ylabel = \"\";\nvar title = \"Gene Structure\";\nvar xAxisIndex = 0;\nvar yAxisIndex = 1;\nvar MODULE_NAME = \"FYP2\";\n\nfunction init() {\n  if (!window.gon || window.gon.module_name !== MODULE_NAME) return;\n\n  var _Oviz$visualize = Oviz.visualize({\n    el: \"#canvas\",\n    template: template,\n    data: {\n      title: title,\n      labelFontSize: 12,\n      //有关\n      tickFontSize: 14,\n      color: color,\n      xlabel: xlabel,\n      ylabel: ylabel,\n      xAxisIndex: xAxisIndex,\n      yAxisIndex: yAxisIndex\n    },\n    loadData: {\n      data: {\n        fileKey: \"FYP2\",\n        type: \"csv\",\n        multiple: false,\n        loaded: function loaded(data) {\n          console.log(\"data:\", data);\n          var xAxisKey = data.columns[xAxisIndex];\n          var yAxisKey = data.columns[yAxisIndex];\n          var IDKey = data.columns[8];\n          var ID = data.map(function (d) {\n            return d[IDKey];\n          });\n          var typeKey = data.columns[2];\n          var type = data.map(function (d) {\n            return d[typeKey];\n          });\n          var position1Key = data.columns[3];\n          var position1 = data.map(function (d) {\n            return d[position1Key];\n          });\n          var position2Key = data.columns[4];\n          var position2 = data.map(function (d) {\n            return d[position2Key];\n          });\n          var result = []; //const sortedResult =[];\n\n          var sortedResult = []; //const parentID2 = IDKey.split(';',1);\n          //console.log(parentID2);\n\n          data.forEach(function (d) {\n            //console.log(d);\n            result.push([d[IDKey].split(';', 1)[0], d[typeKey], d[position1Key], d[position2Key]]);\n          }); //console.log(result);\n          //find 5' and 3' add the data between to the same array\n          //var parentID = result[0][0].split('=',2).toString();\n\n          var counter = 0;\n          var eachResult = [];\n          var startPosition;\n          result.forEach(function (item, index) {\n            console.log(\"item\", item);\n\n            if (index == 0) {\n              eachResult.push(item);\n              startPosition = item[2];\n            } else if (item[0].split('=', 2)[1] == result[index - 1][0].split('=', 2)[1]) {\n              eachResult.push(item);\n\n              if (item[1] == \"five_prime_UTR\") {\n                startPosition = item[2];\n              }\n            } else {\n              console.log(\"eachResult\", eachResult);\n              sortedResult.push(eachResult);\n              eachResult = [];\n            }\n          });\n          console.log(\"sortedResult\", sortedResult); //find the start position of 5' in each ite\n\n          var startPosition = position1[0]; //sorted\n          //find the minimum and maximum position to determine the length\n\n          var five_prime_UTR_min = position1[0];\n          var three_prime_UTR_max = position2[0];\n          data.forEach(function (d) {\n            if (d[typeKey] == \"five_prime_UTR\" && d[position1Key] - five_prime_UTR_min < 0) {\n              five_prime_UTR_min = d[position1Key];\n            }\n          });\n          data.forEach(function (d) {\n            if (d[typeKey] == \"three_prime_UTR\" && d[position2Key] - three_prime_UTR_max > 0) {\n              three_prime_UTR_max = d[position2Key];\n            }\n          });\n          console.log(five_prime_UTR_min);\n          console.log(three_prime_UTR_max);\n          var max_length = three_prime_UTR_max - five_prime_UTR_min;\n          console.log(max_length);\n          this.data.gene_data = sortedResult;\n          this.data.max_length = max_length;\n          this.data.five_prime_UTR_min = five_prime_UTR_min;\n          return {\n            sortedResult: sortedResult,\n            max_length: max_length,\n            five_prime_UTR_min: five_prime_UTR_min\n          };\n        }\n      }\n    },\n    setup: function setup() {\n      console.log(\"this.data:\", this[\"_data\"]); //registerEditorConfig(editorConfig(this), editorRef);\n    }\n  }),\n      visualizer = _Oviz$visualize.visualizer;\n\n  return visualizer;\n}\n\nexport function registerBoxplot() {\n  register(MODULE_NAME, init);\n}\nregister(MODULE_NAME, init);","map":{"version":3,"sources":["/Users/wangzhenyu/Desktop/fyp_workspace/meta_platform/app/javascript/viz/FYP3/index.ts"],"names":["Oviz","template","register","color","xlabel","ylabel","title","xAxisIndex","yAxisIndex","MODULE_NAME","init","window","gon","module_name","visualize","el","data","labelFontSize","tickFontSize","loadData","fileKey","type","multiple","loaded","console","log","xAxisKey","columns","yAxisKey","IDKey","ID","map","d","typeKey","position1Key","position1","position2Key","position2","result","sortedResult","forEach","push","split","counter","eachResult","startPosition","item","index","five_prime_UTR_min","three_prime_UTR_max","max_length","gene_data","setup","visualizer","registerBoxplot"],"mappings":"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","sourcesContent":["import Oviz from \"crux\";\n//import { editorConfig, editorRef } from \"./editor\";\nimport template from \"./template.bvt\";\n\nimport { groupedChartColors} from \"oviz-common/palette\";\nimport { ComplexBoxplot, processBoxData } from \"oviz-components/complex-boxplot\";\nimport { GridPlot } from \"oviz-components/grid-plot\";\nimport { EditText } from \"oviz-components/edit-text\";\nimport {register} from \"page/visualizers\";\nimport { rankDict, sortByRankKey } from \"utils/bio-info\";\nimport { registerEditorConfig } from \"utils/editor\";\n\nconst color = \"#3d8eff\";\nconst xlabel = \"\";\nconst ylabel = \"\";\nconst title = \"Gene Structure\";\nconst xAxisIndex  = 0;\nconst yAxisIndex = 1;\n\nconst MODULE_NAME = \"FYP2\";\n \nfunction init() {\n    if (!window.gon || window.gon.module_name !== MODULE_NAME) return;\n\n    const {visualizer} = Oviz.visualize({\n        el: \"#canvas\",\n        template,\n        data: {\n            title,\n            labelFontSize: 12, //有关\n            tickFontSize: 14,\n            color, xlabel, ylabel,xAxisIndex, yAxisIndex\n        },\n        loadData: {\n            data: {\n                fileKey: \"FYP2\",\n                type: \"csv\", \n                multiple: false,\n                loaded(data) { \n                    console.log(\"data:\",data)\n                    const xAxisKey = data.columns[xAxisIndex];\n                    const yAxisKey = data.columns[yAxisIndex];\n                    const IDKey= data.columns[8];\n                    const ID = data.map(d => d[IDKey]);\n                    const typeKey= data.columns[2];\n                    const type = data.map(d => d[typeKey]);\n                    const position1Key= data.columns[3];\n                    const position1 = data.map(d => d[position1Key]);\n                    const position2Key= data.columns[4];\n                    const position2 = data.map(d => d[position2Key]);\n                    const result = [];\n                    //const sortedResult =[];\n                    const sortedResult = [];\n                    //const parentID2 = IDKey.split(';',1);\n                    //console.log(parentID2);\n                    data.forEach(d => {\n                        //console.log(d);\n                        result.push([d[IDKey].split(';',1)[0], d[typeKey],d[position1Key],d[position2Key]]);\n                    });\n                    //console.log(result);\n                    //find 5' and 3' add the data between to the same array\n                    //var parentID = result[0][0].split('=',2).toString();\n                    var counter = 0;\n                    var eachResult = [];\n                    var startPosition;\n                    result.forEach((item,index) =>{\n                        console.log(\"item\",item)\n                        if(index == 0){\n                            eachResult.push(item);\n                            startPosition = item[2];\n                        }\n                        else if (item[0].split('=',2)[1] == result[index-1][0].split('=',2)[1]){\n                            eachResult.push(item);\n                            if(item[1]==\"five_prime_UTR\"){\n                                startPosition = item[2];\n                            }\n                        }\n                        else {\n                            console.log(\"eachResult\",eachResult);\n                            sortedResult.push(eachResult);\n                            eachResult = [];\n                        }\n                    })  \n                    console.log(\"sortedResult\",sortedResult);\n                    //find the start position of 5' in each ite\n                    var startPosition = position1[0];\n                    //sorted\n                    //find the minimum and maximum position to determine the length\n                    var five_prime_UTR_min = position1[0];\n                    var three_prime_UTR_max = position2[0];\n                    data.forEach(d=>{\n                        if(d[typeKey] == \"five_prime_UTR\" && d[position1Key] - five_prime_UTR_min <0){\n                            five_prime_UTR_min = d[position1Key];\n                        }\n                    });\n                    data.forEach(d=>{\n                        if(d[typeKey] == \"three_prime_UTR\" && d[position2Key] - three_prime_UTR_max>0){\n                            three_prime_UTR_max = d[position2Key];\n                        }\n                    });\n                    console.log(five_prime_UTR_min);\n                    console.log(three_prime_UTR_max);\n                    const max_length = three_prime_UTR_max - five_prime_UTR_min;\n                    console.log(max_length);\n                    this.data.gene_data=sortedResult;\n                    this.data.max_length=max_length;\n                    this.data.five_prime_UTR_min=five_prime_UTR_min;\n                    return {sortedResult,max_length,five_prime_UTR_min};\n\n                },\n            },\n        },\n        setup() { \n            console.log(\"this.data:\",this[\"_data\"]);\n            //registerEditorConfig(editorConfig(this), editorRef);\n        },\n    });\n\n    return visualizer;\n}\n\nexport function registerBoxplot() {\n    register(MODULE_NAME, init);\n}\nregister(MODULE_NAME, init);\n"]},"metadata":{},"sourceType":"module"}