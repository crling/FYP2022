{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    Component {\\n        @if (_data !== null) {\\n            @for (c, k) in _data.circles {\\n                @let color = _colorScheme.get(k)\\n                Component {\\n                    key = \\\"c\\\" + k\\n                    Circle.centered {\\n                        x = c.x\\n                        y = c.y\\n                        r = c.radius\\n                        fill = color\\n                        stroke = color\\n                        fillOpacity = prop.opacity\\n                    }\\n                }\\n            }\\n            @for (a, k) in _data.intersections {\\n                Component {\\n                    key = \\\"i\\\" + k\\n                    Path {\\n                        d = a.path\\n                        fill = prop.opt.intersectionFill ? prop.opt.intersectionFill : \\\"none\\\"\\n                        stroke = prop.opt.intersectionStroke ? prop.opt.intersectionStroke : \\\"black\\\"\\n                        @let isw = prop.opt.intersectionStrokeWidth ? prop.opt.intersectionStrokeWidth : prop.strokeWidth\\n                        style:stroke-width = a.key.length === 3 ? isw * 2 : isw\\n                    }\\n                }\\n            }\\n            @for (t, k) in _data.textCenters {\\n                Component {\\n                    key = \\\"t\\\" + k\\n                    Text {\\n                        x = t.x; y = t.y\\n                        text = k\\n                    }\\n                }\\n            }\\n            @yield legend with legendData\\n        }\\n        @else {\\n            Text {\\n                text = \\\"Input data is in wrong format\\\"\\n            }\\n        }\\n    }\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n// @ts-ignore\nimport * as venn from \"venn.js\";\nimport { schemeCategory } from \"../../color\";\nimport { template } from \"../../template/tag\";\nimport { Component } from \"../component\";\nvar SMALL = 1e-10;\nexport var VennDiagram = /*#__PURE__*/function (_Component) {\n  _inherits(VennDiagram, _Component);\n\n  var _super = _createSuper(VennDiagram);\n\n  function VennDiagram() {\n    var _this;\n\n    _classCallCheck(this, VennDiagram);\n\n    _this = _super.apply(this, arguments);\n    _this.render = template(_templateObject());\n    return _this;\n  }\n\n  _createClass(VennDiagram, [{\n    key: \"willRender\",\n    value: function willRender() {\n      var baseCategories = new Set();\n      var data;\n\n      try {\n        data = this.prop.data.map(function (_ref) {\n          var sets = _ref.sets,\n              size = _ref.size,\n              label = _ref.label;\n          if (sets.length === 1) baseCategories.add(sets[0]);\n          return {\n            sets: sets,\n            _set: new Set(sets),\n            size: size,\n            label: label || sets.join(\"\")\n          };\n        });\n      } catch (e) {\n        data = [];\n      }\n\n      this._colorScheme = schemeCategory(this.$v.theme, _toConsumableArray(baseCategories.values()));\n      this._data = this.getChartData(data);\n    }\n  }, {\n    key: \"getChartData\",\n    value: function getChartData(data) {\n      try {\n        var layoutFunction = venn.venn;\n        var loss = venn.lossFunction;\n        var toRemove = [];\n        data.forEach(function (d) {\n          if (d.size === 0 && d.sets.length === 1) {\n            toRemove.push(d.sets[0]);\n          }\n        });\n        data = data.filter(function (d) {\n          return !toRemove.some(function (s) {\n            return d._set.has(s);\n          });\n        });\n        var circles = {};\n        var textCenters = {};\n        var intersections = {};\n\n        if (data.length > 0) {\n          var solution = layoutFunction(data, {\n            lossFunction: loss\n          });\n\n          if (this.prop.normalize) {\n            solution = venn.normalizeSolution(solution, this.prop.orientation, null);\n          }\n\n          circles = venn.scaleSolution(solution, this.$geometry.width, this.$geometry.height, this.prop.padding);\n          textCenters = venn.computeTextCentres(circles, data);\n          intersections = this.getIntersections(circles);\n        } else {\n          throw new Error(\"Venn: No available data.\");\n        }\n\n        return {\n          circles: circles,\n          intersections: intersections,\n          textCenters: textCenters\n        };\n      } catch (e) {\n        return null;\n      }\n    }\n  }, {\n    key: \"getIntersections\",\n    value: function getIntersections(circles) {\n      var _this2 = this;\n\n      var circleArray = [];\n      Object.keys(circles).map(function (key, index) {\n        var circle = circles[key];\n        circle.key = key;\n        circleArray.push(circle);\n      });\n      var intersectionPoints = [];\n\n      for (var i = 0; i < circleArray.length; ++i) {\n        for (var j = i + 1; j < circleArray.length; ++j) {\n          var intersect = venn.circleCircleIntersection(circleArray[i], circleArray[j]);\n\n          var _iterator = _createForOfIteratorHelper(intersect),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var point = _step.value;\n              var p = point;\n              p.parentIndex = [i, j];\n              p.parentKey = [circleArray[i].key, circleArray[j].key];\n              intersectionPoints.push(p);\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        }\n      }\n\n      var intersectionAreas = []; // 2 circles intersection\n\n      if (circleArray.length >= 2) {\n        for (var _i = 0; _i < circleArray.length; ++_i) {\n          var cA = circleArray[_i];\n\n          for (var _j = _i + 1; _j < circleArray.length; ++_j) {\n            var cB = circleArray[_j];\n            var points = [];\n\n            var _iterator2 = _createForOfIteratorHelper(intersectionPoints),\n                _step2;\n\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                var _p = _step2.value;\n\n                if (_p.parentKey.indexOf(cA.key) !== -1 && _p.parentKey.indexOf(cB.key) !== -1) {\n                  points.push(_p);\n                }\n              } // console.log(\"points\", points);\n\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n\n            var area = \"M \".concat(points[0].x, \" \").concat(points[0].y, \"                     A \").concat(cA.radius, \" \").concat(cA.radius, \" 0 0 0 \").concat(points[1].x, \" \").concat(points[1].y, \"                     A \").concat(cB.radius, \" \").concat(cB.radius, \" 0 0 0 \").concat(points[0].x, \" \").concat(points[0].y);\n            intersectionAreas.push({\n              key: [cA.key, cB.key],\n              label: cA.key + cB.key,\n              path: area\n            });\n          }\n        }\n      } // 3 circles intersection\n\n\n      if (circleArray.length >= 3) {\n        for (var _i2 = 0; _i2 < circleArray.length; ++_i2) {\n          var _cA = circleArray[_i2];\n\n          for (var _j2 = _i2 + 1; _j2 < circleArray.length; ++_j2) {\n            var _cB = circleArray[_j2];\n\n            for (var k = _j2 + 1; k < circleArray.length; ++k) {\n              var cC = circleArray[k];\n              var _points = [];\n\n              var _iterator3 = _createForOfIteratorHelper(intersectionPoints),\n                  _step3;\n\n              try {\n                for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                  var _p3 = _step3.value;\n\n                  if (_p3.parentKey.indexOf(_cA.key) !== -1 && _p3.parentKey.indexOf(cC.key) !== -1) {\n                    if (this.inCircle(_p3, _cB)) {\n                      _points.push(_p3);\n                    }\n                  } else if (_p3.parentKey.indexOf(_cB.key) !== -1 && _p3.parentKey.indexOf(cC.key) !== -1) {\n                    if (this.inCircle(_p3, _cA)) {\n                      _points.push(_p3);\n                    }\n                  } else if (_p3.parentKey.indexOf(_cA.key) !== -1 && _p3.parentKey.indexOf(_cB.key) !== -1) {\n                    if (this.inCircle(_p3, cC)) {\n                      _points.push(_p3);\n                    }\n                  }\n                } // console.log(\"points\", points);\n\n              } catch (err) {\n                _iterator3.e(err);\n              } finally {\n                _iterator3.f();\n              }\n\n              var _area = \"\";\n\n              for (var q = 0; q < 3; q++) {\n                var pA = _points[q];\n\n                var _loop = function _loop(_p2) {\n                  _area += \" M \".concat(pA.x, \" \").concat(pA.y);\n                  var pB = _points[_p2];\n                  var key = pA.parentKey.filter(function (v) {\n                    return pB.parentKey.indexOf(v) !== -1;\n                  })[0];\n                  var areaTmp = \" A \".concat(circles[key].radius, \" \").concat(circles[key].radius, \" 0 0                                 \").concat(_this2.clockWise(pA, pB, circles[key]) ? 0 : 1, \" \").concat(pB.x, \" \").concat(pB.y);\n                  _area += areaTmp;\n                };\n\n                for (var _p2 = q + 1; _p2 < 3; _p2++) {\n                  _loop(_p2);\n                }\n              }\n\n              intersectionAreas.push({\n                key: [_cA.key, _cB.key, cC.key],\n                label: _cA.key + _cB.key + cC.key,\n                path: _area\n              });\n            }\n          }\n        }\n      }\n\n      return intersectionAreas;\n    }\n  }, {\n    key: \"inCircle\",\n    value: function inCircle(point, circle) {\n      return !(venn.distance(point, circle) > circle.radius + SMALL);\n    }\n  }, {\n    key: \"clockWise\",\n    value: function clockWise(a, b, o) {\n      // o -> a -> b\n      return o.x * a.y - a.x * o.y + (a.x * b.y - b.x * a.y) + (b.x * o.y - o.x * b.y) < 0;\n    }\n  }, {\n    key: \"defaultProp\",\n    value: function defaultProp() {\n      return Object.assign(Object.assign({}, _get(_getPrototypeOf(VennDiagram.prototype), \"defaultProp\", this).call(this)), {\n        radius: 50,\n        opacity: 0.5,\n        normalize: false,\n        width: 600,\n        height: 350,\n        padding: 15,\n        orientation: Math.PI / 2,\n        strokeWidth: 1\n      });\n    } // @ts-ignore\n\n  }, {\n    key: \"legendData\",\n    get: function get() {\n      return this._colorScheme.legendData();\n    }\n  }]);\n\n  return VennDiagram;\n}(Component);","map":null,"metadata":{},"sourceType":"module"}