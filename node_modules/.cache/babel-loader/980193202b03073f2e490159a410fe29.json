{"ast":null,"code":"function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { event } from \"crux/dist/utils\";\nimport { EditorDef, ToolbarDef } from \"./editor-def\";\nimport { viz_mode } from \"page/visualizers\";\nvar record = {};\nexport var defaultLayoutConf = {\n  currLayout: \"Topdown\"\n}; // export function registerEditorConfig(name: string, editorDef: EditorDef, toolbarDef: ToolbarDef, editorRef?: any) {\n//     record[name] = [editorDef, toolbarDef];\n//     const setupVue = (vue) => {\n//         vue.editorConfig = record[name][0];\n//         vue.toolbarConfig = record[name][1];\n//         if (editorRef) vue.$root.$data.editorRef = editorRef;\n//     };\n//     const vue = event.rpc(\"getVue\");\n//     if (vue) {\n//         setupVue(vue);\n//     }\n//     event.on(event.CANVAS_MOUNTED, (_, vue) => {\n//         if (window.gon.module_name !== name) { return; }\n//         setupVue(vue);\n//     });\n// }\n\nvar fileConf = {\n  id: \"files\",\n  title: \"Files\",\n  layout: \"single-page\",\n  view: {\n    type: \"vue\",\n    component: \"section-files\",\n    data: {}\n  }\n};\nexport function registerEditorConfig(editorConf, editorRef) {\n  var vue = event.rpc(\"getVue\");\n\n  if (vue) {\n    console.log(\"registered\");\n    if (window.gon.viz_mode === viz_mode.ANALYSIS) editorConf.sections = [fileConf].concat(_toConsumableArray(editorConf.sections));\n    vue.conf = editorConf;\n    if (editorRef) vue.$root.$data.editorRef = editorRef;\n  }\n}\nexport { EditorDef, ToolbarDef };","map":{"version":3,"sources":["/Users/wangzhenyu/Desktop/fyp_workspace/meta_platform/app/javascript/utils/editor.ts"],"names":["event","EditorDef","ToolbarDef","viz_mode","record","defaultLayoutConf","currLayout","fileConf","id","title","layout","view","type","component","data","registerEditorConfig","editorConf","editorRef","vue","rpc","console","log","window","gon","ANALYSIS","sections","conf","$root","$data"],"mappings":";;;;;;;;;;;;AAAA,SAASA,KAAT,QAAsB,iBAAtB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,cAAtC;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AAEA,IAAMC,MAA+C,GAAG,EAAxD;AAEA,OAAO,IAAMC,iBAAsB,GAAG;AAClCC,EAAAA,UAAU,EAAE;AADsB,CAA/B,C,CAKP;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACA,IAAMC,QAAQ,GAAG;AACbC,EAAAA,EAAE,EAAE,OADS;AAEbC,EAAAA,KAAK,EAAE,OAFM;AAGbC,EAAAA,MAAM,EAAE,aAHK;AAIbC,EAAAA,IAAI,EAAE;AACFC,IAAAA,IAAI,EAAE,KADJ;AAEFC,IAAAA,SAAS,EAAE,eAFT;AAGFC,IAAAA,IAAI,EAAE;AAHJ;AAJO,CAAjB;AAWA,OAAO,SAASC,oBAAT,CAA8BC,UAA9B,EAA0CC,SAA1C,EAAsD;AACzD,MAAMC,GAAG,GAAGlB,KAAK,CAACmB,GAAN,CAAU,QAAV,CAAZ;;AACA,MAAID,GAAJ,EAAS;AACLE,IAAAA,OAAO,CAACC,GAAR;AACA,QAAIC,MAAM,CAACC,GAAP,CAAWpB,QAAX,KAAwBA,QAAQ,CAACqB,QAArC,EAA+CR,UAAU,CAACS,QAAX,IAAuBlB,QAAvB,4BAAoCS,UAAU,CAACS,QAA/C;AAC/CP,IAAAA,GAAG,CAACQ,IAAJ,GAAWV,UAAX;AACA,QAAIC,SAAJ,EAAeC,GAAG,CAACS,KAAJ,CAAUC,KAAV,CAAgBX,SAAhB,GAA4BA,SAA5B;AAClB;AACJ;AACD,SAAShB,SAAT,EAAoBC,UAApB","sourcesContent":["import { event } from \"crux/dist/utils\";\nimport { EditorDef, ToolbarDef } from \"./editor-def\";\nimport {viz_mode} from \"page/visualizers\";\n\nconst record: Record<string, [EditorDef, ToolbarDef]> = {};\n\nexport const defaultLayoutConf: any = {\n    currLayout: \"Topdown\",\n};\n\n\n// export function registerEditorConfig(name: string, editorDef: EditorDef, toolbarDef: ToolbarDef, editorRef?: any) {\n//     record[name] = [editorDef, toolbarDef];\n//     const setupVue = (vue) => {\n//         vue.editorConfig = record[name][0];\n//         vue.toolbarConfig = record[name][1];\n//         if (editorRef) vue.$root.$data.editorRef = editorRef;\n//     };\n\n//     const vue = event.rpc(\"getVue\");\n\n//     if (vue) {\n//         setupVue(vue);\n//     }\n\n//     event.on(event.CANVAS_MOUNTED, (_, vue) => {\n//         if (window.gon.module_name !== name) { return; }\n//         setupVue(vue);\n//     });\n// }\nconst fileConf = {\n    id: \"files\",\n    title: \"Files\",\n    layout: \"single-page\",\n    view: {\n        type: \"vue\",\n        component: \"section-files\",\n        data: {}\n    }\n};\n\nexport function registerEditorConfig(editorConf, editorRef?) {\n    const vue = event.rpc(\"getVue\");\n    if (vue) {\n        console.log(`registered`);\n        if (window.gon.viz_mode === viz_mode.ANALYSIS) editorConf.sections = [fileConf, ...editorConf.sections];\n        vue.conf = editorConf;\n        if (editorRef) vue.$root.$data.editorRef = editorRef;\n    }\n}\nexport { EditorDef, ToolbarDef };\n"]},"metadata":{},"sourceType":"module"}