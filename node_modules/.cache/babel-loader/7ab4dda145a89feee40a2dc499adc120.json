{"ast":null,"code":"import { parseExpr } from \"./prop\";\nvar MODIFIERS = {\n  centered: {\n    anchor: \"@anchor(\\\"middle\\\", \\\"center\\\")\"\n  },\n  full: {\n    width: \"100%\",\n    height: \"100%\"\n  },\n  rad: {\n    rad: \"true\"\n  },\n  detached: {\n    detached: \"true\"\n  },\n  \"static\": {\n    \"static\": \"true\"\n  },\n  discrete: {\n    discreteCategory: \"true\"\n  }\n};\nexport function parseModifiers(node, str) {\n  return str.split(\".\").filter(function (m) {\n    return m;\n  }).map(function (m) {\n    if (m === \"lazy\") {\n      node.isLazy = true;\n      return;\n    }\n\n    var props = MODIFIERS[m];\n    if (!props) throw new Error(\"Unknown modifier: \".concat(m));\n    return Object.keys(props).map(function (k) {\n      return parseExpr(node, k, props[k]);\n    });\n  }).flat();\n}","map":null,"metadata":{},"sourceType":"module"}