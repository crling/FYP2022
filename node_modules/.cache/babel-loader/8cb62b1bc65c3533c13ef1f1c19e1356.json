{"ast":null,"code":"import { ParserStream } from \"../parse-stream\";\nimport { parseBlock } from \"./block\";\nimport { parseExtCommand } from \"./sfv\";\nexport function parse(template) {\n  var extended = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var parser = new ParserStream(template.trim());\n  var commands = [];\n\n  if (extended) {\n    var c;\n\n    while (c = parseExtCommand(parser)) {\n      commands.push(c);\n    }\n  }\n\n  var rootBlock = parser.expect(\"svg|canvas|component\", \"svg/canvas/component block\", true);\n  var isRoot = !!rootBlock;\n  var ast = parseBlock(parser);\n  parser.expectEnd();\n\n  if (isRoot) {\n    if (ast.children.length === 0) {\n      throw Error(\"The template cannot be empty\");\n    } else if (ast.children.length > 1) {\n      throw Error(\"The template can only contain one root element\");\n    }\n\n    var metadata = ast.props.reduce(function (acc, curr) {\n      acc[curr.name] = curr.expr;\n      return acc;\n    }, {});\n    if (isRoot) metadata.renderer = rootBlock[0];\n    metadata.rootComponent = ast.children[0].name;\n    ast.props = [];\n    return [ast, metadata, commands];\n  }\n\n  return [ast, null, commands];\n}","map":null,"metadata":{},"sourceType":"module"}