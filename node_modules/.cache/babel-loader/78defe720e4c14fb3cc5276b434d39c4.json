{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport { isFixed } from \"../../defs/geometry\";\nimport { adjustByAnchor, layoutElement } from \"../../layout/layout\";\nimport { Component } from \"../component\";\n\nfunction layoutDetachedChildren(el) {\n  var check = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  if (check && !el.$detached) return;\n  layoutElement(el, true);\n  adjustByAnchor(el);\n  var e = el;\n\n  while (e[\"render\"]) {\n    e = e.children[0];\n    e.$geometry._x = el.$geometry._x;\n    e.$geometry._y = el.$geometry._y;\n  }\n\n  if (el instanceof Component) {\n    // skip if children's sizes don't depend on this component\n    if (isFixed(el.prop.width) && isFixed(el.prop.height)) return;\n    el.children.forEach(function (c) {\n      return layoutDetachedChildren(c, false);\n    });\n  }\n}\n\nexport var Container = /*#__PURE__*/function (_Component) {\n  _inherits(Container, _Component);\n\n  var _super = _createSuper(Container);\n\n  function Container() {\n    _classCallCheck(this, Container);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Container, [{\n    key: \"defaultProp\",\n    value: function defaultProp() {\n      return {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n      };\n    }\n  }, {\n    key: \"didLayoutSubTree\",\n    value: function didLayoutSubTree() {\n      var _this$_getPadding = this._getPadding(),\n          _this$_getPadding2 = _slicedToArray(_this$_getPadding, 4),\n          pt = _this$_getPadding2[0],\n          pr = _this$_getPadding2[1],\n          pb = _this$_getPadding2[2],\n          pl = _this$_getPadding2[3];\n\n      var realChildren = this.children.filter(function (c) {\n        return !c.$detached;\n      });\n\n      if (this.widthIsNotDefined) {\n        realChildren.forEach(function (c) {\n          c.$geometry._xOffset.container = pl;\n          var e = c;\n\n          while (e[\"render\"]) {\n            e = e.children[0];\n            e.$geometry._xOffset.container = pl;\n          }\n        });\n        var maxX = Math.max.apply(null, [0].concat(_toConsumableArray(realChildren.map(function (c) {\n          return c.maxX;\n        }))));\n        this.$geometry.width = maxX + pl + pr;\n      }\n\n      if (this.heightIsNotDefined) {\n        realChildren.forEach(function (c) {\n          if (c.$detached) return;\n          c.$geometry._yOffset.container = pt;\n          var e = c;\n\n          while (e[\"render\"]) {\n            e = e.children[0];\n            e.$geometry._yOffset.container = pt;\n          }\n        });\n        var maxY = Math.max.apply(null, [0].concat(_toConsumableArray(realChildren.map(function (c) {\n          return c.maxY;\n        }))));\n        this.$geometry.height = maxY + pt + pb;\n      }\n\n      this.children.forEach(function (c) {\n        layoutDetachedChildren(c);\n      });\n    }\n  }, {\n    key: \"_getPadding\",\n    value: function _getPadding() {\n      var result = [0, 0, 0, 0];\n      var p;\n\n      if (p = this.prop.padding) {\n        result.fill(p);\n      }\n\n      if (p = this.prop[\"padding-x\"]) result[1] = result[3] = p;\n      if (p = this.prop[\"padding-y\"]) result[0] = result[2] = p;\n      if (p = this.prop[\"padding-t\"]) result[0] = p;\n      if (p = this.prop[\"padding-r\"]) result[1] = p;\n      if (p = this.prop[\"padding-b\"]) result[2] = p;\n      if (p = this.prop[\"padding-l\"]) result[3] = p;\n      return result;\n    }\n  }]);\n\n  return Container;\n}(Component);","map":null,"metadata":{},"sourceType":"module"}