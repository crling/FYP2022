{"ast":null,"code":"import Oviz from \"crux\";\nimport template from \"./template.bvt\";\nimport { SignedHeatMap } from \"viz/signed-heatmap/signed-heatmap\";\nimport { register } from \"page/visualizers\";\n// reigister default color theme\nvar MODULE_NAME = \"corr-heatmap\";\n\nfunction init() {\n  if (!window.gon || window.gon.module_name !== MODULE_NAME) return;\n\n  var _Oviz$visualize = Oviz.visualize({\n    el: \"#canvas\",\n    template: template,\n    theme: \"light\",\n    components: {\n      SignedHeatMap: SignedHeatMap\n    },\n    data: {\n      config: {\n        rangeMin: 0,\n        rangeMax: 0,\n        isSym: true,\n        gridH: 15\n      },\n      colors: {\n        \"origin\": \"white\",\n        \"positive range\": \"red\",\n        \"negative range\": \"green\",\n        \"group1\": \"#EC7063\",\n        \"group2\": \"#58D68D\"\n      },\n      heatmapDataP: null,\n      groupData: null,\n      rowTreeData: null,\n      colTreeData: null\n    },\n    loadData: {\n      corrHeatmapData: {\n        type: \"tsv\",\n        fileKey: \"corrHeatmapData\",\n        loaded: function loaded(d) {\n          if (!d) return;\n          var rows = [];\n          var data = {};\n          var sampleKey = d.columns[0];\n          var min = 0,\n              max = 0;\n          this.data.speciesMap = d.map(function (x) {\n            return [getShortSpecies(x[sampleKey]), x[sampleKey]];\n          });\n          d.forEach(function (line) {\n            var rowData = {};\n            var rowAttr = getShortSpecies(line[sampleKey]);\n            rows.push(rowAttr);\n            d.columns.forEach(function (col, i) {\n              if (i === 0) return;\n              var h = {};\n              h[\"r\"] = line[col];\n              if (parseFloat(line[col]) > max) max = line[col];\n              if (parseFloat(line[col]) < min) min = line[col];\n              rowData[col] = h;\n            });\n            data[rowAttr] = rowData;\n          });\n          return {\n            rows: rows,\n            columns: d.columns.splice(1, d.columns.length),\n            data: data,\n            range: {\n              min: min,\n              max: max\n            }\n          };\n        }\n      }\n    },\n    setup: function setup() {\n      setUpRange(this); // registerEditorConfig(editorConfig(this), editorRef);\n\n      if (this.data.corrHeatmapData.rows.length > 100) this.data.config.gridH = 10;else if (this.data.corrHeatmapData.rows.length > 60) this.data.config.gridH = 12;\n    }\n  }),\n      visualizer = _Oviz$visualize.visualizer;\n\n  return visualizer;\n}\n\nfunction getShortSpecies(name) {\n  var nameByRanks = name.split(\"|\");\n  return nameByRanks[nameByRanks.length - 1];\n}\n\nfunction setUpRange(v) {\n  v.data.config.rangeMin = v.data.corrHeatmapData.range.min;\n  v.data.config.rangeMax = v.data.corrHeatmapData.range.max;\n} // export default SignedHeatmap;\n\n\nregister(MODULE_NAME, init);\nexport function registerCorrHeatmap() {\n  register(MODULE_NAME, init);\n}","map":{"version":3,"sources":["/Users/wangzhenyu/Desktop/fyp_workspace/meta_platform/app/javascript/viz/corr-heatmap/index.ts"],"names":["Oviz","template","SignedHeatMap","register","MODULE_NAME","init","window","gon","module_name","visualize","el","theme","components","data","config","rangeMin","rangeMax","isSym","gridH","colors","heatmapDataP","groupData","rowTreeData","colTreeData","loadData","corrHeatmapData","type","fileKey","loaded","d","rows","sampleKey","columns","min","max","speciesMap","map","x","getShortSpecies","forEach","line","rowData","rowAttr","push","col","i","h","parseFloat","splice","length","range","setup","setUpRange","visualizer","name","nameByRanks","split","v","registerCorrHeatmap"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,SAASC,aAAT,QAA8B,mCAA9B;AAEA,SAAQC,QAAR,QAAuB,kBAAvB;AAGA;AACA,IAAMC,WAAW,GAAG,cAApB;;AAEA,SAASC,IAAT,GAAgB;AACZ,MAAI,CAACC,MAAM,CAACC,GAAR,IAAeD,MAAM,CAACC,GAAP,CAAWC,WAAX,KAA2BJ,WAA9C,EAA2D;;AAD/C,wBAESJ,IAAI,CAACS,SAAL,CAAe;AAChCC,IAAAA,EAAE,EAAE,SAD4B;AAEhCT,IAAAA,QAAQ,EAARA,QAFgC;AAGhCU,IAAAA,KAAK,EAAE,OAHyB;AAIhCC,IAAAA,UAAU,EAAE;AAACV,MAAAA,aAAa,EAAbA;AAAD,KAJoB;AAKhCW,IAAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAAE;AACJC,QAAAA,QAAQ,EAAE,CADN;AAEJC,QAAAA,QAAQ,EAAE,CAFN;AAGJC,QAAAA,KAAK,EAAE,IAHH;AAIJC,QAAAA,KAAK,EAAE;AAJH,OADN;AAOFC,MAAAA,MAAM,EAAE;AACJ,kBAAU,OADN;AAEJ,0BAAkB,KAFd;AAGJ,0BAAkB,OAHd;AAIJ,kBAAU,SAJN;AAKJ,kBAAU;AALN,OAPN;AAcFC,MAAAA,YAAY,EAAE,IAdZ;AAeFC,MAAAA,SAAS,EAAE,IAfT;AAgBFC,MAAAA,WAAW,EAAE,IAhBX;AAiBFC,MAAAA,WAAW,EAAE;AAjBX,KAL0B;AAwBhCC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,eAAe,EAAE;AACbC,QAAAA,IAAI,EAAE,KADO;AAEbC,QAAAA,OAAO,EAAE,iBAFI;AAGbC,QAAAA,MAHa,kBAGNC,CAHM,EAGH;AACN,cAAI,CAACA,CAAL,EAAQ;AACR,cAAMC,IAAI,GAAG,EAAb;AACA,cAAMjB,IAAI,GAAG,EAAb;AACA,cAAMkB,SAAS,GAAGF,CAAC,CAACG,OAAF,CAAU,CAAV,CAAlB;AAJM,cAKDC,GALC,GAKY,CALZ;AAAA,cAKIC,GALJ,GAKe,CALf;AAMN,eAAKrB,IAAL,CAAUsB,UAAV,GAAuBN,CAAC,CAACO,GAAF,CAAM,UAAAC,CAAC;AAAA,mBAC1B,CAACC,eAAe,CAACD,CAAC,CAACN,SAAD,CAAF,CAAhB,EAAgCM,CAAC,CAACN,SAAD,CAAjC,CAD0B;AAAA,WAAP,CAAvB;AAEAF,UAAAA,CAAC,CAACU,OAAF,CAAU,UAAAC,IAAI,EAAI;AACd,gBAAMC,OAAO,GAAG,EAAhB;AACA,gBAAMC,OAAO,GAAGJ,eAAe,CAACE,IAAI,CAACT,SAAD,CAAL,CAA/B;AACAD,YAAAA,IAAI,CAACa,IAAL,CAAUD,OAAV;AACAb,YAAAA,CAAC,CAACG,OAAF,CAAUO,OAAV,CAAkB,UAACK,GAAD,EAAMC,CAAN,EAAY;AAC1B,kBAAIA,CAAC,KAAK,CAAV,EAAa;AACb,kBAAMC,CAAC,GAAG,EAAV;AACAA,cAAAA,CAAC,CAAC,GAAD,CAAD,GAASN,IAAI,CAACI,GAAD,CAAb;AACA,kBAAIG,UAAU,CAACP,IAAI,CAACI,GAAD,CAAL,CAAV,GAAwBV,GAA5B,EAAiCA,GAAG,GAAGM,IAAI,CAACI,GAAD,CAAV;AACjC,kBAAIG,UAAU,CAACP,IAAI,CAACI,GAAD,CAAL,CAAV,GAAwBX,GAA5B,EAAiCA,GAAG,GAAGO,IAAI,CAACI,GAAD,CAAV;AACjCH,cAAAA,OAAO,CAACG,GAAD,CAAP,GAAeE,CAAf;AACH,aAPD;AAQAjC,YAAAA,IAAI,CAAC6B,OAAD,CAAJ,GAAgBD,OAAhB;AACH,WAbD;AAcA,iBAAO;AAACX,YAAAA,IAAI,EAAJA,IAAD;AAAOE,YAAAA,OAAO,EAAEH,CAAC,CAACG,OAAF,CAAUgB,MAAV,CAAiB,CAAjB,EAAoBnB,CAAC,CAACG,OAAF,CAAUiB,MAA9B,CAAhB;AAAuDpC,YAAAA,IAAI,EAAJA,IAAvD;AACHqC,YAAAA,KAAK,EAAE;AAACjB,cAAAA,GAAG,EAAHA,GAAD;AAAMC,cAAAA,GAAG,EAAHA;AAAN;AADJ,WAAP;AAEH;AA3BY;AADX,KAxBsB;AAuDhCiB,IAAAA,KAvDgC,mBAuDxB;AACJC,MAAAA,UAAU,CAAC,IAAD,CAAV,CADI,CAEJ;;AACA,UAAI,KAAKvC,IAAL,CAAUY,eAAV,CAA0BK,IAA1B,CAA+BmB,MAA/B,GAAwC,GAA5C,EAAiD,KAAKpC,IAAL,CAAUC,MAAV,CAAiBI,KAAjB,GAAyB,EAAzB,CAAjD,KACK,IAAI,KAAKL,IAAL,CAAUY,eAAV,CAA0BK,IAA1B,CAA+BmB,MAA/B,GAAwC,EAA5C,EAAgD,KAAKpC,IAAL,CAAUC,MAAV,CAAiBI,KAAjB,GAAyB,EAAzB;AACxD;AA5D+B,GAAf,CAFT;AAAA,MAELmC,UAFK,mBAELA,UAFK;;AAgEZ,SAAOA,UAAP;AACH;;AAED,SAASf,eAAT,CAAyBgB,IAAzB,EAA+B;AAC3B,MAAMC,WAAW,GAAGD,IAAI,CAACE,KAAL,CAAW,GAAX,CAApB;AACA,SAAOD,WAAW,CAACA,WAAW,CAACN,MAAZ,GAAqB,CAAtB,CAAlB;AACH;;AACD,SAASG,UAAT,CAAoBK,CAApB,EAAuB;AACnBA,EAAAA,CAAC,CAAC5C,IAAF,CAAOC,MAAP,CAAcC,QAAd,GAAyB0C,CAAC,CAAC5C,IAAF,CAAOY,eAAP,CAAuByB,KAAvB,CAA6BjB,GAAtD;AACAwB,EAAAA,CAAC,CAAC5C,IAAF,CAAOC,MAAP,CAAcE,QAAd,GAAyByC,CAAC,CAAC5C,IAAF,CAAOY,eAAP,CAAuByB,KAAvB,CAA6BhB,GAAtD;AACH,C,CAED;;;AAEA/B,QAAQ,CAACC,WAAD,EAAcC,IAAd,CAAR;AAEA,OAAO,SAASqD,mBAAT,GAA+B;AAClCvD,EAAAA,QAAQ,CAACC,WAAD,EAAcC,IAAd,CAAR;AACH","sourcesContent":["import Oviz from \"crux\";\nimport template from \"./template.bvt\"\nimport { editorConfig, editorRef } from \"./editor\";\nimport { SignedHeatMap } from \"viz/signed-heatmap/signed-heatmap\";\nimport {savedTheme} from \"oviz-common/mem-theme\"\nimport {register} from \"page/visualizers\";\nimport { registerEditorConfig } from \"utils/editor\";\n\n// reigister default color theme\nconst MODULE_NAME = \"corr-heatmap\";\n\nfunction init() {\n    if (!window.gon || window.gon.module_name !== MODULE_NAME) return;\n    const {visualizer} = Oviz.visualize({\n        el: \"#canvas\",\n        template,\n        theme: \"light\",\n        components: {SignedHeatMap},\n        data: {\n            config: {\n                rangeMin: 0,\n                rangeMax: 0,\n                isSym: true,\n                gridH: 15,\n            },\n            colors: {\n                \"origin\": \"white\",\n                \"positive range\": \"red\",\n                \"negative range\": \"green\",\n                \"group1\": \"#EC7063\",\n                \"group2\": \"#58D68D\",\n            },\n            heatmapDataP: null,\n            groupData: null,\n            rowTreeData: null,\n            colTreeData: null,\n        },\n        loadData: {\n            corrHeatmapData: {\n                type: \"tsv\",\n                fileKey: \"corrHeatmapData\",\n                loaded(d) {\n                    if (!d) return;\n                    const rows = [];\n                    const data = {};\n                    const sampleKey = d.columns[0];\n                    let [min, max] = [0, 0];\n                    this.data.speciesMap = d.map(x => \n                        [getShortSpecies(x[sampleKey]), x[sampleKey]]);\n                    d.forEach(line => {\n                        const rowData = {};\n                        const rowAttr = getShortSpecies(line[sampleKey]);\n                        rows.push(rowAttr);\n                        d.columns.forEach((col, i) => {\n                            if (i === 0) return;\n                            const h = {};\n                            h[\"r\"] = line[col];\n                            if (parseFloat(line[col]) > max) max = line[col];\n                            if (parseFloat(line[col]) < min) min = line[col];\n                            rowData[col] = h;\n                        });\n                        data[rowAttr] = rowData;\n                    });\n                    return {rows, columns: d.columns.splice(1, d.columns.length), data,\n                        range: {min, max}};\n                },\n            },\n        },\n        setup() {\n            setUpRange(this);\n            // registerEditorConfig(editorConfig(this), editorRef);\n            if (this.data.corrHeatmapData.rows.length > 100) this.data.config.gridH = 10;\n            else if (this.data.corrHeatmapData.rows.length > 60) this.data.config.gridH = 12;\n        },\n    });\n    return visualizer;\n}\n\nfunction getShortSpecies(name) {\n    const nameByRanks = name.split(\"|\");\n    return nameByRanks[nameByRanks.length - 1];\n}\nfunction setUpRange(v) {\n    v.data.config.rangeMin = v.data.corrHeatmapData.range.min;\n    v.data.config.rangeMax = v.data.corrHeatmapData.range.max;\n}\n\n// export default SignedHeatmap;\n\nregister(MODULE_NAME, init);\n\nexport function registerCorrHeatmap() {\n    register(MODULE_NAME, init);\n}\n"]},"metadata":{},"sourceType":"module"}