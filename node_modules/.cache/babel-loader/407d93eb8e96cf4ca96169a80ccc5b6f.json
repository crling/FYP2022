{"ast":null,"code":"import Vue from \"vue\";\nimport BootstrapVue from 'bootstrap-vue';\nimport OvizEditor from \"oviz-editor\";\nimport axios from \"axios\";\nimport { event } from \"crux/dist/utils\";\nimport { viz_mode } from \"page/visualizers\";\nimport DropDownSelect from \"page/builtin/dropdown-select.vue\";\nVue.use(OvizEditor);\nVue.use(BootstrapVue);\nVue.component(\"dropdown-select\", DropDownSelect);\nexport default {\n  data: function data() {\n    return {\n      conf: {},\n      isLoading: true,\n      isAnalysis: true,\n      showEditor: true,\n      outline: \"secondary\",\n      chosenOutput: 0,\n      chosenOutputOld: 0,\n      msgBoxTitle: \"\",\n      msgBoxContent: \"\",\n      msgBoxUseHTML: false,\n      taskOutputs: [{\n        value: 0,\n        text: \"Demo Files\",\n        secondaryText: \"\"\n      }]\n    };\n  },\n  methods: {\n    downloadSVG: function downloadSVG() {\n      var svgContainerClone = document.getElementById(\"canvas\").cloneNode(true);\n      var svgBlob = new Blob([svgContainerClone.innerHTML], {\n        type: \"image/svg+xml;charset=utf-8\"\n      });\n      var svgUrl = URL.createObjectURL(svgBlob);\n      var downloadLink = document.createElement(\"a\");\n      downloadLink.href = svgUrl;\n      downloadLink.download = \"\".concat(window.gon.analysis_name || 'demo', \".svg\");\n      document.body.appendChild(downloadLink);\n      downloadLink.click();\n      document.body.removeChild(downloadLink);\n    },\n    useDemoFiles: function useDemoFiles() {\n      axios.get(window.gon.urls.use_demo).then(function (response) {\n        var result = response.data;\n        if (result.code) location.reload();\n      });\n    },\n    toggleEditor: function toggleEditor() {\n      this.showEditor = !this.showEditor;\n    },\n    downloadDemoFiles: function downloadDemoFiles() {\n      // window.open(`${window.gon.urls.download_demo_file}`);\n      window.open(window.gon.urls.download_demo_file);\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    event.rpcRegisterReceiver(\"getVue\", function () {\n      return _this;\n    });\n    this.isAnalysis = window.gon.viz_mode === viz_mode.ANALYSIS ? true : false;\n\n    if (this.isAnalysis) {\n      this.chosenOutput = window.gon.chosen_output || 0;\n      this.chosenOutputOld = window.gon.chosen_output || 0;\n      axios.get(window.gon.urls.all_task_outputs).then(function (response) {\n        var outputs = response.data;\n        outputs.forEach(function (d) {\n          _this.taskOutputs.push({\n            value: d.id,\n            text: \"task-\".concat(d.task_id)\n          });\n        });\n      });\n    }\n\n    event.on(event.DATA_LOADING_FINISHED, function () {\n      _this.isLoading = false;\n\n      _this.$root.$emit(\"data-loaded\");\n    }, \"vapp-load-finished\");\n    event.on(\"show-msgbox\", function (_, _ref) {\n      var title = _ref.title,\n          content = _ref.content,\n          html = _ref.html;\n      _this.msgBoxTitle = title;\n      _this.msgBoxContent = content;\n      _this.msgBoxUseHTML = html;\n\n      _this.$refs.msgBox.show();\n    }, \"vapp-show-msg-box\");\n  },\n  mounted: function mounted() {\n    event.emit(event.CANVAS_READY, this);\n  },\n  updated: function updated() {\n    if (this.isAnalysis) {\n      axios.get(\"\".concat(window.gon.urls.use_task_output, \"?task_output_id=\").concat(this.chosenOutput)).then(function (response) {\n        if (response.data.code) location.reload();\n      });\n    }\n  }\n};","map":{"version":3,"sources":["vapp.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n     <div id = \"vapp\" :class= \"{'ana': isAnalysis, 'task': !isAnalysis}\"> \n        <div id=\"tool-bar\">\n            <div v-if= \"isAnalysis\">\n                <b-button @click=\"downloadSVG\" class=\"tool-bar-el\"><i class=\"fa fa-download\"></i>Download Chart</b-button>\n                <b-button @click=\"useDemoFiles\" class=\"tool-bar-el\">Use Demo</b-button>\n                <dropdown-select\n                    right\n                    v-model=\"chosenOutput\"\n                    :options=\"taskOutputs\"\n                    :variant=\"outline\"\n                    class=\"tool-bar-el\"/>\n                <b-button @click=\"downloadDemoFiles\" class=\"tool-bar-el\"><i class=\"far fa-file-archive\"></i>Download Data</b-button>\n                <b-button id=\"editor-conf\" @click=\"toggleEditor\">Editor</b-button>\n            </div>\n            <div v-else>\n                <b-button @click=\"downloadSVG\" class=\"tool-bar-el\"><i class=\"fa fa-download\"/>Download Chart</b-button>\n                <b-button @click=\"downloadDemoFiles\" class=\"tool-bar-el\"><i class=\"far fa-file-archive\"></i>Download Data</b-button>\n                <b-button id=\"editor-conf\" @click=\"toggleEditor\">Editor</b-button>\n            </div>\n        </div>\n        <div id=\"viz-container\">\n            <div class=\"need-upload w-100\" v-if=\"isLoading\">\n                <i class=\"fas fa-circle-notch fa-spin fa-5x m-0\"></i>\n                <h4 class=\"mt-4\">Loading data……</h4>\n            </div>\n            <div id=\"canvas\"/>\n            <div id=\"v-editor\" v-show=\"showEditor\">\n                <OvizEditor :config = \"conf\" :editorWidth = \"280\"/>\n                <b-modal id=\"msg-box-modal\" ref=\"msgBox\" :title=\"msgBoxTitle\">\n                    <p v-if=\"msgBoxUseHTML\" class=\"my-2\" v-html=\"msgBoxContent\"></p>\n                    <p v-else class=\"my-2\">\n                        <pre>{{msgBoxContent}}</pre>\n                </p>\n            </b-modal>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script lang=\"ts\">\n    import Vue from \"vue\";\n    import BootstrapVue from 'bootstrap-vue';\n    import OvizEditor from \"oviz-editor\";\n\n    import axios from \"axios\";\n    import { event } from \"crux/dist/utils\";\n    import {viz_mode} from \"page/visualizers\";\n\n    import DropDownSelect from \"page/builtin/dropdown-select.vue\";\n\n    Vue.use(OvizEditor);\n    Vue.use(BootstrapVue);\n\n    Vue.component(\"dropdown-select\", DropDownSelect)\n\n    export default {\n        data() {\n            return {\n                conf: {},\n                isLoading: true,\n                isAnalysis: true,\n                showEditor: true,\n                outline: \"secondary\",\n                chosenOutput: 0,\n                chosenOutputOld: 0,\n                msgBoxTitle: \"\",\n                msgBoxContent: \"\",\n                msgBoxUseHTML: false,\n                taskOutputs: [{value: 0, text: \"Demo Files\", secondaryText: \"\"}],\n            }\n        },\n        methods: {\n            downloadSVG() {\n                const svgContainerClone = document.getElementById(\"canvas\").cloneNode(true) as HTMLElement;\n                const svgBlob = new Blob([svgContainerClone.innerHTML], { type: \"image/svg+xml;charset=utf-8\" });\n                const svgUrl = URL.createObjectURL(svgBlob);\n                const downloadLink = document.createElement(\"a\");\n                downloadLink.href = svgUrl;\n                downloadLink.download = `${window.gon.analysis_name || 'demo'}.svg`;\n                document.body.appendChild(downloadLink);\n                downloadLink.click();\n                document.body.removeChild(downloadLink);\n            },\n            useDemoFiles() {\n                axios.get(window.gon.urls.use_demo)\n                    .then(response => {\n                        const result = response.data;\n                        if (result.code)\n                            location.reload();\n                    })\n            },\n            toggleEditor() {\n                this.showEditor=!this.showEditor;\n            },\n            downloadDemoFiles() {\n                // window.open(`${window.gon.urls.download_demo_file}`);\n                window.open(window.gon.urls.download_demo_file);\n            }\n        },        \n        created() {\n            event.rpcRegisterReceiver(\"getVue\", () => this);\n            this.isAnalysis = window.gon.viz_mode === viz_mode.ANALYSIS ? true : false\n            \n            if (this.isAnalysis) {\n                this.chosenOutput = window.gon.chosen_output || 0\n                this.chosenOutputOld = window.gon.chosen_output || 0\n                axios.get(window.gon.urls.all_task_outputs)\n                    .then(response => {\n                        const outputs = response.data;\n                        outputs.forEach(d=> {\n                            this.taskOutputs.push({\n                                value: d.id,\n                                text: `task-${d.task_id}`,\n                            })\n                        });\n                    });\n            }\n            event.on(\n                event.DATA_LOADING_FINISHED,\n                () => {\n                    this.isLoading = false;\n                    this.$root.$emit(\"data-loaded\");\n                },\n                \"vapp-load-finished\",\n            );\n            event.on(\n                \"show-msgbox\",\n                (_, { title, content, html }) => {\n                    this.msgBoxTitle = title;\n                    this.msgBoxContent = content;\n                    this.msgBoxUseHTML = html;\n                    (this.$refs.msgBox as any).show();\n                },\n                \"vapp-show-msg-box\",\n            );\n        },\n        mounted() {\n            event.emit(event.CANVAS_READY, this);\n        },\n        updated() {\n            if (this.isAnalysis) {\n                axios.get(`${window.gon.urls.use_task_output}?task_output_id=${this.chosenOutput}`)\n                    .then(response => {\n                        if(response.data.code) location.reload();\n                    })\n            }\n            \n        }\n    }\n\n</script>\n\n<style scoped lang=\"scss\">\n    #vapp {\n        width: 100%;\n        min-height: 25rem;\n        // height: auto;\n        position: relative;\n        background-color: white;\n    }\n    #tool-bar div >* {\n        height: 100%;\n        color: darkgrey;\n        border-top: none;\n        border-left: 1px solid darkgrey;\n        border-bottom: none;\n        border-right: 1px solid darkgrey;\n        margin-bottom: 2px;\n        text-align:center;\n        background-color: white;\n        border-radius: 0;\n    } \n    .tool-bar-el {\n        float: left;\n        padding-top:0;\n        height: 100%;\n        text-align:center;\n        border: none;\n    }\n    .tool-bar-el /deep/ .btn-secondary {\n        border-radius: 0;\n        padding-top: 0;\n        margin-top: 0;\n    }\n    #tool-bar div{\n        height:2.5em;\n        background-color: white;\n        position: relative;\n        border: 1px solid  #ced4da;\n    }\n    #editor-conf {\n        float: right;\n    }\n    #canvas {\n        min-height: calc(500px - 2.5em);\n        width: 100vw;\n        overflow: scroll;\n    }\n    .col-md-12 {\n        width: 80px;\n    }\n    #viz-container {\n        // position: relative;\n        // height:  calc(100% - 2.5em);\n        // height: 100%;\n        min-height: calc(500px - 2.5em);\n        position: relative;\n    }\n    #v-editor {\n        position: absolute;\n        top: 0;\n        z-index:20;\n        transition: all 0.3s;\n        right: 10px;\n    }\n    .need-upload {\n        margin: 0 1px;\n        padding: 8rem 4rem;\n        text-align: center;\n        color: #999;\n        position: absolute;\n    }\n</style>"],"sourceRoot":"app/javascript/page"},"metadata":{},"sourceType":"module"}