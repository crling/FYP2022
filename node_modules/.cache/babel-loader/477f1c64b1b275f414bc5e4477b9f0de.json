{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport Vue from '../../utils/vue';\nimport { getComponentConfig, getBreakpoints } from '../../utils/config';\nimport { isTag } from '../../utils/dom';\nimport { isString } from '../../utils/inspect';\nimport normalizeSlotMixin from '../../mixins/normalize-slot'; // --- Constants ---\n\nvar NAME = 'BNavbar'; // --- Props ---\n\nexport var props = {\n  tag: {\n    type: String,\n    \"default\": 'nav'\n  },\n  type: {\n    type: String,\n    \"default\": 'light'\n  },\n  variant: {\n    type: String,\n    \"default\": function _default() {\n      return getComponentConfig(NAME, 'variant');\n    }\n  },\n  toggleable: {\n    type: [Boolean, String],\n    \"default\": false\n  },\n  fixed: {\n    type: String\n  },\n  sticky: {\n    type: Boolean,\n    \"default\": false\n  },\n  print: {\n    type: Boolean,\n    \"default\": false\n  }\n}; // --- Main component ---\n// @vue/component\n\nexport var BNavbar = /*#__PURE__*/Vue.extend({\n  name: NAME,\n  mixins: [normalizeSlotMixin],\n  props: props,\n  provide: function provide() {\n    return {\n      bvNavbar: this\n    };\n  },\n  computed: {\n    breakpointClass: function breakpointClass() {\n      var breakpoint = null;\n      var xs = getBreakpoints()[0];\n      var toggleable = this.toggleable;\n\n      if (toggleable && isString(toggleable) && toggleable !== xs) {\n        breakpoint = \"navbar-expand-\".concat(toggleable);\n      } else if (toggleable === false) {\n        breakpoint = 'navbar-expand';\n      }\n\n      return breakpoint;\n    }\n  },\n  render: function render(h) {\n    var _ref;\n\n    return h(this.tag, {\n      staticClass: 'navbar',\n      \"class\": [(_ref = {\n        'd-print': this.print,\n        'sticky-top': this.sticky\n      }, _defineProperty(_ref, \"navbar-\".concat(this.type), this.type), _defineProperty(_ref, \"bg-\".concat(this.variant), this.variant), _defineProperty(_ref, \"fixed-\".concat(this.fixed), this.fixed), _ref), this.breakpointClass],\n      attrs: {\n        role: isTag(this.tag, 'nav') ? null : 'navigation'\n      }\n    }, [this.normalizeSlot('default')]);\n  }\n});","map":null,"metadata":{},"sourceType":"module"}