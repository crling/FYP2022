{"ast":null,"code":"import { parseBlockBody } from \"./block-body\";\nexport function parseIf(p) {\n  return parseIfBlocks(p, \"@if\", \"op-if\", true);\n}\nexport function parseElsif(p) {\n  return parseIfBlocks(p, \"@elsif\", \"op-elsif\", true);\n}\nexport function parseElse(p) {\n  return parseIfBlocks(p, \"@else\", \"op-else\", false);\n}\n\nfunction parseIfBlocks(p, kw, type, hasExpr) {\n  p.expect(kw);\n  p.skipSpaces();\n  var node = {\n    type: type,\n    children: [],\n    localData: []\n  };\n\n  if (hasExpr) {\n    var expr = p.consumeTill(\"{\", false);\n    p.skipSpaces();\n    node.condition = expr.trim();\n  }\n\n  parseBlockBody(p, node);\n  return node;\n}","map":null,"metadata":{},"sourceType":"module"}