{"ast":null,"code":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar Alert = /*#__PURE__*/function () {\n  function Alert(opts) {\n    _classCallCheck(this, Alert);\n\n    Object.assign(this, opts);\n    this.dismissCountDown = 5;\n    this.showDismissibleAlert = true;\n  }\n\n  _createClass(Alert, [{\n    key: \"rendered\",\n    get: function get() {\n      if (this.message instanceof Array) {\n        return \"<ul>\".concat(this.message.map(function (m) {\n          return \"<li>\".concat(m, \"</li>\");\n        }).join(''), \"</ul>\");\n      }\n\n      return this.message;\n    }\n  }]);\n\n  return Alert;\n}();\n\nexport default {\n  data: function data() {\n    return {\n      idCounter: 0,\n      alerts: []\n    };\n  },\n  methods: {\n    add: function add(variant, message) {\n      var dismissible = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      this.alerts.push(new Alert({\n        variant: variant,\n        message: message,\n        dismissible: dismissible,\n        id: this.idCounter\n      }));\n      this.idCounter += 1;\n    }\n  }\n};","map":{"version":3,"sources":["alert-center.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA4BA,K;AACA,iBAAA,IAAA,EAAA;AAAA;;AACA,IAAA,MAAA,CAAA,MAAA,CAAA,IAAA,EAAA,IAAA;AACA,SAAA,gBAAA,GAAA,CAAA;AACA,SAAA,oBAAA,GAAA,IAAA;AACA;;;;wBAEA;AACA,UAAA,KAAA,OAAA,YAAA,KAAA,EAAA;AACA,6BAAA,KAAA,OAAA,CAAA,GAAA,CAAA,UAAA,CAAA;AAAA,+BAAA,CAAA;AAAA,SAAA,EAAA,IAAA,CAAA,EAAA,CAAA;AACA;;AACA,aAAA,KAAA,OAAA;AACA;;;;;;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,CADA;AAEA,MAAA,MAAA,EAAA;AAFA,KAAA;AAIA,GANA;AAOA,EAAA,OAAA,EAAA;AACA,IAAA,GADA,eACA,OADA,EACA,OADA,EACA;AAAA,UAAA,WAAA,uEAAA,IAAA;AACA,WAAA,MAAA,CAAA,IAAA,CAAA,IAAA,KAAA,CAAA;AAAA,QAAA,OAAA,EAAA,OAAA;AAAA,QAAA,OAAA,EAAA,OAAA;AAAA,QAAA,WAAA,EAAA,WAAA;AAAA,QAAA,EAAA,EAAA,KAAA;AAAA,OAAA,CAAA;AACA,WAAA,SAAA,IAAA,CAAA;AACA;AAJA;AAPA,CAAA","sourcesContent":["<template>\n<!-- eslint-disable max-len -->\n<div id=\"alert-center\">\n    <div class=\"alert-center-container\" >\n        <div v-for=\"alert in alerts\" :key=\"alert.id\">\n            <div v-if=\"alert.dismissible\">\n                <b-alert :variant=\"alert.variant\"\n                    dismissible fade :show=\"alert.dismissCountDown\"\n                    @dismissed=\"alert.dismissCountDown = 0\"\n                    @dismiss-count-down=\"alert.dismissCountDown = arguments[0]\">\n                    <div v-html=\"alert.rendered\" />\n                    <b-progress :variant=\"alert.variant\" :max=\"5\" :value=\"alert.dismissCountDown\"\n                        height=\"3px\" class=\"progress\" />\n                </b-alert>\n            </div>\n            <div v-else>\n                <b-alert :variant=\"alert.variant\"\n                    dismissible :show=\"alert.showDismissibleAlert\"\n                    @dismissed=\"alert.showDismissibleAlert = false\">\n                    <div v-html=\"alert.rendered\" />\n                </b-alert>\n            </div>\n        </div>\n    </div>\n</div>\n</template>\n\n<script>\nclass Alert {\n    constructor(opts) {\n        Object.assign(this, opts);\n        this.dismissCountDown = 5;\n        this.showDismissibleAlert = true;\n    }\n\n    get rendered() {\n        if (this.message instanceof Array) {\n            return `<ul>${this.message.map(m => `<li>${m}</li>`).join('')}</ul>`;\n        }\n        return this.message;\n    }\n}\nexport default {\n    data() {\n        return {\n            idCounter: 0,\n            alerts: [],\n        };\n    },\n    methods: {\n        add(variant, message, dismissible = true) {\n            this.alerts.push(new Alert({ variant, message, dismissible, id: this.idCounter }));\n            this.idCounter += 1;\n        },\n    },\n};\n</script>\n\n<style lang=\"scss\">\n#alert-center {\n\tposition: fixed;\n\ttop: 80px;\n\tright: 50px;\n\twidth: 360px;\n}\n\n#alert-center .alert {\n\tposition: relative;\n\toverflow: hidden;\n}\n\n#alert-center .alert ul {\n\tpadding: 0 0 0 1.5rem;\n\tmargin: 0;\n}\n\n#alert-center .alert .progress {\n\tposition: absolute;\n\tbottom: -1px;\n\tleft: -1px;\n\tright: -1px;\n}\n</style>\n"],"sourceRoot":"app/javascript/components"},"metadata":{},"sourceType":"module"}