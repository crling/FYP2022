{"ast":null,"code":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { scaleLinear, scaleLog, scaleOrdinal } from \"d3-scale\";\nexport var ScaleMixin = /*#__PURE__*/function () {\n  function ScaleMixin() {\n    _classCallCheck(this, ScaleMixin);\n  }\n\n  _createClass(ScaleMixin, [{\n    key: \"_createScale\",\n    value: function _createScale(type, horizontal, domain, range) {\n      var self = this;\n      var size = self.boundaryForScale(horizontal);\n      var scale = type === \"linear\" ? scaleLinear().domain(domain || size).range(range || size) : scaleLog().domain(shift1(domain || size)).range(range || size);\n      scale.__type__ = type;\n      return scale;\n    }\n  }, {\n    key: \"_createScaleOrdinal\",\n    value: function _createScaleOrdinal(domain, range) {\n      return scaleOrdinal().domain(domain).range(range);\n    }\n  }]);\n\n  return ScaleMixin;\n}();\nexport function scaled(scale, value) {\n  if (scale.__type__ === \"log\" || scale[\"base\"]) {\n    return scale(value + 1);\n  }\n\n  return scale(value);\n}\nexport function scaleDomain(scale) {\n  if (scale.__type__ === \"log\" || scale[\"base\"]) {\n    return scale.domain().map(function (x) {\n      return x - 1;\n    });\n  }\n\n  return scale.domain();\n}\nexport function shift1(range) {\n  return range.map(function (x) {\n    return x + 1;\n  });\n}","map":null,"metadata":{},"sourceType":"module"}