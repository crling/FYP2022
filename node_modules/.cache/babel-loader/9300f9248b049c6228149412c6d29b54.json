{"ast":null,"code":"import Oviz from \"crux\";\nimport { registerDefaultBioInfoComponents } from \"crux/dist/element/global\";\nimport { register } from \"page/visualizers\";\nimport { registerEditorConfig } from \"utils/editor\";\nimport { editorConfig, editorRef } from \"./editor\";\nimport template from \"./template.bvt\";\nimport { annoLoaded, main, matrixLoaded } from \"./data\";\nregisterDefaultBioInfoComponents();\nvar MODULE_NAME = \"tree\";\n\nfunction init() {\n  if (window.gon.module_name !== MODULE_NAME) return;\n\n  var _Oviz$visualize = Oviz.visualize({\n    el: \"#canvas\",\n    template: template,\n    renderer: \"svg\",\n    theme: \"light\",\n    loadData: {\n      anno: {\n        type: \"tsv\",\n        fileKey: \"anno\",\n        loaded: annoLoaded\n      },\n      matrix: {\n        type: \"tsv\",\n        fileKey: \"matrix\",\n        loaded: matrixLoaded\n      },\n      tree: {\n        type: \"tsv\",\n        fileKey: \"tree\",\n        dependsOn: [\"matrix\"],\n        loaded: main\n      }\n    },\n    setup: function setup() {\n      registerEditorConfig(editorConfig(this), editorRef);\n\n      if (this.data.tree.dataOpt.isRadical) {\n        var r = this.data.tree.dataOpt.treeRadius + Math.ceil(this.data.tree.dataOpt.maxTextLength);\n        this.size.width = 2 * r + 200;\n        this.size.height = 2 * r;\n      } else {\n        this.size.width = this.size.height = 1000;\n      }\n\n      this.defineGradient(\"colorScale\", \"horizontal\", [\"#CFE1E9\", \"#1565C0\"]);\n    }\n  }),\n      visualizer = _Oviz$visualize.visualizer;\n\n  return visualizer;\n}\n\nregister(MODULE_NAME, init);","map":{"version":3,"sources":["/Users/wangzhenyu/Desktop/fyp_workspace/meta_platform/app/javascript/viz/tree/index.ts"],"names":["Oviz","registerDefaultBioInfoComponents","register","registerEditorConfig","editorConfig","editorRef","template","annoLoaded","main","matrixLoaded","MODULE_NAME","init","window","gon","module_name","visualize","el","renderer","theme","loadData","anno","type","fileKey","loaded","matrix","tree","dependsOn","setup","data","dataOpt","isRadical","r","treeRadius","Math","ceil","maxTextLength","size","width","height","defineGradient","visualizer"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,SAASC,gCAAT,QAAiD,0BAAjD;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,oBAAT,QAAqC,cAArC;AACA,SAASC,YAAT,EAAuBC,SAAvB,QAAwC,UAAxC;AAEA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,SAAQC,UAAR,EAAoBC,IAApB,EAA0BC,YAA1B,QAA6C,QAA7C;AAEAR,gCAAgC;AAEhC,IAAMS,WAAW,GAAG,MAApB;;AAEA,SAASC,IAAT,GAAgB;AACZ,MAAIC,MAAM,CAACC,GAAP,CAAWC,WAAX,KAA2BJ,WAA/B,EAA4C;;AADhC,wBAEWV,IAAI,CAACe,SAAL,CAAe;AAClCC,IAAAA,EAAE,EAAE,SAD8B;AAElCV,IAAAA,QAAQ,EAARA,QAFkC;AAGlCW,IAAAA,QAAQ,EAAE,KAHwB;AAIlCC,IAAAA,KAAK,EAAE,OAJ2B;AAKlCC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,IAAI,EAAE;AACFC,QAAAA,IAAI,EAAE,KADJ;AAEFC,QAAAA,OAAO,EAAE,MAFP;AAGFC,QAAAA,MAAM,EAAEhB;AAHN,OADA;AAMNiB,MAAAA,MAAM,EAAE;AACJH,QAAAA,IAAI,EAAE,KADF;AAEJC,QAAAA,OAAO,EAAE,QAFL;AAGJC,QAAAA,MAAM,EAAEd;AAHJ,OANF;AAWNgB,MAAAA,IAAI,EAAE;AACFJ,QAAAA,IAAI,EAAE,KADJ;AAEFC,QAAAA,OAAO,EAAE,MAFP;AAGFI,QAAAA,SAAS,EAAE,CAAC,QAAD,CAHT;AAIFH,QAAAA,MAAM,EAAEf;AAJN;AAXA,KALwB;AAuBlCmB,IAAAA,KAvBkC,mBAuB1B;AACJxB,MAAAA,oBAAoB,CAACC,YAAY,CAAC,IAAD,CAAb,EAAqBC,SAArB,CAApB;;AACA,UAAI,KAAKuB,IAAL,CAAUH,IAAV,CAAeI,OAAf,CAAuBC,SAA3B,EAAsC;AAClC,YAAMC,CAAC,GAAG,KAAKH,IAAL,CAAUH,IAAV,CAAeI,OAAf,CAAuBG,UAAvB,GAAoCC,IAAI,CAACC,IAAL,CAAU,KAAKN,IAAL,CAAUH,IAAV,CAAeI,OAAf,CAAuBM,aAAjC,CAA9C;AACA,aAAKC,IAAL,CAAUC,KAAV,GAAkB,IAAIN,CAAJ,GAAQ,GAA1B;AACA,aAAKK,IAAL,CAAUE,MAAV,GAAmB,IAAIP,CAAvB;AACH,OAJD,MAIO;AACH,aAAKK,IAAL,CAAUC,KAAV,GAAkB,KAAKD,IAAL,CAAUE,MAAV,GAAmB,IAArC;AACH;;AACD,WAAKC,cAAL,CAAoB,YAApB,EAAkC,YAAlC,EAAgD,CAAC,SAAD,EAAY,SAAZ,CAAhD;AACH;AAjCiC,GAAf,CAFX;AAAA,MAEJC,UAFI,mBAEJA,UAFI;;AAsCZ,SAAOA,UAAP;AACH;;AAEDtC,QAAQ,CAACQ,WAAD,EAAcC,IAAd,CAAR","sourcesContent":["import Oviz from \"crux\";\nimport { registerDefaultBioInfoComponents } from \"crux/dist/element/global\";\nimport { register } from \"page/visualizers\";\nimport { registerEditorConfig } from \"utils/editor\";\nimport { editorConfig, editorRef } from \"./editor\";\n\nimport template from \"./template.bvt\";\n\nimport {annoLoaded, main, matrixLoaded} from \"./data\";\n\nregisterDefaultBioInfoComponents();\n\nconst MODULE_NAME = \"tree\";\n\nfunction init() {\n    if (window.gon.module_name !== MODULE_NAME) return;\n    const { visualizer } = Oviz.visualize({\n        el: \"#canvas\",\n        template,\n        renderer: \"svg\",\n        theme: \"light\",\n        loadData: {\n            anno: {\n                type: \"tsv\",\n                fileKey: \"anno\",\n                loaded: annoLoaded,\n            },\n            matrix: {\n                type: \"tsv\",\n                fileKey: \"matrix\",\n                loaded: matrixLoaded,\n            },\n            tree: {\n                type: \"tsv\",\n                fileKey: \"tree\",\n                dependsOn: [\"matrix\"],\n                loaded: main,\n            },\n        },\n        setup() {\n            registerEditorConfig(editorConfig(this), editorRef);\n            if (this.data.tree.dataOpt.isRadical) {\n                const r = this.data.tree.dataOpt.treeRadius + Math.ceil(this.data.tree.dataOpt.maxTextLength);\n                this.size.width = 2 * r + 200;\n                this.size.height = 2 * r;\n            } else {\n                this.size.width = this.size.height = 1000;\n            }\n            this.defineGradient(\"colorScale\", \"horizontal\", [\"#CFE1E9\", \"#1565C0\"]);\n        },\n\n    });\n    return visualizer;\n}\n\nregister(MODULE_NAME, init);\n"]},"metadata":{},"sourceType":"module"}