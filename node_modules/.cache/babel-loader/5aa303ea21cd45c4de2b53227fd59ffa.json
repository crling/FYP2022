{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Oviz from \"crux\";\nimport { editorConfig } from \"./editor\";\nimport template from \"./template.bvt\";\nimport { register } from \"page/visualizers\";\nimport { registerEditorConfig } from \"utils/editor\";\nimport { findUpperBound } from \"utils/maths\";\nimport { minmax } from \"crux/dist/utils/math\";\nimport { signedChartColors } from \"oviz-common/palette\";\nvar MODULE_NAME = \"signed-barchart\";\n\nfunction init() {\n  if (!window.gon || window.gon.module_name !== MODULE_NAME) return;\n\n  var _Oviz$visualize = Oviz.visualize({\n    el: \"#canvas\",\n    template: template,\n    theme: \"light\",\n    data: {\n      colors: _objectSpread({}, signedChartColors),\n      config: {\n        plotHeight: 600,\n        plotWidth: 800,\n        barWidth: 15\n      }\n    },\n    loadData: {\n      barchartData: {\n        fileKey: \"barchartData\",\n        type: \"tsv\",\n        dsvRowDef: {\n          Zscore: [\"float\"]\n        },\n        loaded: function loaded(data) {\n          var valueRange = minmax(data, \"Zscore\");\n          var lowerBound = -findUpperBound(valueRange[0] * -1, 1);\n          var upperBound = findUpperBound(valueRange[1], 1);\n          this.data.axisPos = -lowerBound / (upperBound - lowerBound);\n          this.data.plotHeight = 15 * data.length;\n          this.data.bounds = {\n            lowerBound: lowerBound,\n            upperBound: upperBound\n          };\n        }\n      }\n    },\n    setup: function setup() {\n      registerEditorConfig(editorConfig(this));\n    }\n  }),\n      visualizer = _Oviz$visualize.visualizer;\n\n  return visualizer;\n}\n\nregister(MODULE_NAME, init);","map":{"version":3,"sources":["/Users/wangzhenyu/Desktop/fyp_workspace/meta_platform/app/javascript/viz/signed-barchart/index.ts"],"names":["Oviz","editorConfig","template","register","registerEditorConfig","findUpperBound","minmax","signedChartColors","MODULE_NAME","init","window","gon","module_name","visualize","el","theme","data","colors","config","plotHeight","plotWidth","barWidth","loadData","barchartData","fileKey","type","dsvRowDef","Zscore","loaded","valueRange","lowerBound","upperBound","axisPos","length","bounds","setup","visualizer"],"mappings":";;;;;;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAASC,oBAAT,QAAqC,cAArC;AAEA,SAAQC,cAAR,QAA6B,aAA7B;AAEA,SAAQC,MAAR,QAAqB,sBAArB;AACA,SAAQC,iBAAR,QAAgC,qBAAhC;AAEA,IAAMC,WAAW,GAAG,iBAApB;;AAEA,SAASC,IAAT,GAAgB;AACZ,MAAI,CAACC,MAAM,CAACC,GAAR,IAAeD,MAAM,CAACC,GAAP,CAAWC,WAAX,KAA2BJ,WAA9C,EAA2D;;AAD/C,wBAGSR,IAAI,CAACa,SAAL,CAAe;AAChCC,IAAAA,EAAE,EAAE,SAD4B;AAEhCZ,IAAAA,QAAQ,EAARA,QAFgC;AAGhCa,IAAAA,KAAK,EAAE,OAHyB;AAIhCC,IAAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,oBACCV,iBADD,CADJ;AAIFW,MAAAA,MAAM,EAAG;AACLC,QAAAA,UAAU,EAAE,GADP;AAELC,QAAAA,SAAS,EAAE,GAFN;AAGLC,QAAAA,QAAQ,EAAE;AAHL;AAJP,KAJ0B;AAchCC,IAAAA,QAAQ,EAAG;AACPC,MAAAA,YAAY,EAAE;AACVC,QAAAA,OAAO,gBADG;AAEVC,QAAAA,IAAI,EAAE,KAFI;AAGVC,QAAAA,SAAS,EAAE;AAACC,UAAAA,MAAM,EAAE,CAAC,OAAD;AAAT,SAHD;AAIVC,QAAAA,MAJU,kBAIHZ,IAJG,EAIG;AACV,cAAMa,UAAU,GAAGvB,MAAM,CAACU,IAAD,EAAO,QAAP,CAAzB;AACA,cAAMc,UAAU,GAAG,CAACzB,cAAc,CAACwB,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAC,CAAlB,EAAqB,CAArB,CAAlC;AACA,cAAME,UAAU,GAAG1B,cAAc,CAACwB,UAAU,CAAC,CAAD,CAAX,EAAgB,CAAhB,CAAjC;AACA,eAAKb,IAAL,CAAUgB,OAAV,GAAoB,CAACF,UAAD,IAAeC,UAAU,GAAGD,UAA5B,CAApB;AACA,eAAKd,IAAL,CAAUG,UAAV,GAAuB,KAAKH,IAAI,CAACiB,MAAjC;AACA,eAAKjB,IAAL,CAAUkB,MAAV,GAAmB;AAACJ,YAAAA,UAAU,EAAVA,UAAD;AAAaC,YAAAA,UAAU,EAAVA;AAAb,WAAnB;AACF;AAXS;AADP,KAdqB;AA6BhCI,IAAAA,KA7BgC,mBA6BxB;AACJ/B,MAAAA,oBAAoB,CAACH,YAAY,CAAC,IAAD,CAAb,CAApB;AACH;AA/B+B,GAAf,CAHT;AAAA,MAGLmC,UAHK,mBAGLA,UAHK;;AAoCZ,SAAOA,UAAP;AACH;;AAEDjC,QAAQ,CAACK,WAAD,EAAcC,IAAd,CAAR","sourcesContent":["import Oviz from \"crux\";\nimport { editorConfig } from \"./editor\";\nimport template from \"./template.bvt\";\n\nimport {register} from \"page/visualizers\";\nimport { registerEditorConfig } from \"utils/editor\";\n\nimport {findUpperBound} from \"utils/maths\";\n\nimport {minmax} from \"crux/dist/utils/math\";\nimport {signedChartColors} from \"oviz-common/palette\";\n\nconst MODULE_NAME = \"signed-barchart\";\n\nfunction init() {\n    if (!window.gon || window.gon.module_name !== MODULE_NAME) return;\n\n    const {visualizer} = Oviz.visualize({\n        el: \"#canvas\",\n        template,\n        theme: \"light\",\n        data: {\n            colors: {\n                ...signedChartColors,\n            },\n            config : {\n                plotHeight: 600,\n                plotWidth: 800,\n                barWidth: 15,\n            },\n        },\n        loadData:  {\n            barchartData: {\n                fileKey: `barchartData`,\n                type: \"tsv\" ,\n                dsvRowDef: {Zscore: [\"float\"]},\n                loaded(data) {\n                   const valueRange = minmax(data, \"Zscore\");\n                   const lowerBound = -findUpperBound(valueRange[0] * -1, 1);\n                   const upperBound = findUpperBound(valueRange[1], 1);\n                   this.data.axisPos = -lowerBound / (upperBound - lowerBound);\n                   this.data.plotHeight = 15 * data.length;\n                   this.data.bounds = {lowerBound, upperBound};\n                },\n            },\n        },\n        setup() {\n            registerEditorConfig(editorConfig(this));\n        },\n    });\n    return visualizer;\n}\n\nregister(MODULE_NAME, init);\n"]},"metadata":{},"sourceType":"module"}