{"ast":null,"code":"import { isFunction } from '../../../utils/inspect';\nimport { BTr } from '../tr';\nvar slotName = 'bottom-row';\nexport default {\n  methods: {\n    renderBottomRow: function renderBottomRow() {\n      var h = this.$createElement; // Static bottom row slot (hidden in visibly stacked mode as we can't control the data-label)\n      // If in *always* stacked mode, we don't bother rendering the row\n\n      if (!this.hasNormalizedSlot(slotName) || this.stacked === true || this.stacked === '') {\n        return h();\n      }\n\n      var fields = this.computedFields;\n      return h(BTr, {\n        key: 'b-bottom-row',\n        staticClass: 'b-table-bottom-row',\n        \"class\": [isFunction(this.tbodyTrClass) ?\n        /* istanbul ignore next */\n        this.tbodyTrClass(null, 'row-bottom') : this.tbodyTrClass],\n        attrs: isFunction(this.tbodyTrAttr) ?\n        /* istanbul ignore next */\n        this.tbodyTrAttr(null, 'row-bottom') : this.tbodyTrAttr\n      }, this.normalizeSlot(slotName, {\n        columns: fields.length,\n        fields: fields\n      }));\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}