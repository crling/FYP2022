{"ast":null,"code":"import { generateGridPlotConfig } from \"oviz-components/grid-plot\";\nimport { generateBoxConfig } from \"viz/boxplot/editor\";\n\nfunction run(v) {\n  v.forceRedraw = true;\n  v.run();\n}\n\nexport var editorRef = {};\nexport function editorConfig(v) {\n  return {\n    sections: [{\n      id: \"data\",\n      title: \"Data\",\n      layout: \"tabs\",\n      tabs: [{\n        id: \"gData\",\n        name: \"General\",\n        view: {\n          type: \"list\",\n          items: [{\n            title: \"Taxonomic rank\",\n            type: \"select\",\n            options: v.data.ranks,\n            value: {\n              current: v.data.rank,\n              callback: function callback(d) {\n                v.data.rank = d;\n                v.data.data = v.data.mainDict[d];\n                editorRef.lowerBound.value = v.data.data.valueRange[0];\n                editorRef.upperBound.value = v.data.data.valueRange[1];\n                run(v);\n              }\n            }\n          }, {\n            title: \"Range Lower Bound\",\n            type: \"input\",\n            ref: \"lowerBound\",\n            value: {\n              current: v.data.data.valueRange[0],\n              callback: function callback(d) {\n                v.data.data.valueRange[0] = parseFloat(d);\n                run(v);\n              }\n            }\n          }, {\n            title: \"Range Upper Bound\",\n            type: \"input\",\n            ref: \"upperBound\",\n            value: {\n              current: v.data.data.valueRange[1],\n              callback: function callback(d) {\n                v.data.data.valueRange[1] = parseFloat(d);\n                run(v);\n              }\n            }\n          }]\n        }\n      }]\n    }, generateGridPlotConfig(v), generateBoxConfig(v)]\n  };\n}","map":{"version":3,"sources":["/Users/wangzhenyu/Desktop/fyp_workspace/meta_platform/app/javascript/viz/boxplot-single/editor.ts"],"names":["generateGridPlotConfig","generateBoxConfig","run","v","forceRedraw","editorRef","editorConfig","sections","id","title","layout","tabs","name","view","type","items","options","data","ranks","value","current","rank","callback","d","mainDict","lowerBound","valueRange","upperBound","ref","parseFloat"],"mappings":"AAAA,SAASA,sBAAT,QAAuC,2BAAvC;AAEA,SAASC,iBAAT,QAAkC,oBAAlC;;AAEA,SAASC,GAAT,CAAaC,CAAb,EAAgB;AACZA,EAAAA,CAAC,CAACC,WAAF,GAAgB,IAAhB;AACAD,EAAAA,CAAC,CAACD,GAAF;AACH;;AACD,OAAO,IAAMG,SAAS,GAAG,EAAlB;AAEP,OAAO,SAASC,YAAT,CAAsBH,CAAtB,EAAoC;AACvC,SAAO;AACHI,IAAAA,QAAQ,EAAE,CACN;AACIC,MAAAA,EAAE,EAAE,MADR;AAEIC,MAAAA,KAAK,EAAE,MAFX;AAGIC,MAAAA,MAAM,EAAE,MAHZ;AAIIC,MAAAA,IAAI,EAAE,CACF;AACIH,QAAAA,EAAE,EAAE,OADR;AAEII,QAAAA,IAAI,EAAE,SAFV;AAGIC,QAAAA,IAAI,EAAE;AACFC,UAAAA,IAAI,EAAE,MADJ;AAEFC,UAAAA,KAAK,EAAE,CACH;AACIN,YAAAA,KAAK,EAAE,gBADX;AAEIK,YAAAA,IAAI,EAAE,QAFV;AAGIE,YAAAA,OAAO,EAAEb,CAAC,CAACc,IAAF,CAAOC,KAHpB;AAIIC,YAAAA,KAAK,EAAE;AACHC,cAAAA,OAAO,EAAEjB,CAAC,CAACc,IAAF,CAAOI,IADb;AAEHC,cAAAA,QAFG,oBAEMC,CAFN,EAES;AACRpB,gBAAAA,CAAC,CAACc,IAAF,CAAOI,IAAP,GAAcE,CAAd;AACApB,gBAAAA,CAAC,CAACc,IAAF,CAAOA,IAAP,GAAcd,CAAC,CAACc,IAAF,CAAOO,QAAP,CAAgBD,CAAhB,CAAd;AACAlB,gBAAAA,SAAS,CAACoB,UAAV,CAAqBN,KAArB,GAA6BhB,CAAC,CAACc,IAAF,CAAOA,IAAP,CAAYS,UAAZ,CAAuB,CAAvB,CAA7B;AACArB,gBAAAA,SAAS,CAACsB,UAAV,CAAqBR,KAArB,GAA6BhB,CAAC,CAACc,IAAF,CAAOA,IAAP,CAAYS,UAAZ,CAAuB,CAAvB,CAA7B;AACAxB,gBAAAA,GAAG,CAACC,CAAD,CAAH;AACH;AARE;AAJX,WADG,EAgBH;AACIM,YAAAA,KAAK,EAAE,mBADX;AAEIK,YAAAA,IAAI,EAAE,OAFV;AAGIc,YAAAA,GAAG,EAAE,YAHT;AAIIT,YAAAA,KAAK,EAAE;AACHC,cAAAA,OAAO,EAAEjB,CAAC,CAACc,IAAF,CAAOA,IAAP,CAAYS,UAAZ,CAAuB,CAAvB,CADN;AAEHJ,cAAAA,QAFG,oBAEMC,CAFN,EAES;AACRpB,gBAAAA,CAAC,CAACc,IAAF,CAAOA,IAAP,CAAYS,UAAZ,CAAuB,CAAvB,IAA4BG,UAAU,CAACN,CAAD,CAAtC;AACArB,gBAAAA,GAAG,CAACC,CAAD,CAAH;AACH;AALE;AAJX,WAhBG,EA4BH;AACIM,YAAAA,KAAK,EAAE,mBADX;AAEIK,YAAAA,IAAI,EAAE,OAFV;AAGIc,YAAAA,GAAG,EAAE,YAHT;AAIIT,YAAAA,KAAK,EAAE;AACHC,cAAAA,OAAO,EAAEjB,CAAC,CAACc,IAAF,CAAOA,IAAP,CAAYS,UAAZ,CAAuB,CAAvB,CADN;AAEHJ,cAAAA,QAFG,oBAEMC,CAFN,EAES;AACRpB,gBAAAA,CAAC,CAACc,IAAF,CAAOA,IAAP,CAAYS,UAAZ,CAAuB,CAAvB,IAA4BG,UAAU,CAACN,CAAD,CAAtC;AACArB,gBAAAA,GAAG,CAACC,CAAD,CAAH;AACH;AALE;AAJX,WA5BG;AAFL;AAHV,OADE;AAJV,KADM,EAwDNH,sBAAsB,CAACG,CAAD,CAxDhB,EAyDNF,iBAAiB,CAACE,CAAD,CAzDX;AADP,GAAP;AA6DH","sourcesContent":["import { generateGridPlotConfig } from \"oviz-components/grid-plot\";\nimport { EditorDef } from \"utils/editor\";\nimport { generateBoxConfig } from \"viz/boxplot/editor\";\n\nfunction run(v) {\n    v.forceRedraw = true;\n    v.run();\n}\nexport const editorRef = {} as any;\n\nexport function editorConfig(v): EditorDef {\n    return {\n        sections: [\n            {\n                id: \"data\",\n                title: \"Data\",\n                layout: \"tabs\",\n                tabs: [\n                    {\n                        id: \"gData\",\n                        name: \"General\",\n                        view: {\n                            type: \"list\",\n                            items: [\n                                {\n                                    title: \"Taxonomic rank\",\n                                    type: \"select\",\n                                    options: v.data.ranks,\n                                    value: {\n                                        current: v.data.rank,\n                                        callback(d) {\n                                            v.data.rank = d;\n                                            v.data.data = v.data.mainDict[d];\n                                            editorRef.lowerBound.value = v.data.data.valueRange[0];\n                                            editorRef.upperBound.value = v.data.data.valueRange[1];\n                                            run(v);\n                                        },\n                                    },\n                                },\n                                {\n                                    title: \"Range Lower Bound\",\n                                    type: \"input\",\n                                    ref: \"lowerBound\",\n                                    value: {\n                                        current: v.data.data.valueRange[0],\n                                        callback(d) {\n                                            v.data.data.valueRange[0] = parseFloat(d);\n                                            run(v);\n                                        },\n                                    },\n                                },\n                                {\n                                    title: \"Range Upper Bound\",\n                                    type: \"input\",\n                                    ref: \"upperBound\",\n                                    value: {\n                                        current: v.data.data.valueRange[1],\n                                        callback(d) {\n                                            v.data.data.valueRange[1] = parseFloat(d);\n                                            run(v);\n                                        },\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                ],\n            },\n            generateGridPlotConfig(v),\n            generateBoxConfig(v),\n        ],\n    };\n}\n"]},"metadata":{},"sourceType":"module"}