{"ast":null,"code":"import Vue from '../../utils/vue';\nimport { mergeData } from 'vue-functional-data-merge';\nexport var props = {\n  id: {\n    type: String // default: null\n\n  },\n  tag: {\n    type: String,\n    \"default\": 'div'\n  },\n  tooltip: {\n    type: Boolean,\n    \"default\": false\n  },\n  forceShow: {\n    type: Boolean,\n    \"default\": false\n  },\n  state: {\n    // Tri-state prop: `true`, `false`, or `null`\n    type: Boolean,\n    \"default\": null\n  },\n  ariaLive: {\n    type: String // default: null\n\n  },\n  role: {\n    type: String // default: null\n\n  }\n}; // @vue/component\n\nexport var BFormValidFeedback = /*#__PURE__*/Vue.extend({\n  name: 'BFormValidFeedback',\n  functional: true,\n  props: props,\n  render: function render(h, _ref) {\n    var props = _ref.props,\n        data = _ref.data,\n        children = _ref.children;\n    var show = props.forceShow === true || props.state === true;\n    return h(props.tag, mergeData(data, {\n      \"class\": {\n        'valid-feedback': !props.tooltip,\n        'valid-tooltip': props.tooltip,\n        'd-block': show\n      },\n      attrs: {\n        id: props.id || null,\n        role: props.role || null,\n        'aria-live': props.ariaLive || null,\n        'aria-atomic': props.ariaLive ? 'true' : null\n      }\n    }), children);\n  }\n});","map":null,"metadata":{},"sourceType":"module"}