{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport Vue from '../../utils/vue';\nimport { mergeData } from 'vue-functional-data-merge';\nexport var props = {\n  tag: {\n    type: String,\n    \"default\": 'div'\n  },\n  fluid: {\n    // String breakpoint name new in Bootstrap v4.4.x\n    type: [Boolean, String],\n    \"default\": false\n  }\n}; // @vue/component\n\nexport var BContainer = /*#__PURE__*/Vue.extend({\n  name: 'BContainer',\n  functional: true,\n  props: props,\n  render: function render(h, _ref) {\n    var props = _ref.props,\n        data = _ref.data,\n        children = _ref.children;\n    return h(props.tag, mergeData(data, {\n      \"class\": _defineProperty({\n        container: !(props.fluid || props.fluid === ''),\n        'container-fluid': props.fluid === true || props.fluid === ''\n      }, \"container-\".concat(props.fluid), props.fluid && props.fluid !== true)\n    }), children);\n  }\n});","map":null,"metadata":{},"sourceType":"module"}