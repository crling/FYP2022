{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n        Component {\\n            @props prop\\n            @expr console.log(\\\"prop\\\",prop)\\n            @if prop.plot == true{\\n                @for (line, i) in prop.chrom_data {\\n                    Text{\\n                        x = i*prop.width/6+prop.width/150*11; y = 0;\\n                        text = i+1\\n                    }\\n                    Rect {\\n                        x = i*prop.width/6+prop.width/15; y = prop.height/30;\\n                        width = prop.width/50 ; height = prop.length[i]*line.each_step\\n                        cornerRadius = 30\\n                        fill = \\\"none\\\"\\n                        stroke = \\\"black\\\"\\n                    }\\n                    @for (item,index) in line.value {\\n                        @let temp_h = item.position*line.each_step;\\n                        //@expr console.log(\\\"temp_h\\\",temp_h);\\n                        @let re_h = item.re_position*line.each_step;\\n                        Line {\\n                            x1 = i*prop.width/6+prop.width/15; y1 = temp_h+prop.height/30;\\n                            x2 = i*prop.width/6+prop.width/150*13; y2= temp_h+prop.height/30;\\n                        }\\t\\n                        Text{\\n                            anchor = @anchor(\\\"middle\\\",\\\"right\\\")\\n                            x= i*prop.width/6+prop.width/150*8; y = re_h+prop.height/30;\\n                            text = item.position\\n                        }\\n                        Line {\\n                            x1 = i*prop.width/6+prop.width/15;y1 = temp_h+prop.height/30;\\n                            x2 = i*prop.width/6+prop.width/150*8; y2 = re_h+prop.height/30;\\n                        }\\n                        Text{\\n                            anchor = @anchor(\\\"middle\\\",\\\"left\\\")\\n                            x= i*prop.width/6+prop.width/10; y = re_h+prop.height/30\\n                            text = item.gene_name\\n                        }\\n                        Line {\\n                            x1 = i*prop.width/6+prop.width/150*13;y1 = temp_h+prop.height/30;\\n                            x2 = i*prop.width/6+prop.width/10; y2 = re_h+prop.height/30;\\n                        }\\n                    }\\n            }\\n            }\\n            @elsif prop.plot == false {\\n                Line {\\n                   x1 = 5 ; y1 = prop.height/30+20\\n                   x2 = 5 ; y2 = prop.height/30+20+prop.maxruler*1000000*prop.chrom_data[0].each_step;\\n                   }\\n                   Text {\\n                   x = 5 ; y = prop.height/30+20+prop.maxruler*1000000*prop.chrom_data[0].each_step +10;\\n                   text = \\\"M\\\"\\n                   fontSize = 20\\n                   }\\n                   @for (item,index) in prop.ruler{\\n                   @if index % 5 == 0 {\\n                   Line{\\n                   x1 = 5; y1 = prop.height/30+20 + item*1000000*prop.chrom_data[0].each_step;\\n                   x2 = 25 ; y2 = prop.height/30+20 + item*1000000*prop.chrom_data[0].each_step;\\n                   }\\n                   Text {\\n                   x = 30 ; y  = prop.height/30+20 + item*1000000*prop.chrom_data[0].each_step -5;\\n                   text = item ;\\n                   }\\n                   }\\n                   @else{\\n                   Line{\\n                   x1 = 5; y1 = prop.height/30+20 + item*1000000*prop.chrom_data[0].each_step;\\n                   x2 = 15 ; y2 = prop.height/30+20 + item*1000000*prop.chrom_data[0].each_step;\\n                   }\\n                   }\\n                   }\\n                    @for (line, i) in prop.chrom_data{\\n                    Text{\\n                        x = i*prop.width/6+prop.width/150*11; y = 0;\\n                        text = i+1\\n                        fontSize = 18\\n                    }\\n                    Rect {\\n                    anchor = @anchor(\\\"top\\\",\\\"left\\\")\\n                        x = i*prop.width/6+prop.width/15; y = prop.height/30+20;\\n                        width = prop.width/50 ; height = prop.length[i]*line.each_step\\n                        cornerRadius = 30\\n                        fill = \\\"black\\\"\\n                        stroke = \\\"black\\\"\\n                    }\\n                    Text{\\n                    anchor = @anchor(\\\"middle\\\",\\\"left\\\")\\n                    x= i*prop.width/6+prop.width/10; y = prop.height/30+20\\n                    text = \\\"0.0\\\"\\n                    fontSize = 14\\n                    }\\n                    Line {\\n                    x1 = i*prop.width/6+prop.width/15+prop.width/100; y1 = prop.height/30+20;\\n                    x2 = i*prop.width/6+prop.width/10; y2 = prop.height/30+20;\\n                    }\\n                    Text{\\n                    anchor = @anchor(\\\"middle\\\",\\\"left\\\")\\n                    x= i*prop.width/6+prop.width/10; y = prop.height/30+20+line.endpl*line.each_step\\n                    text = line.length\\n                    fontSize = 14\\n                    }\\n                    Line {\\n                    x1 = i*prop.width/6+prop.width/15+prop.width/100; y1 = prop.height/30+20+prop.length[i]*line.each_step;\\n                    x2 = i*prop.width/6+prop.width/10; y2 = prop.height/30+20+line.endpl*line.each_step;\\n                    }\\n                    @for (item,index) in line.value {\\n                    @let temp_h = item.position*line.each_step;\\n                    //@expr console.log(\\\"temp_h\\\",temp_h);\\n                    @let re_h = item.re_position*line.each_step;\\n                    Text{\\n                    anchor = @anchor(\\\"middle\\\",\\\"left\\\")\\n                    x= i*prop.width/6+prop.width/10; y = re_h+prop.height/30+20\\n                    text = item.gene_name\\n                    }\\n                    Line {\\n                    x1 = i*prop.width/6+prop.width/15+prop.width/100; y1 = temp_h+prop.height/30+20;\\n                    x2 = i*prop.width/6+prop.width/10; y2 = re_h+prop.height/30+20;\\n                    }\\n                    }\\n                    }\\n                }\\n                    }\\n        \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport { Component } from \"crux/dist/element\";\nexport var FYPPlot = /*#__PURE__*/function (_Component) {\n  _inherits(FYPPlot, _Component);\n\n  var _super = _createSuper(FYPPlot);\n\n  function FYPPlot() {\n    _classCallCheck(this, FYPPlot);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(FYPPlot, [{\n    key: \"render\",\n    value: function render() {\n      return this.t(_templateObject());\n    }\n  }, {\n    key: \"defaultProp\",\n    value: function defaultProp() {\n      return _objectSpread(_objectSpread({}, _get(_getPrototypeOf(FYPPlot.prototype), \"defaultProp\", this).call(this)), {}, {\n        width: 1500,\n        //有关\n        height: 600\n      });\n    }\n  }]);\n\n  return FYPPlot;\n}(Component);","map":{"version":3,"sources":["/Users/wangzhenyu/Desktop/fyp_workspace/meta_platform/app/javascript/oviz-components/FYP1.ts"],"names":["Component","FYPPlot","t","width","height"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAASA,SAAT,QAAwC,mBAAxC;AAqBA,WAAaC,OAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAEoB;AACZ,aAAO,KAAKC,CAAZ;AA8HH;AAjIL;AAAA;AAAA,kCAoIyB;AACjB;AAEIC,QAAAA,KAAK,EAAG,IAFZ;AAEkB;AACdC,QAAAA,MAAM,EAAG;AAHb;AAKH;AA1IL;;AAAA;AAAA,EAA6BJ,SAA7B","sourcesContent":["\nimport { Component, XYPlotOption } from \"crux/dist/element\";\n\nexport interface FYPPlotOption extends XYPlotOption{\n    xLabel: string;\n    yLabel: string;\n    plotSize: [number, number]; // [width, height]\n    legend: any;\n    discreteCategory: boolean;\n    yAxisRotated: boolean;\n    xAxisRotated: boolean;\n    labelOffsetVer: number;\n    labelOffsetHor: number;\n    labelFontSize: number;\n    tickFontSize: number;\n\n    rowLine: boolean;\n    columnLine: boolean;\n\n\n}\n\nexport class FYPPlot extends Component<FYPPlotOption> {\n\n    public render() {\n        return this.t`\n        Component {\n            @props prop\n            @expr console.log(\"prop\",prop)\n            @if prop.plot == true{\n                @for (line, i) in prop.chrom_data {\n                    Text{\n                        x = i*prop.width/6+prop.width/150*11; y = 0;\n                        text = i+1\n                    }\n                    Rect {\n                        x = i*prop.width/6+prop.width/15; y = prop.height/30;\n                        width = prop.width/50 ; height = prop.length[i]*line.each_step\n                        cornerRadius = 30\n                        fill = \"none\"\n                        stroke = \"black\"\n                    }\n                    @for (item,index) in line.value {\n                        @let temp_h = item.position*line.each_step;\n                        //@expr console.log(\"temp_h\",temp_h);\n                        @let re_h = item.re_position*line.each_step;\n                        Line {\n                            x1 = i*prop.width/6+prop.width/15; y1 = temp_h+prop.height/30;\n                            x2 = i*prop.width/6+prop.width/150*13; y2= temp_h+prop.height/30;\n                        }\t\n                        Text{\n                            anchor = @anchor(\"middle\",\"right\")\n                            x= i*prop.width/6+prop.width/150*8; y = re_h+prop.height/30;\n                            text = item.position\n                        }\n                        Line {\n                            x1 = i*prop.width/6+prop.width/15;y1 = temp_h+prop.height/30;\n                            x2 = i*prop.width/6+prop.width/150*8; y2 = re_h+prop.height/30;\n                        }\n                        Text{\n                            anchor = @anchor(\"middle\",\"left\")\n                            x= i*prop.width/6+prop.width/10; y = re_h+prop.height/30\n                            text = item.gene_name\n                        }\n                        Line {\n                            x1 = i*prop.width/6+prop.width/150*13;y1 = temp_h+prop.height/30;\n                            x2 = i*prop.width/6+prop.width/10; y2 = re_h+prop.height/30;\n                        }\n                    }\n            }\n            }\n            @elsif prop.plot == false {\n                Line {\n                   x1 = 5 ; y1 = prop.height/30+20\n                   x2 = 5 ; y2 = prop.height/30+20+prop.maxruler*1000000*prop.chrom_data[0].each_step;\n                   }\n                   Text {\n                   x = 5 ; y = prop.height/30+20+prop.maxruler*1000000*prop.chrom_data[0].each_step +10;\n                   text = \"M\"\n                   fontSize = 20\n                   }\n                   @for (item,index) in prop.ruler{\n                   @if index % 5 == 0 {\n                   Line{\n                   x1 = 5; y1 = prop.height/30+20 + item*1000000*prop.chrom_data[0].each_step;\n                   x2 = 25 ; y2 = prop.height/30+20 + item*1000000*prop.chrom_data[0].each_step;\n                   }\n                   Text {\n                   x = 30 ; y  = prop.height/30+20 + item*1000000*prop.chrom_data[0].each_step -5;\n                   text = item ;\n                   }\n                   }\n                   @else{\n                   Line{\n                   x1 = 5; y1 = prop.height/30+20 + item*1000000*prop.chrom_data[0].each_step;\n                   x2 = 15 ; y2 = prop.height/30+20 + item*1000000*prop.chrom_data[0].each_step;\n                   }\n                   }\n                   }\n                    @for (line, i) in prop.chrom_data{\n                    Text{\n                        x = i*prop.width/6+prop.width/150*11; y = 0;\n                        text = i+1\n                        fontSize = 18\n                    }\n                    Rect {\n                    anchor = @anchor(\"top\",\"left\")\n                        x = i*prop.width/6+prop.width/15; y = prop.height/30+20;\n                        width = prop.width/50 ; height = prop.length[i]*line.each_step\n                        cornerRadius = 30\n                        fill = \"black\"\n                        stroke = \"black\"\n                    }\n                    Text{\n                    anchor = @anchor(\"middle\",\"left\")\n                    x= i*prop.width/6+prop.width/10; y = prop.height/30+20\n                    text = \"0.0\"\n                    fontSize = 14\n                    }\n                    Line {\n                    x1 = i*prop.width/6+prop.width/15+prop.width/100; y1 = prop.height/30+20;\n                    x2 = i*prop.width/6+prop.width/10; y2 = prop.height/30+20;\n                    }\n                    Text{\n                    anchor = @anchor(\"middle\",\"left\")\n                    x= i*prop.width/6+prop.width/10; y = prop.height/30+20+line.endpl*line.each_step\n                    text = line.length\n                    fontSize = 14\n                    }\n                    Line {\n                    x1 = i*prop.width/6+prop.width/15+prop.width/100; y1 = prop.height/30+20+prop.length[i]*line.each_step;\n                    x2 = i*prop.width/6+prop.width/10; y2 = prop.height/30+20+line.endpl*line.each_step;\n                    }\n                    @for (item,index) in line.value {\n                    @let temp_h = item.position*line.each_step;\n                    //@expr console.log(\"temp_h\",temp_h);\n                    @let re_h = item.re_position*line.each_step;\n                    Text{\n                    anchor = @anchor(\"middle\",\"left\")\n                    x= i*prop.width/6+prop.width/10; y = re_h+prop.height/30+20\n                    text = item.gene_name\n                    }\n                    Line {\n                    x1 = i*prop.width/6+prop.width/15+prop.width/100; y1 = temp_h+prop.height/30+20;\n                    x2 = i*prop.width/6+prop.width/10; y2 = re_h+prop.height/30+20;\n                    }\n                    }\n                    }\n                }\n                    }\n        `;\n    }\n\n\n    public defaultProp() {\n        return {\n            ...super.defaultProp(),\n            width : 1500, //有关\n            height : 600,\n        };\n    }\n\n    \n\n}\n"]},"metadata":{},"sourceType":"module"}