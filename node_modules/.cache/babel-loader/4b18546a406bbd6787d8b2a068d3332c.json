{"ast":null,"code":"function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if ((typeof Reflect === \"undefined\" ? \"undefined\" : _typeof(Reflect)) === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Component } from \"../component\";\nimport { scaleLinear } from \"d3-scale\";\nimport { useTemplate } from \"../../ext/decorator\";\n\nvar Brush =\n/** @class */\nfunction () {\n  var Brush = /*#__PURE__*/function (_Component) {\n    _inherits(Brush, _Component);\n\n    var _super = _createSuper(Brush);\n\n    function Brush() {\n      var _this;\n\n      _classCallCheck(this, Brush);\n\n      _this = _super.apply(this, arguments);\n      _this._shouldUpdateRangeNextTime = false;\n      _this._width = -1;\n      _this._height = -1;\n      _this._isMoving = false;\n      _this._lastX = 0;\n      _this.state = {\n        brushL: 0,\n        brushR: 0\n      };\n      return _this;\n    }\n\n    _createClass(Brush, [{\n      key: \"defaultProp\",\n      value: function defaultProp() {\n        return Object.assign(Object.assign({}, _get(_getPrototypeOf(Brush.prototype), \"defaultProp\", this).call(this)), {\n          cornerRadius: 0\n        });\n      }\n    }, {\n      key: \"didCreate\",\n      value: function didCreate() {\n        var _this2 = this;\n\n        this._brushScale = scaleLinear().range(this.prop.range);\n\n        this._bodyUpListener = function (e) {\n          return _this2.handleUp(e);\n        };\n\n        this._bodyMoveListener = function (e) {\n          return _this2.handleMove(e);\n        };\n      }\n    }, {\n      key: \"didLayout\",\n      value: function didLayout() {\n        var w = this.$geometry.width;\n        var h = this.$geometry.height;\n\n        if (this._width !== w || this._height !== h) {\n          var lValue, rValue;\n\n          if (!this._firstRender) {\n            lValue = this._brushScale(this.state.brushL);\n            rValue = this._brushScale(this.state.brushR);\n          }\n\n          this._brushScale.domain([0, w]);\n\n          if (this.prop.initialRange) {\n            this._setCurrentRange.apply(this, _toConsumableArray(this.prop.initialRange));\n          } else if (this._firstRender) {\n            this.state.brushL = 0;\n            this.state.brushR = w;\n          } else {\n            this._setCurrentRange(lValue, rValue);\n          }\n\n          this._width = w;\n          this._height = h;\n        }\n\n        if (this.prop.currentRange) {\n          this._setCurrentRange.apply(this, _toConsumableArray(this.prop.currentRange));\n        }\n      }\n    }, {\n      key: \"willRender\",\n      value: function willRender() {\n        if (this._shouldUpdateRangeNextTime) {\n          this._brushScale.range(this.prop.range);\n\n          this.state.brushL = 0;\n          this.state.brushR = this._brushScale.domain()[1];\n          this._shouldUpdateRangeNextTime = false;\n        }\n      }\n    }, {\n      key: \"_setCurrentRange\",\n      value: function _setCurrentRange(l, r) {\n        var i = this._brushScale.invert;\n        this.state.brushL = i(l);\n        this.state.brushR = i(r);\n      }\n    }, {\n      key: \"reset\",\n      value: function reset() {\n        this._shouldUpdateRangeNextTime = true;\n        this._width = -1;\n        this._height = -1;\n      }\n    }, {\n      key: \"setCurrentRange\",\n      value: function setCurrentRange(l, r) {\n        var draw = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n        this._setCurrentRange(l, r);\n\n        if (draw) this.draw();\n      }\n    }, {\n      key: \"setRange\",\n      value: function setRange(l, r) {\n        this._brushScale.range([l, r]);\n\n        this.state.brushL = 0;\n        this.state.brushR = this._brushScale.domain()[1];\n        this.draw();\n      } // @ts-ignore\n\n    }, {\n      key: \"brushX\",\n      value: function brushX() {\n        return this.state.brushL;\n      } // @ts-ignore\n\n    }, {\n      key: \"brushY\",\n      value: function brushY() {\n        return 0;\n      } // @ts-ignore\n\n    }, {\n      key: \"brushWidth\",\n      value: function brushWidth() {\n        return this.state.brushR - this.state.brushL;\n      } // @ts-ignore\n\n    }, {\n      key: \"brushHeight\",\n      value: function brushHeight() {\n        return this.$geometry.height;\n      } // @ts-ignore\n\n    }, {\n      key: \"handleDown\",\n      value: function handleDown(e, type) {\n        var _this3 = this;\n\n        this._isMoving = true;\n        this._moveType = type;\n        this._lastX = e.clientX;\n        e.preventDefault();\n        e.stopPropagation();\n        document.body.addEventListener(\"mouseup\", this._bodyUpListener);\n        document.body.addEventListener(\"mousemove\", this._bodyMoveListener);\n        this.$v.transaction(function () {\n          _this3._callListener(\"onBrushStart\");\n        });\n      }\n    }, {\n      key: \"handleUp\",\n      value: function handleUp(e) {\n        var _this4 = this;\n\n        this._isMoving = false;\n        e.preventDefault();\n        e.stopPropagation();\n        document.body.removeEventListener(\"mouseup\", this._bodyUpListener);\n        document.body.removeEventListener(\"mousemove\", this._bodyUpListener);\n        this.$v.transaction(function () {\n          _this4._callListener(\"onBrushEnd\");\n        });\n      }\n    }, {\n      key: \"handleMove\",\n      value: function handleMove(e) {\n        var _this5 = this;\n\n        if (!this._isMoving) return;\n        e.preventDefault();\n        e.stopPropagation();\n        var offset = e.clientX - this._lastX;\n        this._lastX = e.clientX;\n        if (offset === 0) return;\n        var l = this.state.brushL + offset;\n        var r = this.state.brushR + offset;\n        this.$v.transaction(function () {\n          switch (_this5._moveType) {\n            case 0:\n              if (l < 0 || l >= _this5.state.brushR) return;\n\n              _this5.setState({\n                brushL: l\n              });\n\n              break;\n\n            case 1:\n              if (r <= _this5.state.brushL || r > _this5.$geometry.width) return;\n\n              _this5.setState({\n                brushR: r\n              });\n\n              break;\n\n            case 2:\n              if (l < 0 || r > _this5.$geometry.width) return;\n\n              _this5.setState({\n                brushL: l,\n                brushR: r\n              });\n\n              break;\n          }\n\n          _this5._callListener(\"onBrushUpdate\");\n        });\n      }\n    }, {\n      key: \"_callListener\",\n      value: function _callListener(name) {\n        if (this.prop[name]) this.prop[name].call(null, this.dataRange);\n      }\n    }, {\n      key: \"dataRange\",\n      get: function get() {\n        return [this._brushScale(this.state.brushL), this._brushScale(this.state.brushR)];\n      }\n    }]);\n\n    return Brush;\n  }(Component);\n\n  Brush = __decorate([useTemplate(\"\\n    Component {\\n        @let x = brushX()\\n        @let y = brushY()\\n        @let w = brushWidth()\\n        @let h = brushHeight()\\n\\n        Rect {\\n            x = 0; y = 0; width = 100%; height = 100%\\n            fill = \\\"rgba(0,0,0,0)\\\"\\n        }\\n        Rect {\\n            ref = \\\"mainBrush\\\"\\n            x = x\\n            y = y\\n            width = w\\n            height = h\\n            fill = \\\"rgba(200,200,200,.4)\\\"\\n            stroke = \\\"rgba(20,20,20,.6)\\\"\\n            cornerRadius = prop.cornerRadius\\n            cursor = \\\"move\\\"\\n            on:mousedown = (ev) => handleDown(ev, 2)\\n            @props prop.opt.brush\\n        }\\n        Rect {\\n            ref = \\\"leftHandle\\\"\\n            x = x - 3\\n            width = 6\\n            height = 100%\\n            fill = \\\"rgba(0,0,0,0)\\\"\\n            cursor = \\\"ew-resize\\\"\\n            on:mousedown = (ev) => handleDown(ev, 0)\\n            @props prop.opt.leftHandle\\n        }\\n        Rect {\\n            ref = \\\"rightHandle\\\"\\n            x = x + w - 3\\n            width = 6\\n            height = 100%\\n            fill = \\\"rgba(0,0,0,0)\\\"\\n            cursor = \\\"ew-resize\\\"\\n            on:mousedown = (ev) => handleDown(ev, 1)\\n            @props prop.opt.rightHandle\\n        }\\n    }\\n\")], Brush);\n  return Brush;\n}();\n\nexport { Brush };","map":null,"metadata":{},"sourceType":"module"}