{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n} // Mixin for providing stacked tables\n\n\nexport default {\n  props: {\n    stacked: {\n      type: [Boolean, String],\n      \"default\": false\n    }\n  },\n  computed: {\n    isStacked: function isStacked() {\n      // `true` when always stacked, or returns breakpoint specified\n      return this.stacked === '' ? true : this.stacked;\n    },\n    isStackedAlways: function isStackedAlways() {\n      return this.isStacked === true;\n    },\n    stackedTableClasses: function stackedTableClasses() {\n      return _defineProperty({\n        'b-table-stacked': this.isStackedAlways\n      }, \"b-table-stacked-\".concat(this.stacked), !this.isStackedAlways && this.isStacked);\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}