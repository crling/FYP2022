{"ast":null,"code":"import Oviz from \"crux\";\nimport { editorConfig } from \"./editor\";\nimport template from \"./template.bvt\";\nimport { DiscreteHeatMap } from './discrete-heatmap';\nimport { register } from \"page/visualizers\";\nimport { registerEditorConfig } from \"utils/editor\";\nvar MODULE_NAME = \"discrete-heatmap\";\nvar defaultValues = [0, 0.5, 1];\nvar defaultInfo = [\"did not use drug\", \"unknown\", \"used drug\"];\nvar DiscreteHeatmap = {\n  initViz: initViz,\n  initVizWithDeepomics: initVizWithDeepomics\n};\n\nfunction init() {\n  if (window.gon.module_name !== MODULE_NAME) return;\n\n  var _initViz = initViz(),\n      vizOpts = _initViz.vizOpts;\n\n  Oviz.visualize(vizOpts);\n}\n\nfunction initViz() {\n  var vizOpts = {\n    el: \"#canvas\",\n    template: template,\n    components: {\n      DiscreteHeatMap: DiscreteHeatMap\n    },\n    data: {\n      config: {\n        colLabelRotation: 90\n      },\n      values: defaultValues,\n      valueMap: genDefaultValueMap(),\n      colors: [\"white\", \"#C7C7C7\", \"red\"]\n    },\n    loadData: {\n      heatmapDataD: {\n        fileKey: 'heatmapDataD',\n        type: \"tsv\",\n        multiple: true,\n        loaded: function loaded(d) {\n          var values = [];\n          d = d.map(function (sample) {\n            var rows = [];\n            var data = [];\n            sample.forEach(function (row) {\n              var r = [];\n              rows.push(row[\"\"]);\n              sample.columns.forEach(function (k) {\n                if (k !== \"\") {\n                  r.push(parseFloat(row[k]));\n                  if (!values.includes(parseFloat(row[k]))) values.push(parseFloat(row[k]));\n                }\n              });\n              data.push(r);\n            });\n            return {\n              rows: rows,\n              columns: sample.columns.splice(1, sample.columns.length),\n              data: data\n            };\n          });\n          this.data.values = values.sort();\n          return d;\n        }\n      }\n    },\n    setup: function setup() {\n      registerEditorConfig(editorConfig(this));\n    }\n  };\n  return {\n    vizOpts: vizOpts\n  };\n}\n\nfunction initVizWithDeepomics(fileDefs) {}\n\nfunction genDefaultValueMap() {\n  var valueMap = new Map();\n  valueMap.set(0, \"did not use drug\");\n  valueMap.set(1, \"used drug\");\n  valueMap.set(0.5, \"uknown\");\n  return valueMap;\n}\n\nexport default DiscreteHeatmap;\nregister(MODULE_NAME, init);","map":{"version":3,"sources":["/Users/wangzhenyu/Desktop/fyp_workspace/meta_platform/app/javascript/viz/discrete-heatmap/index.ts"],"names":["Oviz","editorConfig","template","DiscreteHeatMap","register","registerEditorConfig","MODULE_NAME","defaultValues","defaultInfo","DiscreteHeatmap","initViz","initVizWithDeepomics","init","window","gon","module_name","vizOpts","visualize","el","components","data","config","colLabelRotation","values","valueMap","genDefaultValueMap","colors","loadData","heatmapDataD","fileKey","type","multiple","loaded","d","map","sample","rows","forEach","row","r","push","columns","k","parseFloat","includes","splice","length","sort","setup","fileDefs","Map","set"],"mappings":"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","sourcesContent":["import Oviz from \"crux\"\n\nimport { editorConfig } from \"./editor\";\nimport template from \"./template.bvt\"\nimport {DiscreteHeatMap} from './discrete-heatmap'\nimport {register} from \"page/visualizers\";\nimport { registerEditorConfig } from \"utils/editor\";\n\nconst MODULE_NAME = \"discrete-heatmap\"\nconst defaultValues = [0, 0.5, 1];\nconst defaultInfo = [\"did not use drug\", \"unknown\", \"used drug\"];\n\nconst DiscreteHeatmap = {\n    initViz,\n    initVizWithDeepomics\n}\n\nfunction init() {\n    if (window.gon.module_name !== MODULE_NAME) return;\n    const {vizOpts} = initViz();\n    Oviz.visualize(vizOpts);\n}\n\nfunction initViz(): any {\n    const vizOpts = {\n        el:\"#canvas\",\n        template,\n        components: {DiscreteHeatMap},\n        data: {\n            config: {\n                colLabelRotation: 90,\n            },\n            values : defaultValues,\n            valueMap: genDefaultValueMap(),\n            colors: [\"white\", \"#C7C7C7\", \"red\"],\n        },\n        loadData: {\n            heatmapDataD: {\n                fileKey: 'heatmapDataD',                  \n                type: \"tsv\",\n                multiple: true,\n                loaded(d) {\n                    const values = [];\n                    d = d.map(sample => {\n                        const rows = [];\n                        const data = [];\n                        sample.forEach(row => {\n                            const r = [];\n                            rows.push(row[\"\"]);\n                            sample.columns.forEach(k => {\n                                if (k !== \"\") {\n                                    r.push(parseFloat(row[k]));\n                                    if (!values.includes(parseFloat(row[k])))\n                                        values.push(parseFloat(row[k]));\n                                }\n                            });\n                            data.push(r);\n                        });\n                        return {rows, columns: sample.columns.splice(1, sample.columns.length), data};\n                    });\n                    this.data.values = values.sort();\n                    return d;\n                },\n            },\n        },\n        setup() {\n            registerEditorConfig(editorConfig(this));\n        }\n    };\n    return {vizOpts};\n}\n\nfunction initVizWithDeepomics(fileDefs) {\n    \n}\n\nfunction genDefaultValueMap() {\n    const valueMap = new Map();\n    valueMap.set(0, \"did not use drug\");\n    valueMap.set(1, \"used drug\");\n    valueMap.set(0.5, \"uknown\");\n    return valueMap;\n}\n\nexport default DiscreteHeatmap;\n\nregister(MODULE_NAME, init);\n\n"]},"metadata":{},"sourceType":"module"}