{"ast":null,"code":"$(window).unload(function () {\n  $.rails.enableFormElements($($.rails.formSubmitSelector));\n});\n$.fn.dataTable.ext.errMode = 'throw';\n$(function () {\n  var ids = [];\n  var table = $('.display').DataTable({\n    bJQueryUI: true,\n    columnDefs: [{\n      targets: 0,\n      orderable: false,\n      className: 'select-checkbox',\n      checkboxes: {\n        selectRow: true\n      }\n    }, {\n      targets: -1,\n      orderable: false\n    }],\n    scrollX: true\n  }); // $('.s_table_sub').on(\"click\", function(e){\n  //   var form = this;\n  //   var selected_ids = Array.from(ids)\n  //   // Iterate over all selected checkboxes\n  //   $.each(selected_ids, function(index, id){\n  //     // Create a hidden element\n  //     $(form).append(\n  //       $('<input>')\n  //         .attr('type', 'hidden')\n  //         .attr('name', 'sample_ids[]')\n  //         .val(id)\n  //     );\n  //   });\n  //   console.log(\"submitting\");\n  // });\n\n  $('button.toggle-vis').on('click', function (e) {\n    e.preventDefault();\n    $(this).toggleClass('clicked'); // Get the column API object\n\n    var column = table.column($(this).attr('data-column')); // Toggle the visibility\n\n    column.visible(!column.visible());\n  });\n});\n\nfunction toggle_checkall(field_name, state) {\n  var checkboxes = document.getElementsByTagName('input');\n  var count = checkboxes.length;\n\n  for (var i = 0; i < count; i++) {\n    if (checkboxes[i].type == \"checkbox\" && checkboxes[i].name == field_name + \"_ids[]\") {\n      checkboxes[i].checked = state;\n    }\n  }\n}","map":{"version":3,"sources":["/Users/wangzhenyu/Desktop/fyp_workspace/meta_platform/app/javascript/packs/table_style.js"],"names":["$","window","unload","rails","enableFormElements","formSubmitSelector","fn","dataTable","ext","errMode","ids","table","DataTable","bJQueryUI","columnDefs","targets","orderable","className","checkboxes","selectRow","scrollX","on","e","preventDefault","toggleClass","column","attr","visible","toggle_checkall","field_name","state","document","getElementsByTagName","count","length","i","type","name","checked"],"mappings":"AAAAA,CAAC,CAACC,MAAD,CAAD,CAAUC,MAAV,CAAiB,YAAW;AACxBF,EAAAA,CAAC,CAACG,KAAF,CAAQC,kBAAR,CAA2BJ,CAAC,CAACA,CAAC,CAACG,KAAF,CAAQE,kBAAT,CAA5B;AACD,CAFH;AAIEL,CAAC,CAACM,EAAF,CAAKC,SAAL,CAAeC,GAAf,CAAmBC,OAAnB,GAA6B,OAA7B;AAEFT,CAAC,CAAC,YAAY;AACZ,MAAIU,GAAG,GAAG,EAAV;AACA,MAAIC,KAAK,GAAGX,CAAC,CAAC,UAAD,CAAD,CAAcY,SAAd,CAAwB;AAClCC,IAAAA,SAAS,EAAE,IADuB;AAElCC,IAAAA,UAAU,EAAE,CAAC;AACXC,MAAAA,OAAO,EAAE,CADE;AAEXC,MAAAA,SAAS,EAAE,KAFA;AAGXC,MAAAA,SAAS,EAAE,iBAHA;AAIXC,MAAAA,UAAU,EAAE;AACVC,QAAAA,SAAS,EAAE;AADD;AAJD,KAAD,EAQZ;AACEJ,MAAAA,OAAO,EAAE,CAAC,CADZ;AAEEC,MAAAA,SAAS,EAAE;AAFb,KARY,CAFsB;AAclCI,IAAAA,OAAO,EAAE;AAdyB,GAAxB,CAAZ,CAFY,CAmBZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEApB,EAAAA,CAAC,CAAC,mBAAD,CAAD,CAAuBqB,EAAvB,CAA2B,OAA3B,EAAoC,UAAUC,CAAV,EAAa;AAC/CA,IAAAA,CAAC,CAACC,cAAF;AACAvB,IAAAA,CAAC,CAAC,IAAD,CAAD,CAAQwB,WAAR,CAAoB,SAApB,EAF+C,CAG/C;;AACA,QAAIC,MAAM,GAAGd,KAAK,CAACc,MAAN,CAAczB,CAAC,CAAC,IAAD,CAAD,CAAQ0B,IAAR,CAAa,aAAb,CAAd,CAAb,CAJ+C,CAK/C;;AACAD,IAAAA,MAAM,CAACE,OAAP,CAAgB,CAAEF,MAAM,CAACE,OAAP,EAAlB;AACD,GAPD;AASD,CA5CA,CAAD;;AA8CA,SAASC,eAAT,CAAyBC,UAAzB,EAAqCC,KAArC,EAA4C;AACxC,MAAIZ,UAAU,GAAGa,QAAQ,CAACC,oBAAT,CAA8B,OAA9B,CAAjB;AACA,MAAIC,KAAK,GAAGf,UAAU,CAACgB,MAAvB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAApB,EAA2BE,CAAC,EAA5B,EAAgC;AAC9B,QAAIjB,UAAU,CAACiB,CAAD,CAAV,CAAcC,IAAd,IAAsB,UAAtB,IACGlB,UAAU,CAACiB,CAAD,CAAV,CAAcE,IAAd,IAAsBR,UAAU,GAAG,QAD1C,EACoD;AAClDX,MAAAA,UAAU,CAACiB,CAAD,CAAV,CAAcG,OAAd,GAAwBR,KAAxB;AACD;AACF;AACJ","sourcesContent":["$(window).unload(function() {\n    $.rails.enableFormElements($($.rails.formSubmitSelector));\n  });\n\n  $.fn.dataTable.ext.errMode = 'throw';\n\n$(function () { \n  var ids = [];\n  var table = $('.display').DataTable({\n    bJQueryUI: true,\n    columnDefs: [{\n      targets: 0,\n      orderable: false, \n      className: 'select-checkbox',\n      checkboxes: {\n        selectRow: true\n      } \n    },\n    {\n      targets: -1,\n      orderable: false, \n    }],\n    scrollX: true\n  }); \n\n  // $('.s_table_sub').on(\"click\", function(e){\n  //   var form = this;\n  //   var selected_ids = Array.from(ids)\n  //   // Iterate over all selected checkboxes\n  //   $.each(selected_ids, function(index, id){\n  //     // Create a hidden element\n  //     $(form).append(\n  //       $('<input>')\n  //         .attr('type', 'hidden')\n  //         .attr('name', 'sample_ids[]')\n  //         .val(id)\n  //     );\n  //   });\n  //   console.log(\"submitting\");\n  // });\n\n  $('button.toggle-vis').on( 'click', function (e) {\n    e.preventDefault();\n    $(this).toggleClass('clicked');\n    // Get the column API object\n    var column = table.column( $(this).attr('data-column') );\n    // Toggle the visibility\n    column.visible( ! column.visible() );\n  });\n\n});\n\nfunction toggle_checkall(field_name, state) {\n    var checkboxes = document.getElementsByTagName('input');\n    var count = checkboxes.length;\n    for (var i = 0; i < count; i++) {\n      if (checkboxes[i].type == \"checkbox\"\n          && checkboxes[i].name == field_name + \"_ids[]\") {\n        checkboxes[i].checked = state;\n      }\n    }\n}"]},"metadata":{},"sourceType":"module"}