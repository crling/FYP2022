{"ast":null,"code":"import { generateGridPlotConfig } from \"oviz-components/grid-plot\";\nimport { copyObject } from \"utils/object\";\n\nfunction run(v) {\n  v.forceRedraw = true;\n  v.run();\n}\n\nexport var editorRef = {};\nexport var generateBoxConfig = function generateBoxConfig(v) {\n  return {\n    id: \"setting-bc\",\n    title: \"Box content settings\",\n    layout: \"single-page\",\n    view: {\n      type: \"list\",\n      items: [{\n        type: \"vue\",\n        title: \"\",\n        component: \"color-picker\",\n        data: {\n          title: \"Customize colors\",\n          scheme: copyObject(v.data.colors),\n          id: \"pwcolor\",\n          callback: function callback(colors) {\n            v.data.colors = colors;\n            run(v);\n          }\n        }\n      }, {\n        title: \"Hollow box\",\n        type: \"checkbox\",\n        value: {\n          current: v.data.config.hollowBox,\n          callback: function callback(d) {\n            v.data.config.hollowBox = d;\n            run(v);\n          }\n        }\n      }, {\n        title: \"Outliers\",\n        type: \"checkbox\",\n        value: {\n          current: v.data.config.showOutliers,\n          callback: function callback(d) {\n            v.data.config.showOutliers = d;\n            run(v);\n          }\n        }\n      }, {\n        title: \"P-value\",\n        type: \"checkbox\",\n        value: {\n          current: v.data.config.drawP,\n          callback: function callback(d) {\n            v.data.config.drawP = d;\n            run(v);\n          }\n        }\n      }, {\n        title: \"Sample scatter\",\n        type: \"checkbox\",\n        value: {\n          current: v.data.config.drawScatter,\n          callback: function callback(d) {\n            v.data.config.drawScatter = d;\n            run(v);\n          }\n        }\n      }, {\n        title: \"Draw violin\",\n        type: \"checkbox\",\n        value: {\n          current: v.data.config.drawViolin,\n          callback: function callback(d) {\n            v.data.config.drawViolin = d;\n            v.data.config.drawBox = !d;\n            run(v);\n          }\n        }\n      }]\n    }\n  };\n};\nexport function editorConfig(v) {\n  return {\n    sections: [{\n      id: \"data\",\n      title: \"Data\",\n      layout: \"tabs\",\n      tabs: [{\n        id: \"gData\",\n        name: \"General\",\n        view: {\n          type: \"list\",\n          items: [{\n            title: \"Taxonomic rank\",\n            type: \"select\",\n            options: v.data.ranks,\n            value: {\n              current: v.data.rank,\n              callback: function callback(d) {\n                v.data.rank = d;\n                v.data.data = v.data.mainDict[d];\n                editorRef.lowerBound.value = v.data.data.valueRange[0];\n                editorRef.upperBound.value = v.data.data.valueRange[1];\n                run(v);\n              }\n            }\n          }, {\n            title: \"Range Lower Bound\",\n            type: \"input\",\n            ref: \"lowerBound\",\n            value: {\n              current: v.data.data.valueRange[0],\n              callback: function callback(d) {\n                v.data.data.valueRange[0] = parseFloat(d);\n                run(v);\n              }\n            }\n          }, {\n            title: \"Range Upper Bound\",\n            type: \"input\",\n            ref: \"upperBound\",\n            value: {\n              current: v.data.data.valueRange[1],\n              callback: function callback(d) {\n                v.data.data.valueRange[1] = parseFloat(d);\n                run(v);\n              }\n            }\n          }]\n        }\n      }]\n    }, generateGridPlotConfig(v), generateBoxConfig(v)]\n  };\n}","map":{"version":3,"sources":["/Users/wangzhenyu/Desktop/fyp_workspace/meta_platform/app/javascript/viz/boxplot/editor.ts"],"names":["generateGridPlotConfig","copyObject","run","v","forceRedraw","editorRef","generateBoxConfig","id","title","layout","view","type","items","component","data","scheme","colors","callback","value","current","config","hollowBox","d","showOutliers","drawP","drawScatter","drawViolin","drawBox","editorConfig","sections","tabs","name","options","ranks","rank","mainDict","lowerBound","valueRange","upperBound","ref","parseFloat"],"mappings":"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","sourcesContent":["import { generateGridPlotConfig } from \"oviz-components/grid-plot\";\nimport { EditorDef } from \"utils/editor\";\nimport { copyObject } from \"utils/object\";\n\nfunction run(v) {\n    v.forceRedraw = true;\n    v.run();\n}\nexport const editorRef = {} as any;\n\nexport const generateBoxConfig = (v): any => (            {\n    id: \"setting-bc\",\n    title: \"Box content settings\",\n    layout: \"single-page\",\n    view: {\n        type: \"list\",\n        items: [\n            {\n                type: \"vue\",\n                title: \"\",\n                component: \"color-picker\",\n                data: {\n                    title: \"Customize colors\",\n                    scheme: copyObject(v.data.colors),\n                    id: \"pwcolor\",\n                    callback(colors) {\n                        v.data.colors = colors;\n                        run(v);\n                    },\n                },\n            },\n            {\n                title: \"Hollow box\",\n                type: \"checkbox\",\n                value: {\n                    current: v.data.config.hollowBox,\n                    callback(d) {\n                        v.data.config.hollowBox = d;\n                        run(v);\n                    },\n                },\n            },\n            {\n                title: \"Outliers\",\n                type: \"checkbox\",\n                value: {\n                    current: v.data.config.showOutliers,\n                    callback(d) {\n                        v.data.config.showOutliers = d;\n                        run(v);\n                    },\n                },\n            },\n            {\n                title: \"P-value\",\n                type: \"checkbox\",\n                value: {\n                    current: v.data.config.drawP,\n                    callback(d) {\n                        v.data.config.drawP = d;\n                        run(v);\n                    },\n                },\n            },\n            {\n                title: \"Sample scatter\",\n                type: \"checkbox\",\n                value: {\n                    current: v.data.config.drawScatter,\n                    callback(d) {\n                        v.data.config.drawScatter = d;\n                        run(v);\n                    },\n                },\n            },\n            {\n                title: \"Draw violin\",\n                type: \"checkbox\",\n                value: {\n                    current: v.data.config.drawViolin,\n                    callback(d) {\n                        v.data.config.drawViolin = d;\n                        v.data.config.drawBox = !d;\n                        run(v);\n                    },\n                },\n            },\n        ],\n    },\n});\nexport function editorConfig(v): EditorDef {\n    return {\n        sections: [\n            {\n                id: \"data\",\n                title: \"Data\",\n                layout: \"tabs\",\n                tabs: [\n                    {\n                        id: \"gData\",\n                        name: \"General\",\n                        view: {\n                            type: \"list\",\n                            items: [\n                                {\n                                    title: \"Taxonomic rank\",\n                                    type: \"select\",\n                                    options: v.data.ranks,\n                                    value: {\n                                        current: v.data.rank,\n                                        callback(d) {\n                                            v.data.rank = d;\n                                            v.data.data = v.data.mainDict[d];\n                                            editorRef.lowerBound.value = v.data.data.valueRange[0];\n                                            editorRef.upperBound.value = v.data.data.valueRange[1];\n                                            run(v);\n                                        },\n                                    },\n                                },\n                                {\n                                    title: \"Range Lower Bound\",\n                                    type: \"input\",\n                                    ref: \"lowerBound\",\n                                    value: {\n                                        current: v.data.data.valueRange[0],\n                                        callback(d) {\n                                            v.data.data.valueRange[0] = parseFloat(d);\n                                            run(v);\n                                        },\n                                    },\n                                },\n                                {\n                                    title: \"Range Upper Bound\",\n                                    type: \"input\",\n                                    ref: \"upperBound\",\n                                    value: {\n                                        current: v.data.data.valueRange[1],\n                                        callback(d) {\n                                            v.data.data.valueRange[1] = parseFloat(d);\n                                            run(v);\n                                        },\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                ],\n            },\n            generateGridPlotConfig(v),\n            generateBoxConfig(v),\n        ],\n    };\n}\n"]},"metadata":{},"sourceType":"module"}