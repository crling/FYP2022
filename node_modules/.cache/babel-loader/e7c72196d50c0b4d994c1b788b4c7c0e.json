{"ast":null,"code":"import { init as hist } from \"viz/static_histogram\";\nimport { init as donghnut } from \"viz/static_donghnut\";\nimport { init as boxplot } from \"viz/static_grouped-boxplot\";\nimport { init as tree } from \"viz/static_tree\";\nimport { assign_tb_style } from \"./overview-style.js\";\nexport function viz(vid, vdata) {\n  var paths = vdata[\"file\"];\n  var type = vdata[\"type\"];\n  var config = vdata[\"config\"];\n\n  switch (type) {\n    case \"hist\":\n      {\n        hist(vid, paths[0], config);\n        break;\n      }\n\n    case \"boxplot\":\n      {\n        boxplot(vid, paths[0], config);\n        break;\n      }\n\n    case \"tree\":\n      {\n        tree(vid, paths, config);\n        break;\n      }\n\n    case \"donghnut\":\n      {\n        donghnut(vid, paths[0], config);\n        break;\n      }\n\n    default:\n      {}\n  }\n}\nexport function description(hid, des_data) {\n  document.getElementById(hid).innerHTML = des_data;\n}\nexport function table(tid, tb_data) {\n  //create table\n  var tb = document.createElement(\"table\");\n  tb.className = \"display\";\n  tb.id = tid; //class = \"display\"\n  //create th\n\n  var thead = document.createElement(\"thead\");\n  var tr = document.createElement(\"tr\");\n  var th_content = tb_data[\"head\"];\n  var ncol = th_content.length;\n\n  for (var i = 0; i < ncol; i++) {\n    var th = document.createElement(\"th\");\n    th.innerHTML = th_content[i];\n    tr.appendChild(th);\n  }\n\n  thead.appendChild(tr); //create tbody\n\n  var tbody = document.createElement(\"tbody\");\n  var tb_contents = tb_data[\"body\"];\n  var nrow = tb_contents.length;\n\n  for (var i = 0; i < nrow; i++) {\n    var tr = document.createElement(\"tr\");\n\n    for (var j = 0; j < ncol; j++) {\n      var td = document.createElement(\"td\");\n      td.innerHTML = tb_contents[i][j];\n      tr.appendChild(td);\n    }\n\n    tbody.appendChild(tr);\n  } // embedded\n\n\n  tb.appendChild(thead);\n  tb.appendChild(tbody);\n  return tb;\n}\nexport function selector(sid, slt_data) {\n  var slt = document.createElement(\"select\");\n  slt.className = \"form-select col\";\n  slt.id = sid;\n  slt.name = sid; // create options\n\n  var first = true;\n\n  for (var option in slt_data) {\n    var op = document.createElement(\"option\");\n\n    if (first) {\n      op.selected = true;\n      first = false;\n    }\n\n    op.innerHTML = option;\n    op.value = slt_data[option];\n    slt.appendChild(op);\n  }\n\n  return slt;\n}\nexport function text(pid, str) {\n  var p = document.createElement(\"p\");\n  p.id = pid;\n  p.innerHTML = str;\n  return p;\n}\nexport function construct_block(Bid, block_data) {\n  var block_div = document.createElement(\"div\");\n  block_div.className = \"container Block\";\n  block_div.id = Bid;\n  var keys = Object.keys(block_data);\n  var key = keys[0];\n  var selects = block_data[key];\n  var ncontent = key.length;\n  var i = 0; // create text description if any\n\n  if (key[0] == \"H\") {\n    var cid = \"H\" + Bid;\n    var head_block = document.createElement(\"div\");\n    head_block.id = cid;\n    head_block.className = \"row description\";\n    block_div.appendChild(head_block);\n    key = key.substring(1);\n    ncontent -= 1;\n  } // first create selects row\n\n\n  var slt_row = document.createElement(\"div\");\n  slt_row.className = \"select_bar form-inline row\";\n  var nslt = selects.length; // create select element\n  // update function: title on select box\n\n  for (var j = 0; j < nslt; j++) {\n    var sblock = document.createElement(\"div\");\n    var stitle = document.createElement('div');\n    var selectbox = selects[j]['select'];\n    sblock.className = \"sdiv col\";\n    stitle.className = \"select_title\";\n    stitle.innerHTML = selects[j]['title'];\n    var sid = 'S' + j + Bid;\n    var slt = selector(sid, selectbox);\n    sblock.append(stitle);\n    sblock.append(slt);\n    slt_row.appendChild(sblock);\n  }\n\n  block_div.appendChild(slt_row); // then create content\n\n  var block = document.createElement(\"div\");\n  block.className = \"row\";\n\n  for (var i = 0; i < ncontent; i++) {\n    var type = key[i];\n    var cid = type + i + Bid;\n    var content_block = document.createElement(\"div\");\n    content_block.id = cid;\n\n    if (ncontent > 1 && i == 0) {\n      content_block.className = \"col-md-4\";\n    } else if (ncontent > 1 && i == 1) {\n      content_block.className = \"col-md-8\";\n    } else {\n      content_block.className = \"col\";\n    }\n\n    block.appendChild(content_block);\n  }\n\n  block_div.appendChild(block);\n  return block_div;\n} // by this function, all containers are made and added in body element\n\nexport function makeHTMLframe(body, struct_data) {\n  var nBlock = struct_data.length;\n\n  for (var i = 0; i < nBlock; i++) {\n    var id = \"B\" + i;\n    var B = construct_block(id, struct_data[i]);\n    body.appendChild(B);\n  }\n} // fill in the block with data, (table, text, viz for default value)\n\nexport function fillinblock(cid, relation_key, relation_data, content_data) {\n  // is description\n  if (cid[0] == 'H') {\n    var hdk = relation_data['h'][relation_key];\n    var hdata = content_data['h'][hdk];\n    var hid = cid;\n    description(hid, hdata);\n  } // have graph\n\n\n  if (cid[0] == 'V') {\n    var vdk = relation_data[\"v\"][relation_key];\n    var vdata = content_data['v'][vdk];\n    var vid = \"#\" + cid;\n    viz(vid, vdata);\n  } // have table\n\n\n  if (cid[0] == 'T') {\n    //console.log(relation_key);\n    var tdk = relation_data[\"t\"][relation_key]; //console.log(tdk);\n\n    var tdata = content_data[\"t\"][tdk]; //console.log(tdata);\n\n    var container = document.getElementById(cid);\n    var tid = \"t\" + cid;\n    container.innerHTML = '';\n    var tb = table(tid, tdata);\n    container.appendChild(tb);\n  } // have text\n\n\n  if (cid[0] == 'X') {\n    var xdk = relation_data[\"x\"][relation_key];\n    var xdata = content_data[\"x\"][xdk];\n    var container = document.getElementById(cid);\n    var xid = \"x\" + cid;\n    container.innerHTML = '';\n    var text = text(xid, xdata);\n    container.appendChild(text);\n  }\n}\nexport function initPage(main_id, data, tids) {\n  var struct_data = data[\"struct\"];\n  var relation_data = data[\"relation\"];\n  var init_data = data[\"init\"];\n  var content_data = data[\"content\"];\n  var body = document.getElementById(main_id);\n  makeHTMLframe(body, struct_data);\n\n  for (var key in init_data) {\n    fillinblock(key, init_data[key], relation_data, content_data);\n  }\n\n  assign_tb_style(tids);\n}\nexport function catch_change(data, tids) {\n  $('select').on('change', function () {\n    //console.log(data);\n    var struct_data = data[\"struct\"];\n    var relation_data = data[\"relation\"];\n    var content_data = data[\"content\"];\n    var bro = this.parentElement.parentElement.children; //console.log(bro);\n\n    var outer_block = this.parentElement.parentElement.parentElement;\n    var nbro = bro.length; //console.log(nbro);\n\n    var new_k = \"\";\n\n    for (var i = 0; i < nbro; i++) {\n      if (i > 0) {\n        new_k += \"_\";\n      } //console.log('string' + new_k);\n\n\n      new_k += bro[i].children[1].value; //console.log(bro[i].children);\n    } //console.log(new_k);\n\n\n    var B_i = parseInt(outer_block.id[1]); //console.log(B_i);\n    //console.log(struct_data[B_i]);\n\n    var type_key = Object.keys(struct_data[B_i])[0]; //console.log(type_key);\n\n    var ntype = type_key.length;\n\n    if (type_key[0] == \"H\") {\n      ntype -= 1;\n      type_key = type_key.substring(1);\n    } //console.log(type_key);\n\n\n    for (var i = 0; i < ntype; i++) {\n      var cid = type_key[i] + i + outer_block.id;\n      console.log(cid);\n      fillinblock(cid, new_k, relation_data, content_data);\n    }\n\n    if (Object.keys(struct_data[B_i])[0].includes(\"T\")) {\n      assign_tb_style(tids);\n    }\n  });\n}","map":{"version":3,"sources":["/Users/wangzhenyu/Desktop/fyp_workspace/meta_platform/app/javascript/viz/overview/index.js"],"names":["init","hist","donghnut","boxplot","tree","assign_tb_style","viz","vid","vdata","paths","type","config","description","hid","des_data","document","getElementById","innerHTML","table","tid","tb_data","tb","createElement","className","id","thead","tr","th_content","ncol","length","i","th","appendChild","tbody","tb_contents","nrow","j","td","selector","sid","slt_data","slt","name","first","option","op","selected","value","text","pid","str","p","construct_block","Bid","block_data","block_div","keys","Object","key","selects","ncontent","cid","head_block","substring","slt_row","nslt","sblock","stitle","selectbox","append","block","content_block","makeHTMLframe","body","struct_data","nBlock","B","fillinblock","relation_key","relation_data","content_data","hdk","hdata","vdk","tdk","tdata","container","xdk","xdata","xid","initPage","main_id","data","tids","init_data","catch_change","$","on","bro","parentElement","children","outer_block","nbro","new_k","B_i","parseInt","type_key","ntype","console","log","includes"],"mappings":"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","sourcesContent":["import {init as hist}  from \"viz/static_histogram\"\nimport {init as donghnut}  from \"viz/static_donghnut\"\nimport {init as boxplot} from \"viz/static_grouped-boxplot\"\nimport {init as tree} from \"viz/static_tree\"\nimport {assign_tb_style} from \"./overview-style.js\"\n\nexport function viz(vid, vdata){\n    var paths = vdata[\"file\"];\n    var type = vdata[\"type\"];\n    var config = vdata[\"config\"];\n    switch (type){\n        case \"hist\":{\n            hist(vid, paths[0], config);\n            break;\n        }\n        case \"boxplot\":{\n            boxplot(vid, paths[0], config);\n            break;\n        }\n        case \"tree\":{\n            tree(vid, paths, config);\n            break;\n        }\n        \n        case \"donghnut\":{\n            donghnut(vid, paths[0], config);\n            break;\n        }\n        default:{\n            \n        }\n    }\n\n}\n\nexport function description(hid, des_data){\n    document.getElementById(hid).innerHTML = des_data;\n}\n\nexport function table(tid, tb_data){\n    //create table\n    var tb = document.createElement(\"table\");\n    tb.className = \"display\";\n    tb.id = tid;\n    //class = \"display\"\n\n    //create th\n    var thead = document.createElement(\"thead\");\n    var tr  = document.createElement(\"tr\");\n    var th_content = tb_data[\"head\"];\n    var ncol = th_content.length;\n    for (var i=0; i<ncol; i++){\n        var th = document.createElement(\"th\");\n        th.innerHTML = th_content[i];\n        tr.appendChild(th);\n    }\n    thead.appendChild(tr);\n\n\n    //create tbody\n    var tbody = document.createElement(\"tbody\");\n    var tb_contents = tb_data[\"body\"];\n    var nrow = tb_contents.length;\n    for(var i=0; i<nrow; i++){\n        var tr  = document.createElement(\"tr\");\n        for (var j=0; j<ncol; j++){\n            var td = document.createElement(\"td\");\n            td.innerHTML = tb_contents[i][j];\n            tr.appendChild(td);\n        }\n        tbody.appendChild(tr);\n    }\n\n    // embedded\n    tb.appendChild(thead);\n    tb.appendChild(tbody);\n    return tb\n}\n\nexport function selector(sid, slt_data){\n    var slt = document.createElement(\"select\");\n    slt.className = \"form-select col\";\n    slt.id = sid;\n    slt.name = sid;\n    // create options\n    var first = true;\n    for(var option in slt_data){\n        var op = document.createElement(\"option\");\n        if(first){\n            op.selected = true;\n            first = false;\n        }\n        op.innerHTML = option;\n        op.value = slt_data[option];\n        slt.appendChild(op);\n    }\n    return slt;\n}\n\nexport function text(pid, str){\n    var p = document.createElement(\"p\");\n    p.id = pid;\n    p.innerHTML = str;\n    return p;\n}\n\n\n\nexport function construct_block(Bid, block_data){\n    var block_div = document.createElement(\"div\");\n    block_div.className = \"container Block\";\n    block_div.id = Bid;\n\n    var keys = Object.keys(block_data);\n    var key = keys[0];\n    var selects = block_data[key];\n\n    var ncontent = key.length;\n    var i = 0;\n\n    // create text description if any\n    if(key[0]==\"H\"){\n        var cid = \"H\"+Bid\n        var head_block = document.createElement(\"div\");\n        head_block.id = cid;\n        head_block.className = \"row description\";\n        block_div.appendChild(head_block);\n        key = key.substring(1);\n        ncontent -= 1;\n    }\n\n\n    // first create selects row\n    var slt_row = document.createElement(\"div\");\n    slt_row.className = \"select_bar form-inline row\";\n    var nslt = selects.length;\n\n    // create select element\n    // update function: title on select box\n    for(var j=0; j<nslt; j++){\n        var sblock = document.createElement(\"div\");\n        var stitle = document.createElement('div');\n        var selectbox = selects[j]['select'];\n        sblock.className = \"sdiv col\";\n        stitle.className = \"select_title\"\n        stitle.innerHTML = selects[j]['title'];\n        var sid = 'S'+j+Bid;\n        var slt = selector(sid, selectbox);\n        sblock.append(stitle);\n        sblock.append(slt);\n        slt_row.appendChild(sblock);\n    }\n    block_div.appendChild(slt_row);\n\n    \n    \n    // then create content\n    var block = document.createElement(\"div\");\n    block.className = \"row\";\n    \n    for(var i=0; i<ncontent; i++){\n        var type = key[i];\n        var cid = type+i+Bid\n        var content_block = document.createElement(\"div\");\n        content_block.id = cid;\n        if(ncontent>1 && i==0){\n            content_block.className = \"col-md-4\";\n        }\n        else if(ncontent>1 && i==1){\n            content_block.className = \"col-md-8\";\n        }\n        else{\n            content_block.className = \"col\";\n        }\n        \n        block.appendChild(content_block);\n    }\n    block_div.appendChild(block);\n    return block_div\n}\n\n// by this function, all containers are made and added in body element\nexport function makeHTMLframe(body, struct_data){\n    var nBlock = struct_data.length;\n    for(var i=0; i<nBlock; i++){\n        var id = \"B\"+i;\n        var B = construct_block(id, struct_data[i]);\n        body.appendChild(B);\n    }\n}\n\n// fill in the block with data, (table, text, viz for default value)\nexport function fillinblock(cid, relation_key, relation_data, content_data){\n    // is description\n    if(cid[0] == 'H'){\n        var hdk = relation_data['h'][relation_key];\n        var hdata = content_data['h'][hdk];\n        var hid = cid;\n        description(hid, hdata);\n    }\n    \n    // have graph\n    if(cid[0] == 'V'){\n        var vdk = relation_data[\"v\"][relation_key];\n        var vdata = content_data['v'][vdk]; \n        var vid = \"#\" + cid;\n        viz(vid, vdata);\n    }\n    // have table\n    if(cid[0] == 'T'){\n        //console.log(relation_key);\n        var tdk = relation_data[\"t\"][relation_key];\n        //console.log(tdk);\n        var tdata = content_data[\"t\"][tdk];\n        //console.log(tdata);\n        var container = document.getElementById(cid);\n        var tid = \"t\"+cid;\n        container.innerHTML = '';\n        var tb = table(tid, tdata);\n        container.appendChild(tb);\n        \n    }\n    \n    // have text\n    if(cid[0] == 'X'){\n        var xdk = relation_data[\"x\"][relation_key];\n        var xdata = content_data[\"x\"][xdk];\n        var container = document.getElementById(cid);\n        var xid = \"x\"+cid;\n        container.innerHTML = '';\n        var text = text(xid, xdata);\n        container.appendChild(text);\n\n    }\n\n    \n}\n\n\nexport function initPage(main_id, data, tids){\n    \n    var struct_data = data[\"struct\"];\n    var relation_data = data[\"relation\"];\n    var init_data = data[\"init\"];\n    var content_data = data[\"content\"];\n    var body = document.getElementById(main_id);\n    makeHTMLframe(body, struct_data);\n    for (var key in init_data){\n        fillinblock(key, init_data[key], relation_data, content_data);\n    }\n    assign_tb_style(tids);\n\n}\n\n\nexport function catch_change(data, tids){\n    \n    $('select').on('change', function() {\n        //console.log(data);\n        var struct_data = data[\"struct\"];\n        var relation_data = data[\"relation\"];\n        var content_data = data[\"content\"];\n        var bro = this.parentElement.parentElement.children;\n        //console.log(bro);\n        var outer_block = this.parentElement.parentElement.parentElement;\n        var nbro = bro.length;\n        //console.log(nbro);\n        var new_k = \"\";\n        for (var i=0; i<nbro; i++){\n            if (i>0){\n                new_k += \"_\";\n            }\n            //console.log('string' + new_k);\n            new_k += bro[i].children[1].value;  \n            //console.log(bro[i].children);\n        }\n        //console.log(new_k);\n        var B_i = parseInt(outer_block.id[1]);\n        //console.log(B_i);\n        //console.log(struct_data[B_i]);\n        var type_key = Object.keys(struct_data[B_i])[0];\n        //console.log(type_key);\n        var ntype = type_key.length;\n        if(type_key[0]==\"H\"){\n            ntype -= 1;\n            type_key = type_key.substring(1);\n        }\n        \n        //console.log(type_key);\n        for (var i=0; i<ntype; i++){\n            var cid = type_key[i] + i + outer_block.id;\n            console.log(cid);\n            fillinblock(cid, new_k, relation_data, content_data);\n        }\n        if (Object.keys(struct_data[B_i])[0].includes(\"T\")){\n            assign_tb_style(tids);\n        }\n                \n    });\n}"]},"metadata":{},"sourceType":"module"}