{"ast":null,"code":"function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport { defaultLayoutConf as conf } from \"utils/editor\";\nimport { genDefaultPalette, withDefaultPalette } from \"oviz-common/palette\";\nimport { copyObject } from \"utils/object\";\n\nfunction run(v) {\n  v.data._changed = true;\n  v.run();\n}\n\nexport var editorRef = {};\nvar cbpPalette = {\n  cBioPortal: {\n    name: \"cBioPortal\",\n    // miss, inframe, trunc, other, text, active layer, line, icon stroke\n    colors: [\"#3d7f08\", \"#913810\", \"#000000\", \"#c55ebc\", \"#000000\", \"#777\", \"#555\", \"#fff\"]\n  }\n};\nexport function editorConfig(v) {\n  var _genDefaultPalette = genDefaultPalette(v.data.colors),\n      _genDefaultPalette2 = _slicedToArray(_genDefaultPalette, 1),\n      defaultPalette = _genDefaultPalette2[0];\n\n  return {\n    sections: [{\n      id: \"settings\",\n      title: \"Settings\",\n      layout: \"single-page\",\n      view: {\n        type: \"list\",\n        items: [{\n          type: \"vue\",\n          title: \"\",\n          component: \"color-picker\",\n          data: {\n            title: \"Customize colors\",\n            scheme: copyObject(v.data.colors),\n            palettes: withDefaultPalette(defaultPalette, cbpPalette),\n            id: \"pwcolor\",\n            callback: function callback(colors) {\n              v.data.colors = colors;\n              v.forceRedraw = true;\n              run(v);\n            }\n          }\n        }, {\n          title: \"P Annotation\",\n          type: \"checkbox\",\n          bind: {\n            object: conf,\n            path: \"showPAnno\",\n            callback: function callback() {\n              v.data.config.showPAnno = conf.showPAnno;\n              run(v);\n            }\n          },\n          value: {\n            current: true,\n            callback: function callback() {}\n          }\n        }, {\n          title: \"Symmetry Color Range\",\n          type: \"checkbox\",\n          bind: {\n            object: conf,\n            path: \"isSym\",\n            callback: function callback() {\n              v.data.config.isSym = conf.isSym;\n              run(v);\n            }\n          },\n          value: {\n            current: true,\n            callback: function callback() {}\n          }\n        }, {\n          title: \"Range Upper Bound\",\n          type: \"input\",\n          bind: {\n            object: conf,\n            path: \"max\",\n            callback: function callback() {\n              v.data.config.rangeMax = conf.max;\n              run(v);\n            }\n          },\n          value: {\n            current: v.data.config.rangeMax,\n            callback: function callback() {}\n          }\n        }, {\n          title: \"Range Lower Bound\",\n          type: \"input\",\n          bind: {\n            object: conf,\n            path: \"min\",\n            callback: function callback() {\n              v.data.config.rangeMin = conf.min;\n              run(v);\n            }\n          },\n          value: {\n            current: v.data.config.rangeMin,\n            callback: function callback() {}\n          }\n        }]\n      }\n    }]\n  };\n}","map":{"version":3,"sources":["/Users/wangzhenyu/Desktop/fyp_workspace/meta_platform/app/javascript/viz/signed-heatmap/editor.ts"],"names":["defaultLayoutConf","conf","genDefaultPalette","withDefaultPalette","copyObject","run","v","data","_changed","editorRef","cbpPalette","cBioPortal","name","colors","editorConfig","defaultPalette","sections","id","title","layout","view","type","items","component","scheme","palettes","callback","forceRedraw","bind","object","path","config","showPAnno","value","current","isSym","rangeMax","max","rangeMin","min"],"mappings":"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","sourcesContent":["import {defaultLayoutConf as conf} from \"utils/editor\"\nimport { genDefaultPalette, withDefaultPalette } from \"oviz-common/palette\";\nimport { EditorDef } from \"utils/editor\";\nimport { copyObject } from \"utils/object\";\n\nfunction run(v) {\n    v.data._changed = true;\n    v.run();\n}\nexport const editorRef = {} as any;\n\nconst cbpPalette = {\n    cBioPortal: {\n        name: \"cBioPortal\",\n        // miss, inframe, trunc, other, text, active layer, line, icon stroke\n        colors: [\"#3d7f08\", \"#913810\", \"#000000\", \"#c55ebc\", \"#000000\", \"#777\", \"#555\", \"#fff\"],\n    },\n};\n\nexport function editorConfig(v): EditorDef {\n    const [defaultPalette] = genDefaultPalette(v.data.colors);\n    return {\n        sections: [\n            {\n                id: \"settings\",\n                title: \"Settings\",\n                layout: \"single-page\",\n                view: {\n                    type: \"list\",\n                    items: [\n                        {\n                            type: \"vue\",\n                            title: \"\",\n                            component: \"color-picker\",\n                            data: {\n                                title: \"Customize colors\",\n                                scheme: copyObject(v.data.colors),\n                                palettes: withDefaultPalette(defaultPalette, cbpPalette),\n                                id: \"pwcolor\",\n                                callback(colors) {\n                                    v.data.colors = colors;\n                                    v.forceRedraw = true;\n                                    run(v);\n                                },\n                            },\n                        },\n                        {\n                            title: \"P Annotation\",\n                            type: \"checkbox\",\n                            bind: {\n                                object: conf,\n                                path: \"showPAnno\",\n                                callback() {\n                                    v.data.config.showPAnno = conf.showPAnno;\n                                    run(v);\n                                },\n                            },\n                            value: {\n                                current: true,\n                                callback() {},\n                            },\n                        },\n                        {\n                            title: \"Symmetry Color Range\",\n                            type: \"checkbox\",\n                            bind: {\n                                object: conf,\n                                path: \"isSym\",\n                                callback() {\n                                    v.data.config.isSym = conf.isSym;\n                                    run(v);\n                                },\n                            },\n                            value: {\n                                current: true,\n                                callback() {},\n                            },\n                        },\n                        {\n                            title: \"Range Upper Bound\",\n                            type: \"input\",\n                            bind: {\n                                object: conf,\n                                path: \"max\",\n                                callback() {\n                                    v.data.config.rangeMax = conf.max;\n                                    run(v);\n                                },\n                            },\n                            value: {\n                                current: v.data.config.rangeMax,\n                                callback() {},\n                            },\n                        },\n                        {\n                            title: \"Range Lower Bound\",\n                            type: \"input\",\n                            bind: {\n                                object: conf,\n                                path: \"min\",\n                                callback() {\n                                    v.data.config.rangeMin = conf.min;\n                                    run(v);\n                                },\n                            },\n                            value: {\n                                current: v.data.config.rangeMin,\n                                callback() {},\n                            },\n                        },\n                    ],\n                },\n            },\n        ],\n    };\n}\n"]},"metadata":{},"sourceType":"module"}