{"ast":null,"code":"import Oviz from \"crux\"; //import { editorConfig, editorRef } from \"./editor\";\n\nimport template from \"./template.bvt\";\nimport { register } from \"page/visualizers\";\nimport { FYPPlot } from \"oviz-components/FYP1\";\nvar title = \"fyp-graph1\";\nvar height = 600;\nvar width = 1500;\nvar MODULE_NAME = \"FYP1\";\n\nfunction init() {\n  if (!window.gon || window.gon.module_name !== MODULE_NAME) return;\n\n  var _Oviz$visualize = Oviz.visualize({\n    el: \"#canvas\",\n    template: template,\n    components: {\n      FYPPlot: FYPPlot\n    },\n    data: {\n      title: title,\n      labelFontSize: 12,\n      //有关\n      tickFontSize: 14\n    },\n    loadData: {\n      data: {\n        fileKey: \"FYP1\",\n        type: \"csv\",\n        multiple: false,\n        loaded: function loaded(data) {\n          console.log(\"data:\", data);\n          this.data.plot = false;\n          console.log(\"first data:\", data);\n          var type = data.map(function (d) {\n            return d[data.columns[0]];\n          });\n          type.unshift(data.columns[0]);\n          console.log(\"type:\", type);\n          var temp_length = data.map(function (d) {\n            return d[data.columns[1]];\n          }); //.unshift(30427671);\n\n          temp_length.unshift(data.columns[1]);\n          var length = [];\n\n          for (var i = 0; i < 5; i++) {\n            length[i] = temp_length[i];\n          }\n\n          console.log(\"length:\", length);\n          this.data.type = type;\n          this.data.length = length;\n          this.data.height = height;\n          this.data.width = width;\n        }\n      },\n      data2: {\n        fileKey: \"FYP12\",\n        type: \"csv\",\n        multiple: false,\n        loaded: function loaded(data) {\n          var _this = this;\n\n          console.log(\"second data:\", data);\n          var id = data.map(function (d) {\n            return d[data.columns[0]];\n          });\n          id.unshift(data.columns[0]);\n          var types = data.map(function (d) {\n            return d[data.columns[1]];\n          });\n          types.unshift(data.columns[1]);\n          var startpo = data.map(function (d) {\n            return d[data.columns[2]];\n          });\n          startpo.unshift(data.columns[2]);\n          var endpo = data.map(function (d) {\n            return d[data.columns[3]];\n          });\n          endpo.unshift(data.columns[3]);\n          var pone = data.map(function (d) {\n            return d[data.columns[4]];\n          });\n          pone.unshift(data.columns[4]); // calculate the length and the max length\n\n          var maxlength = this.data.length[0];\n          this.data.length.forEach(function (element) {\n            if (element > maxlength) {\n              maxlength = element;\n            }\n          }); // get the down_value and up_value of each type \n\n          var value1 = [],\n              value2 = [],\n              value3 = [],\n              value4 = [],\n              value5 = [];\n          var values = [value1, value2, value3, value4, value5];\n          var type1 = [],\n              type2 = [],\n              type3 = [],\n              type4 = [],\n              type5 = [];\n          var typess = [type1, type2, type3, type4, type5];\n          var endpl1, endpl2, endpl3, endpl4, endpl5;\n          var endpl = [endpl1, endpl2, endpl3, endpl4, endpl5];\n          types.forEach(function (element, i) {\n            typess[element - 1].push((parseInt(startpo[i]) + parseInt(endpo[i])) / 2);\n          });\n          console.log(\"typess\", typess);\n          typess.forEach(function (item, index) {\n            var re_position = item[0];\n            item.forEach(function (element, i) {\n              var gene = new Object();\n              gene[\"gene_name\"] = id[i];\n              gene[\"position\"] = element;\n              gene[\"side\"] = pone[i];\n\n              if (i == 0 && element > maxlength / 50) {\n                re_position = element;\n              } else if (i == 0 && element < maxlength / 50) {\n                re_position = maxlength / 50;\n              } else {\n                if (element - re_position < maxlength / 50) {\n                  re_position += maxlength / 50;\n                } else {\n                  re_position = element;\n                }\n              }\n\n              gene[\"re_position\"] = re_position; // assign the gene information according to the type and +/\n\n              values[index].push(gene);\n            });\n\n            if (_this.data.length[index] - re_position < maxlength / 50) {\n              endpl[index] = re_position + maxlength / 50;\n            } else {\n              endpl[index] = _this.data.length[index];\n            }\n          });\n          console.log(\"maxlength\", maxlength); // build the chrom_data information\n\n          var chrom_data = []; // build the chrom_data1 object\n\n          var chrom_data1 = {\n            length: parseInt((this.data.length[0] / 1000000).toFixed(2)),\n            value: value1,\n            each_step: height / maxlength,\n            endpl: endpl[0]\n          }; //add chrom_data1 to chrom_data\n\n          chrom_data.push(chrom_data1); //build the chrom_data2 object\n\n          var chrom_data2 = {\n            length: parseInt((this.data.length[1] / 1000000).toFixed(2)),\n            value: value2,\n            each_step: height / maxlength,\n            endpl: endpl[1]\n          }; //add chrom_data2 to chrom_data\n\n          chrom_data.push(chrom_data2); //build the chrom_data3 object\n\n          var chrom_data3 = {\n            length: parseInt((this.data.length[2] / 1000000).toFixed(2)),\n            value: value3,\n            each_step: height / maxlength,\n            endpl: endpl[2]\n          }; //add chrom_data3 to chrom_data\n\n          chrom_data.push(chrom_data3); //build the chrom_data4 object\n\n          var chrom_data4 = {\n            length: parseInt((this.data.length[3] / 1000000).toFixed(2)),\n            value: value4,\n            each_step: height / maxlength,\n            endpl: endpl[3]\n          }; //add chrom_data4 to chrom_data\n\n          chrom_data.push(chrom_data4); //build the chrom_data5 object\n\n          var chrom_data5 = {\n            length: parseInt((this.data.length[4] / 1000000).toFixed(2)),\n            value: value5,\n            each_step: height / maxlength,\n            endpl: endpl[4]\n          }; //add chrom_data5 to chrom_data\n\n          chrom_data.push(chrom_data5);\n          var ruler = [];\n          var maxruler = maxlength / 1000000 + 1;\n\n          for (var i = 0; i <= maxruler; i++) {\n            ruler.push(i);\n          }\n\n          console.log(\"ruler\", ruler);\n          var prop = {\n            chrom_data: chrom_data,\n            length: this.data.length,\n            width: this.data.width,\n            height: this.data.height,\n            maxlength: maxlength,\n            ruler: ruler,\n            maxruler: maxruler,\n            plot: this.data.plot\n          }; //return chrom_data information\n\n          this.data.ruler = ruler;\n          this.data.chrom_data = chrom_data;\n          this.data.maxlength = maxlength;\n          this.data.maxruler = maxruler;\n          this.data.prop = prop;\n          return {\n            chrom_data: chrom_data,\n            length: length,\n            maxlength: maxlength,\n            ruler: ruler,\n            maxruler: maxruler\n          };\n        }\n      }\n    },\n    setup: function setup() {\n      console.log(\"this.data:\", this[\"_data\"]); //registerEditorConfig(editorConfig(this), editorRef);\n    }\n  }),\n      visualizer = _Oviz$visualize.visualizer;\n\n  return visualizer;\n}\n\nexport function registerBoxplot() {\n  register(MODULE_NAME, init);\n}\nregister(MODULE_NAME, init);","map":{"version":3,"sources":["/Users/wangzhenyu/Desktop/fyp_workspace/meta_platform/app/javascript/viz/FYP1/index.ts"],"names":["Oviz","template","register","FYPPlot","title","height","width","MODULE_NAME","init","window","gon","module_name","visualize","el","components","data","labelFontSize","tickFontSize","loadData","fileKey","type","multiple","loaded","console","log","plot","map","d","columns","unshift","temp_length","length","i","data2","id","types","startpo","endpo","pone","maxlength","forEach","element","value1","value2","value3","value4","value5","values","type1","type2","type3","type4","type5","typess","endpl1","endpl2","endpl3","endpl4","endpl5","endpl","push","parseInt","item","index","re_position","gene","Object","chrom_data","chrom_data1","toFixed","value","each_step","chrom_data2","chrom_data3","chrom_data4","chrom_data5","ruler","maxruler","prop","setup","visualizer","registerBoxplot"],"mappings":"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","sourcesContent":["import Oviz from \"crux\";\r\n//import { editorConfig, editorRef } from \"./editor\";\r\nimport template from \"./template.bvt\";\r\n\r\nimport { groupedChartColors} from \"oviz-common/palette\";\r\nimport { ComplexBoxplot, processBoxData } from \"oviz-components/complex-boxplot\";\r\nimport { GridPlot } from \"oviz-components/grid-plot\";\r\nimport { EditText } from \"oviz-components/edit-text\";\r\nimport { register } from \"page/visualizers\";\r\nimport { rankDict, sortByRankKey } from \"utils/bio-info\";\r\nimport { registerEditorConfig } from \"utils/editor\";\r\nimport { FYPPlot } from \"oviz-components/FYP1\";\r\n\r\nconst title = \"fyp-graph1\";\r\nconst height = 600;\r\nconst width = 1500;\r\nconst MODULE_NAME = \"FYP1\";\r\n \r\nfunction init() {\r\n    if (!window.gon || window.gon.module_name !== MODULE_NAME) return;\r\n\r\n    const {visualizer} = Oviz.visualize({\r\n        el: \"#canvas\",\r\n        template,\r\n        components:{FYPPlot},\r\n        data: {\r\n            title,\r\n            labelFontSize: 12, //有关\r\n            tickFontSize: 14\r\n        },\r\n        loadData: {\r\n            data: {\r\n                fileKey: \"FYP1\",\r\n                type: \"csv\", \r\n                multiple: false,\r\n                loaded(data) { \r\n                    console.log(\"data:\",data);\r\n                    this.data.plot = false;\r\n                    console.log(\"first data:\",data);\r\n                    let type = data.map(d => d[data.columns[0]]);\r\n                    type.unshift(data.columns[0]);\r\n                    console.log(\"type:\",type)\r\n                    let temp_length = data.map(d => d[data.columns[1]]);//.unshift(30427671);\r\n                    temp_length.unshift(data.columns[1])\r\n                    const length=[] ;\r\n                    for(let i = 0;i<5;i++){\r\n                        length[i]=temp_length[i];\r\n                    }\r\n                    console.log(\"length:\",length)\r\n                    this.data.type = type;\r\n                    this.data.length = length;\r\n                    this.data.height = height;\r\n                    this.data.width = width;\r\n\r\n                },\r\n            },\r\n            data2:{\r\n                fileKey:\"FYP12\",\r\n                type:\"csv\",\r\n                multiple: false,\r\n                loaded(data){\r\n                    console.log(\"second data:\",data);\r\n                    let id =data.map(d => d[data.columns[0]]);\r\n                    id.unshift(data.columns[0]);\r\n                    let types = data.map(d => d[data.columns[1]]);\r\n                    types.unshift(data.columns[1]);\r\n                    let startpo = data.map(d => d[data.columns[2]]);\r\n                    startpo.unshift(data.columns[2]);\r\n                    let endpo = data.map(d => d[data.columns[3]]);\r\n                    endpo.unshift(data.columns[3]);\r\n                    let pone = data.map(d => d[data.columns[4]]);\r\n                    pone.unshift(data.columns[4]);\r\n                    // calculate the length and the max length\r\n                    let maxlength = this.data.length[0];\r\n                    this.data.length.forEach(element =>{\r\n                        if(element > maxlength){\r\n                            maxlength = element;\r\n                        }\r\n                    });\r\n        \r\n                    // get the down_value and up_value of each type \r\n                    const value1 = [], value2 = [], value3 = [], value4 = [], value5 = [];\r\n                    const values = [value1,value2,value3,value4,value5];\r\n                    const type1 = [],type2 = [],type3 = [],type4 = [],type5 = [];\r\n                    const typess = [type1,type2,type3,type4,type5];\r\n                    let endpl1, endpl2,endpl3,endpl4,endpl5;\r\n                    const endpl = [endpl1,endpl2,endpl3,endpl4,endpl5];\r\n                    types.forEach((element,i)=>{\r\n                        typess[element-1].push((parseInt(startpo[i])+parseInt(endpo[i]))/2);\r\n                    });\r\n                    console.log(\"typess\",typess)\r\n                    typess.forEach((item,index)=>{\r\n                        let re_position= item[0];\r\n                        item.forEach((element,i)=>{\r\n                            const gene = new Object();\r\n                            gene[\"gene_name\"]= id[i];\r\n                            gene[\"position\"]= element;\r\n                            gene[\"side\"]= pone[i];\r\n                            if(i == 0 && element>maxlength/50){\r\n                                re_position = element;\r\n                            }else if (i ==0 && element<maxlength/50){\r\n                                re_position = maxlength/50\r\n                            }else {\r\n                                if(element-re_position < maxlength/50){\r\n                                    re_position += maxlength/50;\r\n                                }else{\r\n                                    re_position = element;\r\n                                }\r\n                            }\r\n                            gene[\"re_position\"] = re_position;\r\n        \r\n                            // assign the gene information according to the type and +/\r\n                            values[index].push(gene);\r\n                        });\r\n                        if(this.data.length[index]-re_position < maxlength/50){\r\n                            endpl[index] = re_position+maxlength/50; \r\n                        }else{\r\n                            endpl[index] = this.data.length[index];\r\n                        }\r\n                    });\r\n                    console.log(\"maxlength\",maxlength)\r\n                    // build the chrom_data information\r\n                    const chrom_data = [];\r\n                    // build the chrom_data1 object\r\n                    const chrom_data1 = {\r\n                        length: parseInt((this.data.length[0]/1000000).toFixed(2)),\r\n                        value: value1,\r\n                        each_step:height/maxlength,\r\n                        endpl:endpl[0]\r\n                    };\r\n                    //add chrom_data1 to chrom_data\r\n                    chrom_data.push(chrom_data1);\r\n                    //build the chrom_data2 object\r\n                    const chrom_data2 = {\r\n                        length: parseInt((this.data.length[1]/1000000).toFixed(2)),\r\n                        value: value2,\r\n                        each_step: height/maxlength,\r\n                        endpl:endpl[1]\r\n                    };\r\n                    //add chrom_data2 to chrom_data\r\n                    chrom_data.push(chrom_data2);\r\n                    //build the chrom_data3 object\r\n                    const chrom_data3 = {\r\n                        length: parseInt((this.data.length[2]/1000000).toFixed(2)),\r\n                        value: value3,\r\n                        each_step: height/maxlength,\r\n                        endpl:endpl[2]\r\n                    };\r\n                    //add chrom_data3 to chrom_data\r\n                    chrom_data.push(chrom_data3);\r\n                    //build the chrom_data4 object\r\n                    const chrom_data4 = {\r\n                        length: parseInt((this.data.length[3]/1000000).toFixed(2)),\r\n                        value: value4,\r\n                        each_step: height/maxlength,\r\n                        endpl:endpl[3]\r\n                    };\r\n                    //add chrom_data4 to chrom_data\r\n                    chrom_data.push(chrom_data4);\r\n                     \r\n                    //build the chrom_data5 object\r\n                    const chrom_data5 = {\r\n                        length: parseInt((this.data.length[4]/1000000).toFixed(2)),\r\n                        value: value5,\r\n                        each_step: height/maxlength,\r\n                        endpl:endpl[4]\r\n                    };\r\n                    //add chrom_data5 to chrom_data\r\n                    chrom_data.push(chrom_data5);\r\n\r\n                    const ruler = []; \r\n                    let maxruler = (maxlength /1000000) +1;\r\n                    for(let i= 0; i<=maxruler;i++){\r\n                        ruler.push(i);\r\n                    }\r\n                    console.log(\"ruler\",ruler)\r\n                    \r\n                    const prop = {\r\n                        chrom_data : chrom_data,\r\n                        length : this.data.length,\r\n                        width : this.data.width,\r\n                        height : this.data.height,\r\n                        maxlength : maxlength,\r\n                        ruler : ruler,\r\n                        maxruler: maxruler,\r\n                        plot : this.data.plot,\r\n                    }\r\n                    //return chrom_data information\r\n                    this.data.ruler = ruler\r\n                    this.data.chrom_data = chrom_data;\r\n                    this.data.maxlength = maxlength;\r\n                    this.data.maxruler = maxruler;\r\n                    this.data.prop = prop;\r\n           \r\n                    return {chrom_data,length,maxlength,ruler,maxruler};\r\n                }\r\n\r\n            }\r\n        },\r\n        setup() { \r\n            console.log(\"this.data:\",this[\"_data\"]);\r\n            //registerEditorConfig(editorConfig(this), editorRef);\r\n        },\r\n    });\r\n\r\n    return visualizer;\r\n}\r\n\r\nexport function registerBoxplot() {\r\n    register(MODULE_NAME, init);\r\n}\r\nregister(MODULE_NAME, init);\r\n"]},"metadata":{},"sourceType":"module"}