{"ast":null,"code":"function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { LazyElementDef } from \"./element-def\";\nvar indices = [0];\n\nvar RenderMixin = /*#__PURE__*/function () {\n  function RenderMixin() {\n    _classCallCheck(this, RenderMixin);\n  }\n\n  _createClass(RenderMixin, [{\n    key: \"_z\",\n    value: function _z(tag, id) {\n      var useAutoKey = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var staticVal = arguments.length > 3 ? arguments[3] : undefined;\n      var block = arguments.length > 4 ? arguments[4] : undefined;\n      var uniqID = \"\".concat(id, \"-\").concat(indices[indices.length - 1]);\n      if (useAutoKey) id = uniqID;\n      return new LazyElementDef(this.$v, tag, id, uniqID, staticVal, block);\n    }\n  }, {\n    key: \"_c\",\n    value: function _c(tag, id) {\n      var useAutoKey = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var opt = arguments.length > 3 ? arguments[3] : undefined;\n      var rawChildren = arguments.length > 4 ? arguments[4] : undefined;\n      if (useAutoKey) id = \"\".concat(id, \"-\").concat(indices[indices.length - 1]);\n      var children = rawChildren.flat(8).filter(function (x) {\n        return x;\n      });\n      return {\n        tag: tag,\n        id: id,\n        opt: opt,\n        children: children\n      };\n    }\n  }, {\n    key: \"_l\",\n    value: function _l(data, iter) {\n      var _isOuterLoop = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n      if (_isOuterLoop) indices.push(0);\n      var result;\n\n      if (typeof data === \"number\") {\n        result = Array(data).fill(null).map(function (_, i) {\n          indices[indices.length - 1]++;\n          return iter(i, i);\n        });\n      } else if (data instanceof Array) {\n        result = data.map(function (d, i) {\n          indices[indices.length - 1]++;\n          return iter(d, i);\n        });\n      } else if (_typeof(data) === \"object\") {\n        result = Object.entries(data).map(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              k = _ref2[0],\n              v = _ref2[1];\n\n          indices[indices.length - 1]++;\n          return iter(v, k);\n        });\n      } else {\n        throw Error(\"The data to be iterated through should be an array or object, not \".concat(data));\n      }\n\n      if (_isOuterLoop) indices.pop();\n      return result.flat();\n    }\n  }, {\n    key: \"_i\",\n    value: function _i(f) {\n      f[\"__internal__\"] = true;\n      return f;\n    }\n  }, {\n    key: \"_y\",\n    value: function _y(prop, name, data, children) {\n      if (name === \"children\") {\n        return prop.namedChildren.children ? prop.namedChildren.children(data) : prop.children.length === 0 ? children : prop.children;\n      }\n\n      return prop.namedChildren[name] ? prop.namedChildren[name](data) : children;\n    }\n  }]);\n\n  return RenderMixin;\n}();\n\nexport { RenderMixin as default };","map":null,"metadata":{},"sourceType":"module"}