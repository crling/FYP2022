{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport _ from 'lodash';\nimport Vue from 'vue';\nimport axios from 'axios';\nimport objectToFormData from 'object-to-formdata';\nimport BootstrapVue from 'bootstrap-vue';\nimport VueTagsInput from '@johmun/vue-tags-input';\nimport AlertCenter from 'components/alert-center.vue';\nimport GlobalSaveButton from 'components/global-save-button.vue';\nimport * as $ from \"jquery\";\nVue.use(BootstrapVue);\nexport default {\n  data: function data() {\n    return {\n      id: window.gon.id,\n      app: {\n        name: '',\n        inputs: []\n      },\n      params: {},\n      pipeline_json: {},\n      files: {},\n      selected: {},\n      boolSelectOpt: [{\n        value: true,\n        text: 'Yes'\n      }, {\n        value: false,\n        text: 'No'\n      }],\n      inputValid: {},\n      submitted: false,\n      isLoading: false,\n      jobID: ''\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    this.selected = {};\n    this.select_box_option = [];\n    var ds = window.gon.select_box_option;\n    var oplist = [];\n\n    for (var key in ds) {\n      var op = {\n        value: key,\n        lable: key\n      };\n      oplist.push(op);\n    }\n\n    this.select_box_option = oplist;\n    axios.get(\"https://deepomics.org/api/pipeline_flowchart/\".concat(this.id, \"/\")).then(function (response) {\n      _this.app = response.data;\n      _this.app.id = _this.id;\n      console.log(_this.app);\n\n      for (var k in _this.app.inputs) {\n        // alert(k);\n        _this.files['i-' + _this.app.inputs[k].id] = null;\n      }\n    });\n    axios.get(\"https://deepomics.org/api/pipelines/\".concat(this.id, \"/\")).then(function (response) {\n      var alertCenter = _this.$refs.alertCenter;\n\n      if (response.data.code) {\n        _this.app.name = response.data.name;\n        _this.params = response.data.data;\n        _this.pipeline_json = response.data.pipeline_json;\n      } else {\n        alertCenter.add('danger', response.data.data);\n      }\n    }); // $(\"#disable-fill\").fadeIn(10);\n    // this.isLoading=true;\n  },\n  computed: {\n    displayedInputs: function displayedInputs() {\n      // eslint-disable-next-line\n      return _.sortBy(this.app.inputs.filter(function (x) {\n        return !x._destroy;\n      }), ['name']);\n    },\n    displayedParams: function displayedParams() {\n      // eslint-disable-next-line\n      // return _.sortBy(this.app.params.filter(x => !x._destroy), ['name']);\n      // return _.sortBy(this.app.nodes.filter(x => !x._destroy), ['name']);\n      return this.params;\n    }\n  },\n  watch: {},\n  methods: {\n    setStatusColor: function setStatusColor(status) {\n      switch (status) {\n        case 'wait':\n          return 'secondary';\n\n        case 'running':\n          return 'info';\n\n        case 'finished':\n          return 'success';\n\n        case 'failed':\n          return 'danger';\n\n        case 'suspended':\n          return 'warning';\n\n        case 'aborted':\n          return 'danger';\n      }\n    },\n    formatInputs: function formatInputs() {\n      return Array.from(document.querySelectorAll(\"input[name^='i-']\")).filter(function (x) {\n        return x.value;\n      }).map(function (_ref) {\n        var name = _ref.name,\n            value = _ref.value;\n        return _defineProperty({}, name, value);\n      });\n    },\n    formatParams: function formatParams() {\n      return Array.from(document.querySelectorAll(\"input[name^='p-'], select[name^='p-']\")).filter(function (x) {\n        return x.value;\n      }).map(function (_ref3) {\n        var name = _ref3.name,\n            value = _ref3.value;\n        return _defineProperty({}, name, value);\n      });\n    },\n    submitTask: function submitTask() {\n      var _this2 = this;\n\n      var alertCenter = this.$refs.alertCenter;\n      var allRight = true;\n      document.querySelectorAll('input').forEach(function (input) {\n        if (input.required) {\n          var valid = !!input.value && !!_.trim(input.value);\n          Vue.set(_this2.inputValid, input.name, valid);\n\n          if (!valid) {\n            allRight = false;\n          }\n        }\n      });\n\n      if (allRight) {\n        var alertData;\n        $(\"#disable-fill\").fadeIn(10);\n        this.isLoading = true;\n        axios.post(\"/submit-app-task/\", objectToFormData({\n          \"app_id\": this.app.id,\n          \"inputs\": this.files,\n          \"params\": this.formatParams(),\n          \"selected\": this.selected,\n          \"pid\": this.id,\n          \"is_pipeline\": true\n        }), {\n          headers: {\n            'X-Requested-With': 'XMLHttpRequest',\n            'X-CSRF-Token': document.head.querySelector('meta[name=\"csrf-token\"]').content,\n            'Content-Type': 'multipart/form-data'\n          }\n        }).then(function (response) {\n          if (response.data.code) {\n            _this2.jobID = response.data.data.task_id;\n            _this2.submitted = true;\n          } else {\n            alertData = response.data.msg;\n          }\n        })[\"catch\"](function (reason) {\n          alertData = reason;\n        })[\"finally\"](function () {\n          setTimeout(function () {\n            $(\"#disable-fill\").fadeOut(10);\n            _this2.isLoading = false;\n\n            if (!!alertData) {\n              alertCenter.add('danger', alertData);\n            }\n          }, 2000);\n        });\n      }\n    },\n    setSelectBox: function setSelectBox() {\n      var i = 0;\n      var s = \"<option disabled vaule=''>Choose a file</option>\";\n      var list = [\"dataset1-data.csv\", \"dataset2-data.csv\", \"dataset3-data.csv\"];\n\n      for (i = 0; i < list.length; i++) {\n        s += \"<option>\" + list[i] + \"</option>\";\n      }\n\n      this.$refs.select_box = s;\n    }\n  },\n  components: {\n    VueTagsInput: VueTagsInput,\n    AlertCenter: AlertCenter,\n    GlobalSaveButton: GlobalSaveButton\n  }\n};","map":{"version":3,"sources":["job-submit-pipeline.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <!-- eslint-disable max-len -->\n    <div class=\"row my-4\">\n        <div class=\"col-md-12\">\n            <div id=\"run-app\">\n                <alert-center ref=\"alertCenter\" />\n                \n                <!-- Inputs -->\n                <div v-if=\"!submitted\">\n                    <h3 class=\"text-center\">{{ app.name }}\n                        <i class=\"fa  fa-question-circle\" v-b-tooltip\n                                       :title=\"app.description\"></i>\n                    </h3>\n                    <div class=\"set-input-section\" ref=\"inputSection\">\n                        <h4>Set Input Data</h4>\n                        <template v-if=\"displayedInputs.length > 0\">\n                            <div class=\"row\">\n                                <div class=\"col-md-6\" v-for=\"input in displayedInputs\" :key=\"input.id\">\n                                    <label :for=\"`i-${input.id}`\">{{ input.name }}\n                                        <span v-if=\"input.required\" class=\"required\">*</span>\n                                        <i class=\"fa  fa-question-circle\" v-b-tooltip\n                                        :title=\"input.description\"></i>\n                                    </label>\n\n                                    <select class=\"form-control custom-select\" \n                                        v-if=\"input.name=='second_i'\"\n                                        :id=\"`i-${input.id}`\"\n                                        :name=\"`i-${input.id}`\"\n                                        :required=\"input.required\"\n                                        v-model=\"selected[`i-${input.id}`]\"\n                                        :state=\"inputValid[`i-${input.id}`]\"\n                                    >\n                                        <option value=\"\">--Please choose a file--</option>\n                                        <option v-for=\"(option, index) in select_box_option\" :key=\"index\" :value=\"option.value\" :disabled=\"option.disabled\">\n                                            {{option.lable}}\n                                        </option>\n                                    </select>\n\n                                    <b-form-file\n                                        v-else\n                                        :id=\"`i-${input.id}`\"\n                                        v-model=\"files[`i-${input.id}`]\"\n                                        :state=\"inputValid[`i-${input.id}`]\"\n                                        placeholder=\"Choose a file or drop it here...\"\n                                        drop-placeholder=\"Drop file here...\"\n                                        :name=\"`i-${input.id}`\"\n                                        :required=\"input.required\"\n                                    ></b-form-file>\n\n\n\n                                </div>\n                            </div>\n                        </template>\n                    </div>\n                \n                    <!-- Params -->\n                    <div class=\"set-param-section mt-4\">\n                        <h4>Set Parameters</h4>\n                        <template v-if=\"Object.keys(displayedParams).length > 0\">\n                            <b-list-group>\n                                <div v-for=\"(value, key) in displayedParams\" :key=\"value.id\">\n                                    <b-list-group-item href=\"javascript:void(0)\" v-b-toggle=\"`m-${value.id}`\" class=\"mb-2\">\n                                        <i class=\"fab fa-app-store-ios\"></i> {{ key }}\n                                    </b-list-group-item>\n                                    <b-collapse visible :id=\"`m-${value.id}`\" class=\"mb-4 p-4 border\">\n                                        <div class=\"row\">\n                                            <div class=\"col-md-6\" v-for=\"param in value.params\" :key=\"param.id\">\n                                                <label :for=\"`p-${param.id}`\">{{ param.name }}\n                                                    <span v-if=\"param.required\" class=\"required\">*</span>\n                                                    <i class=\"fa  fa-question-circle\" v-b-tooltip\n                                                    :title=\"param.description\"></i>\n                                                </label>\n                                                <div v-if=\"param.param_type === 'string'\">\n                                                    <b-form-input :id=\"`p-${param.id}`\" :value=\"param.default\" :required=\"param.required\"\n                                                                :name=\"`p-${param.id}`\" :state=\"inputValid[`p-${param.id}`]\" />\n                                                </div>\n                                                <div v-else-if=\"param.param_type === 'int'\">\n                                                    <b-form-input :id=\"`p-${param.id}`\" :value=\"param.default\" type=\"number\" step=\"1\"\n                                                                :required=\"param.required\" :name=\"`p-${param.id}`\"\n                                                                :state=\"inputValid[`p-${param.id}`]\"/>\n                                                </div>\n                                                <div v-else-if=\"param.param_type === 'float'\">\n                                                    <b-form-input :id=\"`p-${param.id}`\" :value=\"param.default\" type=\"number\"\n                                                                step=\"0.01\" :required=\"param.required\"\n                                                                :name=\"`p-${param.id}`\" :state=\"inputValid[`p-${param.id}`]\"/>\n                                                </div>\n                                                <div v-else-if=\"param.param_type === 'boolean'\">\n                                                    <b-form-select :id=\"`p-${param.id}`\" :options=\"boolSelectOpt\" :required=\"param.required\"\n                                                                :name=\"`p-${param.id}`\" :state=\"inputValid[`p-${param.id}`]\"/>\n                                                </div>\n                                                <div v-else-if=\"param.param_type === 'enum'\">\n                                                    <select :id=\"`p-${param.id}`\" class=\"form-control custom-select\" \n                                                            :required=\"param.required\" :name=\"`p-${param.id}`\" \n                                                            :state=\"inputValid[`p-${param.id}`]\">\n                                                        <option v-for=\"option in param.options\" :value=\"option\" :key=\"option\"\n                                                                :selected=\"param.default == option ? 'selected' : ''\">\n                                                            {{ option }}\n                                                        </option>\n                                                    </select>\n                                                </div>\n                                                <div v-else-if=\"param.param_type === 'splitchr'\">\n                                                    <b-form-select :id=\"`p-${param.id}`\" :options=\"boolSelectOpt\" \n                                                                :required=\"param.required\" :name=\"`p-${param.id}`\" \n                                                                :state=\"inputValid[`p-${param.id}`]\" />\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </b-collapse>\n                                </div>\n                            </b-list-group>\n                        </template>\n                        <p v-if=\"Object.keys(displayedParams).length == 0\">No Parameters.</p>\n                    </div>\n                    \n                    <b-btn @click=\"submitTask\" class=\"float-right mt-2\"><i class=\"fa fa-location-arrow\"></i> Submit</b-btn>\n                    <div class=\"is-loading\" v-if=\"isLoading\">\n                        <i class=\"fas fa-spinner fa-pulse fa-5x m-0\"></i>\n                        <h3 class=\"mt-4\">Submitting task……</h3>\n                    </div>\n                </div>\n                <div v-else>\n                    <b-card class=\"text-center job-info\">\n                        <p>Job submitted successfully. The job ID is <span class=\"text-danger\">{{jobID}}</span>. You can check your job status via this job ID in job query page. Please write down the job ID in your note book.</p>\n                    </b-card>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import _ from 'lodash';\n    import Vue from 'vue';\n    import axios from 'axios';\n    import objectToFormData from 'object-to-formdata';\n    import BootstrapVue from 'bootstrap-vue';\n    import VueTagsInput from '@johmun/vue-tags-input';\n    import AlertCenter from 'components/alert-center.vue';\n    import GlobalSaveButton from 'components/global-save-button.vue';\n    import * as $ from \"jquery\";\n\n    Vue.use(BootstrapVue);\n\n    export default {\n        data() {\n            return {\n                id: window.gon.id,\n                app: {\n                    name: '',\n                    inputs: [],\n                },\n                params: {},\n                pipeline_json: {},\n                files: {\n\n                },\n                selected: {},\n                boolSelectOpt: [\n                    { value: true, text: 'Yes' },\n                    { value: false, text: 'No' },\n                ],\n                inputValid: {},\n                submitted: false,\n                isLoading: false,\n                jobID: '',\n            };\n        },\n        created() {\n            this.selected = {};\n            this.select_box_option = [];\n            var ds = window.gon.select_box_option;\n            var oplist = [];\n            for (var key in ds){\n                var op = {value: key, lable: key};\n                oplist.push(op);\n            }\n            this.select_box_option = oplist\n\n            axios.get(`https://deepomics.org/api/pipeline_flowchart/${this.id}/`).then((response) => {\n                this.app = response.data;\n                this.app.id = this.id;\n                console.log(this.app);\n                for (var k in this.app.inputs){\n                    // alert(k);\n                    this.files['i-' + this.app.inputs[k].id]  = null;\n                }\n            });\n            axios.get(`https://deepomics.org/api/pipelines/${this.id}/`).then((response) => {\n                const { alertCenter } = this.$refs;\n                if (response.data.code) {\n                    this.app.name = response.data.name;\n                    this.params = response.data.data;\n                    this.pipeline_json = response.data.pipeline_json;\n                } else {\n                    alertCenter.add('danger', response.data.data);\n                }\n            });\n            // $(\"#disable-fill\").fadeIn(10);\n            // this.isLoading=true;\n        },\n        computed: {\n            displayedInputs() {\n                // eslint-disable-next-line\n                return _.sortBy(this.app.inputs.filter(x => !x._destroy), ['name']);\n            },\n            displayedParams() {\n                // eslint-disable-next-line\n                // return _.sortBy(this.app.params.filter(x => !x._destroy), ['name']);\n                // return _.sortBy(this.app.nodes.filter(x => !x._destroy), ['name']);\n                return this.params;\n            }\n        },\n        watch: {\n        },\n        methods: {\n            setStatusColor(status) {\n                switch (status) {\n                    case 'wait':\n                        return 'secondary';\n                    case 'running':\n                        return 'info';\n                    case 'finished':\n                        return 'success';\n                    case 'failed':\n                        return 'danger';\n                    case 'suspended':\n                        return 'warning';\n                    case 'aborted':\n                        return 'danger';\n                }\n            },\n            formatInputs() {\n                return Array.from(document.querySelectorAll(\"input[name^='i-']\"))\n                            .filter(x => x.value)\n                            .map(({ name, value }) => ({ [name]: value}));\n            },\n            formatParams() {\n                return Array.from(document.querySelectorAll(\"input[name^='p-'], select[name^='p-']\"))\n                            .filter(x => x.value)\n                            .map(({ name, value }) => ({ [name]: value}));\n            },\n            submitTask() {\n                const { alertCenter } = this.$refs;\n                let allRight = true;\n                document.querySelectorAll('input').forEach((input) => {\n                    if(input.required) {\n                        const valid = !!input.value && !!_.trim(input.value);\n                        Vue.set(this.inputValid, input.name, valid);\n                        if (!valid) {\n                            allRight = false;\n                        }\n                    }\n                })\n                if (allRight) {\n                    let alertData;\n                    $(\"#disable-fill\").fadeIn(10);\n                    this.isLoading=true;\n                    axios.post(\n                        `/submit-app-task/`,\n                        objectToFormData({\n                            \"app_id\": this.app.id,\n                            \"inputs\": this.files,\n                            \"params\": this.formatParams(),\n                            \"selected\": this.selected,\n                            \"pid\": this.id,\n                            \"is_pipeline\": true,\n                        }),\n                        {\n                            headers: {\n                                'X-Requested-With': 'XMLHttpRequest',\n                                'X-CSRF-Token': document.head.querySelector('meta[name=\"csrf-token\"]').content,\n                                'Content-Type': 'multipart/form-data',\n                            },\n                        },\n                    ).then((response) => {\n                        if (response.data.code) {\n                            this.jobID = response.data.data.task_id;\n                            this.submitted = true;\n                        } else {\n                            alertData = response.data.msg;\n                        }\n                    }).catch((reason) => {\n                        alertData = reason;\n                    }).finally(() => {\n                        setTimeout(() => {\n                            $(\"#disable-fill\").fadeOut(10);\n                            this.isLoading = false;\n                            if (!!alertData) {\n                                alertCenter.add('danger', alertData);\n                            }\n                        }, 2000);\n                    });\n                }\n            },\n            setSelectBox(){\n                var i = 0;\n                var s = \"<option disabled vaule=''>Choose a file</option>\";\n                var list = [\"dataset1-data.csv\", \"dataset2-data.csv\", \"dataset3-data.csv\"]\n\n                for(i=0; i<list.length; i++){\n                    s += \"<option>\" + list[i] + \"</option>\";\n                }\n\n                this.$refs.select_box = s\n\n            },\n        },\n        components: {\n            VueTagsInput, AlertCenter, GlobalSaveButton,\n        },\n    };\n</script>\n\n<style lang=\"scss\">\n@import '~bootstrap/scss/bootstrap.scss';\n@import '~bootstrap-vue/src/index.scss';\n#run-app #alert-center {\n\tz-index: 1000;\n}\n\n#run-app .required {\n\tcolor: red;\n}\n\n#run-app .set-input-section label {\n\tmargin-top: 10px;\n}\n\n#run-app .set-input-section input {\n\tpadding-right: 46px;\n\tcursor: pointer;\n}\n\n#run-app .set-input-section .icon-append {\n\ttop: 38px;\n\tcolor: #6f6f6f;\n\tcursor: pointer;\n\tright: 10px;\n\tpadding-left: 3px;\n\tborder-left: solid 1px #d7d7d7;\n\tposition: absolute;\n\twidth: 34px;\n\theight: 34px;\n\tfont-size: 15px;\n\tline-height: 34px;\n\ttext-align: center;\n}\n\n#run-app .set-param-section label {\n\tmargin-top: 10px;\n}\n#run-app .job-info{\n    min-height: 200px;\n    padding: 100px 20px;\n    font-size: 30px;\n}\n.is-loading {\n    margin: 0 1px;\n    padding: 8rem 4rem;\n    text-align: center;\n    color: #000;\n    position: absolute;\n    top:0;\n    z-index: 1000;\n    width: 100%;\n    height: 100%;\n}\n</style>\n"],"sourceRoot":"app/javascript"},"metadata":{},"sourceType":"module"}