{"ast":null,"code":"function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _toArray(arr) { return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest(); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport { GeometryValue } from \"../defs/geometry\";\nimport { getFinalPosition } from \"../layout/layout\";\nimport { canvasClip } from \"../rendering/canvas/canvas-helper\";\nimport helperMixin from \"../rendering/helper-mixin\";\nimport RenderMixin from \"../rendering/render-mixin\";\nimport { updateTree } from \"../rendering/render-tree\";\nimport { svgPropClip } from \"../rendering/svg/svg-helper\";\nimport { compile } from \"../template/compiler\";\nimport { toRad } from \"../utils/math\";\nimport { applyMixins } from \"../utils/mixin\";\nimport { BaseElement } from \"./base-element\";\nimport { isRenderable } from \"./is\";\nimport { scaled, ScaleMixin, shift1 } from \"./scale\";\nexport var Component = /*#__PURE__*/function (_BaseElement) {\n  _inherits(Component, _BaseElement);\n\n  var _super = _createSuper(Component);\n\n  function Component() {\n    var _this;\n\n    var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var renderer = arguments.length > 1 ? arguments[1] : undefined;\n\n    _classCallCheck(this, Component);\n\n    _this = _super.call(this, id);\n    _this.$ref = {};\n    _this.children = [];\n    _this.$isCoordRoot = false;\n    _this.$_extraTransforms = [];\n    _this._childMap = new Map();\n    _this._h = helperMixin;\n\n    if (renderer) {\n      _this.render = renderer;\n    }\n\n    return _this;\n  }\n\n  _createClass(Component, [{\n    key: \"defaultProp\",\n    value: function defaultProp() {\n      return {\n        x: 0,\n        y: 0,\n        width: GeometryValue.fullSize\n      };\n    }\n  }, {\n    key: \"setProp\",\n    value: function setProp(prop) {\n      if (!(\"width\" in prop)) this._defaultedWidth = true;\n      if (!(\"height\" in prop)) this._defaultedHeight = true;\n\n      _get(_getPrototypeOf(Component.prototype), \"setProp\", this).call(this, prop);\n    }\n  }, {\n    key: \"append\",\n    value: function append(node) {\n      this.children.push(node);\n\n      this._childMap.set(\"\".concat(node.id, \"@@\").concat(node._name), node);\n\n      node.$v = this.$v;\n      node.parent = this;\n    }\n  }, {\n    key: \"findChild\",\n    value: function findChild(id, type) {\n      return this._childMap.get(\"\".concat(id, \"@@\").concat(type));\n    }\n  }, {\n    key: \"renderTree\",\n    value: function renderTree() {\n      updateTree(this);\n    }\n  }, {\n    key: \"_getTransformation\",\n    value: function _getTransformation() {\n      var v;\n      var x = 0,\n          y = 0;\n\n      if (!(this.$coord && this.$coord.$polar && !this.$isCoordRoot)) {\n        var _getFinalPosition = getFinalPosition(this);\n\n        var _getFinalPosition2 = _slicedToArray(_getFinalPosition, 2);\n\n        x = _getFinalPosition2[0];\n        y = _getFinalPosition2[1];\n      }\n\n      if (v = this.prop.rotation) {\n        if (typeof v === \"number\") return [x, y, v, 0, 0];else if (Array.isArray(v)) return [x, y, v[0], v[1] === \"_\" ? x : v[1], v[2] === \"_\" ? y : v[2]];else throw new Error(\"transform value must be a number or an array.\");\n      }\n\n      return [x, y, 0, 0, 0];\n    }\n  }, {\n    key: \"svgTagName\",\n    // svg\n    value: function svgTagName() {\n      return \"g\";\n    }\n  }, {\n    key: \"svgTextContent\",\n    value: function svgTextContent() {\n      return null;\n    }\n  }, {\n    key: \"svgAttrs\",\n    value: function svgAttrs() {\n      var attrs = svgPropClip(this);\n\n      var _this$_getTransformat = this._getTransformation(),\n          _this$_getTransformat2 = _slicedToArray(_this$_getTransformat, 5),\n          x = _this$_getTransformat2[0],\n          y = _this$_getTransformat2[1],\n          rc = _this$_getTransformat2[2],\n          rx = _this$_getTransformat2[3],\n          ry = _this$_getTransformat2[4];\n\n      var rotateAfterTranslate = this.prop.rotateAfterTranslate;\n      var transform = x === 0 && y === 0 ? \"\" : \"translate(\".concat(x, \",\").concat(y, \")\");\n      var hasExtraTransform = this.$_extraTransforms.length;\n\n      if (rc !== 0) {\n        if (rx === 0 && ry === 0) {\n          transform = rotateAfterTranslate ? \"\".concat(transform, \" rotate(\").concat(rc, \")\") : \"rotate(\".concat(rc, \") \").concat(transform);\n        } else {\n          transform = rotateAfterTranslate ? \"\".concat(transform, \" rotate(\").concat(rc, \",\").concat(rx, \",\").concat(ry, \")\") : \"rotate(\".concat(rc, \",\").concat(rx, \",\").concat(ry, \") \").concat(transform);\n        }\n      }\n\n      if (transform || hasExtraTransform) {\n        attrs.transform = transform;\n        attrs.transform += this.$_extraTransforms.reduce(function (p, _ref) {\n          var _ref2 = _toArray(_ref),\n              name = _ref2[0],\n              args = _ref2.slice(1);\n\n          return \"\".concat(p, \" \").concat(name, \"(\").concat(args.join(\",\"), \")\");\n        }, \"\");\n      }\n\n      if (\"opacity\" in this.prop) {\n        attrs.opacity = this.prop.opacity;\n      }\n\n      if (\"events\" in this.prop) {\n        attrs[\"pointer-events\"] = this.prop.events;\n      }\n\n      return attrs;\n    } // canvas\n\n  }, {\n    key: \"renderToCanvas\",\n    value: function renderToCanvas(ctx) {\n      var t = this.$_cachedTransform = this._getTransformation();\n\n      var _t = _slicedToArray(t, 5),\n          x = _t[0],\n          y = _t[1],\n          rc = _t[2],\n          rx = _t[3],\n          ry = _t[4];\n\n      if (this.$_extraTransforms.length) {\n        var _iterator = _createForOfIteratorHelper(this.$_extraTransforms),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var _ref5 = _step.value;\n\n            var _ref4 = _toArray(_ref5);\n\n            var name = _ref4[0];\n\n            var args = _ref4.slice(1);\n\n            if (name === \"scale\") ctx.scale(args[0], args[0]);else if (name === \"translate\") ctx.translate.apply(ctx, args);else if (name === \"rotate\") ctx.rotate(args[0]);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      } else {\n        var rotateAfterTranslate = this.prop.rotateAfterTranslate;\n        var needTranslate = x !== 0 || y !== 0;\n\n        if (rotateAfterTranslate && needTranslate) {\n          ctx.translate(x, y);\n        }\n\n        if (rc !== 0) {\n          if (rx === 0 && ry === 0) {\n            ctx.rotate(toRad(rc));\n          } else {\n            ctx.translate(rx, ry);\n            ctx.rotate(toRad(rc));\n            ctx.translate(-rx, -ry);\n          }\n        }\n\n        if (!rotateAfterTranslate && needTranslate) {\n          ctx.translate(x, y);\n        }\n      }\n\n      canvasClip(ctx, this);\n    } // geometry\n\n  }, {\n    key: \"__didLayout\",\n    value: function __didLayout() {\n      if (\"xScale\" in this.prop) this._initScale(true);\n      if (\"yScale\" in this.prop) this._initScale(false);\n\n      if (this.prop.coord === \"polar\" && !this.inPolorCoordSystem) {\n        var $g = this.$geometry;\n        var r = Math.min($g.width, $g.height) * 0.5;\n        var cx = $g.width * 0.5;\n        var cy = $g.height * 0.5;\n        this.$polar = {\n          r: r,\n          cx: cx,\n          cy: cy,\n          rad: !!this.prop.coordUseRad\n        };\n        this.$geometry._xOffset.polor = cx;\n        this.$geometry._yOffset.polor = cy;\n      } else if (this.$polar) {\n        this.$polar = undefined;\n        delete this.$geometry._xOffset.polor;\n        delete this.$geometry._yOffset.polor;\n      }\n    }\n  }, {\n    key: \"_initScale\",\n    value: function _initScale(horizontal) {\n      var s = horizontal ? this.prop.xScale : this.prop.yScale;\n      var k = horizontal ? \"$scaleX\" : \"$scaleY\";\n\n      if (s === null) {\n        this[k] = null;\n      } else if (_typeof(s) === \"object\" && s.__scale__) {\n        if (this[k] && s.type === this[k].__type__) {\n          var scale = this[k];\n          var domain = s.domain === null ? [0, 1] : s.domain;\n          scale.domain(s.type === \"log\" ? shift1(domain) : domain);\n          scale.range(s.range === null ? this.boundaryForScale(horizontal) : s.range);\n        } else {\n          this[k] = this._createScale(s.type, horizontal, s.domain, s.range);\n        }\n      } else if (typeof s === \"function\") {\n        this[k] = s;\n      }\n    }\n  }, {\n    key: \"getScale\",\n    value: function getScale(horizontal) {\n      return (horizontal ? this.$scaleX : this.$scaleY) || (this.parent ? this.parent.getScale(horizontal) : null);\n    }\n  }, {\n    key: \"geometryProps\",\n    value: function geometryProps() {\n      var _get$call = _get(_getPrototypeOf(Component.prototype), \"geometryProps\", this).call(this),\n          h = _get$call.h,\n          v = _get$call.v;\n\n      return {\n        h: [].concat(_toConsumableArray(h), [\"width\"]),\n        v: [].concat(_toConsumableArray(v), [\"height\"])\n      };\n    }\n  }, {\n    key: \"boundaryForScale\",\n    value: function boundaryForScale(horizontal) {\n      var size = horizontal ? this.$polar ? this.$polar.rad ? Math.PI * 2 : 360 : this.$geometry.width : this.$polar ? this.$polar.r : this.$geometry.height;\n      return [0, size];\n    }\n  }, {\n    key: \"_updateGeometry\",\n    value: function _updateGeometry(key, value) {\n      var c = this;\n\n      while (true) {\n        c.$geometry[key] = value;\n\n        if (isRenderable(c)) {\n          c = c.children[0];\n        } else break;\n      }\n    }\n  }, {\n    key: \"_scale\",\n    value: function _scale(val, horizontal) {\n      if (this.$parent) {\n        if (horizontal) this.$parent.isInXScaleSystem = true;else this.$parent.isInYScaleSystem = true;\n      }\n\n      if (horizontal) this.isInXScaleSystem = true;else this.isInYScaleSystem = true;\n      var scale = this.getScale(horizontal);\n      return typeof scale === \"function\" ? scaled(scale, val) : val;\n    }\n  }, {\n    key: \"isStatic\",\n    get: function get() {\n      if (this.$v.forceRedraw) return false;\n\n      if (typeof this.prop[\"static\"] === \"function\") {\n        return this.prop[\"static\"]();\n      }\n\n      return this.prop[\"static\"];\n    }\n  }, {\n    key: \"maxX\",\n    get: function get() {\n      return this.$geometry.x + this.$geometry.width;\n    }\n  }, {\n    key: \"maxY\",\n    get: function get() {\n      return this.$geometry.y + this.$geometry.height;\n    }\n  }, {\n    key: \"widthIsNotDefined\",\n    get: function get() {\n      return !this.prop.width || this._inheritedWidth && this.parent._defaultedWidth;\n    }\n  }, {\n    key: \"heightIsNotDefined\",\n    get: function get() {\n      return !this.prop.height || this._inheritedHeight && this.parent._defaultedHeight;\n    }\n  }]);\n\n  return Component;\n}(BaseElement);\nvar kCachedrenderFunc = Symbol(\"CachedRenderFunction\");\n\nvar TemplateMixin = /*#__PURE__*/function () {\n  function TemplateMixin() {\n    _classCallCheck(this, TemplateMixin);\n  }\n\n  _createClass(TemplateMixin, [{\n    key: \"t\",\n    // @ts-ignore\n    value: function t(_t2) {\n      var template = \"\";\n\n      for (var i = 0; i < (arguments.length <= 1 ? 0 : arguments.length - 1); i++) {\n        template += _t2[i];\n        template += i + 1 < 1 || arguments.length <= i + 1 ? undefined : arguments[i + 1];\n      }\n\n      template += _t2[_t2.length - 1];\n      var p = this.constructor.prototype;\n      var cached = p[kCachedrenderFunc];\n\n      if (cached) {\n        return cached.call(this);\n      }\n\n      var renderFunc = compile(template).renderer;\n      p[kCachedrenderFunc] = renderFunc;\n      return renderFunc.call(this);\n    }\n  }]);\n\n  return TemplateMixin;\n}();\n\napplyMixins(Component, [RenderMixin, ScaleMixin, TemplateMixin]);","map":null,"metadata":{},"sourceType":"module"}