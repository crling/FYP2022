{"ast":null,"code":"var _dec, _dec2, _dec3, _class, _class2, _descriptor, _temp;\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }\n\nimport Vue from \"vue\";\nimport Component from \"vue-class-component\";\nimport { Sketch } from \"vue-color\";\nimport { Prop, Watch } from \"vue-property-decorator\";\nimport DropdownSelect from \"page/builtin/dropdown-select.vue\";\nimport { copyObject } from \"utils/object\";\nvar ColorPicker = (_dec = Component({\n  components: {\n    \"picker\": Sketch,\n    \"dropdown-select\": DropdownSelect\n  }\n}), _dec2 = Prop(), _dec3 = Watch(\"palette\"), _dec(_class = (_class2 = (_temp = /*#__PURE__*/function (_Vue) {\n  _inherits(ColorPicker, _Vue);\n\n  var _super = _createSuper(ColorPicker);\n\n  function ColorPicker() {\n    var _this;\n\n    _classCallCheck(this, ColorPicker);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _initializerDefineProperty(_this, \"data\", _descriptor, _assertThisInitialized(_this));\n\n    _this.palette = \"default\";\n    _this.defaultScheme = void 0;\n    _this.isDark = false;\n    _this.hasThemeDependentColors = false;\n    return _this;\n  }\n\n  _createClass(ColorPicker, [{\n    key: \"mounted\",\n    value: function mounted() {\n      var _this2 = this;\n\n      this.defaultScheme = {};\n      Object.keys(this.data.scheme).forEach(function (k) {\n        if (_this2.data.scheme[k] === null) {\n          _this2.data.scheme[k] = \"#fff\";\n        } else {\n          _this2.defaultScheme[k] = _this2.data.scheme[k];\n        }\n      });\n    }\n  }, {\n    key: \"distinct\",\n    value: function distinct(colors) {\n      return _toConsumableArray(new Set(colors));\n    }\n  }, {\n    key: \"shouldShowKey\",\n    value: function shouldShowKey(key) {\n      if (key.startsWith(\"__\")) return false;\n\n      if (this.isDark) {\n        if (key.endsWith(\"(light theme)\")) return false;\n      } else {\n        if (key.endsWith(\"(dark theme)\")) return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"keyDisplayName\",\n    value: function keyDisplayName(key) {\n      if (this.data.names) return this.data.names[key];\n\n      if (key.endsWith(\"theme)\")) {\n        return key.substring(0, key.lastIndexOf(\" (\"));\n      }\n\n      return key;\n    }\n  }, {\n    key: \"paletteUpdated\",\n    value: function paletteUpdated() {\n      var _this3 = this;\n\n      var colors = this.currentColors;\n\n      if (this.palette === \"default\") {\n        Object.entries(this.defaultScheme).forEach(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              name = _ref2[0],\n              value = _ref2[1];\n\n          _this3.data.scheme[name] = value;\n        });\n      } else {\n        Object.entries(this.data.paletteMap).forEach(function (_ref3) {\n          var _ref4 = _slicedToArray(_ref3, 2),\n              name = _ref4[0],\n              idx = _ref4[1];\n\n          if (typeof idx === \"number\") {\n            _this3.data.scheme[name] = colors[idx];\n          } else {\n            _this3.data.scheme[name] = idx;\n          }\n        });\n      }\n\n      this.$forceUpdate();\n    }\n  }, {\n    key: \"toggleModal\",\n    value: function toggleModal(show) {\n      this.hasThemeDependentColors = Object.keys(this.data.scheme).some(function (k) {\n        return k.endsWith(\"theme)\");\n      });\n      this.$refs.modal[show ? \"show\" : \"hide\"]();\n    }\n  }, {\n    key: \"updateColor\",\n    value: function updateColor(key, color) {\n      this.data.scheme[key] = color;\n      this.$forceUpdate();\n    }\n  }, {\n    key: \"checkRange\",\n    value: function checkRange(data, isMin) {\n      var _this4 = this;\n\n      if (data.__min >= data.__max) {\n        alert(\"Invalid range.\");\n        this.$nextTick(function () {\n          if (isMin) data.__min = data.__max - 1;else data.__max = data.__min + 1;\n\n          _this4.$forceUpdate();\n        });\n      }\n    }\n  }, {\n    key: \"apply\",\n    value: function apply() {\n      this.data.callback(copyObject(this.data.scheme), this.data.naColor);\n    }\n  }, {\n    key: \"updateNAColor\",\n    value: function updateNAColor(color) {\n      this.data.naColor = color;\n    }\n  }, {\n    key: \"paletteOptions\",\n    get: function get() {\n      return Object.entries(this.data.palettes).map(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            value = _ref6[0],\n            data = _ref6[1];\n\n        return {\n          data: data,\n          value: value\n        };\n      });\n    }\n  }, {\n    key: \"currentColors\",\n    get: function get() {\n      if (this.data.palettes && this.palette) {\n        return this.distinct(this.data.palettes[this.palette].colors);\n      } else {\n        return null;\n      }\n    }\n  }]);\n\n  return ColorPicker;\n}(Vue), _temp), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"data\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _applyDecoratedDescriptor(_class2.prototype, \"paletteUpdated\", [_dec3], Object.getOwnPropertyDescriptor(_class2.prototype, \"paletteUpdated\"), _class2.prototype)), _class2)) || _class);\nexport { ColorPicker as default };","map":{"version":3,"sources":["color-picker.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <b-btn size=\"sm\" @click=\"toggleModal(true)\" block>{{ data.title || 'Customize color' }}</b-btn>\n        <b-modal ref=\"modal\" :title=\"data.title || 'Customize color'\" @ok=\"apply\" no-stacking no-fade centered>\n            <template v-if=\"data.palettes\">\n                <div class=\"pt-2 pb-1\">\n                    <div class=\"pb-2\">Color palette:</div>\n                    <dropdown-select size=\"sm\" style=\"width: 100%\" :options=\"paletteOptions\" v-model=\"palette\">\n                        <template v-slot:label=\"v\">\n                            <span>{{v.opt.data.name}}</span>\n                            <span class=\"ml-2\">\n                                <span v-for=\"(color, idx) in distinct(v.opt.data.colors)\" :key=\"idx\" :style=\"`background:${color};`\">&nbsp;&nbsp;&nbsp;&nbsp;</span>\n                            </span>\n                        </template>\n                        <template v-slot:default=\"o\">\n                            <div style=\"width: 300px\" class=\"d-flex justify-content-between\">\n                                <span>{{o.opt.data.name}}</span>\n                                <span class=\"ml-2\">\n                                    <span v-for=\"(color, idx) in distinct(o.opt.data.colors)\" :key=\"idx\" :style=\"`background:${color};`\">&nbsp;&nbsp;&nbsp;&nbsp;</span>\n                                </span>\n                            </div>\n                        </template>\n                    </dropdown-select>\n                    <div class=\"mt-3 small text-muted\">Color palettes other than \"Default\" are not optimized for the dark theme. Please consider using light themes.</div>\n                </div>\n                <div style=\"margin:0 -1rem;\"><hr></div>\n            </template>\n            <div class=\"d-flex flex-wrap\">\n                <div v-for=\"(color, key) in data.scheme\" :key=\"key\">\n                    <template v-if=\"shouldShowKey(key)\">\n                        <b-button :id=\"`popover-${data.id}-${key}`\" :ref=\"`btn-${key}`\" size=\"sm\" class=\"m-1\">\n                            {{keyDisplayName(key)}} <font :color=\"data.scheme[key]\">█</font>\n                        </b-button>\n                        <b-popover :target=\"`popover-${data.id}-${key}`\" placement=\"right\" :triggers=\"['click', 'blur']\">\n                            <picker :value=\"color\" @input=\"updateColor(key, arguments[0].hex)\" :presetColors=\"currentColors\" />\n                        </b-popover>\n                    </template>\n                </div>\n            </div>\n            <div v-if=\"data.naColor\" class=\"mt-2\">\n                <b-button :id=\"`popover-na`\" :ref=\"`btn-na`\" size=\"sm\" class=\"m-1\">\n                    Color for N/A <font :color=\"data.naColor\">█</font>\n                </b-button>\n                <b-popover :target=\"`popover-na`\" placement=\"right\" :triggers=\"['click', 'blur']\">\n                    <picker :value=\"data.naColor\" @input=\"data.naColor = arguments[0].hex\" :presetColors=\"currentColors\" />\n                </b-popover>\n            </div>\n            <div class=\"mt-2\" style=\"width:50%\" v-if=\"'__min' in data.scheme\">\n                <div class=\"small text-muted my-2 ml-2\">Value range:</div>\n                <div>\n                    <b-input-group size=\"sm\">\n                        <b-input v-model.number=\"data.scheme.__min\" @change=\"checkRange(data.scheme, true)\"></b-input>\n                        <b-input v-model.number=\"data.scheme.__max\" @change=\"checkRange(data.scheme, false)\"></b-input>\n                    </b-input-group>\n                </div>\n            </div>\n            <div class=\"mt-3 small text-muted\" v-if=\"hasThemeDependentColors\">Some colors are only applied to the current theme.</div>\n        </b-modal>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport Vue from \"vue\";\nimport Component from \"vue-class-component\";\nimport { Sketch } from \"vue-color\";\nimport { Prop, Watch } from \"vue-property-decorator\";\nimport DropdownSelect from \"page/builtin/dropdown-select.vue\";\nimport { copyObject } from \"utils/object\";\n\n@Component({\n    components: { \"picker\": Sketch, \"dropdown-select\": DropdownSelect },\n})\nexport default class ColorPicker extends Vue {\n    @Prop() public data: any;\n\n    private palette = \"default\";\n    private defaultScheme: Record<string, string>;\n\n    private isDark = false;\n    private hasThemeDependentColors = false;\n\n    public mounted() {\n        this.defaultScheme = {};\n\n        Object.keys(this.data.scheme).forEach(k => {\n            if (this.data.scheme[k] === null) {\n                this.data.scheme[k] = \"#fff\";\n            } else {\n                this.defaultScheme[k] = this.data.scheme[k];\n            }\n        });\n    }\n\n    private get paletteOptions() {\n        return Object.entries(this.data.palettes).map(([value, data]) => ({ data, value }));\n    }\n\n    private get currentColors() {\n        if (this.data.palettes && this.palette) {\n            return this.distinct(this.data.palettes[this.palette].colors);\n        } else {\n            return null;\n        }\n    }\n\n    private distinct(colors: string[]) {\n        return [...new Set(colors)];\n    }\n\n    private shouldShowKey(key: string) {\n        if (key.startsWith(\"__\")) return false;\n        if (this.isDark) {\n            if (key.endsWith(\"(light theme)\")) return false;\n        } else {\n            if (key.endsWith(\"(dark theme)\")) return false;\n        }\n        return true;\n    }\n\n    private keyDisplayName(key: string) {\n        if (this.data.names) return this.data.names[key];\n        if (key.endsWith(\"theme)\")) {\n            return key.substring(0, key.lastIndexOf(\" (\"));\n        }\n        return key;\n    }\n\n    @Watch(\"palette\")\n    private paletteUpdated() {\n        const colors = this.currentColors;\n        if (this.palette === \"default\") {\n            Object.entries(this.defaultScheme).forEach(([name, value]) => {\n                this.data.scheme[name] = value;\n            });\n        } else {\n            Object.entries(this.data.paletteMap as Dictionary<number|string>).forEach(([name, idx]) => {\n                if (typeof idx === \"number\") {\n                    this.data.scheme[name] = colors[idx];\n                } else  {\n                    this.data.scheme[name] = idx;\n                }\n            });\n        }\n        this.$forceUpdate();\n    }\n\n    private toggleModal(show: boolean) {\n        this.hasThemeDependentColors = Object.keys(this.data.scheme).some(k => k.endsWith(\"theme)\"));\n        (this.$refs.modal as any)[show ? \"show\" : \"hide\"]();\n    }\n\n    private updateColor(key, color) {\n        this.data.scheme[key] = color;\n        this.$forceUpdate();\n    }\n\n    private checkRange(data, isMin) {\n        if (data.__min >= data.__max) {\n            alert(\"Invalid range.\");\n            this.$nextTick(() => {\n                if (isMin)\n                    data.__min = data.__max - 1;\n                else\n                    data.__max = data.__min + 1;\n                this.$forceUpdate();\n            });\n        }\n    }\n\n    private apply() {\n        this.data.callback(copyObject(this.data.scheme), this.data.naColor);\n    }\n\n    public updateNAColor(color) {\n        this.data.naColor = color;\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\nhr {\n    border-top: 1px solid rgba(255, 255, 255, 0.1);\n}\n</style>"],"sourceRoot":"app/javascript/page/builtin"},"metadata":{},"sourceType":"module"}