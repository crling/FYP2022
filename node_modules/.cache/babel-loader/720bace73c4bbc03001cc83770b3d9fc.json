{"ast":null,"code":"function _templateObject() {\n  var data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport template from \"./template.bvt\";\nimport Crux from \"crux\";\nexport var Revolution = /*#__PURE__*/function (_Crux$Component) {\n  _inherits(Revolution, _Crux$Component);\n\n  var _super = _createSuper(Revolution);\n\n  function Revolution() {\n    var _this;\n\n    _classCallCheck(this, Revolution);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.render = Crux.t(_templateObject(), template);\n    return _this;\n  }\n\n  _createClass(Revolution, [{\n    key: \"init\",\n    value: function init() {\n      this.state = {\n        aid: null\n      };\n    }\n  }, {\n    key: \"setActive\",\n    value: function setActive(aid) {\n      this.setState({\n        aid: aid\n      });\n    }\n  }]);\n\n  return Revolution;\n}(Crux.Component);","map":{"version":3,"sources":["/Users/wangzhenyu/Desktop/fyp_workspace/meta_platform/app/javascript/viz/static_abd/revolution.ts"],"names":["template","Crux","Revolution","render","t","state","aid","setState","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,QAAP,MAAqB,gBAArB;AAEA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,WAAaC,UAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,UAEWC,MAFX,GAEoBF,IAAI,CAACG,CAFzB,oBAE6BJ,QAF7B;AAAA;AAAA;;AAAA;AAAA;AAAA,2BAIkB;AACV,WAAKK,KAAL,GAAa;AACTC,QAAAA,GAAG,EAAE;AADI,OAAb;AAGH;AARL;AAAA;AAAA,8BAUsBA,GAVtB,EAUmC;AAC3B,WAAKC,QAAL,CAAc;AAAED,QAAAA,GAAG,EAAHA;AAAF,OAAd;AACH;AAZL;;AAAA;AAAA,EAAgCL,IAAI,CAACO,SAArC","sourcesContent":["import template from \"./template.bvt\";\n\nimport Crux from \"crux\";\n\nexport class Revolution extends Crux.Component {\n\n    public render = Crux.t`${template}`;\n\n    public init() {\n        this.state = {\n            aid: null,\n        };\n    }\n\n    private setActive(aid: string) {\n        this.setState({ aid });\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}