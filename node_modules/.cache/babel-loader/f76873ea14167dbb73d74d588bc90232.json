{"ast":null,"code":"import { FOR_EXPR, NAME } from \"../tokens\";\nimport { parseBlockBody } from \"./block-body\";\nexport function parseFor(p) {\n  p.expect(\"@for\");\n  p.skipSpaces();\n  var withIndex;\n\n  if (withIndex = p.peek() === \"(\") {\n    p.advance(1);\n  }\n\n  var forIndex = \"\";\n  var forName = p.expect(NAME, \"entry name\")[0];\n  p.skipSpaces();\n\n  if (withIndex) {\n    p.expect(\",\");\n    p.skipSpaces();\n    forIndex = p.expect(NAME, \"index name\")[0];\n    p.skipSpaces();\n    p.expect(\"\\\\)\");\n    p.skipSpaces();\n  }\n\n  p.expect(\"in\");\n  p.skipSpaces();\n  var expr = p.expect(FOR_EXPR, \"the data to be iterated\")[0];\n  p.skipSpaces();\n  var node = {\n    type: \"op-for\",\n    forName: forName,\n    expr: expr,\n    localData: [],\n    children: [],\n    namedChildren: {}\n  };\n\n  if (withIndex) {\n    node.forIndex = forIndex;\n  }\n\n  parseBlockBody(p, node);\n  return node;\n}","map":null,"metadata":{},"sourceType":"module"}