{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nexport var Behavior = function Behavior(el, op) {\n  _classCallCheck(this, Behavior);\n\n  this.el = el;\n  if (_typeof(op) !== \"object\") throw new Error(\"Behavior: the option must be an object, not \".concat(op));\n  if (this.init) this.init(op);\n};","map":null,"metadata":{},"sourceType":"module"}