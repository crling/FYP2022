{"ast":null,"code":"import Oviz from \"crux\";\nimport template from \"./template.bvt\";\nimport { register } from \"page/visualizers\";\nimport { groupBy, getGroups } from \"utils/array\";\nimport { registerEditorConfig } from \"utils/editor\";\nimport { editorConfig } from \"./editor\";\nimport { groupedChartColors } from \"oviz-common/palette\";\nimport { computeLog } from \"utils/maths\";\nvar ylabel = \"Relative abundance(log10)\";\nvar classifiedIndex = 0;\nvar valueRange = [2.5, 3.5];\nvar title = \"grouped box plot\"; //please change the displayed value range in the template by the prop: valueRange.\n\nvar MODULE_NAME = 'continuos-grouped-boxplot';\n\nfunction init() {\n  if (!window.gon || window.gon.module_name !== MODULE_NAME) return;\n\n  var _Oviz$visualize = Oviz.visualize({\n    el: \"#canvas\",\n    template: template,\n    data: {\n      ylabel: ylabel,\n      valueRange: valueRange,\n      title: title,\n      config: {\n        plotWidth: 1000,\n        showOutliers: true,\n        xLabelRotation: 45\n      },\n      colors: groupedChartColors\n    },\n    loadData: {\n      boxplotDataCont: {\n        fileKey: \"boxplotDataCont\",\n        type: \"tsv\",\n        dsvHasHeader: true,\n        loaded: function loaded(data) {\n          var _this = this;\n\n          var categories = getGroups(data, data.columns[1]).sort(function (a, b) {\n            return parseInt(a) - parseInt(b);\n          });\n          var groupedData = groupBy(data, data.columns[0]);\n          var parsedData = {};\n          var classifications = Object.keys(groupedData);\n          classifications.forEach(function (cls) {\n            var cData = groupedData[cls].map(function (d) {\n              d[data.columns[2]] = computeLog(parseInt(d[data.columns[2]]), Math.pow(10, 2));\n              return d;\n            });\n            parsedData[cls] = groupBy(cData, data.columns[1]);\n          });\n          var boxData = [{\n            values: [],\n            outliers: [],\n            means: [],\n            categories: categories.map(function (d) {\n              return \" \".concat(d, \" \");\n            })\n          }, {\n            values: [],\n            outliers: [],\n            means: [],\n            categories: categories.map(function (d) {\n              return \" \".concat(d, \" \");\n            })\n          }];\n          categories.forEach(function (ctg, i) {\n            classifications.forEach(function (cls, j) {\n              if (!parsedData[cls][ctg]) return;\n              var initialData = parsedData[cls][ctg].map(function (d) {\n                return d[data.columns[2]];\n              });\n              var result = [];\n              var stat1 = new Oviz.algo.Statistics(initialData);\n              var interQuartileRange = stat1.Q3() - stat1.Q1();\n              initialData.forEach(function (d) {\n                if (d < stat1.Q3() - 1.5 * interQuartileRange || d > stat1.Q3() + 1.5 * interQuartileRange) {\n                  boxData[j].outliers.push([i, d]);\n                } else {\n                  result.push(d);\n                }\n              });\n              var stat2 = new Oviz.algo.Statistics(result);\n              boxData[j].values.push([stat2.min(), stat2.Q1(), stat2.median(), stat2.Q3(), stat2.max()]);\n              boxData[j].means.push(stat2.mean());\n            });\n          });\n          this.data.xTicks = [];\n          categories.filter(function (d, i, arr) {\n            if (i === 0 || d % 10 === 0 || i === arr.length - 1) _this.data.xTicks.push({\n              value: d,\n              index: i\n            });\n          }); // this is hardcoded due to xy plot bug\n\n          this.data.boxData = boxData.sort(function (a, b) {\n            return -a.values.length - b.values.length;\n          });\n          this.data.classifications = [classifications[1], classifications[0]];\n          this.data.categories = categories;\n          return null;\n        }\n      }\n    },\n    setup: function setup() {\n      this.data.plotWidth = 1000;\n      registerEditorConfig(editorConfig(this));\n    }\n  }),\n      visualizer = _Oviz$visualize.visualizer;\n\n  return visualizer;\n}\n\nregister(MODULE_NAME, init);","map":{"version":3,"sources":["/Users/wangzhenyu/Desktop/fyp_workspace/meta_platform/app/javascript/viz/continuos-grouped-boxplot/index.ts"],"names":["Oviz","template","register","groupBy","getGroups","registerEditorConfig","editorConfig","groupedChartColors","computeLog","ylabel","classifiedIndex","valueRange","title","MODULE_NAME","init","window","gon","module_name","visualize","el","data","config","plotWidth","showOutliers","xLabelRotation","colors","loadData","boxplotDataCont","fileKey","type","dsvHasHeader","loaded","categories","columns","sort","a","b","parseInt","groupedData","parsedData","classifications","Object","keys","forEach","cls","cData","map","d","Math","pow","boxData","values","outliers","means","ctg","i","j","initialData","result","stat1","algo","Statistics","interQuartileRange","Q3","Q1","push","stat2","min","median","max","mean","xTicks","filter","arr","length","value","index","setup","visualizer"],"mappings":"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","sourcesContent":["import Oviz from \"crux\"\nimport template from \"./template.bvt\"\nimport {register} from \"page/visualizers\";\n\nimport {groupBy, getGroups} from \"utils/array\"\n\nimport { registerEditorConfig } from \"utils/editor\";\nimport { editorConfig } from \"./editor\";\nimport { groupedChartColors} from \"oviz-common/palette\"\nimport { computeLog } from \"utils/maths\";\nconst ylabel = \"Relative abundance(log10)\";\nconst classifiedIndex = 0;\nconst valueRange = [2.5, 3.5];\nconst title = \"grouped box plot\"\n//please change the displayed value range in the template by the prop: valueRange.\nconst MODULE_NAME = 'continuos-grouped-boxplot'\n\ninterface BoxplotData {\n    values: any[], \n    outliers: any[], \n    means: number[],\n}\n\nfunction init() {\n    if (!window.gon || window.gon.module_name !== MODULE_NAME) return;\n\n    const {visualizer} = Oviz.visualize({\n        el: \"#canvas\",\n        template,\n        data: {ylabel, valueRange, title,\n            config: {\n                plotWidth: 1000,\n                showOutliers: true,\n                xLabelRotation: 45,\n            },\n            colors: groupedChartColors,\n        },\n        loadData: {\n            boxplotDataCont: {\n                fileKey: \"boxplotDataCont\",\n                type: \"tsv\",\n                dsvHasHeader: true,\n                loaded(data) {\n                    const categories = getGroups(data, data.columns[1]).sort((a,b)=> parseInt(a) - parseInt(b));\n                    const groupedData = groupBy(data, data.columns[0]);\n                    const parsedData = {};\n                    const classifications = Object.keys(groupedData);\n                    classifications.forEach(cls => {\n                        const cData = groupedData[cls].map(d => {\n                            d[data.columns[2]] = computeLog(parseInt(d[data.columns[2]]), Math.pow(10,2));\n                            return d;\n                        })\n                        parsedData[cls] = groupBy(cData, data.columns[1]);\n                    })\n                    const boxData = [{values: [], outliers: [], means: [], categories: categories.map(d=> ` ${d} `)}, \n                        {values: [], outliers: [], means: [], categories: categories.map(d=> ` ${d} `)}];\n                    categories.forEach((ctg, i) => {\n                        classifications.forEach((cls, j) => {\n                            if (!parsedData[cls][ctg]) return;\n                            const initialData = parsedData[cls][ctg].map(d => d[data.columns[2]]);\n                            const result = [];\n                            const stat1 = new Oviz.algo.Statistics(initialData);\n                            const interQuartileRange = stat1.Q3() - stat1.Q1();\n                            initialData.forEach(d => {\n                                if ((d < stat1.Q3() - 1.5 * interQuartileRange) || (d > stat1.Q3() + 1.5 * interQuartileRange))  {\n                                    boxData[j].outliers.push([i, d]);\n                                } else {\n                                    result.push(d);\n                                }\n                            });\n                            const stat2 = new Oviz.algo.Statistics(result);\n                            boxData[j].values.push([stat2.min(), stat2.Q1(), stat2.median(), stat2.Q3(), stat2.max()]);\n                            boxData[j].means.push(stat2.mean());\n                        });\n                    });\n                    this.data.xTicks = [];\n                    categories.filter((d, i, arr) => {\n                        if (i === 0 || d % 10 === 0 || i === arr.length - 1)\n                            this.data.xTicks.push({value: d, index: i});\n                    });\n                    // this is hardcoded due to xy plot bug\n                    this.data.boxData = boxData.sort((a,b)=> - a.values.length - b.values.length);\n                    this.data.classifications = [classifications[1], classifications[0]];\n                    this.data.categories = categories;\n                    return null;\n                },\n            },\n        },\n        setup() {            \n            this.data.plotWidth = 1000;\n            registerEditorConfig(editorConfig(this));\n        },\n    });\n    \n    return visualizer;\n}\n\nregister(MODULE_NAME, init);"]},"metadata":{},"sourceType":"module"}