{"ast":null,"code":"// Generic collapse transion helper component\n//\n// Note:\n//   Applies the classes `collapse`, `show` and `collapsing`\n//   during the enter/leave transition phases only\n//   Although it appears that Vue may be leaving the classes\n//   in-place after the transition completes\nimport Vue from './vue';\nimport { mergeData } from 'vue-functional-data-merge';\nimport { getBCR, reflow, requestAF } from './dom'; // Transition event handler helpers\n\nvar onEnter = function onEnter(el) {\n  el.style.height = 0; // Animaton frame delay needed for `appear` to work\n\n  requestAF(function () {\n    reflow(el);\n    el.style.height = \"\".concat(el.scrollHeight, \"px\");\n  });\n};\n\nvar onAfterEnter = function onAfterEnter(el) {\n  el.style.height = null;\n};\n\nvar onLeave = function onLeave(el) {\n  el.style.height = 'auto';\n  el.style.display = 'block';\n  el.style.height = \"\".concat(getBCR(el).height, \"px\");\n  reflow(el);\n  el.style.height = 0;\n};\n\nvar onAfterLeave = function onAfterLeave(el) {\n  el.style.height = null;\n}; // Default transition props\n// `appear` will use the enter classes\n\n\nvar TRANSITION_PROPS = {\n  css: true,\n  enterClass: '',\n  enterActiveClass: 'collapsing',\n  enterToClass: 'collapse show',\n  leaveClass: 'collapse show',\n  leaveActiveClass: 'collapsing',\n  leaveToClass: 'collapse'\n}; // Default transition handlers\n// `appear` will use the enter handlers\n\nvar TRANSITION_HANDLERS = {\n  enter: onEnter,\n  afterEnter: onAfterEnter,\n  leave: onLeave,\n  afterLeave: onAfterLeave\n}; // @vue/component\n\nexport var BVCollapse = /*#__PURE__*/Vue.extend({\n  name: 'BVCollapse',\n  functional: true,\n  props: {\n    appear: {\n      // If `true` (and `visible` is `true` on mount), animate initially visible\n      type: Boolean,\n      \"default\": false\n    }\n  },\n  render: function render(h, _ref) {\n    var props = _ref.props,\n        data = _ref.data,\n        children = _ref.children;\n    return h('transition', // We merge in the `appear` prop last\n    mergeData(data, {\n      props: TRANSITION_PROPS,\n      on: TRANSITION_HANDLERS\n    }, {\n      props: props\n    }), // Note: `<transition>` supports a single root element only\n    children);\n  }\n});","map":null,"metadata":{},"sourceType":"module"}