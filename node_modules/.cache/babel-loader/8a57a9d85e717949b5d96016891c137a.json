{"ast":null,"code":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if ((typeof Reflect === \"undefined\" ? \"undefined\" : _typeof(Reflect)) === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { GeometryValue } from \"../../defs/geometry\";\nimport { useTemplate } from \"../../ext/decorator\";\nimport { BaseChart } from \"./base-chart\";\n\nvar Bars =\n/** @class */\nfunction () {\n  var Bars = /*#__PURE__*/function (_BaseChart) {\n    _inherits(Bars, _BaseChart);\n\n    var _super = _createSuper(Bars);\n\n    function Bars() {\n      var _this;\n\n      _classCallCheck(this, Bars);\n\n      _this = _super.apply(this, arguments);\n      _this._cachedSize = [];\n      return _this;\n    }\n\n    _createClass(Bars, [{\n      key: \"_cacheSize\",\n      value: function _cacheSize() {\n        var _this2 = this;\n\n        this.data.values.forEach(function (d, index) {\n          var x = _this2.getX(d.pos);\n\n          var y = _this2.getY(d.minValue);\n\n          var width = _this2.getWidth();\n\n          var height = Math.abs(_this2.getHeight(d.value - d.minValue, d.minValue));\n          _this2._cachedSize[index] = {\n            x: _this2.flipped ? y : x,\n            y: _this2.flipped ? x : y,\n            width: _this2.flipped ? height : width,\n            height: _this2.flipped ? width : height\n          };\n        });\n      }\n    }, {\n      key: \"willRender\",\n      value: function willRender() {\n        _get(_getPrototypeOf(Bars.prototype), \"willRender\", this).call(this);\n\n        this._cacheSize();\n      } // @ts-ignore\n\n    }, {\n      key: \"getRectAnchor\",\n      value: function getRectAnchor(d, pivot) {\n        var belowPivot = typeof pivot === \"number\" && d.value < d.minValue && d.value < pivot;\n        return this.flipped ? (this.inverted !== belowPivot ? 16\n        /* Left */\n        : 64\n        /* Right */\n        ) | 4\n        /* Middle */\n        : (this.inverted !== belowPivot ? 2\n        /* Top */\n        : 8\n        /* Bottom */\n        ) | 32\n        /* Center */\n        ;\n      } // @ts-ignore\n\n    }, {\n      key: \"getYStartPos\",\n      value: function getYStartPos() {\n        return this.inverted ? 0 : GeometryValue.fullSize;\n      }\n    }]);\n\n    return Bars;\n  }(BaseChart);\n\n  Bars = __decorate([useTemplate(\"\\n    Component {\\n        xScale = getScale(true) || createXScale()\\n        yScale = getScale(false) || createYScale()\\n\\n        @for (d, index) in data.values {\\n            Component {\\n                @let z = _cachedSize[index]\\n\\n                key = index\\n                anchor = getRectAnchor(d, prop.pivot)\\n                x = z.x; y = z.y; width = z.width; height = z.height;\\n\\n                @yield children with d default {\\n                    Rect.full {\\n                        @props prop.opt.bar\\n                    }\\n                }\\n            }\\n        }\\n\\n        @for (d, index) in data.values {\\n            Component {\\n                @let z = _cachedSize[index]\\n\\n                key = \\\"o\\\" + index\\n                anchor = getRectAnchor(d, prop.pivot)\\n                x = z.x; y = z.y; width = z.width; height = z.height;\\n\\n                @yield overlay with d\\n            }\\n        }\\n    }\\n\")], Bars);\n  return Bars;\n}();\n\nexport { Bars };","map":null,"metadata":{},"sourceType":"module"}