{"ast":null,"code":"function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport { GeometryValue, isFixed } from \"../defs/geometry\";\nimport { Component } from \"../element/component\";\nimport { posWithAnchor } from \"./anchor\";\n\nfunction updateGeometryProps(el, propName, parentSize) {\n  var val = el.prop[propName];\n\n  if (typeof val === \"function\" && \"__internal__\" in val) {\n    val = val.call(el);\n  }\n\n  if (typeof val === \"number\") {\n    el.$geometry[propName] = val;\n  } else if (!val) {\n    el.$geometry[propName] = propName === \"x\" || propName === \"y\" ? 0 : null;\n  } else if (_typeof(val) === \"object\" && \"value\" in val) {\n    el.$geometry[propName] = GeometryValue.cal(val, parentSize);\n  } else {\n    throw new Error(\"Unexpected geometry value: \".concat(val));\n  }\n}\n\nexport function getParentSize(el) {\n  var isRoot = el instanceof Component && el.isRoot;\n  var parent = el.logicalParent && el.logicalParent.parent ? el.logicalParent.parent : el.parent;\n  var pWidth, pHeight;\n\n  if (el.inPolorCoordSystem) {\n    pWidth = el.$coord.$polar.rad ? Math.PI : 360;\n    pHeight = el.$coord.$polar.r;\n  } else {\n    pWidth = isRoot ? el.$v.size.width : parent.$geometry.width;\n    pHeight = isRoot ? el.$v.size.height : parent.$geometry.height;\n  }\n\n  return [pWidth, pHeight];\n}\nexport function layoutElement(el) {\n  var skipFixed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var _getParentSize = getParentSize(el),\n      _getParentSize2 = _slicedToArray(_getParentSize, 2),\n      pWidth = _getParentSize2[0],\n      pHeight = _getParentSize2[1];\n\n  var _el$$geometryProps = _slicedToArray(el.$geometryProps, 2),\n      hProps = _el$$geometryProps[0],\n      vProps = _el$$geometryProps[1];\n\n  if (skipFixed) {\n    hProps = hProps.filter(function (p) {\n      return !isFixed(el.prop[p]);\n    });\n    vProps = vProps.filter(function (p) {\n      return !isFixed(el.prop[p]);\n    });\n  }\n\n  var _iterator = _createForOfIteratorHelper(hProps),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var prop = _step.value;\n      updateGeometryProps(el, prop, pWidth);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  var _iterator2 = _createForOfIteratorHelper(vProps),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var _prop = _step2.value;\n      updateGeometryProps(el, _prop, pHeight);\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n}\nexport function adjustByAnchor(el) {\n  var g = el.$geometry;\n\n  if (el.positionDetached) {\n    g._x = g.x;\n    g._y = g.y;\n    return;\n  }\n\n  var anchor;\n\n  var _el$translatePoint = el.translatePoint(g.x, g.y),\n      _el$translatePoint2 = _slicedToArray(_el$translatePoint, 2),\n      x = _el$translatePoint2[0],\n      y = _el$translatePoint2[1];\n\n  if (anchor = el.prop.anchor) {\n    g._x = posWithAnchor(true, x, el.layoutWidth, anchor);\n    g._y = posWithAnchor(false, y, el.layoutHeight, anchor);\n  } else {\n    g._x = x;\n    g._y = y;\n  }\n}\nexport function getFinalPosition(el) {\n  return [el.$geometry._x + Object.values(el.$geometry._xOffset).reduce(function (p, c) {\n    return p + c;\n  }, 0), el.$geometry._y + Object.values(el.$geometry._yOffset).reduce(function (p, c) {\n    return p + c;\n  }, 0)];\n}","map":null,"metadata":{},"sourceType":"module"}