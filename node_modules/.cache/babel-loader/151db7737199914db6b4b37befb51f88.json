{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    Component {\\n        @let fk = prop.data[0]\\n        @let gWidth = getWidth()\\n        @let width = gWidth * 1.0 / prop.data.length\\n        @let y = getY(0)\\n\\n        @for (group, pos) in data {\\n            Component {\\n                @let tX = 0\\n                @let gX = getX(group[fk].pos)\\n\\n                key = pos\\n                anchor = @anchor(\\\"center\\\", \\\"top\\\")\\n                x = flipped ? 0 : gX\\n                y = flipped ? gX : 0\\n                width = flipped ? @geo(100, 0) : gWidth\\n                height = flipped ? gWidth : @geo(100, 0)\\n\\n                @yield group with group\\n\\n                @for key in prop.data {\\n                    @let d = group[key]\\n                    Component {\\n                        @let x = tX\\n                        @let height = getHeight(d.value - d.minValue, d.minValue)\\n                        @expr tX += width\\n\\n                        key = key\\n                        x = flipped ? y : x\\n                        anchor = getAnchor()\\n                        y = flipped ? x : y\\n                        width = flipped ? height : width\\n                        height = flipped ? width : height\\n\\n                        @let dd = { data: d, key: key, scheme: _scheme }\\n                        @yield children with dd default {\\n                            Rect.full {\\n                                fill = _scheme.get(key)\\n                                @props prop.opt.bar\\n                            }\\n                        }\\n                    }\\n                }\\n            }\\n        }\\n    }\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport { schemeCategory } from \"../../color\";\nimport { template as t } from \"../../template/tag\";\nimport { XYPlot } from \"../plot\";\nimport { BaseChart } from \"./base-chart\";\nexport var GroupedBars = /*#__PURE__*/function (_BaseChart) {\n  _inherits(GroupedBars, _BaseChart);\n\n  var _super = _createSuper(GroupedBars);\n\n  function GroupedBars() {\n    var _this;\n\n    _classCallCheck(this, GroupedBars);\n\n    _this = _super.apply(this, arguments);\n    _this.render = t(_templateObject());\n    return _this;\n  }\n\n  _createClass(GroupedBars, [{\n    key: \"getAnchor\",\n    value: function getAnchor() {\n      return this.flipped ? (this.inverted ? 16\n      /* Left */\n      : 64\n      /* Right */\n      ) | 2\n      /* Top */\n      : (this.inverted ? 2\n      /* Top */\n      : 8\n      /* Bottom */\n      ) | 16\n      /* Left */\n      ;\n    }\n  }, {\n    key: \"inheritData\",\n    value: function inheritData() {\n      if (!(this.$parent instanceof XYPlot) || !this.$parent.hasMultipleData) throw new Error(\"GroupedBars: it must be placed in an XYPlot with multiple data groups.\");\n      if (!Array.isArray(this.prop.data)) throw new Error(\"GroupedBars: the data prop must be an array of data keys.\");\n      var $p = this.$parent;\n      var data = {};\n      this.prop.data.forEach(function (key) {\n        $p.data[key].values.forEach(function (d) {\n          var pos = d.pos;\n          if (!data[pos]) data[pos] = {};\n          data[pos][key] = d;\n        });\n      });\n      this.data = data;\n      this._scheme = schemeCategory(this.$v.theme, this.prop.data);\n    }\n  }]);\n\n  return GroupedBars;\n}(BaseChart);","map":null,"metadata":{},"sourceType":"module"}