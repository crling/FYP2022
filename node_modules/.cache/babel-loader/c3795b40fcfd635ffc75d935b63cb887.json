{"ast":null,"code":"/* group an array of dictionaries by column key*/\nexport function groupBy(array, key) {\n  return array.reduce(function (r, x) {\n    (r[x[key]] = r[x[key]] || []).push(x);\n    return r;\n  }, {});\n}\n/* get the distinct values of the dictionary array with the key*/\n\nexport function getGroups(data, key) {\n  return data.reduce(function (a, x) {\n    if (a.indexOf(x[key]) < 0) a.push(x[key]);\n    return a;\n  }, []);\n}\n/* get distinct values of the array*/\n\nexport function getDistinctValues(arr) {\n  return arr.reduce(function (r, x) {\n    if (!r.includes(x)) r.push(x);\n    return r;\n  }, []);\n}","map":{"version":3,"sources":["/Users/wangzhenyu/Desktop/fyp_workspace/meta_platform/app/javascript/utils/array.ts"],"names":["groupBy","array","key","reduce","r","x","push","getGroups","data","a","indexOf","getDistinctValues","arr","includes"],"mappings":"AAAA;AACA,OAAO,SAASA,OAAT,CAAiBC,KAAjB,EAA+BC,GAA/B,EAAiE;AACpE,SAAOD,KAAK,CAACE,MAAN,CAAa,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAClB,KAACD,CAAC,CAACC,CAAC,CAACH,GAAD,CAAF,CAAD,GAAYE,CAAC,CAACC,CAAC,CAACH,GAAD,CAAF,CAAD,IAAa,EAA1B,EAA8BI,IAA9B,CAAmCD,CAAnC;AACA,WAAOD,CAAP;AACC,GAHN,EAGQ,EAHR,CAAP;AAID;AAEH;;AACA,OAAO,SAASG,SAAT,CAAmBC,IAAnB,EAAgCN,GAAhC,EAAuD;AAC5D,SAAOM,IAAI,CAACL,MAAL,CAAY,UAACM,CAAD,EAAIJ,CAAJ,EAAU;AACzB,QAAII,CAAC,CAACC,OAAF,CAAUL,CAAC,CAACH,GAAD,CAAX,IAAoB,CAAxB,EAA2BO,CAAC,CAACH,IAAF,CAAOD,CAAC,CAACH,GAAD,CAAR;AAC3B,WAAOO,CAAP;AACH,GAHM,EAGJ,EAHI,CAAP;AAID;AAED;;AACA,OAAO,SAASE,iBAAT,CAA4BC,GAA5B,EAA+C;AACpD,SAAOA,GAAG,CAACT,MAAJ,CAAW,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACxB,QAAI,CAACD,CAAC,CAACS,QAAF,CAAWR,CAAX,CAAL,EAAoBD,CAAC,CAACE,IAAF,CAAOD,CAAP;AACpB,WAAOD,CAAP;AACC,GAHE,EAGA,EAHA,CAAP;AAID","sourcesContent":["/* group an array of dictionaries by column key*/\nexport function groupBy(array: any[], key: string): Record<string, any> {\n    return array.reduce((r, x) => {\n                (r[x[key]] = r[x[key]] || []).push(x);\n                return r;\n                }, {});\n  }\n\n/* get the distinct values of the dictionary array with the key*/\nexport function getGroups(data: any[], key: string): string[] {\n  return data.reduce((a, x) => {\n      if (a.indexOf(x[key]) < 0) a.push(x[key]);\n      return a;\n  }, []);\n}\n\n/* get distinct values of the array*/\nexport function getDistinctValues (arr: any[]): any[] {\n  return arr.reduce((r, x) => {\n      if (!r.includes(x)) r.push(x);\n      return r;\n      }, []);\n}\n"]},"metadata":{},"sourceType":"module"}