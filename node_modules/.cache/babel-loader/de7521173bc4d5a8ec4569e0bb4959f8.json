{"ast":null,"code":"function _typeof2(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\n(function webpackUniversalModuleDefinition(root, factory) {\n  if ((typeof exports === \"undefined\" ? \"undefined\" : _typeof2(exports)) === 'object' && (typeof module === \"undefined\" ? \"undefined\" : _typeof2(module)) === 'object') module.exports = factory(require(\"vue\"));else if (typeof define === 'function' && define.amd) define([], factory);else if ((typeof exports === \"undefined\" ? \"undefined\" : _typeof2(exports)) === 'object') exports[\"oviz-editor\"] = factory(require(\"vue\"));else root[\"oviz-editor\"] = factory(root[\"Vue\"]);\n})(typeof self !== 'undefined' ? self : this, function (__WEBPACK_EXTERNAL_MODULE__8bbf__) {\n  return (\n    /******/\n    function (modules) {\n      // webpackBootstrap\n\n      /******/\n      // The module cache\n\n      /******/\n      var installedModules = {};\n      /******/\n\n      /******/\n      // The require function\n\n      /******/\n\n      function __webpack_require__(moduleId) {\n        /******/\n\n        /******/\n        // Check if module is in cache\n\n        /******/\n        if (installedModules[moduleId]) {\n          /******/\n          return installedModules[moduleId].exports;\n          /******/\n        }\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n\n        var module = installedModules[moduleId] = {\n          /******/\n          i: moduleId,\n\n          /******/\n          l: false,\n\n          /******/\n          exports: {}\n          /******/\n\n        };\n        /******/\n\n        /******/\n        // Execute the module function\n\n        /******/\n\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n\n        /******/\n        // Flag the module as loaded\n\n        /******/\n\n        module.l = true;\n        /******/\n\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n        return module.exports;\n        /******/\n      }\n      /******/\n\n      /******/\n\n      /******/\n      // expose the modules object (__webpack_modules__)\n\n      /******/\n\n\n      __webpack_require__.m = modules;\n      /******/\n\n      /******/\n      // expose the module cache\n\n      /******/\n\n      __webpack_require__.c = installedModules;\n      /******/\n\n      /******/\n      // define getter function for harmony exports\n\n      /******/\n\n      __webpack_require__.d = function (exports, name, getter) {\n        /******/\n        if (!__webpack_require__.o(exports, name)) {\n          /******/\n          Object.defineProperty(exports, name, {\n            enumerable: true,\n            get: getter\n          });\n          /******/\n        }\n        /******/\n\n      };\n      /******/\n\n      /******/\n      // define __esModule on exports\n\n      /******/\n\n\n      __webpack_require__.r = function (exports) {\n        /******/\n        if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n          /******/\n          Object.defineProperty(exports, Symbol.toStringTag, {\n            value: 'Module'\n          });\n          /******/\n        }\n        /******/\n\n\n        Object.defineProperty(exports, '__esModule', {\n          value: true\n        });\n        /******/\n      };\n      /******/\n\n      /******/\n      // create a fake namespace object\n\n      /******/\n      // mode & 1: value is a module id, require it\n\n      /******/\n      // mode & 2: merge all properties of value into the ns\n\n      /******/\n      // mode & 4: return value when already ns object\n\n      /******/\n      // mode & 8|1: behave like require\n\n      /******/\n\n\n      __webpack_require__.t = function (value, mode) {\n        /******/\n        if (mode & 1) value = __webpack_require__(value);\n        /******/\n\n        if (mode & 8) return value;\n        /******/\n\n        if (mode & 4 && _typeof2(value) === 'object' && value && value.__esModule) return value;\n        /******/\n\n        var ns = Object.create(null);\n        /******/\n\n        __webpack_require__.r(ns);\n        /******/\n\n\n        Object.defineProperty(ns, 'default', {\n          enumerable: true,\n          value: value\n        });\n        /******/\n\n        if (mode & 2 && typeof value != 'string') for (var key in value) {\n          __webpack_require__.d(ns, key, function (key) {\n            return value[key];\n          }.bind(null, key));\n        }\n        /******/\n\n        return ns;\n        /******/\n      };\n      /******/\n\n      /******/\n      // getDefaultExport function for compatibility with non-harmony modules\n\n      /******/\n\n\n      __webpack_require__.n = function (module) {\n        /******/\n        var getter = module && module.__esModule ?\n        /******/\n        function getDefault() {\n          return module['default'];\n        } :\n        /******/\n        function getModuleExports() {\n          return module;\n        };\n        /******/\n\n        __webpack_require__.d(getter, 'a', getter);\n        /******/\n\n\n        return getter;\n        /******/\n      };\n      /******/\n\n      /******/\n      // Object.prototype.hasOwnProperty.call\n\n      /******/\n\n\n      __webpack_require__.o = function (object, property) {\n        return Object.prototype.hasOwnProperty.call(object, property);\n      };\n      /******/\n\n      /******/\n      // __webpack_public_path__\n\n      /******/\n\n\n      __webpack_require__.p = \"\";\n      /******/\n\n      /******/\n\n      /******/\n      // Load entry module and return exports\n\n      /******/\n\n      return __webpack_require__(__webpack_require__.s = \"fb15\");\n      /******/\n    }(\n    /************************************************************************/\n\n    /******/\n    {\n      /***/\n      \"00ee\":\n      /***/\n      function ee(module, exports, __webpack_require__) {\n        var wellKnownSymbol = __webpack_require__(\"b622\");\n\n        var TO_STRING_TAG = wellKnownSymbol('toStringTag');\n        var test = {};\n        test[TO_STRING_TAG] = 'z';\n        module.exports = String(test) === '[object z]';\n        /***/\n      },\n\n      /***/\n      \"0366\":\n      /***/\n      function _(module, exports, __webpack_require__) {\n        var aFunction = __webpack_require__(\"1c0b\"); // optional / simple context binding\n\n\n        module.exports = function (fn, that, length) {\n          aFunction(fn);\n          if (that === undefined) return fn;\n\n          switch (length) {\n            case 0:\n              return function () {\n                return fn.call(that);\n              };\n\n            case 1:\n              return function (a) {\n                return fn.call(that, a);\n              };\n\n            case 2:\n              return function (a, b) {\n                return fn.call(that, a, b);\n              };\n\n            case 3:\n              return function (a, b, c) {\n                return fn.call(that, a, b, c);\n              };\n          }\n\n          return function ()\n          /* ...args */\n          {\n            return fn.apply(that, arguments);\n          };\n        };\n        /***/\n\n      },\n\n      /***/\n      \"04ef\":\n      /***/\n      function ef(module, exports, __webpack_require__) {\n        \"use strict\";\n        /* WEBPACK VAR INJECTION */\n\n        (function (global) {\n          var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n          var require;\n\n          var require;\n\n          function _createForOfIteratorHelper(o, allowArrayLike) {\n            var it;\n\n            if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n              if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n                if (it) o = it;\n                var i = 0;\n\n                var F = function F() {};\n\n                return {\n                  s: F,\n                  n: function n() {\n                    if (i >= o.length) return {\n                      done: true\n                    };\n                    return {\n                      done: false,\n                      value: o[i++]\n                    };\n                  },\n                  e: function e(_e) {\n                    throw _e;\n                  },\n                  f: F\n                };\n              }\n\n              throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n            }\n\n            var normalCompletion = true,\n                didErr = false,\n                err;\n            return {\n              s: function s() {\n                it = o[Symbol.iterator]();\n              },\n              n: function n() {\n                var step = it.next();\n                normalCompletion = step.done;\n                return step;\n              },\n              e: function e(_e2) {\n                didErr = true;\n                err = _e2;\n              },\n              f: function f() {\n                try {\n                  if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n                } finally {\n                  if (didErr) throw err;\n                }\n              }\n            };\n          }\n\n          function _unsupportedIterableToArray(o, minLen) {\n            if (!o) return;\n            if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n            var n = Object.prototype.toString.call(o).slice(8, -1);\n            if (n === \"Object\" && o.constructor) n = o.constructor.name;\n            if (n === \"Map\" || n === \"Set\") return Array.from(o);\n            if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n          }\n\n          function _arrayLikeToArray(arr, len) {\n            if (len == null || len > arr.length) len = arr.length;\n\n            for (var i = 0, arr2 = new Array(len); i < len; i++) {\n              arr2[i] = arr[i];\n            }\n\n            return arr2;\n          }\n\n          function _typeof(obj) {\n            \"@babel/helpers - typeof\";\n\n            if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n              _typeof = function _typeof(obj) {\n                return typeof obj;\n              };\n            } else {\n              _typeof = function _typeof(obj) {\n                return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n              };\n            }\n\n            return _typeof(obj);\n          }\n\n          (function (f) {\n            if ((false ? undefined : _typeof(exports)) === \"object\" && typeof module !== \"undefined\") {\n              module.exports = f();\n            } else if (true) {\n              !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = f, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n            } else {\n              var g;\n            }\n          })(function () {\n            var define, module, exports;\n            return function () {\n              function r(e, n, t) {\n                function o(i, f) {\n                  if (!n[i]) {\n                    if (!e[i]) {\n                      var c = \"function\" == typeof require && require;\n                      if (!f && c) return require(i, !0);\n                      if (u) return u(i, !0);\n                      var a = new Error(\"Cannot find module '\" + i + \"'\");\n                      throw a.code = \"MODULE_NOT_FOUND\", a;\n                    }\n\n                    var p = n[i] = {\n                      exports: {}\n                    };\n                    e[i][0].call(p.exports, function (r) {\n                      var n = e[i][1][r];\n                      return o(n || r);\n                    }, p, p.exports, r, e, n, t);\n                  }\n\n                  return n[i].exports;\n                }\n\n                for (var u = \"function\" == typeof require && require, i = 0; i < t.length; i++) {\n                  o(t[i]);\n                }\n\n                return o;\n              }\n\n              return r;\n            }()({\n              1: [function (require, module, exports) {\n                'use strict';\n\n                exports.byteLength = byteLength;\n                exports.toByteArray = toByteArray;\n                exports.fromByteArray = fromByteArray;\n                var lookup = [];\n                var revLookup = [];\n                var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\n                var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n                for (var i = 0, len = code.length; i < len; ++i) {\n                  lookup[i] = code[i];\n                  revLookup[code.charCodeAt(i)] = i;\n                } // Support decoding URL-safe base64 strings, as Node.js does.\n                // See: https://en.wikipedia.org/wiki/Base64#URL_applications\n\n\n                revLookup['-'.charCodeAt(0)] = 62;\n                revLookup['_'.charCodeAt(0)] = 63;\n\n                function getLens(b64) {\n                  var len = b64.length;\n\n                  if (len % 4 > 0) {\n                    throw new Error('Invalid string. Length must be a multiple of 4');\n                  } // Trim off extra bytes after placeholder bytes are found\n                  // See: https://github.com/beatgammit/base64-js/issues/42\n\n\n                  var validLen = b64.indexOf('=');\n                  if (validLen === -1) validLen = len;\n                  var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n                  return [validLen, placeHoldersLen];\n                } // base64 is 4/3 + up to two characters of the original data\n\n\n                function byteLength(b64) {\n                  var lens = getLens(b64);\n                  var validLen = lens[0];\n                  var placeHoldersLen = lens[1];\n                  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n                }\n\n                function _byteLength(b64, validLen, placeHoldersLen) {\n                  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n                }\n\n                function toByteArray(b64) {\n                  var tmp;\n                  var lens = getLens(b64);\n                  var validLen = lens[0];\n                  var placeHoldersLen = lens[1];\n                  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n                  var curByte = 0; // if there are placeholders, only get up to the last complete 4 chars\n\n                  var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n                  var i;\n\n                  for (i = 0; i < len; i += 4) {\n                    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n                    arr[curByte++] = tmp >> 16 & 0xFF;\n                    arr[curByte++] = tmp >> 8 & 0xFF;\n                    arr[curByte++] = tmp & 0xFF;\n                  }\n\n                  if (placeHoldersLen === 2) {\n                    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n                    arr[curByte++] = tmp & 0xFF;\n                  }\n\n                  if (placeHoldersLen === 1) {\n                    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n                    arr[curByte++] = tmp >> 8 & 0xFF;\n                    arr[curByte++] = tmp & 0xFF;\n                  }\n\n                  return arr;\n                }\n\n                function tripletToBase64(num) {\n                  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n                }\n\n                function encodeChunk(uint8, start, end) {\n                  var tmp;\n                  var output = [];\n\n                  for (var i = start; i < end; i += 3) {\n                    tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n                    output.push(tripletToBase64(tmp));\n                  }\n\n                  return output.join('');\n                }\n\n                function fromByteArray(uint8) {\n                  var tmp;\n                  var len = uint8.length;\n                  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n\n                  var parts = [];\n                  var maxChunkLength = 16383; // must be multiple of 3\n                  // go through the array every three bytes, we'll deal with trailing stuff later\n\n                  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n                    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n                  } // pad the end with zeros, but make sure to not forget the extra bytes\n\n\n                  if (extraBytes === 1) {\n                    tmp = uint8[len - 1];\n                    parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');\n                  } else if (extraBytes === 2) {\n                    tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n                    parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');\n                  }\n\n                  return parts.join('');\n                }\n              }, {}],\n              2: [function (require, module, exports) {}, {}],\n              3: [function (require, module, exports) {\n                (function (Buffer) {\n                  /*!\n                  * The buffer module from node.js, for the browser.\n                  *\n                  * @author   Feross Aboukhadijeh <https://feross.org>\n                  * @license  MIT\n                  */\n\n                  /* eslint-disable no-proto */\n                  'use strict';\n\n                  var base64 = require('base64-js');\n\n                  var ieee754 = require('ieee754');\n\n                  exports.Buffer = Buffer;\n                  exports.SlowBuffer = SlowBuffer;\n                  exports.INSPECT_MAX_BYTES = 50;\n                  var K_MAX_LENGTH = 0x7fffffff;\n                  exports.kMaxLength = K_MAX_LENGTH;\n                  /**\n                  * If `Buffer.TYPED_ARRAY_SUPPORT`:\n                  *   === true    Use Uint8Array implementation (fastest)\n                  *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n                  *               implementation (most compatible, even IE6)\n                  *\n                  * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n                  * Opera 11.6+, iOS 4.2+.\n                  *\n                  * We report that the browser does not support typed arrays if the are not subclassable\n                  * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n                  * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n                  * for __proto__ and has a buggy typed array implementation.\n                  */\n\n                  Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport();\n\n                  if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' && typeof console.error === 'function') {\n                    console.error('This browser lacks typed array (Uint8Array) support which is required by ' + '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.');\n                  }\n\n                  function typedArraySupport() {\n                    // Can typed array instances can be augmented?\n                    try {\n                      var arr = new Uint8Array(1);\n                      arr.__proto__ = {\n                        __proto__: Uint8Array.prototype,\n                        foo: function foo() {\n                          return 42;\n                        }\n                      };\n                      return arr.foo() === 42;\n                    } catch (e) {\n                      return false;\n                    }\n                  }\n\n                  Object.defineProperty(Buffer.prototype, 'parent', {\n                    enumerable: true,\n                    get: function get() {\n                      if (!Buffer.isBuffer(this)) return undefined;\n                      return this.buffer;\n                    }\n                  });\n                  Object.defineProperty(Buffer.prototype, 'offset', {\n                    enumerable: true,\n                    get: function get() {\n                      if (!Buffer.isBuffer(this)) return undefined;\n                      return this.byteOffset;\n                    }\n                  });\n\n                  function createBuffer(length) {\n                    if (length > K_MAX_LENGTH) {\n                      throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"');\n                    } // Return an augmented `Uint8Array` instance\n\n\n                    var buf = new Uint8Array(length);\n                    buf.__proto__ = Buffer.prototype;\n                    return buf;\n                  }\n                  /**\n                  * The Buffer constructor returns instances of `Uint8Array` that have their\n                  * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n                  * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n                  * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n                  * returns a single octet.\n                  *\n                  * The `Uint8Array` prototype remains unmodified.\n                  */\n\n\n                  function Buffer(arg, encodingOrOffset, length) {\n                    // Common case.\n                    if (typeof arg === 'number') {\n                      if (typeof encodingOrOffset === 'string') {\n                        throw new TypeError('The \"string\" argument must be of type string. Received type number');\n                      }\n\n                      return allocUnsafe(arg);\n                    }\n\n                    return from(arg, encodingOrOffset, length);\n                  } // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n\n\n                  if (typeof Symbol !== 'undefined' && Symbol.species != null && Buffer[Symbol.species] === Buffer) {\n                    Object.defineProperty(Buffer, Symbol.species, {\n                      value: null,\n                      configurable: true,\n                      enumerable: false,\n                      writable: false\n                    });\n                  }\n\n                  Buffer.poolSize = 8192; // not used by this implementation\n\n                  function from(value, encodingOrOffset, length) {\n                    if (typeof value === 'string') {\n                      return fromString(value, encodingOrOffset);\n                    }\n\n                    if (ArrayBuffer.isView(value)) {\n                      return fromArrayLike(value);\n                    }\n\n                    if (value == null) {\n                      throw TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + _typeof(value));\n                    }\n\n                    if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {\n                      return fromArrayBuffer(value, encodingOrOffset, length);\n                    }\n\n                    if (typeof value === 'number') {\n                      throw new TypeError('The \"value\" argument must not be of type number. Received type number');\n                    }\n\n                    var valueOf = value.valueOf && value.valueOf();\n\n                    if (valueOf != null && valueOf !== value) {\n                      return Buffer.from(valueOf, encodingOrOffset, length);\n                    }\n\n                    var b = fromObject(value);\n                    if (b) return b;\n\n                    if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === 'function') {\n                      return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length);\n                    }\n\n                    throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + _typeof(value));\n                  }\n                  /**\n                  * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n                  * if value is a number.\n                  * Buffer.from(str[, encoding])\n                  * Buffer.from(array)\n                  * Buffer.from(buffer)\n                  * Buffer.from(arrayBuffer[, byteOffset[, length]])\n                  **/\n\n\n                  Buffer.from = function (value, encodingOrOffset, length) {\n                    return from(value, encodingOrOffset, length);\n                  }; // Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n                  // https://github.com/feross/buffer/pull/148\n\n\n                  Buffer.prototype.__proto__ = Uint8Array.prototype;\n                  Buffer.__proto__ = Uint8Array;\n\n                  function assertSize(size) {\n                    if (typeof size !== 'number') {\n                      throw new TypeError('\"size\" argument must be of type number');\n                    } else if (size < 0) {\n                      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"');\n                    }\n                  }\n\n                  function alloc(size, fill, encoding) {\n                    assertSize(size);\n\n                    if (size <= 0) {\n                      return createBuffer(size);\n                    }\n\n                    if (fill !== undefined) {\n                      // Only pay attention to encoding if it's a string. This\n                      // prevents accidentally sending in a number that would\n                      // be interpretted as a start offset.\n                      return typeof encoding === 'string' ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);\n                    }\n\n                    return createBuffer(size);\n                  }\n                  /**\n                  * Creates a new filled Buffer instance.\n                  * alloc(size[, fill[, encoding]])\n                  **/\n\n\n                  Buffer.alloc = function (size, fill, encoding) {\n                    return alloc(size, fill, encoding);\n                  };\n\n                  function allocUnsafe(size) {\n                    assertSize(size);\n                    return createBuffer(size < 0 ? 0 : checked(size) | 0);\n                  }\n                  /**\n                  * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n                  * */\n\n\n                  Buffer.allocUnsafe = function (size) {\n                    return allocUnsafe(size);\n                  };\n                  /**\n                  * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n                  */\n\n\n                  Buffer.allocUnsafeSlow = function (size) {\n                    return allocUnsafe(size);\n                  };\n\n                  function fromString(string, encoding) {\n                    if (typeof encoding !== 'string' || encoding === '') {\n                      encoding = 'utf8';\n                    }\n\n                    if (!Buffer.isEncoding(encoding)) {\n                      throw new TypeError('Unknown encoding: ' + encoding);\n                    }\n\n                    var length = byteLength(string, encoding) | 0;\n                    var buf = createBuffer(length);\n                    var actual = buf.write(string, encoding);\n\n                    if (actual !== length) {\n                      // Writing a hex string, for example, that contains invalid characters will\n                      // cause everything after the first invalid character to be ignored. (e.g.\n                      // 'abxxcd' will be treated as 'ab')\n                      buf = buf.slice(0, actual);\n                    }\n\n                    return buf;\n                  }\n\n                  function fromArrayLike(array) {\n                    var length = array.length < 0 ? 0 : checked(array.length) | 0;\n                    var buf = createBuffer(length);\n\n                    for (var i = 0; i < length; i += 1) {\n                      buf[i] = array[i] & 255;\n                    }\n\n                    return buf;\n                  }\n\n                  function fromArrayBuffer(array, byteOffset, length) {\n                    if (byteOffset < 0 || array.byteLength < byteOffset) {\n                      throw new RangeError('\"offset\" is outside of buffer bounds');\n                    }\n\n                    if (array.byteLength < byteOffset + (length || 0)) {\n                      throw new RangeError('\"length\" is outside of buffer bounds');\n                    }\n\n                    var buf;\n\n                    if (byteOffset === undefined && length === undefined) {\n                      buf = new Uint8Array(array);\n                    } else if (length === undefined) {\n                      buf = new Uint8Array(array, byteOffset);\n                    } else {\n                      buf = new Uint8Array(array, byteOffset, length);\n                    } // Return an augmented `Uint8Array` instance\n\n\n                    buf.__proto__ = Buffer.prototype;\n                    return buf;\n                  }\n\n                  function fromObject(obj) {\n                    if (Buffer.isBuffer(obj)) {\n                      var len = checked(obj.length) | 0;\n                      var buf = createBuffer(len);\n\n                      if (buf.length === 0) {\n                        return buf;\n                      }\n\n                      obj.copy(buf, 0, 0, len);\n                      return buf;\n                    }\n\n                    if (obj.length !== undefined) {\n                      if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n                        return createBuffer(0);\n                      }\n\n                      return fromArrayLike(obj);\n                    }\n\n                    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n                      return fromArrayLike(obj.data);\n                    }\n                  }\n\n                  function checked(length) {\n                    // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n                    // length is NaN (which is otherwise coerced to zero.)\n                    if (length >= K_MAX_LENGTH) {\n                      throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes');\n                    }\n\n                    return length | 0;\n                  }\n\n                  function SlowBuffer(length) {\n                    if (+length != length) {\n                      // eslint-disable-line eqeqeq\n                      length = 0;\n                    }\n\n                    return Buffer.alloc(+length);\n                  }\n\n                  Buffer.isBuffer = function isBuffer(b) {\n                    return b != null && b._isBuffer === true && b !== Buffer.prototype; // so Buffer.isBuffer(Buffer.prototype) will be false\n                  };\n\n                  Buffer.compare = function compare(a, b) {\n                    if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength);\n                    if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength);\n\n                    if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n                      throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');\n                    }\n\n                    if (a === b) return 0;\n                    var x = a.length;\n                    var y = b.length;\n\n                    for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n                      if (a[i] !== b[i]) {\n                        x = a[i];\n                        y = b[i];\n                        break;\n                      }\n                    }\n\n                    if (x < y) return -1;\n                    if (y < x) return 1;\n                    return 0;\n                  };\n\n                  Buffer.isEncoding = function isEncoding(encoding) {\n                    switch (String(encoding).toLowerCase()) {\n                      case 'hex':\n                      case 'utf8':\n                      case 'utf-8':\n                      case 'ascii':\n                      case 'latin1':\n                      case 'binary':\n                      case 'base64':\n                      case 'ucs2':\n                      case 'ucs-2':\n                      case 'utf16le':\n                      case 'utf-16le':\n                        return true;\n\n                      default:\n                        return false;\n                    }\n                  };\n\n                  Buffer.concat = function concat(list, length) {\n                    if (!Array.isArray(list)) {\n                      throw new TypeError('\"list\" argument must be an Array of Buffers');\n                    }\n\n                    if (list.length === 0) {\n                      return Buffer.alloc(0);\n                    }\n\n                    var i;\n\n                    if (length === undefined) {\n                      length = 0;\n\n                      for (i = 0; i < list.length; ++i) {\n                        length += list[i].length;\n                      }\n                    }\n\n                    var buffer = Buffer.allocUnsafe(length);\n                    var pos = 0;\n\n                    for (i = 0; i < list.length; ++i) {\n                      var buf = list[i];\n\n                      if (isInstance(buf, Uint8Array)) {\n                        buf = Buffer.from(buf);\n                      }\n\n                      if (!Buffer.isBuffer(buf)) {\n                        throw new TypeError('\"list\" argument must be an Array of Buffers');\n                      }\n\n                      buf.copy(buffer, pos);\n                      pos += buf.length;\n                    }\n\n                    return buffer;\n                  };\n\n                  function byteLength(string, encoding) {\n                    if (Buffer.isBuffer(string)) {\n                      return string.length;\n                    }\n\n                    if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n                      return string.byteLength;\n                    }\n\n                    if (typeof string !== 'string') {\n                      throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' + 'Received type ' + _typeof(string));\n                    }\n\n                    var len = string.length;\n                    var mustMatch = arguments.length > 2 && arguments[2] === true;\n                    if (!mustMatch && len === 0) return 0; // Use a for loop to avoid recursion\n\n                    var loweredCase = false;\n\n                    for (;;) {\n                      switch (encoding) {\n                        case 'ascii':\n                        case 'latin1':\n                        case 'binary':\n                          return len;\n\n                        case 'utf8':\n                        case 'utf-8':\n                          return utf8ToBytes(string).length;\n\n                        case 'ucs2':\n                        case 'ucs-2':\n                        case 'utf16le':\n                        case 'utf-16le':\n                          return len * 2;\n\n                        case 'hex':\n                          return len >>> 1;\n\n                        case 'base64':\n                          return base64ToBytes(string).length;\n\n                        default:\n                          if (loweredCase) {\n                            return mustMatch ? -1 : utf8ToBytes(string).length; // assume utf8\n                          }\n\n                          encoding = ('' + encoding).toLowerCase();\n                          loweredCase = true;\n                      }\n                    }\n                  }\n\n                  Buffer.byteLength = byteLength;\n\n                  function slowToString(encoding, start, end) {\n                    var loweredCase = false; // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n                    // property of a typed array.\n                    // This behaves neither like String nor Uint8Array in that we set start/end\n                    // to their upper/lower bounds if the value passed is out of range.\n                    // undefined is handled specially as per ECMA-262 6th Edition,\n                    // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\n                    if (start === undefined || start < 0) {\n                      start = 0;\n                    } // Return early if start > this.length. Done here to prevent potential uint32\n                    // coercion fail below.\n\n\n                    if (start > this.length) {\n                      return '';\n                    }\n\n                    if (end === undefined || end > this.length) {\n                      end = this.length;\n                    }\n\n                    if (end <= 0) {\n                      return '';\n                    } // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\n\n                    end >>>= 0;\n                    start >>>= 0;\n\n                    if (end <= start) {\n                      return '';\n                    }\n\n                    if (!encoding) encoding = 'utf8';\n\n                    while (true) {\n                      switch (encoding) {\n                        case 'hex':\n                          return hexSlice(this, start, end);\n\n                        case 'utf8':\n                        case 'utf-8':\n                          return utf8Slice(this, start, end);\n\n                        case 'ascii':\n                          return asciiSlice(this, start, end);\n\n                        case 'latin1':\n                        case 'binary':\n                          return latin1Slice(this, start, end);\n\n                        case 'base64':\n                          return base64Slice(this, start, end);\n\n                        case 'ucs2':\n                        case 'ucs-2':\n                        case 'utf16le':\n                        case 'utf-16le':\n                          return utf16leSlice(this, start, end);\n\n                        default:\n                          if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n                          encoding = (encoding + '').toLowerCase();\n                          loweredCase = true;\n                      }\n                    }\n                  } // This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n                  // to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n                  // reliably in a browserify context because there could be multiple different\n                  // copies of the 'buffer' package in use. This method works even for Buffer\n                  // instances that were created from another copy of the `buffer` package.\n                  // See: https://github.com/feross/buffer/issues/154\n\n\n                  Buffer.prototype._isBuffer = true;\n\n                  function swap(b, n, m) {\n                    var i = b[n];\n                    b[n] = b[m];\n                    b[m] = i;\n                  }\n\n                  Buffer.prototype.swap16 = function swap16() {\n                    var len = this.length;\n\n                    if (len % 2 !== 0) {\n                      throw new RangeError('Buffer size must be a multiple of 16-bits');\n                    }\n\n                    for (var i = 0; i < len; i += 2) {\n                      swap(this, i, i + 1);\n                    }\n\n                    return this;\n                  };\n\n                  Buffer.prototype.swap32 = function swap32() {\n                    var len = this.length;\n\n                    if (len % 4 !== 0) {\n                      throw new RangeError('Buffer size must be a multiple of 32-bits');\n                    }\n\n                    for (var i = 0; i < len; i += 4) {\n                      swap(this, i, i + 3);\n                      swap(this, i + 1, i + 2);\n                    }\n\n                    return this;\n                  };\n\n                  Buffer.prototype.swap64 = function swap64() {\n                    var len = this.length;\n\n                    if (len % 8 !== 0) {\n                      throw new RangeError('Buffer size must be a multiple of 64-bits');\n                    }\n\n                    for (var i = 0; i < len; i += 8) {\n                      swap(this, i, i + 7);\n                      swap(this, i + 1, i + 6);\n                      swap(this, i + 2, i + 5);\n                      swap(this, i + 3, i + 4);\n                    }\n\n                    return this;\n                  };\n\n                  Buffer.prototype.toString = function toString() {\n                    var length = this.length;\n                    if (length === 0) return '';\n                    if (arguments.length === 0) return utf8Slice(this, 0, length);\n                    return slowToString.apply(this, arguments);\n                  };\n\n                  Buffer.prototype.toLocaleString = Buffer.prototype.toString;\n\n                  Buffer.prototype.equals = function equals(b) {\n                    if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n                    if (this === b) return true;\n                    return Buffer.compare(this, b) === 0;\n                  };\n\n                  Buffer.prototype.inspect = function inspect() {\n                    var str = '';\n                    var max = exports.INSPECT_MAX_BYTES;\n                    str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim();\n                    if (this.length > max) str += ' ... ';\n                    return '<Buffer ' + str + '>';\n                  };\n\n                  Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n                    if (isInstance(target, Uint8Array)) {\n                      target = Buffer.from(target, target.offset, target.byteLength);\n                    }\n\n                    if (!Buffer.isBuffer(target)) {\n                      throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. ' + 'Received type ' + _typeof(target));\n                    }\n\n                    if (start === undefined) {\n                      start = 0;\n                    }\n\n                    if (end === undefined) {\n                      end = target ? target.length : 0;\n                    }\n\n                    if (thisStart === undefined) {\n                      thisStart = 0;\n                    }\n\n                    if (thisEnd === undefined) {\n                      thisEnd = this.length;\n                    }\n\n                    if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n                      throw new RangeError('out of range index');\n                    }\n\n                    if (thisStart >= thisEnd && start >= end) {\n                      return 0;\n                    }\n\n                    if (thisStart >= thisEnd) {\n                      return -1;\n                    }\n\n                    if (start >= end) {\n                      return 1;\n                    }\n\n                    start >>>= 0;\n                    end >>>= 0;\n                    thisStart >>>= 0;\n                    thisEnd >>>= 0;\n                    if (this === target) return 0;\n                    var x = thisEnd - thisStart;\n                    var y = end - start;\n                    var len = Math.min(x, y);\n                    var thisCopy = this.slice(thisStart, thisEnd);\n                    var targetCopy = target.slice(start, end);\n\n                    for (var i = 0; i < len; ++i) {\n                      if (thisCopy[i] !== targetCopy[i]) {\n                        x = thisCopy[i];\n                        y = targetCopy[i];\n                        break;\n                      }\n                    }\n\n                    if (x < y) return -1;\n                    if (y < x) return 1;\n                    return 0;\n                  }; // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n                  // OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n                  //\n                  // Arguments:\n                  // - buffer - a Buffer to search\n                  // - val - a string, Buffer, or number\n                  // - byteOffset - an index into `buffer`; will be clamped to an int32\n                  // - encoding - an optional encoding, relevant is val is a string\n                  // - dir - true for indexOf, false for lastIndexOf\n\n\n                  function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n                    // Empty buffer means no match\n                    if (buffer.length === 0) return -1; // Normalize byteOffset\n\n                    if (typeof byteOffset === 'string') {\n                      encoding = byteOffset;\n                      byteOffset = 0;\n                    } else if (byteOffset > 0x7fffffff) {\n                      byteOffset = 0x7fffffff;\n                    } else if (byteOffset < -0x80000000) {\n                      byteOffset = -0x80000000;\n                    }\n\n                    byteOffset = +byteOffset; // Coerce to Number.\n\n                    if (numberIsNaN(byteOffset)) {\n                      // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n                      byteOffset = dir ? 0 : buffer.length - 1;\n                    } // Normalize byteOffset: negative offsets start from the end of the buffer\n\n\n                    if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n\n                    if (byteOffset >= buffer.length) {\n                      if (dir) return -1;else byteOffset = buffer.length - 1;\n                    } else if (byteOffset < 0) {\n                      if (dir) byteOffset = 0;else return -1;\n                    } // Normalize val\n\n\n                    if (typeof val === 'string') {\n                      val = Buffer.from(val, encoding);\n                    } // Finally, search either indexOf (if dir is true) or lastIndexOf\n\n\n                    if (Buffer.isBuffer(val)) {\n                      // Special case: looking for empty string/buffer always fails\n                      if (val.length === 0) {\n                        return -1;\n                      }\n\n                      return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n                    } else if (typeof val === 'number') {\n                      val = val & 0xFF; // Search for a byte value [0-255]\n\n                      if (typeof Uint8Array.prototype.indexOf === 'function') {\n                        if (dir) {\n                          return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n                        } else {\n                          return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n                        }\n                      }\n\n                      return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n                    }\n\n                    throw new TypeError('val must be string, number or Buffer');\n                  }\n\n                  function arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n                    var indexSize = 1;\n                    var arrLength = arr.length;\n                    var valLength = val.length;\n\n                    if (encoding !== undefined) {\n                      encoding = String(encoding).toLowerCase();\n\n                      if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n                        if (arr.length < 2 || val.length < 2) {\n                          return -1;\n                        }\n\n                        indexSize = 2;\n                        arrLength /= 2;\n                        valLength /= 2;\n                        byteOffset /= 2;\n                      }\n                    }\n\n                    function read(buf, i) {\n                      if (indexSize === 1) {\n                        return buf[i];\n                      } else {\n                        return buf.readUInt16BE(i * indexSize);\n                      }\n                    }\n\n                    var i;\n\n                    if (dir) {\n                      var foundIndex = -1;\n\n                      for (i = byteOffset; i < arrLength; i++) {\n                        if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n                          if (foundIndex === -1) foundIndex = i;\n                          if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n                        } else {\n                          if (foundIndex !== -1) i -= i - foundIndex;\n                          foundIndex = -1;\n                        }\n                      }\n                    } else {\n                      if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n\n                      for (i = byteOffset; i >= 0; i--) {\n                        var found = true;\n\n                        for (var j = 0; j < valLength; j++) {\n                          if (read(arr, i + j) !== read(val, j)) {\n                            found = false;\n                            break;\n                          }\n                        }\n\n                        if (found) return i;\n                      }\n                    }\n\n                    return -1;\n                  }\n\n                  Buffer.prototype.includes = function includes(val, byteOffset, encoding) {\n                    return this.indexOf(val, byteOffset, encoding) !== -1;\n                  };\n\n                  Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n                    return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n                  };\n\n                  Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n                    return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n                  };\n\n                  function hexWrite(buf, string, offset, length) {\n                    offset = Number(offset) || 0;\n                    var remaining = buf.length - offset;\n\n                    if (!length) {\n                      length = remaining;\n                    } else {\n                      length = Number(length);\n\n                      if (length > remaining) {\n                        length = remaining;\n                      }\n                    }\n\n                    var strLen = string.length;\n\n                    if (length > strLen / 2) {\n                      length = strLen / 2;\n                    }\n\n                    for (var i = 0; i < length; ++i) {\n                      var parsed = parseInt(string.substr(i * 2, 2), 16);\n                      if (numberIsNaN(parsed)) return i;\n                      buf[offset + i] = parsed;\n                    }\n\n                    return i;\n                  }\n\n                  function utf8Write(buf, string, offset, length) {\n                    return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n                  }\n\n                  function asciiWrite(buf, string, offset, length) {\n                    return blitBuffer(asciiToBytes(string), buf, offset, length);\n                  }\n\n                  function latin1Write(buf, string, offset, length) {\n                    return asciiWrite(buf, string, offset, length);\n                  }\n\n                  function base64Write(buf, string, offset, length) {\n                    return blitBuffer(base64ToBytes(string), buf, offset, length);\n                  }\n\n                  function ucs2Write(buf, string, offset, length) {\n                    return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n                  }\n\n                  Buffer.prototype.write = function write(string, offset, length, encoding) {\n                    // Buffer#write(string)\n                    if (offset === undefined) {\n                      encoding = 'utf8';\n                      length = this.length;\n                      offset = 0; // Buffer#write(string, encoding)\n                    } else if (length === undefined && typeof offset === 'string') {\n                      encoding = offset;\n                      length = this.length;\n                      offset = 0; // Buffer#write(string, offset[, length][, encoding])\n                    } else if (isFinite(offset)) {\n                      offset = offset >>> 0;\n\n                      if (isFinite(length)) {\n                        length = length >>> 0;\n                        if (encoding === undefined) encoding = 'utf8';\n                      } else {\n                        encoding = length;\n                        length = undefined;\n                      }\n                    } else {\n                      throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n                    }\n\n                    var remaining = this.length - offset;\n                    if (length === undefined || length > remaining) length = remaining;\n\n                    if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n                      throw new RangeError('Attempt to write outside buffer bounds');\n                    }\n\n                    if (!encoding) encoding = 'utf8';\n                    var loweredCase = false;\n\n                    for (;;) {\n                      switch (encoding) {\n                        case 'hex':\n                          return hexWrite(this, string, offset, length);\n\n                        case 'utf8':\n                        case 'utf-8':\n                          return utf8Write(this, string, offset, length);\n\n                        case 'ascii':\n                          return asciiWrite(this, string, offset, length);\n\n                        case 'latin1':\n                        case 'binary':\n                          return latin1Write(this, string, offset, length);\n\n                        case 'base64':\n                          // Warning: maxLength not taken into account in base64Write\n                          return base64Write(this, string, offset, length);\n\n                        case 'ucs2':\n                        case 'ucs-2':\n                        case 'utf16le':\n                        case 'utf-16le':\n                          return ucs2Write(this, string, offset, length);\n\n                        default:\n                          if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n                          encoding = ('' + encoding).toLowerCase();\n                          loweredCase = true;\n                      }\n                    }\n                  };\n\n                  Buffer.prototype.toJSON = function toJSON() {\n                    return {\n                      type: 'Buffer',\n                      data: Array.prototype.slice.call(this._arr || this, 0)\n                    };\n                  };\n\n                  function base64Slice(buf, start, end) {\n                    if (start === 0 && end === buf.length) {\n                      return base64.fromByteArray(buf);\n                    } else {\n                      return base64.fromByteArray(buf.slice(start, end));\n                    }\n                  }\n\n                  function utf8Slice(buf, start, end) {\n                    end = Math.min(buf.length, end);\n                    var res = [];\n                    var i = start;\n\n                    while (i < end) {\n                      var firstByte = buf[i];\n                      var codePoint = null;\n                      var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n\n                      if (i + bytesPerSequence <= end) {\n                        var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n                        switch (bytesPerSequence) {\n                          case 1:\n                            if (firstByte < 0x80) {\n                              codePoint = firstByte;\n                            }\n\n                            break;\n\n                          case 2:\n                            secondByte = buf[i + 1];\n\n                            if ((secondByte & 0xC0) === 0x80) {\n                              tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n\n                              if (tempCodePoint > 0x7F) {\n                                codePoint = tempCodePoint;\n                              }\n                            }\n\n                            break;\n\n                          case 3:\n                            secondByte = buf[i + 1];\n                            thirdByte = buf[i + 2];\n\n                            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n                              tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n\n                              if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n                                codePoint = tempCodePoint;\n                              }\n                            }\n\n                            break;\n\n                          case 4:\n                            secondByte = buf[i + 1];\n                            thirdByte = buf[i + 2];\n                            fourthByte = buf[i + 3];\n\n                            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n                              tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n\n                              if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n                                codePoint = tempCodePoint;\n                              }\n                            }\n\n                        }\n                      }\n\n                      if (codePoint === null) {\n                        // we did not generate a valid codePoint so insert a\n                        // replacement char (U+FFFD) and advance only 1 byte\n                        codePoint = 0xFFFD;\n                        bytesPerSequence = 1;\n                      } else if (codePoint > 0xFFFF) {\n                        // encode to utf16 (surrogate pair dance)\n                        codePoint -= 0x10000;\n                        res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n                        codePoint = 0xDC00 | codePoint & 0x3FF;\n                      }\n\n                      res.push(codePoint);\n                      i += bytesPerSequence;\n                    }\n\n                    return decodeCodePointsArray(res);\n                  } // Based on http://stackoverflow.com/a/22747272/680742, the browser with\n                  // the lowest limit is Chrome, with 0x10000 args.\n                  // We go 1 magnitude less, for safety\n\n\n                  var MAX_ARGUMENTS_LENGTH = 0x1000;\n\n                  function decodeCodePointsArray(codePoints) {\n                    var len = codePoints.length;\n\n                    if (len <= MAX_ARGUMENTS_LENGTH) {\n                      return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n                    } // Decode in chunks to avoid \"call stack size exceeded\".\n\n\n                    var res = '';\n                    var i = 0;\n\n                    while (i < len) {\n                      res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n                    }\n\n                    return res;\n                  }\n\n                  function asciiSlice(buf, start, end) {\n                    var ret = '';\n                    end = Math.min(buf.length, end);\n\n                    for (var i = start; i < end; ++i) {\n                      ret += String.fromCharCode(buf[i] & 0x7F);\n                    }\n\n                    return ret;\n                  }\n\n                  function latin1Slice(buf, start, end) {\n                    var ret = '';\n                    end = Math.min(buf.length, end);\n\n                    for (var i = start; i < end; ++i) {\n                      ret += String.fromCharCode(buf[i]);\n                    }\n\n                    return ret;\n                  }\n\n                  function hexSlice(buf, start, end) {\n                    var len = buf.length;\n                    if (!start || start < 0) start = 0;\n                    if (!end || end < 0 || end > len) end = len;\n                    var out = '';\n\n                    for (var i = start; i < end; ++i) {\n                      out += toHex(buf[i]);\n                    }\n\n                    return out;\n                  }\n\n                  function utf16leSlice(buf, start, end) {\n                    var bytes = buf.slice(start, end);\n                    var res = '';\n\n                    for (var i = 0; i < bytes.length; i += 2) {\n                      res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n                    }\n\n                    return res;\n                  }\n\n                  Buffer.prototype.slice = function slice(start, end) {\n                    var len = this.length;\n                    start = ~~start;\n                    end = end === undefined ? len : ~~end;\n\n                    if (start < 0) {\n                      start += len;\n                      if (start < 0) start = 0;\n                    } else if (start > len) {\n                      start = len;\n                    }\n\n                    if (end < 0) {\n                      end += len;\n                      if (end < 0) end = 0;\n                    } else if (end > len) {\n                      end = len;\n                    }\n\n                    if (end < start) end = start;\n                    var newBuf = this.subarray(start, end); // Return an augmented `Uint8Array` instance\n\n                    newBuf.__proto__ = Buffer.prototype;\n                    return newBuf;\n                  };\n                  /*\n                  * Need to make sure that buffer isn't trying to write out of bounds.\n                  */\n\n\n                  function checkOffset(offset, ext, length) {\n                    if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n                    if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n                  }\n\n                  Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n                    offset = offset >>> 0;\n                    byteLength = byteLength >>> 0;\n                    if (!noAssert) checkOffset(offset, byteLength, this.length);\n                    var val = this[offset];\n                    var mul = 1;\n                    var i = 0;\n\n                    while (++i < byteLength && (mul *= 0x100)) {\n                      val += this[offset + i] * mul;\n                    }\n\n                    return val;\n                  };\n\n                  Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n                    offset = offset >>> 0;\n                    byteLength = byteLength >>> 0;\n\n                    if (!noAssert) {\n                      checkOffset(offset, byteLength, this.length);\n                    }\n\n                    var val = this[offset + --byteLength];\n                    var mul = 1;\n\n                    while (byteLength > 0 && (mul *= 0x100)) {\n                      val += this[offset + --byteLength] * mul;\n                    }\n\n                    return val;\n                  };\n\n                  Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n                    offset = offset >>> 0;\n                    if (!noAssert) checkOffset(offset, 1, this.length);\n                    return this[offset];\n                  };\n\n                  Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n                    offset = offset >>> 0;\n                    if (!noAssert) checkOffset(offset, 2, this.length);\n                    return this[offset] | this[offset + 1] << 8;\n                  };\n\n                  Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n                    offset = offset >>> 0;\n                    if (!noAssert) checkOffset(offset, 2, this.length);\n                    return this[offset] << 8 | this[offset + 1];\n                  };\n\n                  Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n                    offset = offset >>> 0;\n                    if (!noAssert) checkOffset(offset, 4, this.length);\n                    return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n                  };\n\n                  Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n                    offset = offset >>> 0;\n                    if (!noAssert) checkOffset(offset, 4, this.length);\n                    return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n                  };\n\n                  Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n                    offset = offset >>> 0;\n                    byteLength = byteLength >>> 0;\n                    if (!noAssert) checkOffset(offset, byteLength, this.length);\n                    var val = this[offset];\n                    var mul = 1;\n                    var i = 0;\n\n                    while (++i < byteLength && (mul *= 0x100)) {\n                      val += this[offset + i] * mul;\n                    }\n\n                    mul *= 0x80;\n                    if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n                    return val;\n                  };\n\n                  Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n                    offset = offset >>> 0;\n                    byteLength = byteLength >>> 0;\n                    if (!noAssert) checkOffset(offset, byteLength, this.length);\n                    var i = byteLength;\n                    var mul = 1;\n                    var val = this[offset + --i];\n\n                    while (i > 0 && (mul *= 0x100)) {\n                      val += this[offset + --i] * mul;\n                    }\n\n                    mul *= 0x80;\n                    if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n                    return val;\n                  };\n\n                  Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n                    offset = offset >>> 0;\n                    if (!noAssert) checkOffset(offset, 1, this.length);\n                    if (!(this[offset] & 0x80)) return this[offset];\n                    return (0xff - this[offset] + 1) * -1;\n                  };\n\n                  Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n                    offset = offset >>> 0;\n                    if (!noAssert) checkOffset(offset, 2, this.length);\n                    var val = this[offset] | this[offset + 1] << 8;\n                    return val & 0x8000 ? val | 0xFFFF0000 : val;\n                  };\n\n                  Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n                    offset = offset >>> 0;\n                    if (!noAssert) checkOffset(offset, 2, this.length);\n                    var val = this[offset + 1] | this[offset] << 8;\n                    return val & 0x8000 ? val | 0xFFFF0000 : val;\n                  };\n\n                  Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n                    offset = offset >>> 0;\n                    if (!noAssert) checkOffset(offset, 4, this.length);\n                    return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n                  };\n\n                  Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n                    offset = offset >>> 0;\n                    if (!noAssert) checkOffset(offset, 4, this.length);\n                    return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n                  };\n\n                  Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n                    offset = offset >>> 0;\n                    if (!noAssert) checkOffset(offset, 4, this.length);\n                    return ieee754.read(this, offset, true, 23, 4);\n                  };\n\n                  Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n                    offset = offset >>> 0;\n                    if (!noAssert) checkOffset(offset, 4, this.length);\n                    return ieee754.read(this, offset, false, 23, 4);\n                  };\n\n                  Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n                    offset = offset >>> 0;\n                    if (!noAssert) checkOffset(offset, 8, this.length);\n                    return ieee754.read(this, offset, true, 52, 8);\n                  };\n\n                  Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n                    offset = offset >>> 0;\n                    if (!noAssert) checkOffset(offset, 8, this.length);\n                    return ieee754.read(this, offset, false, 52, 8);\n                  };\n\n                  function checkInt(buf, value, offset, ext, max, min) {\n                    if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n                    if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n                    if (offset + ext > buf.length) throw new RangeError('Index out of range');\n                  }\n\n                  Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n                    value = +value;\n                    offset = offset >>> 0;\n                    byteLength = byteLength >>> 0;\n\n                    if (!noAssert) {\n                      var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n                      checkInt(this, value, offset, byteLength, maxBytes, 0);\n                    }\n\n                    var mul = 1;\n                    var i = 0;\n                    this[offset] = value & 0xFF;\n\n                    while (++i < byteLength && (mul *= 0x100)) {\n                      this[offset + i] = value / mul & 0xFF;\n                    }\n\n                    return offset + byteLength;\n                  };\n\n                  Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n                    value = +value;\n                    offset = offset >>> 0;\n                    byteLength = byteLength >>> 0;\n\n                    if (!noAssert) {\n                      var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n                      checkInt(this, value, offset, byteLength, maxBytes, 0);\n                    }\n\n                    var i = byteLength - 1;\n                    var mul = 1;\n                    this[offset + i] = value & 0xFF;\n\n                    while (--i >= 0 && (mul *= 0x100)) {\n                      this[offset + i] = value / mul & 0xFF;\n                    }\n\n                    return offset + byteLength;\n                  };\n\n                  Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n                    value = +value;\n                    offset = offset >>> 0;\n                    if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n                    this[offset] = value & 0xff;\n                    return offset + 1;\n                  };\n\n                  Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n                    value = +value;\n                    offset = offset >>> 0;\n                    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n                    this[offset] = value & 0xff;\n                    this[offset + 1] = value >>> 8;\n                    return offset + 2;\n                  };\n\n                  Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n                    value = +value;\n                    offset = offset >>> 0;\n                    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n                    this[offset] = value >>> 8;\n                    this[offset + 1] = value & 0xff;\n                    return offset + 2;\n                  };\n\n                  Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n                    value = +value;\n                    offset = offset >>> 0;\n                    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n                    this[offset + 3] = value >>> 24;\n                    this[offset + 2] = value >>> 16;\n                    this[offset + 1] = value >>> 8;\n                    this[offset] = value & 0xff;\n                    return offset + 4;\n                  };\n\n                  Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n                    value = +value;\n                    offset = offset >>> 0;\n                    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n                    this[offset] = value >>> 24;\n                    this[offset + 1] = value >>> 16;\n                    this[offset + 2] = value >>> 8;\n                    this[offset + 3] = value & 0xff;\n                    return offset + 4;\n                  };\n\n                  Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n                    value = +value;\n                    offset = offset >>> 0;\n\n                    if (!noAssert) {\n                      var limit = Math.pow(2, 8 * byteLength - 1);\n                      checkInt(this, value, offset, byteLength, limit - 1, -limit);\n                    }\n\n                    var i = 0;\n                    var mul = 1;\n                    var sub = 0;\n                    this[offset] = value & 0xFF;\n\n                    while (++i < byteLength && (mul *= 0x100)) {\n                      if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n                        sub = 1;\n                      }\n\n                      this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n                    }\n\n                    return offset + byteLength;\n                  };\n\n                  Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n                    value = +value;\n                    offset = offset >>> 0;\n\n                    if (!noAssert) {\n                      var limit = Math.pow(2, 8 * byteLength - 1);\n                      checkInt(this, value, offset, byteLength, limit - 1, -limit);\n                    }\n\n                    var i = byteLength - 1;\n                    var mul = 1;\n                    var sub = 0;\n                    this[offset + i] = value & 0xFF;\n\n                    while (--i >= 0 && (mul *= 0x100)) {\n                      if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n                        sub = 1;\n                      }\n\n                      this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n                    }\n\n                    return offset + byteLength;\n                  };\n\n                  Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n                    value = +value;\n                    offset = offset >>> 0;\n                    if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n                    if (value < 0) value = 0xff + value + 1;\n                    this[offset] = value & 0xff;\n                    return offset + 1;\n                  };\n\n                  Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n                    value = +value;\n                    offset = offset >>> 0;\n                    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n                    this[offset] = value & 0xff;\n                    this[offset + 1] = value >>> 8;\n                    return offset + 2;\n                  };\n\n                  Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n                    value = +value;\n                    offset = offset >>> 0;\n                    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n                    this[offset] = value >>> 8;\n                    this[offset + 1] = value & 0xff;\n                    return offset + 2;\n                  };\n\n                  Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n                    value = +value;\n                    offset = offset >>> 0;\n                    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n                    this[offset] = value & 0xff;\n                    this[offset + 1] = value >>> 8;\n                    this[offset + 2] = value >>> 16;\n                    this[offset + 3] = value >>> 24;\n                    return offset + 4;\n                  };\n\n                  Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n                    value = +value;\n                    offset = offset >>> 0;\n                    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n                    if (value < 0) value = 0xffffffff + value + 1;\n                    this[offset] = value >>> 24;\n                    this[offset + 1] = value >>> 16;\n                    this[offset + 2] = value >>> 8;\n                    this[offset + 3] = value & 0xff;\n                    return offset + 4;\n                  };\n\n                  function checkIEEE754(buf, value, offset, ext, max, min) {\n                    if (offset + ext > buf.length) throw new RangeError('Index out of range');\n                    if (offset < 0) throw new RangeError('Index out of range');\n                  }\n\n                  function writeFloat(buf, value, offset, littleEndian, noAssert) {\n                    value = +value;\n                    offset = offset >>> 0;\n\n                    if (!noAssert) {\n                      checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);\n                    }\n\n                    ieee754.write(buf, value, offset, littleEndian, 23, 4);\n                    return offset + 4;\n                  }\n\n                  Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n                    return writeFloat(this, value, offset, true, noAssert);\n                  };\n\n                  Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n                    return writeFloat(this, value, offset, false, noAssert);\n                  };\n\n                  function writeDouble(buf, value, offset, littleEndian, noAssert) {\n                    value = +value;\n                    offset = offset >>> 0;\n\n                    if (!noAssert) {\n                      checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);\n                    }\n\n                    ieee754.write(buf, value, offset, littleEndian, 52, 8);\n                    return offset + 8;\n                  }\n\n                  Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n                    return writeDouble(this, value, offset, true, noAssert);\n                  };\n\n                  Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n                    return writeDouble(this, value, offset, false, noAssert);\n                  }; // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\n\n                  Buffer.prototype.copy = function copy(target, targetStart, start, end) {\n                    if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer');\n                    if (!start) start = 0;\n                    if (!end && end !== 0) end = this.length;\n                    if (targetStart >= target.length) targetStart = target.length;\n                    if (!targetStart) targetStart = 0;\n                    if (end > 0 && end < start) end = start; // Copy 0 bytes; we're done\n\n                    if (end === start) return 0;\n                    if (target.length === 0 || this.length === 0) return 0; // Fatal error conditions\n\n                    if (targetStart < 0) {\n                      throw new RangeError('targetStart out of bounds');\n                    }\n\n                    if (start < 0 || start >= this.length) throw new RangeError('Index out of range');\n                    if (end < 0) throw new RangeError('sourceEnd out of bounds'); // Are we oob?\n\n                    if (end > this.length) end = this.length;\n\n                    if (target.length - targetStart < end - start) {\n                      end = target.length - targetStart + start;\n                    }\n\n                    var len = end - start;\n\n                    if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n                      // Use built-in when available, missing from IE11\n                      this.copyWithin(targetStart, start, end);\n                    } else if (this === target && start < targetStart && targetStart < end) {\n                      // descending copy from end\n                      for (var i = len - 1; i >= 0; --i) {\n                        target[i + targetStart] = this[i + start];\n                      }\n                    } else {\n                      Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);\n                    }\n\n                    return len;\n                  }; // Usage:\n                  //    buffer.fill(number[, offset[, end]])\n                  //    buffer.fill(buffer[, offset[, end]])\n                  //    buffer.fill(string[, offset[, end]][, encoding])\n\n\n                  Buffer.prototype.fill = function fill(val, start, end, encoding) {\n                    // Handle string cases:\n                    if (typeof val === 'string') {\n                      if (typeof start === 'string') {\n                        encoding = start;\n                        start = 0;\n                        end = this.length;\n                      } else if (typeof end === 'string') {\n                        encoding = end;\n                        end = this.length;\n                      }\n\n                      if (encoding !== undefined && typeof encoding !== 'string') {\n                        throw new TypeError('encoding must be a string');\n                      }\n\n                      if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n                        throw new TypeError('Unknown encoding: ' + encoding);\n                      }\n\n                      if (val.length === 1) {\n                        var code = val.charCodeAt(0);\n\n                        if (encoding === 'utf8' && code < 128 || encoding === 'latin1') {\n                          // Fast path: If `val` fits into a single byte, use that numeric value.\n                          val = code;\n                        }\n                      }\n                    } else if (typeof val === 'number') {\n                      val = val & 255;\n                    } // Invalid ranges are not set to a default, so can range check early.\n\n\n                    if (start < 0 || this.length < start || this.length < end) {\n                      throw new RangeError('Out of range index');\n                    }\n\n                    if (end <= start) {\n                      return this;\n                    }\n\n                    start = start >>> 0;\n                    end = end === undefined ? this.length : end >>> 0;\n                    if (!val) val = 0;\n                    var i;\n\n                    if (typeof val === 'number') {\n                      for (i = start; i < end; ++i) {\n                        this[i] = val;\n                      }\n                    } else {\n                      var bytes = Buffer.isBuffer(val) ? val : Buffer.from(val, encoding);\n                      var len = bytes.length;\n\n                      if (len === 0) {\n                        throw new TypeError('The value \"' + val + '\" is invalid for argument \"value\"');\n                      }\n\n                      for (i = 0; i < end - start; ++i) {\n                        this[i + start] = bytes[i % len];\n                      }\n                    }\n\n                    return this;\n                  }; // HELPER FUNCTIONS\n                  // ================\n\n\n                  var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;\n\n                  function base64clean(str) {\n                    // Node takes equal signs as end of the Base64 encoding\n                    str = str.split('=')[0]; // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n\n                    str = str.trim().replace(INVALID_BASE64_RE, ''); // Node converts strings with length < 2 to ''\n\n                    if (str.length < 2) return ''; // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\n                    while (str.length % 4 !== 0) {\n                      str = str + '=';\n                    }\n\n                    return str;\n                  }\n\n                  function toHex(n) {\n                    if (n < 16) return '0' + n.toString(16);\n                    return n.toString(16);\n                  }\n\n                  function utf8ToBytes(string, units) {\n                    units = units || Infinity;\n                    var codePoint;\n                    var length = string.length;\n                    var leadSurrogate = null;\n                    var bytes = [];\n\n                    for (var i = 0; i < length; ++i) {\n                      codePoint = string.charCodeAt(i); // is surrogate component\n\n                      if (codePoint > 0xD7FF && codePoint < 0xE000) {\n                        // last char was a lead\n                        if (!leadSurrogate) {\n                          // no lead yet\n                          if (codePoint > 0xDBFF) {\n                            // unexpected trail\n                            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n                            continue;\n                          } else if (i + 1 === length) {\n                            // unpaired lead\n                            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n                            continue;\n                          } // valid lead\n\n\n                          leadSurrogate = codePoint;\n                          continue;\n                        } // 2 leads in a row\n\n\n                        if (codePoint < 0xDC00) {\n                          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n                          leadSurrogate = codePoint;\n                          continue;\n                        } // valid surrogate pair\n\n\n                        codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n                      } else if (leadSurrogate) {\n                        // valid bmp char, but last char was a lead\n                        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n                      }\n\n                      leadSurrogate = null; // encode utf8\n\n                      if (codePoint < 0x80) {\n                        if ((units -= 1) < 0) break;\n                        bytes.push(codePoint);\n                      } else if (codePoint < 0x800) {\n                        if ((units -= 2) < 0) break;\n                        bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n                      } else if (codePoint < 0x10000) {\n                        if ((units -= 3) < 0) break;\n                        bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n                      } else if (codePoint < 0x110000) {\n                        if ((units -= 4) < 0) break;\n                        bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n                      } else {\n                        throw new Error('Invalid code point');\n                      }\n                    }\n\n                    return bytes;\n                  }\n\n                  function asciiToBytes(str) {\n                    var byteArray = [];\n\n                    for (var i = 0; i < str.length; ++i) {\n                      // Node's code seems to be doing this and not & 0x7F..\n                      byteArray.push(str.charCodeAt(i) & 0xFF);\n                    }\n\n                    return byteArray;\n                  }\n\n                  function utf16leToBytes(str, units) {\n                    var c, hi, lo;\n                    var byteArray = [];\n\n                    for (var i = 0; i < str.length; ++i) {\n                      if ((units -= 2) < 0) break;\n                      c = str.charCodeAt(i);\n                      hi = c >> 8;\n                      lo = c % 256;\n                      byteArray.push(lo);\n                      byteArray.push(hi);\n                    }\n\n                    return byteArray;\n                  }\n\n                  function base64ToBytes(str) {\n                    return base64.toByteArray(base64clean(str));\n                  }\n\n                  function blitBuffer(src, dst, offset, length) {\n                    for (var i = 0; i < length; ++i) {\n                      if (i + offset >= dst.length || i >= src.length) break;\n                      dst[i + offset] = src[i];\n                    }\n\n                    return i;\n                  } // ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n                  // the `instanceof` check but they should be treated as of that type.\n                  // See: https://github.com/feross/buffer/issues/166\n\n\n                  function isInstance(obj, type) {\n                    return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;\n                  }\n\n                  function numberIsNaN(obj) {\n                    // For IE11 support\n                    return obj !== obj; // eslint-disable-line no-self-compare\n                  }\n                }).call(this, require(\"buffer\").Buffer);\n              }, {\n                \"base64-js\": 1,\n                \"buffer\": 3,\n                \"ieee754\": 32\n              }],\n              4: [function (require, module, exports) {\n                module.exports = {\n                  \"elementNames\": {\n                    \"altglyph\": \"altGlyph\",\n                    \"altglyphdef\": \"altGlyphDef\",\n                    \"altglyphitem\": \"altGlyphItem\",\n                    \"animatecolor\": \"animateColor\",\n                    \"animatemotion\": \"animateMotion\",\n                    \"animatetransform\": \"animateTransform\",\n                    \"clippath\": \"clipPath\",\n                    \"feblend\": \"feBlend\",\n                    \"fecolormatrix\": \"feColorMatrix\",\n                    \"fecomponenttransfer\": \"feComponentTransfer\",\n                    \"fecomposite\": \"feComposite\",\n                    \"feconvolvematrix\": \"feConvolveMatrix\",\n                    \"fediffuselighting\": \"feDiffuseLighting\",\n                    \"fedisplacementmap\": \"feDisplacementMap\",\n                    \"fedistantlight\": \"feDistantLight\",\n                    \"fedropshadow\": \"feDropShadow\",\n                    \"feflood\": \"feFlood\",\n                    \"fefunca\": \"feFuncA\",\n                    \"fefuncb\": \"feFuncB\",\n                    \"fefuncg\": \"feFuncG\",\n                    \"fefuncr\": \"feFuncR\",\n                    \"fegaussianblur\": \"feGaussianBlur\",\n                    \"feimage\": \"feImage\",\n                    \"femerge\": \"feMerge\",\n                    \"femergenode\": \"feMergeNode\",\n                    \"femorphology\": \"feMorphology\",\n                    \"feoffset\": \"feOffset\",\n                    \"fepointlight\": \"fePointLight\",\n                    \"fespecularlighting\": \"feSpecularLighting\",\n                    \"fespotlight\": \"feSpotLight\",\n                    \"fetile\": \"feTile\",\n                    \"feturbulence\": \"feTurbulence\",\n                    \"foreignobject\": \"foreignObject\",\n                    \"glyphref\": \"glyphRef\",\n                    \"lineargradient\": \"linearGradient\",\n                    \"radialgradient\": \"radialGradient\",\n                    \"textpath\": \"textPath\"\n                  },\n                  \"attributeNames\": {\n                    \"definitionurl\": \"definitionURL\",\n                    \"attributename\": \"attributeName\",\n                    \"attributetype\": \"attributeType\",\n                    \"basefrequency\": \"baseFrequency\",\n                    \"baseprofile\": \"baseProfile\",\n                    \"calcmode\": \"calcMode\",\n                    \"clippathunits\": \"clipPathUnits\",\n                    \"diffuseconstant\": \"diffuseConstant\",\n                    \"edgemode\": \"edgeMode\",\n                    \"filterunits\": \"filterUnits\",\n                    \"glyphref\": \"glyphRef\",\n                    \"gradienttransform\": \"gradientTransform\",\n                    \"gradientunits\": \"gradientUnits\",\n                    \"kernelmatrix\": \"kernelMatrix\",\n                    \"kernelunitlength\": \"kernelUnitLength\",\n                    \"keypoints\": \"keyPoints\",\n                    \"keysplines\": \"keySplines\",\n                    \"keytimes\": \"keyTimes\",\n                    \"lengthadjust\": \"lengthAdjust\",\n                    \"limitingconeangle\": \"limitingConeAngle\",\n                    \"markerheight\": \"markerHeight\",\n                    \"markerunits\": \"markerUnits\",\n                    \"markerwidth\": \"markerWidth\",\n                    \"maskcontentunits\": \"maskContentUnits\",\n                    \"maskunits\": \"maskUnits\",\n                    \"numoctaves\": \"numOctaves\",\n                    \"pathlength\": \"pathLength\",\n                    \"patterncontentunits\": \"patternContentUnits\",\n                    \"patterntransform\": \"patternTransform\",\n                    \"patternunits\": \"patternUnits\",\n                    \"pointsatx\": \"pointsAtX\",\n                    \"pointsaty\": \"pointsAtY\",\n                    \"pointsatz\": \"pointsAtZ\",\n                    \"preservealpha\": \"preserveAlpha\",\n                    \"preserveaspectratio\": \"preserveAspectRatio\",\n                    \"primitiveunits\": \"primitiveUnits\",\n                    \"refx\": \"refX\",\n                    \"refy\": \"refY\",\n                    \"repeatcount\": \"repeatCount\",\n                    \"repeatdur\": \"repeatDur\",\n                    \"requiredextensions\": \"requiredExtensions\",\n                    \"requiredfeatures\": \"requiredFeatures\",\n                    \"specularconstant\": \"specularConstant\",\n                    \"specularexponent\": \"specularExponent\",\n                    \"spreadmethod\": \"spreadMethod\",\n                    \"startoffset\": \"startOffset\",\n                    \"stddeviation\": \"stdDeviation\",\n                    \"stitchtiles\": \"stitchTiles\",\n                    \"surfacescale\": \"surfaceScale\",\n                    \"systemlanguage\": \"systemLanguage\",\n                    \"tablevalues\": \"tableValues\",\n                    \"targetx\": \"targetX\",\n                    \"targety\": \"targetY\",\n                    \"textlength\": \"textLength\",\n                    \"viewbox\": \"viewBox\",\n                    \"viewtarget\": \"viewTarget\",\n                    \"xchannelselector\": \"xChannelSelector\",\n                    \"ychannelselector\": \"yChannelSelector\",\n                    \"zoomandpan\": \"zoomAndPan\"\n                  }\n                };\n              }, {}],\n              5: [function (require, module, exports) {\n                /*\n                Module dependencies\n                */\n                var ElementType = require('domelementtype');\n\n                var entities = require('entities');\n                /* mixed-case SVG and MathML tags & attributes\n                recognized by the HTML parser, see\n                https://html.spec.whatwg.org/multipage/parsing.html#parsing-main-inforeign\n                */\n\n\n                var foreignNames = require('./foreignNames.json');\n\n                foreignNames.elementNames.__proto__ = null;\n                /* use as a simple dictionary */\n\n                foreignNames.attributeNames.__proto__ = null;\n                var unencodedElements = {\n                  __proto__: null,\n                  style: true,\n                  script: true,\n                  xmp: true,\n                  iframe: true,\n                  noembed: true,\n                  noframes: true,\n                  plaintext: true,\n                  noscript: true\n                };\n                /*\n                Format attributes\n                */\n\n                function formatAttrs(attributes, opts) {\n                  if (!attributes) return;\n                  var output = '';\n                  var value; // Loop through the attributes\n\n                  for (var key in attributes) {\n                    value = attributes[key];\n\n                    if (output) {\n                      output += ' ';\n                    }\n\n                    if (opts.xmlMode === 'foreign') {\n                      /* fix up mixed-case attribute names */\n                      key = foreignNames.attributeNames[key] || key;\n                    }\n\n                    output += key;\n\n                    if (value !== null && value !== '' || opts.xmlMode) {\n                      output += '=\"' + (opts.decodeEntities ? entities.encodeXML(value) : value.replace(/\\\"/g, '&quot;')) + '\"';\n                    }\n                  }\n\n                  return output;\n                }\n                /*\n                Self-enclosing tags (stolen from node-htmlparser)\n                */\n\n\n                var singleTag = {\n                  __proto__: null,\n                  area: true,\n                  base: true,\n                  basefont: true,\n                  br: true,\n                  col: true,\n                  command: true,\n                  embed: true,\n                  frame: true,\n                  hr: true,\n                  img: true,\n                  input: true,\n                  isindex: true,\n                  keygen: true,\n                  link: true,\n                  meta: true,\n                  param: true,\n                  source: true,\n                  track: true,\n                  wbr: true\n                };\n\n                var render = module.exports = function (dom, opts) {\n                  if (!Array.isArray(dom) && !dom.cheerio) dom = [dom];\n                  opts = opts || {};\n                  var output = '';\n\n                  for (var i = 0; i < dom.length; i++) {\n                    var elem = dom[i];\n                    if (elem.type === 'root') output += render(elem.children, opts);else if (ElementType.isTag(elem)) output += renderTag(elem, opts);else if (elem.type === ElementType.Directive) output += renderDirective(elem);else if (elem.type === ElementType.Comment) output += renderComment(elem);else if (elem.type === ElementType.CDATA) output += renderCdata(elem);else output += renderText(elem, opts);\n                  }\n\n                  return output;\n                };\n\n                var foreignModeIntegrationPoints = ['mi', 'mo', 'mn', 'ms', 'mtext', 'annotation-xml', 'foreignObject', 'desc', 'title'];\n\n                function renderTag(elem, opts) {\n                  // Handle SVG / MathML in HTML\n                  if (opts.xmlMode === 'foreign') {\n                    /* fix up mixed-case element names */\n                    elem.name = foreignNames.elementNames[elem.name] || elem.name;\n                    /* exit foreign mode at integration points */\n\n                    if (elem.parent && foreignModeIntegrationPoints.indexOf(elem.parent.name) >= 0) opts = Object.assign({}, opts, {\n                      xmlMode: false\n                    });\n                  }\n\n                  if (!opts.xmlMode && ['svg', 'math'].indexOf(elem.name) >= 0) {\n                    opts = Object.assign({}, opts, {\n                      xmlMode: 'foreign'\n                    });\n                  }\n\n                  var tag = '<' + elem.name;\n                  var attribs = formatAttrs(elem.attribs, opts);\n\n                  if (attribs) {\n                    tag += ' ' + attribs;\n                  }\n\n                  if (opts.xmlMode && (!elem.children || elem.children.length === 0)) {\n                    tag += '/>';\n                  } else {\n                    tag += '>';\n\n                    if (elem.children) {\n                      tag += render(elem.children, opts);\n                    }\n\n                    if (!singleTag[elem.name] || opts.xmlMode) {\n                      tag += '</' + elem.name + '>';\n                    }\n                  }\n\n                  return tag;\n                }\n\n                function renderDirective(elem) {\n                  return '<' + elem.data + '>';\n                }\n\n                function renderText(elem, opts) {\n                  var data = elem.data || ''; // if entities weren't decoded, no need to encode them back\n\n                  if (opts.decodeEntities && !(elem.parent && elem.parent.name in unencodedElements)) {\n                    data = entities.encodeXML(data);\n                  }\n\n                  return data;\n                }\n\n                function renderCdata(elem) {\n                  return '<![CDATA[' + elem.children[0].data + ']]>';\n                }\n\n                function renderComment(elem) {\n                  return '<!--' + elem.data + '-->';\n                }\n              }, {\n                \"./foreignNames.json\": 4,\n                \"domelementtype\": 6,\n                \"entities\": 20\n              }],\n              6: [function (require, module, exports) {\n                \"use strict\";\n\n                Object.defineProperty(exports, \"__esModule\", {\n                  value: true\n                });\n                /**\n                * Tests whether an element is a tag or not.\n                *\n                * @param elem Element to test\n                */\n\n                function isTag(elem) {\n                  return elem.type === \"tag\"\n                  /* Tag */\n                  || elem.type === \"script\"\n                  /* Script */\n                  || elem.type === \"style\"\n                  /* Style */\n                  ;\n                }\n\n                exports.isTag = isTag; // Exports for backwards compatibility\n\n                exports.Text = \"text\"\n                /* Text */\n                ; //Text\n\n                exports.Directive = \"directive\"\n                /* Directive */\n                ; //<? ... ?>\n\n                exports.Comment = \"comment\"\n                /* Comment */\n                ; //<!-- ... -->\n\n                exports.Script = \"script\"\n                /* Script */\n                ; //<script> tags\n\n                exports.Style = \"style\"\n                /* Style */\n                ; //<style> tags\n\n                exports.Tag = \"tag\"\n                /* Tag */\n                ; //Any tag\n\n                exports.CDATA = \"cdata\"\n                /* CDATA */\n                ; //<![CDATA[ ... ]]>\n\n                exports.Doctype = \"doctype\"\n                /* Doctype */\n                ;\n              }, {}],\n              7: [function (require, module, exports) {\n                \"use strict\";\n\n                Object.defineProperty(exports, \"__esModule\", {\n                  value: true\n                });\n\n                var node_1 = require(\"./node\");\n\n                exports.Node = node_1.Node;\n                exports.Element = node_1.Element;\n                exports.DataNode = node_1.DataNode;\n                exports.NodeWithChildren = node_1.NodeWithChildren;\n                var reWhitespace = /\\s+/g; // Default options\n\n                var defaultOpts = {\n                  normalizeWhitespace: false,\n                  withStartIndices: false,\n                  withEndIndices: false\n                };\n\n                var DomHandler =\n                /** @class */\n                function () {\n                  /**\n                  * Initiate a new DomHandler.\n                  *\n                  * @param callback Called once parsing has completed.\n                  * @param options Settings for the handler.\n                  * @param elementCB Callback whenever a tag is closed.\n                  */\n                  function DomHandler(callback, options, elementCB) {\n                    /** The constructed DOM */\n                    this.dom = [];\n                    /** Indicated whether parsing has been completed. */\n\n                    this._done = false;\n                    /** Stack of open tags. */\n\n                    this._tagStack = [];\n                    /** A data node that is still being written to. */\n\n                    this._lastNode = null;\n                    /** Reference to the parser instance. Used for location information. */\n\n                    this._parser = null; // Make it possible to skip arguments, for backwards-compatibility\n\n                    if (typeof options === \"function\") {\n                      elementCB = options;\n                      options = defaultOpts;\n                    }\n\n                    if (_typeof(callback) === \"object\") {\n                      options = callback;\n                      callback = undefined;\n                    }\n\n                    this._callback = callback || null;\n                    this._options = options || defaultOpts;\n                    this._elementCB = elementCB || null;\n                  }\n\n                  DomHandler.prototype.onparserinit = function (parser) {\n                    this._parser = parser;\n                  }; // Resets the handler back to starting state\n\n\n                  DomHandler.prototype.onreset = function () {\n                    this.dom = [];\n                    this._done = false;\n                    this._tagStack = [];\n                    this._lastNode = null;\n                    this._parser = this._parser || null;\n                  }; // Signals the handler that parsing is done\n\n\n                  DomHandler.prototype.onend = function () {\n                    if (this._done) return;\n                    this._done = true;\n                    this._parser = null;\n                    this.handleCallback(null);\n                  };\n\n                  DomHandler.prototype.onerror = function (error) {\n                    this.handleCallback(error);\n                  };\n\n                  DomHandler.prototype.onclosetag = function () {\n                    this._lastNode = null; // If(this._tagStack.pop().name !== name) this.handleCallback(Error(\"Tagname didn't match!\"));\n\n                    var elem = this._tagStack.pop();\n\n                    if (!elem || !this._parser) {\n                      return;\n                    }\n\n                    if (this._options.withEndIndices) {\n                      elem.endIndex = this._parser.endIndex;\n                    }\n\n                    if (this._elementCB) this._elementCB(elem);\n                  };\n\n                  DomHandler.prototype.onopentag = function (name, attribs) {\n                    var element = new node_1.Element(name, attribs);\n                    this.addNode(element);\n\n                    this._tagStack.push(element);\n                  };\n\n                  DomHandler.prototype.ontext = function (data) {\n                    var normalize = this._options.normalizeWhitespace;\n                    var _lastNode = this._lastNode;\n\n                    if (_lastNode && _lastNode.type === \"text\"\n                    /* Text */\n                    ) {\n                        if (normalize) {\n                          _lastNode.data = (_lastNode.data + data).replace(reWhitespace, \" \");\n                        } else {\n                          _lastNode.data += data;\n                        }\n                      } else {\n                      if (normalize) {\n                        data = data.replace(reWhitespace, \" \");\n                      }\n\n                      var node = new node_1.DataNode(\"text\"\n                      /* Text */\n                      , data);\n                      this.addNode(node);\n                      this._lastNode = node;\n                    }\n                  };\n\n                  DomHandler.prototype.oncomment = function (data) {\n                    if (this._lastNode && this._lastNode.type === \"comment\"\n                    /* Comment */\n                    ) {\n                        this._lastNode.data += data;\n                        return;\n                      }\n\n                    var node = new node_1.DataNode(\"comment\"\n                    /* Comment */\n                    , data);\n                    this.addNode(node);\n                    this._lastNode = node;\n                  };\n\n                  DomHandler.prototype.oncommentend = function () {\n                    this._lastNode = null;\n                  };\n\n                  DomHandler.prototype.oncdatastart = function () {\n                    var text = new node_1.DataNode(\"text\"\n                    /* Text */\n                    , \"\");\n                    var node = new node_1.NodeWithChildren(\"cdata\"\n                    /* CDATA */\n                    , [text]);\n                    this.addNode(node);\n                    text.parent = node;\n                    this._lastNode = text;\n                  };\n\n                  DomHandler.prototype.oncdataend = function () {\n                    this._lastNode = null;\n                  };\n\n                  DomHandler.prototype.onprocessinginstruction = function (name, data) {\n                    var node = new node_1.ProcessingInstruction(name, data);\n                    this.addNode(node);\n                  };\n\n                  DomHandler.prototype.handleCallback = function (error) {\n                    if (typeof this._callback === \"function\") {\n                      this._callback(error, this.dom);\n                    } else if (error) {\n                      throw error;\n                    }\n                  };\n\n                  DomHandler.prototype.addNode = function (node) {\n                    var parent = this._tagStack[this._tagStack.length - 1];\n                    var siblings = parent ? parent.children : this.dom;\n                    var previousSibling = siblings[siblings.length - 1];\n\n                    if (this._parser) {\n                      if (this._options.withStartIndices) {\n                        node.startIndex = this._parser.startIndex;\n                      }\n\n                      if (this._options.withEndIndices) {\n                        node.endIndex = this._parser.endIndex;\n                      }\n                    }\n\n                    siblings.push(node);\n\n                    if (previousSibling) {\n                      node.prev = previousSibling;\n                      previousSibling.next = node;\n                    }\n\n                    if (parent) {\n                      node.parent = parent;\n                    }\n\n                    this._lastNode = null;\n                  };\n\n                  DomHandler.prototype.addDataNode = function (node) {\n                    this.addNode(node);\n                    this._lastNode = node;\n                  };\n\n                  return DomHandler;\n                }();\n\n                exports.DomHandler = DomHandler;\n                exports[\"default\"] = DomHandler;\n              }, {\n                \"./node\": 8\n              }],\n              8: [function (require, module, exports) {\n                \"use strict\";\n\n                var __extends = this && this.__extends || function () {\n                  var _extendStatics = function extendStatics(d, b) {\n                    _extendStatics = Object.setPrototypeOf || {\n                      __proto__: []\n                    } instanceof Array && function (d, b) {\n                      d.__proto__ = b;\n                    } || function (d, b) {\n                      for (var p in b) {\n                        if (b.hasOwnProperty(p)) d[p] = b[p];\n                      }\n                    };\n\n                    return _extendStatics(d, b);\n                  };\n\n                  return function (d, b) {\n                    _extendStatics(d, b);\n\n                    function __() {\n                      this.constructor = d;\n                    }\n\n                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n                  };\n                }();\n\n                Object.defineProperty(exports, \"__esModule\", {\n                  value: true\n                });\n                var nodeTypes = new Map([[\"tag\"\n                /* Tag */\n                , 1], [\"script\"\n                /* Script */\n                , 1], [\"style\"\n                /* Style */\n                , 1], [\"directive\"\n                /* Directive */\n                , 1], [\"text\"\n                /* Text */\n                , 3], [\"cdata\"\n                /* CDATA */\n                , 4], [\"comment\"\n                /* Comment */\n                , 8]]); // This object will be used as the prototype for Nodes when creating a\n                // DOM-Level-1-compliant structure.\n\n                var Node =\n                /** @class */\n                function () {\n                  /**\n                  *\n                  * @param type The type of the node.\n                  */\n                  function Node(type) {\n                    this.type = type;\n                    /** Parent of the node */\n\n                    this.parent = null;\n                    /** Previous sibling */\n\n                    this.prev = null;\n                    /** Next sibling */\n\n                    this.next = null;\n                    /** The start index of the node. Requires `withStartIndices` on the handler to be `true. */\n\n                    this.startIndex = null;\n                    /** The end index of the node. Requires `withEndIndices` on the handler to be `true. */\n\n                    this.endIndex = null;\n                  }\n\n                  Object.defineProperty(Node.prototype, \"nodeType\", {\n                    // Read-only aliases\n                    get: function get() {\n                      return nodeTypes.get(this.type) || 1;\n                    },\n                    enumerable: true,\n                    configurable: true\n                  });\n                  Object.defineProperty(Node.prototype, \"parentNode\", {\n                    // Read-write aliases for properties\n                    get: function get() {\n                      return this.parent || null;\n                    },\n                    set: function set(parent) {\n                      this.parent = parent;\n                    },\n                    enumerable: true,\n                    configurable: true\n                  });\n                  Object.defineProperty(Node.prototype, \"previousSibling\", {\n                    get: function get() {\n                      return this.prev || null;\n                    },\n                    set: function set(prev) {\n                      this.prev = prev;\n                    },\n                    enumerable: true,\n                    configurable: true\n                  });\n                  Object.defineProperty(Node.prototype, \"nextSibling\", {\n                    get: function get() {\n                      return this.next || null;\n                    },\n                    set: function set(next) {\n                      this.next = next;\n                    },\n                    enumerable: true,\n                    configurable: true\n                  });\n                  return Node;\n                }();\n\n                exports.Node = Node;\n\n                var DataNode =\n                /** @class */\n                function (_super) {\n                  __extends(DataNode, _super);\n                  /**\n                  *\n                  * @param type The type of the node\n                  * @param data The content of the data node\n                  */\n\n\n                  function DataNode(type, data) {\n                    var _this = _super.call(this, type) || this;\n\n                    _this.data = data;\n                    return _this;\n                  }\n\n                  Object.defineProperty(DataNode.prototype, \"nodeValue\", {\n                    get: function get() {\n                      return this.data;\n                    },\n                    set: function set(data) {\n                      this.data = data;\n                    },\n                    enumerable: true,\n                    configurable: true\n                  });\n                  return DataNode;\n                }(Node);\n\n                exports.DataNode = DataNode;\n\n                var ProcessingInstruction =\n                /** @class */\n                function (_super) {\n                  __extends(ProcessingInstruction, _super);\n\n                  function ProcessingInstruction(name, data) {\n                    var _this = _super.call(this, \"directive\"\n                    /* Directive */\n                    , data) || this;\n\n                    _this.name = name;\n                    return _this;\n                  }\n\n                  return ProcessingInstruction;\n                }(DataNode);\n\n                exports.ProcessingInstruction = ProcessingInstruction;\n\n                var NodeWithChildren =\n                /** @class */\n                function (_super) {\n                  __extends(NodeWithChildren, _super);\n                  /**\n                  *\n                  * @param type Type of the node.\n                  * @param children Children of the node. Only certain node types can have children.\n                  */\n\n\n                  function NodeWithChildren(type, children) {\n                    var _this = _super.call(this, type) || this;\n\n                    _this.children = children;\n                    return _this;\n                  }\n\n                  Object.defineProperty(NodeWithChildren.prototype, \"firstChild\", {\n                    // Aliases\n                    get: function get() {\n                      return this.children[0] || null;\n                    },\n                    enumerable: true,\n                    configurable: true\n                  });\n                  Object.defineProperty(NodeWithChildren.prototype, \"lastChild\", {\n                    get: function get() {\n                      return this.children[this.children.length - 1] || null;\n                    },\n                    enumerable: true,\n                    configurable: true\n                  });\n                  Object.defineProperty(NodeWithChildren.prototype, \"childNodes\", {\n                    get: function get() {\n                      return this.children;\n                    },\n                    set: function set(children) {\n                      this.children = children;\n                    },\n                    enumerable: true,\n                    configurable: true\n                  });\n                  return NodeWithChildren;\n                }(Node);\n\n                exports.NodeWithChildren = NodeWithChildren;\n\n                var Element =\n                /** @class */\n                function (_super) {\n                  __extends(Element, _super);\n                  /**\n                  *\n                  * @param name Name of the tag, eg. `div`, `span`\n                  * @param attribs Object mapping attribute names to attribute values\n                  */\n\n\n                  function Element(name, attribs) {\n                    var _this = _super.call(this, name === \"script\" ? \"script\"\n                    /* Script */\n                    : name === \"style\" ? \"style\"\n                    /* Style */\n                    : \"tag\"\n                    /* Tag */\n                    , []) || this;\n\n                    _this.name = name;\n                    _this.attribs = attribs;\n                    _this.attribs = attribs;\n                    return _this;\n                  }\n\n                  Object.defineProperty(Element.prototype, \"tagName\", {\n                    // DOM Level 1 aliases\n                    get: function get() {\n                      return this.name;\n                    },\n                    set: function set(name) {\n                      this.name = name;\n                    },\n                    enumerable: true,\n                    configurable: true\n                  });\n                  return Element;\n                }(NodeWithChildren);\n\n                exports.Element = Element;\n              }, {}],\n              9: [function (require, module, exports) {\n                \"use strict\";\n\n                Object.defineProperty(exports, \"__esModule\", {\n                  value: true\n                });\n\n                var tagtypes_1 = require(\"./tagtypes\");\n                /**\n                * Given an array of nodes, remove any member that is contained by another.\n                *\n                * @param nodes Nodes to filter.\n                */\n\n\n                function removeSubsets(nodes) {\n                  var idx = nodes.length; // Check if each node (or one of its ancestors) is already contained in the\n                  // array.\n\n                  while (--idx >= 0) {\n                    var node = nodes[idx]; // Remove the node if it is not unique.\n                    // We are going through the array from the end, so we only\n                    // have to check nodes that preceed the node under consideration in the array.\n\n                    if (idx > 0 && nodes.lastIndexOf(node, idx - 1) >= 0) {\n                      nodes.splice(idx, 1);\n                      continue;\n                    }\n\n                    for (var ancestor = node.parent; ancestor; ancestor = ancestor.parent) {\n                      if (nodes.indexOf(ancestor) > -1) {\n                        nodes.splice(idx, 1);\n                        break;\n                      }\n                    }\n                  }\n\n                  return nodes;\n                }\n\n                exports.removeSubsets = removeSubsets;\n                /***\n                * Compare the position of one node against another node in any other document.\n                * The return value is a bitmask with the following values:\n                *\n                * document order:\n                * > There is an ordering, document order, defined on all the nodes in the\n                * > document corresponding to the order in which the first character of the\n                * > XML representation of each node occurs in the XML representation of the\n                * > document after expansion of general entities. Thus, the document element\n                * > node will be the first node. Element nodes occur before their children.\n                * > Thus, document order orders element nodes in order of the occurrence of\n                * > their start-tag in the XML (after expansion of entities). The attribute\n                * > nodes of an element occur after the element and before its children. The\n                * > relative order of attribute nodes is implementation-dependent./\n                *\n                * Source:\n                * http://www.w3.org/TR/DOM-Level-3-Core/glossary.html#dt-document-order\n                * @param nodaA The first node to use in the comparison\n                * @param nodeB The second node to use in the comparison\n                *\n                * @return A bitmask describing the input nodes' relative position.\n                *\n                *        See http://dom.spec.whatwg.org/#dom-node-comparedocumentposition for\n                *        a description of these values.\n                */\n\n                function compareDocumentPosition(nodeA, nodeB) {\n                  var aParents = [];\n                  var bParents = [];\n\n                  if (nodeA === nodeB) {\n                    return 0;\n                  }\n\n                  var current = tagtypes_1.hasChildren(nodeA) ? nodeA : nodeA.parent;\n\n                  while (current) {\n                    aParents.unshift(current);\n                    current = current.parent;\n                  }\n\n                  current = tagtypes_1.hasChildren(nodeB) ? nodeB : nodeB.parent;\n\n                  while (current) {\n                    bParents.unshift(current);\n                    current = current.parent;\n                  }\n\n                  var idx = 0;\n\n                  while (aParents[idx] === bParents[idx]) {\n                    idx++;\n                  }\n\n                  if (idx === 0) {\n                    return 1\n                    /* DISCONNECTED */\n                    ;\n                  }\n\n                  var sharedParent = aParents[idx - 1];\n                  var siblings = sharedParent.children;\n                  var aSibling = aParents[idx];\n                  var bSibling = bParents[idx];\n\n                  if (siblings.indexOf(aSibling) > siblings.indexOf(bSibling)) {\n                    if (sharedParent === nodeB) {\n                      return 4\n                      /* FOLLOWING */\n                      | 16\n                      /* CONTAINED_BY */\n                      ;\n                    }\n\n                    return 4\n                    /* FOLLOWING */\n                    ;\n                  } else {\n                    if (sharedParent === nodeA) {\n                      return 2\n                      /* PRECEDING */\n                      | 8\n                      /* CONTAINS */\n                      ;\n                    }\n\n                    return 2\n                    /* PRECEDING */\n                    ;\n                  }\n                }\n\n                exports.compareDocumentPosition = compareDocumentPosition;\n                /***\n                * Sort an array of nodes based on their relative position in the document and\n                * remove any duplicate nodes. If the array contains nodes that do not belong\n                * to the same document, sort order is unspecified.\n                *\n                * @param nodes Array of DOM nodes\n                * @returns collection of unique nodes, sorted in document order\n                */\n\n                function uniqueSort(nodes) {\n                  nodes = nodes.filter(function (node, i, arr) {\n                    return !arr.includes(node, i + 1);\n                  });\n                  nodes.sort(function (a, b) {\n                    var relative = compareDocumentPosition(a, b);\n\n                    if (relative & 2\n                    /* PRECEDING */\n                    ) {\n                        return -1;\n                      } else if (relative & 4\n                    /* FOLLOWING */\n                    ) {\n                        return 1;\n                      }\n\n                    return 0;\n                  });\n                  return nodes;\n                }\n\n                exports.uniqueSort = uniqueSort;\n              }, {\n                \"./tagtypes\": 15\n              }],\n              10: [function (require, module, exports) {\n                \"use strict\";\n\n                function __export(m) {\n                  for (var p in m) {\n                    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n                  }\n                }\n\n                Object.defineProperty(exports, \"__esModule\", {\n                  value: true\n                });\n\n                __export(require(\"./stringify\"));\n\n                __export(require(\"./traversal\"));\n\n                __export(require(\"./manipulation\"));\n\n                __export(require(\"./querying\"));\n\n                __export(require(\"./legacy\"));\n\n                __export(require(\"./helpers\"));\n\n                __export(require(\"./tagtypes\"));\n              }, {\n                \"./helpers\": 9,\n                \"./legacy\": 11,\n                \"./manipulation\": 12,\n                \"./querying\": 13,\n                \"./stringify\": 14,\n                \"./tagtypes\": 15,\n                \"./traversal\": 16\n              }],\n              11: [function (require, module, exports) {\n                \"use strict\";\n\n                Object.defineProperty(exports, \"__esModule\", {\n                  value: true\n                });\n\n                var querying_1 = require(\"./querying\");\n\n                var tagtypes_1 = require(\"./tagtypes\");\n\n                function isTextNode(node) {\n                  return node.type === \"text\"\n                  /* Text */\n                  ;\n                }\n                /* eslint-disable @typescript-eslint/camelcase */\n\n\n                var Checks = {\n                  tag_name: function tag_name(name) {\n                    if (typeof name === \"function\") {\n                      return function (elem) {\n                        return tagtypes_1.isTag(elem) && name(elem.name);\n                      };\n                    } else if (name === \"*\") {\n                      return tagtypes_1.isTag;\n                    } else {\n                      return function (elem) {\n                        return tagtypes_1.isTag(elem) && elem.name === name;\n                      };\n                    }\n                  },\n                  tag_type: function tag_type(type) {\n                    if (typeof type === \"function\") {\n                      return function (elem) {\n                        return type(elem.type);\n                      };\n                    } else {\n                      return function (elem) {\n                        return elem.type === type;\n                      };\n                    }\n                  },\n                  tag_contains: function tag_contains(data) {\n                    if (typeof data === \"function\") {\n                      return function (elem) {\n                        return isTextNode(elem) && data(elem.data);\n                      };\n                    } else {\n                      return function (elem) {\n                        return isTextNode(elem) && elem.data === data;\n                      };\n                    }\n                  }\n                };\n                /* eslint-enable @typescript-eslint/camelcase */\n\n                function getAttribCheck(attrib, value) {\n                  if (typeof value === \"function\") {\n                    return function (elem) {\n                      return tagtypes_1.isTag(elem) && value(elem.attribs[attrib]);\n                    };\n                  } else {\n                    return function (elem) {\n                      return tagtypes_1.isTag(elem) && elem.attribs[attrib] === value;\n                    };\n                  }\n                }\n\n                function combineFuncs(a, b) {\n                  return function (elem) {\n                    return a(elem) || b(elem);\n                  };\n                }\n\n                function compileTest(options) {\n                  var funcs = Object.keys(options).map(function (key) {\n                    var value = options[key];\n                    return key in Checks ? Checks[key](value) : getAttribCheck(key, value);\n                  });\n                  return funcs.length === 0 ? null : funcs.reduce(combineFuncs);\n                }\n\n                function testElement(options, element) {\n                  var test = compileTest(options);\n                  return test ? test(element) : true;\n                }\n\n                exports.testElement = testElement;\n\n                function getElements(options, element, recurse, limit) {\n                  if (limit === void 0) {\n                    limit = Infinity;\n                  }\n\n                  var test = compileTest(options);\n                  return test ? querying_1.filter(test, element, recurse, limit) : [];\n                }\n\n                exports.getElements = getElements;\n\n                function getElementById(id, element, recurse) {\n                  if (recurse === void 0) {\n                    recurse = true;\n                  }\n\n                  if (!Array.isArray(element)) element = [element];\n                  return querying_1.findOne(getAttribCheck(\"id\", id), element, recurse);\n                }\n\n                exports.getElementById = getElementById;\n\n                function getElementsByTagName(name, element, recurse, limit) {\n                  if (limit === void 0) {\n                    limit = Infinity;\n                  }\n\n                  return querying_1.filter(Checks.tag_name(name), element, recurse, limit);\n                }\n\n                exports.getElementsByTagName = getElementsByTagName;\n\n                function getElementsByTagType(type, element, recurse, limit) {\n                  if (recurse === void 0) {\n                    recurse = true;\n                  }\n\n                  if (limit === void 0) {\n                    limit = Infinity;\n                  }\n\n                  return querying_1.filter(Checks.tag_type(type), element, recurse, limit);\n                }\n\n                exports.getElementsByTagType = getElementsByTagType;\n              }, {\n                \"./querying\": 13,\n                \"./tagtypes\": 15\n              }],\n              12: [function (require, module, exports) {\n                \"use strict\";\n\n                Object.defineProperty(exports, \"__esModule\", {\n                  value: true\n                });\n                /***\n                * Remove an element from the dom\n                *\n                * @param elem The element to be removed\n                */\n\n                function removeElement(elem) {\n                  if (elem.prev) elem.prev.next = elem.next;\n                  if (elem.next) elem.next.prev = elem.prev;\n\n                  if (elem.parent) {\n                    var childs = elem.parent.children;\n                    childs.splice(childs.lastIndexOf(elem), 1);\n                  }\n                }\n\n                exports.removeElement = removeElement;\n                /***\n                * Replace an element in the dom\n                *\n                * @param elem The element to be replaced\n                * @param replacement The element to be added\n                */\n\n                function replaceElement(elem, replacement) {\n                  var prev = replacement.prev = elem.prev;\n\n                  if (prev) {\n                    prev.next = replacement;\n                  }\n\n                  var next = replacement.next = elem.next;\n\n                  if (next) {\n                    next.prev = replacement;\n                  }\n\n                  var parent = replacement.parent = elem.parent;\n\n                  if (parent) {\n                    var childs = parent.children;\n                    childs[childs.lastIndexOf(elem)] = replacement;\n                  }\n                }\n\n                exports.replaceElement = replaceElement;\n                /***\n                * Append a child to an element\n                *\n                * @param elem The element to append to\n                * @param child The element to be added as a child\n                */\n\n                function appendChild(elem, child) {\n                  child.parent = elem;\n\n                  if (elem.children.push(child) !== 1) {\n                    var sibling = elem.children[elem.children.length - 2];\n                    sibling.next = child;\n                    child.prev = sibling;\n                    child.next = null;\n                  }\n                }\n\n                exports.appendChild = appendChild;\n                /***\n                * Append an element after another\n                *\n                * @param elem The element to append to\n                * @param next The element be added\n                */\n\n                function append(elem, next) {\n                  var parent = elem.parent;\n                  var currNext = elem.next;\n                  next.next = currNext;\n                  next.prev = elem;\n                  elem.next = next;\n                  next.parent = parent;\n\n                  if (currNext) {\n                    currNext.prev = next;\n\n                    if (parent) {\n                      var childs = parent.children;\n                      childs.splice(childs.lastIndexOf(currNext), 0, next);\n                    }\n                  } else if (parent) {\n                    parent.children.push(next);\n                  }\n                }\n\n                exports.append = append;\n                /***\n                * Prepend an element before another\n                *\n                * @param elem The element to append to\n                * @param prev The element be added\n                */\n\n                function prepend(elem, prev) {\n                  var parent = elem.parent;\n\n                  if (parent) {\n                    var childs = parent.children;\n                    childs.splice(childs.lastIndexOf(elem), 0, prev);\n                  }\n\n                  if (elem.prev) {\n                    elem.prev.next = prev;\n                  }\n\n                  prev.parent = parent;\n                  prev.prev = elem.prev;\n                  prev.next = elem;\n                  elem.prev = prev;\n                }\n\n                exports.prepend = prepend;\n              }, {}],\n              13: [function (require, module, exports) {\n                \"use strict\";\n\n                Object.defineProperty(exports, \"__esModule\", {\n                  value: true\n                });\n\n                var tagtypes_1 = require(\"./tagtypes\");\n                /**\n                * Search a node and its children for nodes passing a test function.\n                *\n                * @param test Function to test nodes on.\n                * @param element Element to search. Will be included in the result set if it matches.\n                * @param recurse Also consider child nodes.\n                * @param limit Maximum number of nodes to return.\n                */\n\n\n                function filter(test, node, recurse, limit) {\n                  if (recurse === void 0) {\n                    recurse = true;\n                  }\n\n                  if (limit === void 0) {\n                    limit = Infinity;\n                  }\n\n                  if (!Array.isArray(node)) node = [node];\n                  return find(test, node, recurse, limit);\n                }\n\n                exports.filter = filter;\n                /**\n                * Like `filter`, but only works on an array of nodes.\n                *\n                * @param test Function to test nodes on.\n                * @param nodes Array of nodes to search.\n                * @param recurse Also consider child nodes.\n                * @param limit Maximum number of nodes to return.\n                */\n\n                function find(test, nodes, recurse, limit) {\n                  var result = [];\n\n                  for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                    var elem = nodes_1[_i];\n\n                    if (test(elem)) {\n                      result.push(elem);\n                      if (--limit <= 0) break;\n                    }\n\n                    if (recurse && tagtypes_1.hasChildren(elem) && elem.children.length > 0) {\n                      var children = find(test, elem.children, recurse, limit);\n                      result.push.apply(result, children);\n                      limit -= children.length;\n                      if (limit <= 0) break;\n                    }\n                  }\n\n                  return result;\n                }\n\n                exports.find = find;\n                /**\n                * Finds the first element inside of an array that matches a test function.\n                *\n                * @param test Function to test nodes on.\n                * @param nodes Array of nodes to search.\n                */\n\n                function findOneChild(test, nodes) {\n                  return nodes.find(test);\n                }\n\n                exports.findOneChild = findOneChild;\n                /**\n                * Finds one element in a tree that passes a test.\n                *\n                * @param test Function to test nodes on.\n                * @param nodes Array of nodes to search.\n                * @param recurse Also consider child nodes.\n                */\n\n                function findOne(test, nodes, recurse) {\n                  if (recurse === void 0) {\n                    recurse = true;\n                  }\n\n                  var elem = null;\n\n                  for (var i = 0; i < nodes.length && !elem; i++) {\n                    var checked = nodes[i];\n\n                    if (!tagtypes_1.isTag(checked)) {\n                      continue;\n                    } else if (test(checked)) {\n                      elem = checked;\n                    } else if (recurse && checked.children.length > 0) {\n                      elem = findOne(test, checked.children);\n                    }\n                  }\n\n                  return elem;\n                }\n\n                exports.findOne = findOne;\n                /**\n                * Returns whether a tree of nodes contains at least one node passing a test.\n                *\n                * @param test Function to test nodes on.\n                * @param nodes Array of nodes to search.\n                */\n\n                function existsOne(test, nodes) {\n                  return nodes.some(function (checked) {\n                    return tagtypes_1.isTag(checked) && (test(checked) || checked.children.length > 0 && existsOne(test, checked.children));\n                  });\n                }\n\n                exports.existsOne = existsOne;\n                /**\n                * Search and array of nodes and its children for nodes passing a test function.\n                *\n                * Same as `find`, only with less options, leading to reduced complexity.\n                *\n                * @param test Function to test nodes on.\n                * @param nodes Array of nodes to search.\n                */\n\n                function findAll(test, nodes) {\n                  var _a;\n\n                  var result = [];\n                  var stack = nodes.filter(tagtypes_1.isTag);\n                  var elem;\n\n                  while (elem = stack.shift()) {\n                    var children = (_a = elem.children) === null || _a === void 0 ? void 0 : _a.filter(tagtypes_1.isTag);\n\n                    if (children && children.length > 0) {\n                      stack.unshift.apply(stack, children);\n                    }\n\n                    if (test(elem)) result.push(elem);\n                  }\n\n                  return result;\n                }\n\n                exports.findAll = findAll;\n              }, {\n                \"./tagtypes\": 15\n              }],\n              14: [function (require, module, exports) {\n                \"use strict\";\n\n                var __importDefault = this && this.__importDefault || function (mod) {\n                  return mod && mod.__esModule ? mod : {\n                    \"default\": mod\n                  };\n                };\n\n                Object.defineProperty(exports, \"__esModule\", {\n                  value: true\n                });\n\n                var tagtypes_1 = require(\"./tagtypes\");\n\n                var dom_serializer_1 = __importDefault(require(\"dom-serializer\"));\n\n                function getOuterHTML(node, options) {\n                  return dom_serializer_1[\"default\"](node, options);\n                }\n\n                exports.getOuterHTML = getOuterHTML;\n\n                function getInnerHTML(node, options) {\n                  return tagtypes_1.hasChildren(node) ? node.children.map(function (node) {\n                    return getOuterHTML(node, options);\n                  }).join(\"\") : \"\";\n                }\n\n                exports.getInnerHTML = getInnerHTML;\n\n                function getText(node) {\n                  if (Array.isArray(node)) return node.map(getText).join(\"\");\n                  if (tagtypes_1.isTag(node)) return node.name === \"br\" ? \"\\n\" : getText(node.children);\n                  if (tagtypes_1.isCDATA(node)) return getText(node.children);\n                  if (tagtypes_1.isText(node)) return node.data;\n                  return \"\";\n                }\n\n                exports.getText = getText;\n              }, {\n                \"./tagtypes\": 15,\n                \"dom-serializer\": 5\n              }],\n              15: [function (require, module, exports) {\n                \"use strict\";\n\n                Object.defineProperty(exports, \"__esModule\", {\n                  value: true\n                });\n\n                var domelementtype_1 = require(\"domelementtype\");\n\n                function isTag(node) {\n                  return domelementtype_1.isTag(node);\n                }\n\n                exports.isTag = isTag;\n\n                function isCDATA(node) {\n                  return node.type === \"cdata\"\n                  /* CDATA */\n                  ;\n                }\n\n                exports.isCDATA = isCDATA;\n\n                function isText(node) {\n                  return node.type === \"text\"\n                  /* Text */\n                  ;\n                }\n\n                exports.isText = isText;\n\n                function isComment(node) {\n                  return node.type === \"comment\"\n                  /* Comment */\n                  ;\n                }\n\n                exports.isComment = isComment;\n\n                function hasChildren(node) {\n                  return Object.prototype.hasOwnProperty.call(node, \"children\");\n                }\n\n                exports.hasChildren = hasChildren;\n              }, {\n                \"domelementtype\": 6\n              }],\n              16: [function (require, module, exports) {\n                \"use strict\";\n\n                Object.defineProperty(exports, \"__esModule\", {\n                  value: true\n                });\n\n                function getChildren(elem) {\n                  return elem.children || null;\n                }\n\n                exports.getChildren = getChildren;\n\n                function getParent(elem) {\n                  return elem.parent || null;\n                }\n\n                exports.getParent = getParent;\n\n                function getSiblings(elem) {\n                  var parent = getParent(elem);\n                  return parent ? getChildren(parent) : [elem];\n                }\n\n                exports.getSiblings = getSiblings;\n\n                function getAttributeValue(elem, name) {\n                  var _a;\n\n                  return (_a = elem.attribs) === null || _a === void 0 ? void 0 : _a[name];\n                }\n\n                exports.getAttributeValue = getAttributeValue;\n\n                function hasAttrib(elem, name) {\n                  return !!elem.attribs && Object.prototype.hasOwnProperty.call(elem.attribs, name) && elem.attribs[name] != null;\n                }\n\n                exports.hasAttrib = hasAttrib;\n                /***\n                * Returns the name property of an element\n                *\n                * @param elem The element to get the name for\n                */\n\n                function getName(elem) {\n                  return elem.name;\n                }\n\n                exports.getName = getName;\n              }, {}],\n              17: [function (require, module, exports) {\n                \"use strict\";\n\n                var __importDefault = this && this.__importDefault || function (mod) {\n                  return mod && mod.__esModule ? mod : {\n                    \"default\": mod\n                  };\n                };\n\n                Object.defineProperty(exports, \"__esModule\", {\n                  value: true\n                });\n\n                var entities_json_1 = __importDefault(require(\"./maps/entities.json\"));\n\n                var legacy_json_1 = __importDefault(require(\"./maps/legacy.json\"));\n\n                var xml_json_1 = __importDefault(require(\"./maps/xml.json\"));\n\n                var decode_codepoint_1 = __importDefault(require(\"./decode_codepoint\"));\n\n                exports.decodeXML = getStrictDecoder(xml_json_1[\"default\"]);\n                exports.decodeHTMLStrict = getStrictDecoder(entities_json_1[\"default\"]);\n\n                function getStrictDecoder(map) {\n                  var keys = Object.keys(map).join(\"|\");\n                  var replace = getReplacer(map);\n                  keys += \"|#[xX][\\\\da-fA-F]+|#\\\\d+\";\n                  var re = new RegExp(\"&(?:\" + keys + \");\", \"g\");\n                  return function (str) {\n                    return String(str).replace(re, replace);\n                  };\n                }\n\n                var sorter = function sorter(a, b) {\n                  return a < b ? 1 : -1;\n                };\n\n                exports.decodeHTML = function () {\n                  var legacy = Object.keys(legacy_json_1[\"default\"]).sort(sorter);\n                  var keys = Object.keys(entities_json_1[\"default\"]).sort(sorter);\n\n                  for (var i = 0, j = 0; i < keys.length; i++) {\n                    if (legacy[j] === keys[i]) {\n                      keys[i] += \";?\";\n                      j++;\n                    } else {\n                      keys[i] += \";\";\n                    }\n                  }\n\n                  var re = new RegExp(\"&(?:\" + keys.join(\"|\") + \"|#[xX][\\\\da-fA-F]+;?|#\\\\d+;?)\", \"g\");\n                  var replace = getReplacer(entities_json_1[\"default\"]);\n\n                  function replacer(str) {\n                    if (str.substr(-1) !== \";\") str += \";\";\n                    return replace(str);\n                  } //TODO consider creating a merged map\n\n\n                  return function (str) {\n                    return String(str).replace(re, replacer);\n                  };\n                }();\n\n                function getReplacer(map) {\n                  return function replace(str) {\n                    if (str.charAt(1) === \"#\") {\n                      var secondChar = str.charAt(2);\n\n                      if (secondChar === \"X\" || secondChar === \"x\") {\n                        return decode_codepoint_1[\"default\"](parseInt(str.substr(3), 16));\n                      }\n\n                      return decode_codepoint_1[\"default\"](parseInt(str.substr(2), 10));\n                    }\n\n                    return map[str.slice(1, -1)];\n                  };\n                }\n              }, {\n                \"./decode_codepoint\": 18,\n                \"./maps/entities.json\": 22,\n                \"./maps/legacy.json\": 23,\n                \"./maps/xml.json\": 24\n              }],\n              18: [function (require, module, exports) {\n                \"use strict\";\n\n                var __importDefault = this && this.__importDefault || function (mod) {\n                  return mod && mod.__esModule ? mod : {\n                    \"default\": mod\n                  };\n                };\n\n                Object.defineProperty(exports, \"__esModule\", {\n                  value: true\n                });\n\n                var decode_json_1 = __importDefault(require(\"./maps/decode.json\")); // modified version of https://github.com/mathiasbynens/he/blob/master/src/he.js#L94-L119\n\n\n                function decodeCodePoint(codePoint) {\n                  if (codePoint >= 0xd800 && codePoint <= 0xdfff || codePoint > 0x10ffff) {\n                    return \"\\uFFFD\";\n                  }\n\n                  if (codePoint in decode_json_1[\"default\"]) {\n                    codePoint = decode_json_1[\"default\"][codePoint];\n                  }\n\n                  var output = \"\";\n\n                  if (codePoint > 0xffff) {\n                    codePoint -= 0x10000;\n                    output += String.fromCharCode(codePoint >>> 10 & 0x3ff | 0xd800);\n                    codePoint = 0xdc00 | codePoint & 0x3ff;\n                  }\n\n                  output += String.fromCharCode(codePoint);\n                  return output;\n                }\n\n                exports[\"default\"] = decodeCodePoint;\n              }, {\n                \"./maps/decode.json\": 21\n              }],\n              19: [function (require, module, exports) {\n                \"use strict\";\n\n                var __importDefault = this && this.__importDefault || function (mod) {\n                  return mod && mod.__esModule ? mod : {\n                    \"default\": mod\n                  };\n                };\n\n                Object.defineProperty(exports, \"__esModule\", {\n                  value: true\n                });\n\n                var xml_json_1 = __importDefault(require(\"./maps/xml.json\"));\n\n                var inverseXML = getInverseObj(xml_json_1[\"default\"]);\n                var xmlReplacer = getInverseReplacer(inverseXML);\n                exports.encodeXML = getInverse(inverseXML, xmlReplacer);\n\n                var entities_json_1 = __importDefault(require(\"./maps/entities.json\"));\n\n                var inverseHTML = getInverseObj(entities_json_1[\"default\"]);\n                var htmlReplacer = getInverseReplacer(inverseHTML);\n                exports.encodeHTML = getInverse(inverseHTML, htmlReplacer);\n\n                function getInverseObj(obj) {\n                  return Object.keys(obj).sort().reduce(function (inverse, name) {\n                    inverse[obj[name]] = \"&\" + name + \";\";\n                    return inverse;\n                  }, {});\n                }\n\n                function getInverseReplacer(inverse) {\n                  var single = [];\n                  var multiple = [];\n\n                  for (var _i = 0, _a = Object.keys(inverse); _i < _a.length; _i++) {\n                    var k = _a[_i];\n\n                    if (k.length === 1) {\n                      // Add value to single array\n                      single.push(\"\\\\\" + k);\n                    } else {\n                      // Add value to multiple array\n                      multiple.push(k);\n                    }\n                  } // Add ranges to single characters.\n\n\n                  single.sort();\n\n                  for (var start = 0; start < single.length - 1; start++) {\n                    // Find the end of a run of characters\n                    var end = start;\n\n                    while (end < single.length - 1 && single[end].charCodeAt(1) + 1 === single[end + 1].charCodeAt(1)) {\n                      end += 1;\n                    }\n\n                    var count = 1 + end - start; // We want to replace at least three characters\n\n                    if (count < 3) continue;\n                    single.splice(start, count, single[start] + \"-\" + single[end]);\n                  }\n\n                  multiple.unshift(\"[\" + single.join(\"\") + \"]\");\n                  return new RegExp(multiple.join(\"|\"), \"g\");\n                }\n\n                var reNonASCII = /(?:[\\x80-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g;\n\n                function singleCharReplacer(c) {\n                  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                  return \"&#x\" + c.codePointAt(0).toString(16).toUpperCase() + \";\";\n                }\n\n                function getInverse(inverse, re) {\n                  return function (data) {\n                    return data.replace(re, function (name) {\n                      return inverse[name];\n                    }).replace(reNonASCII, singleCharReplacer);\n                  };\n                }\n\n                var reXmlChars = getInverseReplacer(inverseXML);\n\n                function escape(data) {\n                  return data.replace(reXmlChars, singleCharReplacer).replace(reNonASCII, singleCharReplacer);\n                }\n\n                exports.escape = escape;\n              }, {\n                \"./maps/entities.json\": 22,\n                \"./maps/xml.json\": 24\n              }],\n              20: [function (require, module, exports) {\n                \"use strict\";\n\n                Object.defineProperty(exports, \"__esModule\", {\n                  value: true\n                });\n\n                var decode_1 = require(\"./decode\");\n\n                var encode_1 = require(\"./encode\");\n                /**\n                * Decodes a string with entities.\n                *\n                * @param data String to decode.\n                * @param level Optional level to decode at. 0 = XML, 1 = HTML. Default is 0.\n                */\n\n\n                function decode(data, level) {\n                  return (!level || level <= 0 ? decode_1.decodeXML : decode_1.decodeHTML)(data);\n                }\n\n                exports.decode = decode;\n                /**\n                * Decodes a string with entities. Does not allow missing trailing semicolons for entities.\n                *\n                * @param data String to decode.\n                * @param level Optional level to decode at. 0 = XML, 1 = HTML. Default is 0.\n                */\n\n                function decodeStrict(data, level) {\n                  return (!level || level <= 0 ? decode_1.decodeXML : decode_1.decodeHTMLStrict)(data);\n                }\n\n                exports.decodeStrict = decodeStrict;\n                /**\n                * Encodes a string with entities.\n                *\n                * @param data String to encode.\n                * @param level Optional level to encode at. 0 = XML, 1 = HTML. Default is 0.\n                */\n\n                function encode(data, level) {\n                  return (!level || level <= 0 ? encode_1.encodeXML : encode_1.encodeHTML)(data);\n                }\n\n                exports.encode = encode;\n\n                var encode_2 = require(\"./encode\");\n\n                exports.encodeXML = encode_2.encodeXML;\n                exports.encodeHTML = encode_2.encodeHTML;\n                exports.escape = encode_2.escape; // Legacy aliases\n\n                exports.encodeHTML4 = encode_2.encodeHTML;\n                exports.encodeHTML5 = encode_2.encodeHTML;\n\n                var decode_2 = require(\"./decode\");\n\n                exports.decodeXML = decode_2.decodeXML;\n                exports.decodeHTML = decode_2.decodeHTML;\n                exports.decodeHTMLStrict = decode_2.decodeHTMLStrict; // Legacy aliases\n\n                exports.decodeHTML4 = decode_2.decodeHTML;\n                exports.decodeHTML5 = decode_2.decodeHTML;\n                exports.decodeHTML4Strict = decode_2.decodeHTMLStrict;\n                exports.decodeHTML5Strict = decode_2.decodeHTMLStrict;\n                exports.decodeXMLStrict = decode_2.decodeXML;\n              }, {\n                \"./decode\": 17,\n                \"./encode\": 19\n              }],\n              21: [function (require, module, exports) {\n                module.exports = {\n                  \"0\": 65533,\n                  \"128\": 8364,\n                  \"130\": 8218,\n                  \"131\": 402,\n                  \"132\": 8222,\n                  \"133\": 8230,\n                  \"134\": 8224,\n                  \"135\": 8225,\n                  \"136\": 710,\n                  \"137\": 8240,\n                  \"138\": 352,\n                  \"139\": 8249,\n                  \"140\": 338,\n                  \"142\": 381,\n                  \"145\": 8216,\n                  \"146\": 8217,\n                  \"147\": 8220,\n                  \"148\": 8221,\n                  \"149\": 8226,\n                  \"150\": 8211,\n                  \"151\": 8212,\n                  \"152\": 732,\n                  \"153\": 8482,\n                  \"154\": 353,\n                  \"155\": 8250,\n                  \"156\": 339,\n                  \"158\": 382,\n                  \"159\": 376\n                };\n              }, {}],\n              22: [function (require, module, exports) {\n                module.exports = {\n                  \"Aacute\": \"\\xC1\",\n                  \"aacute\": \"\\xE1\",\n                  \"Abreve\": \"\\u0102\",\n                  \"abreve\": \"\\u0103\",\n                  \"ac\": \"\\u223E\",\n                  \"acd\": \"\\u223F\",\n                  \"acE\": \"\\u223E\\u0333\",\n                  \"Acirc\": \"\\xC2\",\n                  \"acirc\": \"\\xE2\",\n                  \"acute\": \"\\xB4\",\n                  \"Acy\": \"\\u0410\",\n                  \"acy\": \"\\u0430\",\n                  \"AElig\": \"\\xC6\",\n                  \"aelig\": \"\\xE6\",\n                  \"af\": \"\\u2061\",\n                  \"Afr\": \"\\uD835\\uDD04\",\n                  \"afr\": \"\\uD835\\uDD1E\",\n                  \"Agrave\": \"\\xC0\",\n                  \"agrave\": \"\\xE0\",\n                  \"alefsym\": \"\\u2135\",\n                  \"aleph\": \"\\u2135\",\n                  \"Alpha\": \"\\u0391\",\n                  \"alpha\": \"\\u03B1\",\n                  \"Amacr\": \"\\u0100\",\n                  \"amacr\": \"\\u0101\",\n                  \"amalg\": \"\\u2A3F\",\n                  \"amp\": \"&\",\n                  \"AMP\": \"&\",\n                  \"andand\": \"\\u2A55\",\n                  \"And\": \"\\u2A53\",\n                  \"and\": \"\\u2227\",\n                  \"andd\": \"\\u2A5C\",\n                  \"andslope\": \"\\u2A58\",\n                  \"andv\": \"\\u2A5A\",\n                  \"ang\": \"\\u2220\",\n                  \"ange\": \"\\u29A4\",\n                  \"angle\": \"\\u2220\",\n                  \"angmsdaa\": \"\\u29A8\",\n                  \"angmsdab\": \"\\u29A9\",\n                  \"angmsdac\": \"\\u29AA\",\n                  \"angmsdad\": \"\\u29AB\",\n                  \"angmsdae\": \"\\u29AC\",\n                  \"angmsdaf\": \"\\u29AD\",\n                  \"angmsdag\": \"\\u29AE\",\n                  \"angmsdah\": \"\\u29AF\",\n                  \"angmsd\": \"\\u2221\",\n                  \"angrt\": \"\\u221F\",\n                  \"angrtvb\": \"\\u22BE\",\n                  \"angrtvbd\": \"\\u299D\",\n                  \"angsph\": \"\\u2222\",\n                  \"angst\": \"\\xC5\",\n                  \"angzarr\": \"\\u237C\",\n                  \"Aogon\": \"\\u0104\",\n                  \"aogon\": \"\\u0105\",\n                  \"Aopf\": \"\\uD835\\uDD38\",\n                  \"aopf\": \"\\uD835\\uDD52\",\n                  \"apacir\": \"\\u2A6F\",\n                  \"ap\": \"\\u2248\",\n                  \"apE\": \"\\u2A70\",\n                  \"ape\": \"\\u224A\",\n                  \"apid\": \"\\u224B\",\n                  \"apos\": \"'\",\n                  \"ApplyFunction\": \"\\u2061\",\n                  \"approx\": \"\\u2248\",\n                  \"approxeq\": \"\\u224A\",\n                  \"Aring\": \"\\xC5\",\n                  \"aring\": \"\\xE5\",\n                  \"Ascr\": \"\\uD835\\uDC9C\",\n                  \"ascr\": \"\\uD835\\uDCB6\",\n                  \"Assign\": \"\\u2254\",\n                  \"ast\": \"*\",\n                  \"asymp\": \"\\u2248\",\n                  \"asympeq\": \"\\u224D\",\n                  \"Atilde\": \"\\xC3\",\n                  \"atilde\": \"\\xE3\",\n                  \"Auml\": \"\\xC4\",\n                  \"auml\": \"\\xE4\",\n                  \"awconint\": \"\\u2233\",\n                  \"awint\": \"\\u2A11\",\n                  \"backcong\": \"\\u224C\",\n                  \"backepsilon\": \"\\u03F6\",\n                  \"backprime\": \"\\u2035\",\n                  \"backsim\": \"\\u223D\",\n                  \"backsimeq\": \"\\u22CD\",\n                  \"Backslash\": \"\\u2216\",\n                  \"Barv\": \"\\u2AE7\",\n                  \"barvee\": \"\\u22BD\",\n                  \"barwed\": \"\\u2305\",\n                  \"Barwed\": \"\\u2306\",\n                  \"barwedge\": \"\\u2305\",\n                  \"bbrk\": \"\\u23B5\",\n                  \"bbrktbrk\": \"\\u23B6\",\n                  \"bcong\": \"\\u224C\",\n                  \"Bcy\": \"\\u0411\",\n                  \"bcy\": \"\\u0431\",\n                  \"bdquo\": \"\\u201E\",\n                  \"becaus\": \"\\u2235\",\n                  \"because\": \"\\u2235\",\n                  \"Because\": \"\\u2235\",\n                  \"bemptyv\": \"\\u29B0\",\n                  \"bepsi\": \"\\u03F6\",\n                  \"bernou\": \"\\u212C\",\n                  \"Bernoullis\": \"\\u212C\",\n                  \"Beta\": \"\\u0392\",\n                  \"beta\": \"\\u03B2\",\n                  \"beth\": \"\\u2136\",\n                  \"between\": \"\\u226C\",\n                  \"Bfr\": \"\\uD835\\uDD05\",\n                  \"bfr\": \"\\uD835\\uDD1F\",\n                  \"bigcap\": \"\\u22C2\",\n                  \"bigcirc\": \"\\u25EF\",\n                  \"bigcup\": \"\\u22C3\",\n                  \"bigodot\": \"\\u2A00\",\n                  \"bigoplus\": \"\\u2A01\",\n                  \"bigotimes\": \"\\u2A02\",\n                  \"bigsqcup\": \"\\u2A06\",\n                  \"bigstar\": \"\\u2605\",\n                  \"bigtriangledown\": \"\\u25BD\",\n                  \"bigtriangleup\": \"\\u25B3\",\n                  \"biguplus\": \"\\u2A04\",\n                  \"bigvee\": \"\\u22C1\",\n                  \"bigwedge\": \"\\u22C0\",\n                  \"bkarow\": \"\\u290D\",\n                  \"blacklozenge\": \"\\u29EB\",\n                  \"blacksquare\": \"\\u25AA\",\n                  \"blacktriangle\": \"\\u25B4\",\n                  \"blacktriangledown\": \"\\u25BE\",\n                  \"blacktriangleleft\": \"\\u25C2\",\n                  \"blacktriangleright\": \"\\u25B8\",\n                  \"blank\": \"\\u2423\",\n                  \"blk12\": \"\\u2592\",\n                  \"blk14\": \"\\u2591\",\n                  \"blk34\": \"\\u2593\",\n                  \"block\": \"\\u2588\",\n                  \"bne\": \"=\\u20E5\",\n                  \"bnequiv\": \"\\u2261\\u20E5\",\n                  \"bNot\": \"\\u2AED\",\n                  \"bnot\": \"\\u2310\",\n                  \"Bopf\": \"\\uD835\\uDD39\",\n                  \"bopf\": \"\\uD835\\uDD53\",\n                  \"bot\": \"\\u22A5\",\n                  \"bottom\": \"\\u22A5\",\n                  \"bowtie\": \"\\u22C8\",\n                  \"boxbox\": \"\\u29C9\",\n                  \"boxdl\": \"\\u2510\",\n                  \"boxdL\": \"\\u2555\",\n                  \"boxDl\": \"\\u2556\",\n                  \"boxDL\": \"\\u2557\",\n                  \"boxdr\": \"\\u250C\",\n                  \"boxdR\": \"\\u2552\",\n                  \"boxDr\": \"\\u2553\",\n                  \"boxDR\": \"\\u2554\",\n                  \"boxh\": \"\\u2500\",\n                  \"boxH\": \"\\u2550\",\n                  \"boxhd\": \"\\u252C\",\n                  \"boxHd\": \"\\u2564\",\n                  \"boxhD\": \"\\u2565\",\n                  \"boxHD\": \"\\u2566\",\n                  \"boxhu\": \"\\u2534\",\n                  \"boxHu\": \"\\u2567\",\n                  \"boxhU\": \"\\u2568\",\n                  \"boxHU\": \"\\u2569\",\n                  \"boxminus\": \"\\u229F\",\n                  \"boxplus\": \"\\u229E\",\n                  \"boxtimes\": \"\\u22A0\",\n                  \"boxul\": \"\\u2518\",\n                  \"boxuL\": \"\\u255B\",\n                  \"boxUl\": \"\\u255C\",\n                  \"boxUL\": \"\\u255D\",\n                  \"boxur\": \"\\u2514\",\n                  \"boxuR\": \"\\u2558\",\n                  \"boxUr\": \"\\u2559\",\n                  \"boxUR\": \"\\u255A\",\n                  \"boxv\": \"\\u2502\",\n                  \"boxV\": \"\\u2551\",\n                  \"boxvh\": \"\\u253C\",\n                  \"boxvH\": \"\\u256A\",\n                  \"boxVh\": \"\\u256B\",\n                  \"boxVH\": \"\\u256C\",\n                  \"boxvl\": \"\\u2524\",\n                  \"boxvL\": \"\\u2561\",\n                  \"boxVl\": \"\\u2562\",\n                  \"boxVL\": \"\\u2563\",\n                  \"boxvr\": \"\\u251C\",\n                  \"boxvR\": \"\\u255E\",\n                  \"boxVr\": \"\\u255F\",\n                  \"boxVR\": \"\\u2560\",\n                  \"bprime\": \"\\u2035\",\n                  \"breve\": \"\\u02D8\",\n                  \"Breve\": \"\\u02D8\",\n                  \"brvbar\": \"\\xA6\",\n                  \"bscr\": \"\\uD835\\uDCB7\",\n                  \"Bscr\": \"\\u212C\",\n                  \"bsemi\": \"\\u204F\",\n                  \"bsim\": \"\\u223D\",\n                  \"bsime\": \"\\u22CD\",\n                  \"bsolb\": \"\\u29C5\",\n                  \"bsol\": \"\\\\\",\n                  \"bsolhsub\": \"\\u27C8\",\n                  \"bull\": \"\\u2022\",\n                  \"bullet\": \"\\u2022\",\n                  \"bump\": \"\\u224E\",\n                  \"bumpE\": \"\\u2AAE\",\n                  \"bumpe\": \"\\u224F\",\n                  \"Bumpeq\": \"\\u224E\",\n                  \"bumpeq\": \"\\u224F\",\n                  \"Cacute\": \"\\u0106\",\n                  \"cacute\": \"\\u0107\",\n                  \"capand\": \"\\u2A44\",\n                  \"capbrcup\": \"\\u2A49\",\n                  \"capcap\": \"\\u2A4B\",\n                  \"cap\": \"\\u2229\",\n                  \"Cap\": \"\\u22D2\",\n                  \"capcup\": \"\\u2A47\",\n                  \"capdot\": \"\\u2A40\",\n                  \"CapitalDifferentialD\": \"\\u2145\",\n                  \"caps\": \"\\u2229\\uFE00\",\n                  \"caret\": \"\\u2041\",\n                  \"caron\": \"\\u02C7\",\n                  \"Cayleys\": \"\\u212D\",\n                  \"ccaps\": \"\\u2A4D\",\n                  \"Ccaron\": \"\\u010C\",\n                  \"ccaron\": \"\\u010D\",\n                  \"Ccedil\": \"\\xC7\",\n                  \"ccedil\": \"\\xE7\",\n                  \"Ccirc\": \"\\u0108\",\n                  \"ccirc\": \"\\u0109\",\n                  \"Cconint\": \"\\u2230\",\n                  \"ccups\": \"\\u2A4C\",\n                  \"ccupssm\": \"\\u2A50\",\n                  \"Cdot\": \"\\u010A\",\n                  \"cdot\": \"\\u010B\",\n                  \"cedil\": \"\\xB8\",\n                  \"Cedilla\": \"\\xB8\",\n                  \"cemptyv\": \"\\u29B2\",\n                  \"cent\": \"\\xA2\",\n                  \"centerdot\": \"\\xB7\",\n                  \"CenterDot\": \"\\xB7\",\n                  \"cfr\": \"\\uD835\\uDD20\",\n                  \"Cfr\": \"\\u212D\",\n                  \"CHcy\": \"\\u0427\",\n                  \"chcy\": \"\\u0447\",\n                  \"check\": \"\\u2713\",\n                  \"checkmark\": \"\\u2713\",\n                  \"Chi\": \"\\u03A7\",\n                  \"chi\": \"\\u03C7\",\n                  \"circ\": \"\\u02C6\",\n                  \"circeq\": \"\\u2257\",\n                  \"circlearrowleft\": \"\\u21BA\",\n                  \"circlearrowright\": \"\\u21BB\",\n                  \"circledast\": \"\\u229B\",\n                  \"circledcirc\": \"\\u229A\",\n                  \"circleddash\": \"\\u229D\",\n                  \"CircleDot\": \"\\u2299\",\n                  \"circledR\": \"\\xAE\",\n                  \"circledS\": \"\\u24C8\",\n                  \"CircleMinus\": \"\\u2296\",\n                  \"CirclePlus\": \"\\u2295\",\n                  \"CircleTimes\": \"\\u2297\",\n                  \"cir\": \"\\u25CB\",\n                  \"cirE\": \"\\u29C3\",\n                  \"cire\": \"\\u2257\",\n                  \"cirfnint\": \"\\u2A10\",\n                  \"cirmid\": \"\\u2AEF\",\n                  \"cirscir\": \"\\u29C2\",\n                  \"ClockwiseContourIntegral\": \"\\u2232\",\n                  \"CloseCurlyDoubleQuote\": \"\\u201D\",\n                  \"CloseCurlyQuote\": \"\\u2019\",\n                  \"clubs\": \"\\u2663\",\n                  \"clubsuit\": \"\\u2663\",\n                  \"colon\": \":\",\n                  \"Colon\": \"\\u2237\",\n                  \"Colone\": \"\\u2A74\",\n                  \"colone\": \"\\u2254\",\n                  \"coloneq\": \"\\u2254\",\n                  \"comma\": \",\",\n                  \"commat\": \"@\",\n                  \"comp\": \"\\u2201\",\n                  \"compfn\": \"\\u2218\",\n                  \"complement\": \"\\u2201\",\n                  \"complexes\": \"\\u2102\",\n                  \"cong\": \"\\u2245\",\n                  \"congdot\": \"\\u2A6D\",\n                  \"Congruent\": \"\\u2261\",\n                  \"conint\": \"\\u222E\",\n                  \"Conint\": \"\\u222F\",\n                  \"ContourIntegral\": \"\\u222E\",\n                  \"copf\": \"\\uD835\\uDD54\",\n                  \"Copf\": \"\\u2102\",\n                  \"coprod\": \"\\u2210\",\n                  \"Coproduct\": \"\\u2210\",\n                  \"copy\": \"\\xA9\",\n                  \"COPY\": \"\\xA9\",\n                  \"copysr\": \"\\u2117\",\n                  \"CounterClockwiseContourIntegral\": \"\\u2233\",\n                  \"crarr\": \"\\u21B5\",\n                  \"cross\": \"\\u2717\",\n                  \"Cross\": \"\\u2A2F\",\n                  \"Cscr\": \"\\uD835\\uDC9E\",\n                  \"cscr\": \"\\uD835\\uDCB8\",\n                  \"csub\": \"\\u2ACF\",\n                  \"csube\": \"\\u2AD1\",\n                  \"csup\": \"\\u2AD0\",\n                  \"csupe\": \"\\u2AD2\",\n                  \"ctdot\": \"\\u22EF\",\n                  \"cudarrl\": \"\\u2938\",\n                  \"cudarrr\": \"\\u2935\",\n                  \"cuepr\": \"\\u22DE\",\n                  \"cuesc\": \"\\u22DF\",\n                  \"cularr\": \"\\u21B6\",\n                  \"cularrp\": \"\\u293D\",\n                  \"cupbrcap\": \"\\u2A48\",\n                  \"cupcap\": \"\\u2A46\",\n                  \"CupCap\": \"\\u224D\",\n                  \"cup\": \"\\u222A\",\n                  \"Cup\": \"\\u22D3\",\n                  \"cupcup\": \"\\u2A4A\",\n                  \"cupdot\": \"\\u228D\",\n                  \"cupor\": \"\\u2A45\",\n                  \"cups\": \"\\u222A\\uFE00\",\n                  \"curarr\": \"\\u21B7\",\n                  \"curarrm\": \"\\u293C\",\n                  \"curlyeqprec\": \"\\u22DE\",\n                  \"curlyeqsucc\": \"\\u22DF\",\n                  \"curlyvee\": \"\\u22CE\",\n                  \"curlywedge\": \"\\u22CF\",\n                  \"curren\": \"\\xA4\",\n                  \"curvearrowleft\": \"\\u21B6\",\n                  \"curvearrowright\": \"\\u21B7\",\n                  \"cuvee\": \"\\u22CE\",\n                  \"cuwed\": \"\\u22CF\",\n                  \"cwconint\": \"\\u2232\",\n                  \"cwint\": \"\\u2231\",\n                  \"cylcty\": \"\\u232D\",\n                  \"dagger\": \"\\u2020\",\n                  \"Dagger\": \"\\u2021\",\n                  \"daleth\": \"\\u2138\",\n                  \"darr\": \"\\u2193\",\n                  \"Darr\": \"\\u21A1\",\n                  \"dArr\": \"\\u21D3\",\n                  \"dash\": \"\\u2010\",\n                  \"Dashv\": \"\\u2AE4\",\n                  \"dashv\": \"\\u22A3\",\n                  \"dbkarow\": \"\\u290F\",\n                  \"dblac\": \"\\u02DD\",\n                  \"Dcaron\": \"\\u010E\",\n                  \"dcaron\": \"\\u010F\",\n                  \"Dcy\": \"\\u0414\",\n                  \"dcy\": \"\\u0434\",\n                  \"ddagger\": \"\\u2021\",\n                  \"ddarr\": \"\\u21CA\",\n                  \"DD\": \"\\u2145\",\n                  \"dd\": \"\\u2146\",\n                  \"DDotrahd\": \"\\u2911\",\n                  \"ddotseq\": \"\\u2A77\",\n                  \"deg\": \"\\xB0\",\n                  \"Del\": \"\\u2207\",\n                  \"Delta\": \"\\u0394\",\n                  \"delta\": \"\\u03B4\",\n                  \"demptyv\": \"\\u29B1\",\n                  \"dfisht\": \"\\u297F\",\n                  \"Dfr\": \"\\uD835\\uDD07\",\n                  \"dfr\": \"\\uD835\\uDD21\",\n                  \"dHar\": \"\\u2965\",\n                  \"dharl\": \"\\u21C3\",\n                  \"dharr\": \"\\u21C2\",\n                  \"DiacriticalAcute\": \"\\xB4\",\n                  \"DiacriticalDot\": \"\\u02D9\",\n                  \"DiacriticalDoubleAcute\": \"\\u02DD\",\n                  \"DiacriticalGrave\": \"`\",\n                  \"DiacriticalTilde\": \"\\u02DC\",\n                  \"diam\": \"\\u22C4\",\n                  \"diamond\": \"\\u22C4\",\n                  \"Diamond\": \"\\u22C4\",\n                  \"diamondsuit\": \"\\u2666\",\n                  \"diams\": \"\\u2666\",\n                  \"die\": \"\\xA8\",\n                  \"DifferentialD\": \"\\u2146\",\n                  \"digamma\": \"\\u03DD\",\n                  \"disin\": \"\\u22F2\",\n                  \"div\": \"\\xF7\",\n                  \"divide\": \"\\xF7\",\n                  \"divideontimes\": \"\\u22C7\",\n                  \"divonx\": \"\\u22C7\",\n                  \"DJcy\": \"\\u0402\",\n                  \"djcy\": \"\\u0452\",\n                  \"dlcorn\": \"\\u231E\",\n                  \"dlcrop\": \"\\u230D\",\n                  \"dollar\": \"$\",\n                  \"Dopf\": \"\\uD835\\uDD3B\",\n                  \"dopf\": \"\\uD835\\uDD55\",\n                  \"Dot\": \"\\xA8\",\n                  \"dot\": \"\\u02D9\",\n                  \"DotDot\": \"\\u20DC\",\n                  \"doteq\": \"\\u2250\",\n                  \"doteqdot\": \"\\u2251\",\n                  \"DotEqual\": \"\\u2250\",\n                  \"dotminus\": \"\\u2238\",\n                  \"dotplus\": \"\\u2214\",\n                  \"dotsquare\": \"\\u22A1\",\n                  \"doublebarwedge\": \"\\u2306\",\n                  \"DoubleContourIntegral\": \"\\u222F\",\n                  \"DoubleDot\": \"\\xA8\",\n                  \"DoubleDownArrow\": \"\\u21D3\",\n                  \"DoubleLeftArrow\": \"\\u21D0\",\n                  \"DoubleLeftRightArrow\": \"\\u21D4\",\n                  \"DoubleLeftTee\": \"\\u2AE4\",\n                  \"DoubleLongLeftArrow\": \"\\u27F8\",\n                  \"DoubleLongLeftRightArrow\": \"\\u27FA\",\n                  \"DoubleLongRightArrow\": \"\\u27F9\",\n                  \"DoubleRightArrow\": \"\\u21D2\",\n                  \"DoubleRightTee\": \"\\u22A8\",\n                  \"DoubleUpArrow\": \"\\u21D1\",\n                  \"DoubleUpDownArrow\": \"\\u21D5\",\n                  \"DoubleVerticalBar\": \"\\u2225\",\n                  \"DownArrowBar\": \"\\u2913\",\n                  \"downarrow\": \"\\u2193\",\n                  \"DownArrow\": \"\\u2193\",\n                  \"Downarrow\": \"\\u21D3\",\n                  \"DownArrowUpArrow\": \"\\u21F5\",\n                  \"DownBreve\": \"\\u0311\",\n                  \"downdownarrows\": \"\\u21CA\",\n                  \"downharpoonleft\": \"\\u21C3\",\n                  \"downharpoonright\": \"\\u21C2\",\n                  \"DownLeftRightVector\": \"\\u2950\",\n                  \"DownLeftTeeVector\": \"\\u295E\",\n                  \"DownLeftVectorBar\": \"\\u2956\",\n                  \"DownLeftVector\": \"\\u21BD\",\n                  \"DownRightTeeVector\": \"\\u295F\",\n                  \"DownRightVectorBar\": \"\\u2957\",\n                  \"DownRightVector\": \"\\u21C1\",\n                  \"DownTeeArrow\": \"\\u21A7\",\n                  \"DownTee\": \"\\u22A4\",\n                  \"drbkarow\": \"\\u2910\",\n                  \"drcorn\": \"\\u231F\",\n                  \"drcrop\": \"\\u230C\",\n                  \"Dscr\": \"\\uD835\\uDC9F\",\n                  \"dscr\": \"\\uD835\\uDCB9\",\n                  \"DScy\": \"\\u0405\",\n                  \"dscy\": \"\\u0455\",\n                  \"dsol\": \"\\u29F6\",\n                  \"Dstrok\": \"\\u0110\",\n                  \"dstrok\": \"\\u0111\",\n                  \"dtdot\": \"\\u22F1\",\n                  \"dtri\": \"\\u25BF\",\n                  \"dtrif\": \"\\u25BE\",\n                  \"duarr\": \"\\u21F5\",\n                  \"duhar\": \"\\u296F\",\n                  \"dwangle\": \"\\u29A6\",\n                  \"DZcy\": \"\\u040F\",\n                  \"dzcy\": \"\\u045F\",\n                  \"dzigrarr\": \"\\u27FF\",\n                  \"Eacute\": \"\\xC9\",\n                  \"eacute\": \"\\xE9\",\n                  \"easter\": \"\\u2A6E\",\n                  \"Ecaron\": \"\\u011A\",\n                  \"ecaron\": \"\\u011B\",\n                  \"Ecirc\": \"\\xCA\",\n                  \"ecirc\": \"\\xEA\",\n                  \"ecir\": \"\\u2256\",\n                  \"ecolon\": \"\\u2255\",\n                  \"Ecy\": \"\\u042D\",\n                  \"ecy\": \"\\u044D\",\n                  \"eDDot\": \"\\u2A77\",\n                  \"Edot\": \"\\u0116\",\n                  \"edot\": \"\\u0117\",\n                  \"eDot\": \"\\u2251\",\n                  \"ee\": \"\\u2147\",\n                  \"efDot\": \"\\u2252\",\n                  \"Efr\": \"\\uD835\\uDD08\",\n                  \"efr\": \"\\uD835\\uDD22\",\n                  \"eg\": \"\\u2A9A\",\n                  \"Egrave\": \"\\xC8\",\n                  \"egrave\": \"\\xE8\",\n                  \"egs\": \"\\u2A96\",\n                  \"egsdot\": \"\\u2A98\",\n                  \"el\": \"\\u2A99\",\n                  \"Element\": \"\\u2208\",\n                  \"elinters\": \"\\u23E7\",\n                  \"ell\": \"\\u2113\",\n                  \"els\": \"\\u2A95\",\n                  \"elsdot\": \"\\u2A97\",\n                  \"Emacr\": \"\\u0112\",\n                  \"emacr\": \"\\u0113\",\n                  \"empty\": \"\\u2205\",\n                  \"emptyset\": \"\\u2205\",\n                  \"EmptySmallSquare\": \"\\u25FB\",\n                  \"emptyv\": \"\\u2205\",\n                  \"EmptyVerySmallSquare\": \"\\u25AB\",\n                  \"emsp13\": \"\\u2004\",\n                  \"emsp14\": \"\\u2005\",\n                  \"emsp\": \"\\u2003\",\n                  \"ENG\": \"\\u014A\",\n                  \"eng\": \"\\u014B\",\n                  \"ensp\": \"\\u2002\",\n                  \"Eogon\": \"\\u0118\",\n                  \"eogon\": \"\\u0119\",\n                  \"Eopf\": \"\\uD835\\uDD3C\",\n                  \"eopf\": \"\\uD835\\uDD56\",\n                  \"epar\": \"\\u22D5\",\n                  \"eparsl\": \"\\u29E3\",\n                  \"eplus\": \"\\u2A71\",\n                  \"epsi\": \"\\u03B5\",\n                  \"Epsilon\": \"\\u0395\",\n                  \"epsilon\": \"\\u03B5\",\n                  \"epsiv\": \"\\u03F5\",\n                  \"eqcirc\": \"\\u2256\",\n                  \"eqcolon\": \"\\u2255\",\n                  \"eqsim\": \"\\u2242\",\n                  \"eqslantgtr\": \"\\u2A96\",\n                  \"eqslantless\": \"\\u2A95\",\n                  \"Equal\": \"\\u2A75\",\n                  \"equals\": \"=\",\n                  \"EqualTilde\": \"\\u2242\",\n                  \"equest\": \"\\u225F\",\n                  \"Equilibrium\": \"\\u21CC\",\n                  \"equiv\": \"\\u2261\",\n                  \"equivDD\": \"\\u2A78\",\n                  \"eqvparsl\": \"\\u29E5\",\n                  \"erarr\": \"\\u2971\",\n                  \"erDot\": \"\\u2253\",\n                  \"escr\": \"\\u212F\",\n                  \"Escr\": \"\\u2130\",\n                  \"esdot\": \"\\u2250\",\n                  \"Esim\": \"\\u2A73\",\n                  \"esim\": \"\\u2242\",\n                  \"Eta\": \"\\u0397\",\n                  \"eta\": \"\\u03B7\",\n                  \"ETH\": \"\\xD0\",\n                  \"eth\": \"\\xF0\",\n                  \"Euml\": \"\\xCB\",\n                  \"euml\": \"\\xEB\",\n                  \"euro\": \"\\u20AC\",\n                  \"excl\": \"!\",\n                  \"exist\": \"\\u2203\",\n                  \"Exists\": \"\\u2203\",\n                  \"expectation\": \"\\u2130\",\n                  \"exponentiale\": \"\\u2147\",\n                  \"ExponentialE\": \"\\u2147\",\n                  \"fallingdotseq\": \"\\u2252\",\n                  \"Fcy\": \"\\u0424\",\n                  \"fcy\": \"\\u0444\",\n                  \"female\": \"\\u2640\",\n                  \"ffilig\": \"\\uFB03\",\n                  \"fflig\": \"\\uFB00\",\n                  \"ffllig\": \"\\uFB04\",\n                  \"Ffr\": \"\\uD835\\uDD09\",\n                  \"ffr\": \"\\uD835\\uDD23\",\n                  \"filig\": \"\\uFB01\",\n                  \"FilledSmallSquare\": \"\\u25FC\",\n                  \"FilledVerySmallSquare\": \"\\u25AA\",\n                  \"fjlig\": \"fj\",\n                  \"flat\": \"\\u266D\",\n                  \"fllig\": \"\\uFB02\",\n                  \"fltns\": \"\\u25B1\",\n                  \"fnof\": \"\\u0192\",\n                  \"Fopf\": \"\\uD835\\uDD3D\",\n                  \"fopf\": \"\\uD835\\uDD57\",\n                  \"forall\": \"\\u2200\",\n                  \"ForAll\": \"\\u2200\",\n                  \"fork\": \"\\u22D4\",\n                  \"forkv\": \"\\u2AD9\",\n                  \"Fouriertrf\": \"\\u2131\",\n                  \"fpartint\": \"\\u2A0D\",\n                  \"frac12\": \"\\xBD\",\n                  \"frac13\": \"\\u2153\",\n                  \"frac14\": \"\\xBC\",\n                  \"frac15\": \"\\u2155\",\n                  \"frac16\": \"\\u2159\",\n                  \"frac18\": \"\\u215B\",\n                  \"frac23\": \"\\u2154\",\n                  \"frac25\": \"\\u2156\",\n                  \"frac34\": \"\\xBE\",\n                  \"frac35\": \"\\u2157\",\n                  \"frac38\": \"\\u215C\",\n                  \"frac45\": \"\\u2158\",\n                  \"frac56\": \"\\u215A\",\n                  \"frac58\": \"\\u215D\",\n                  \"frac78\": \"\\u215E\",\n                  \"frasl\": \"\\u2044\",\n                  \"frown\": \"\\u2322\",\n                  \"fscr\": \"\\uD835\\uDCBB\",\n                  \"Fscr\": \"\\u2131\",\n                  \"gacute\": \"\\u01F5\",\n                  \"Gamma\": \"\\u0393\",\n                  \"gamma\": \"\\u03B3\",\n                  \"Gammad\": \"\\u03DC\",\n                  \"gammad\": \"\\u03DD\",\n                  \"gap\": \"\\u2A86\",\n                  \"Gbreve\": \"\\u011E\",\n                  \"gbreve\": \"\\u011F\",\n                  \"Gcedil\": \"\\u0122\",\n                  \"Gcirc\": \"\\u011C\",\n                  \"gcirc\": \"\\u011D\",\n                  \"Gcy\": \"\\u0413\",\n                  \"gcy\": \"\\u0433\",\n                  \"Gdot\": \"\\u0120\",\n                  \"gdot\": \"\\u0121\",\n                  \"ge\": \"\\u2265\",\n                  \"gE\": \"\\u2267\",\n                  \"gEl\": \"\\u2A8C\",\n                  \"gel\": \"\\u22DB\",\n                  \"geq\": \"\\u2265\",\n                  \"geqq\": \"\\u2267\",\n                  \"geqslant\": \"\\u2A7E\",\n                  \"gescc\": \"\\u2AA9\",\n                  \"ges\": \"\\u2A7E\",\n                  \"gesdot\": \"\\u2A80\",\n                  \"gesdoto\": \"\\u2A82\",\n                  \"gesdotol\": \"\\u2A84\",\n                  \"gesl\": \"\\u22DB\\uFE00\",\n                  \"gesles\": \"\\u2A94\",\n                  \"Gfr\": \"\\uD835\\uDD0A\",\n                  \"gfr\": \"\\uD835\\uDD24\",\n                  \"gg\": \"\\u226B\",\n                  \"Gg\": \"\\u22D9\",\n                  \"ggg\": \"\\u22D9\",\n                  \"gimel\": \"\\u2137\",\n                  \"GJcy\": \"\\u0403\",\n                  \"gjcy\": \"\\u0453\",\n                  \"gla\": \"\\u2AA5\",\n                  \"gl\": \"\\u2277\",\n                  \"glE\": \"\\u2A92\",\n                  \"glj\": \"\\u2AA4\",\n                  \"gnap\": \"\\u2A8A\",\n                  \"gnapprox\": \"\\u2A8A\",\n                  \"gne\": \"\\u2A88\",\n                  \"gnE\": \"\\u2269\",\n                  \"gneq\": \"\\u2A88\",\n                  \"gneqq\": \"\\u2269\",\n                  \"gnsim\": \"\\u22E7\",\n                  \"Gopf\": \"\\uD835\\uDD3E\",\n                  \"gopf\": \"\\uD835\\uDD58\",\n                  \"grave\": \"`\",\n                  \"GreaterEqual\": \"\\u2265\",\n                  \"GreaterEqualLess\": \"\\u22DB\",\n                  \"GreaterFullEqual\": \"\\u2267\",\n                  \"GreaterGreater\": \"\\u2AA2\",\n                  \"GreaterLess\": \"\\u2277\",\n                  \"GreaterSlantEqual\": \"\\u2A7E\",\n                  \"GreaterTilde\": \"\\u2273\",\n                  \"Gscr\": \"\\uD835\\uDCA2\",\n                  \"gscr\": \"\\u210A\",\n                  \"gsim\": \"\\u2273\",\n                  \"gsime\": \"\\u2A8E\",\n                  \"gsiml\": \"\\u2A90\",\n                  \"gtcc\": \"\\u2AA7\",\n                  \"gtcir\": \"\\u2A7A\",\n                  \"gt\": \">\",\n                  \"GT\": \">\",\n                  \"Gt\": \"\\u226B\",\n                  \"gtdot\": \"\\u22D7\",\n                  \"gtlPar\": \"\\u2995\",\n                  \"gtquest\": \"\\u2A7C\",\n                  \"gtrapprox\": \"\\u2A86\",\n                  \"gtrarr\": \"\\u2978\",\n                  \"gtrdot\": \"\\u22D7\",\n                  \"gtreqless\": \"\\u22DB\",\n                  \"gtreqqless\": \"\\u2A8C\",\n                  \"gtrless\": \"\\u2277\",\n                  \"gtrsim\": \"\\u2273\",\n                  \"gvertneqq\": \"\\u2269\\uFE00\",\n                  \"gvnE\": \"\\u2269\\uFE00\",\n                  \"Hacek\": \"\\u02C7\",\n                  \"hairsp\": \"\\u200A\",\n                  \"half\": \"\\xBD\",\n                  \"hamilt\": \"\\u210B\",\n                  \"HARDcy\": \"\\u042A\",\n                  \"hardcy\": \"\\u044A\",\n                  \"harrcir\": \"\\u2948\",\n                  \"harr\": \"\\u2194\",\n                  \"hArr\": \"\\u21D4\",\n                  \"harrw\": \"\\u21AD\",\n                  \"Hat\": \"^\",\n                  \"hbar\": \"\\u210F\",\n                  \"Hcirc\": \"\\u0124\",\n                  \"hcirc\": \"\\u0125\",\n                  \"hearts\": \"\\u2665\",\n                  \"heartsuit\": \"\\u2665\",\n                  \"hellip\": \"\\u2026\",\n                  \"hercon\": \"\\u22B9\",\n                  \"hfr\": \"\\uD835\\uDD25\",\n                  \"Hfr\": \"\\u210C\",\n                  \"HilbertSpace\": \"\\u210B\",\n                  \"hksearow\": \"\\u2925\",\n                  \"hkswarow\": \"\\u2926\",\n                  \"hoarr\": \"\\u21FF\",\n                  \"homtht\": \"\\u223B\",\n                  \"hookleftarrow\": \"\\u21A9\",\n                  \"hookrightarrow\": \"\\u21AA\",\n                  \"hopf\": \"\\uD835\\uDD59\",\n                  \"Hopf\": \"\\u210D\",\n                  \"horbar\": \"\\u2015\",\n                  \"HorizontalLine\": \"\\u2500\",\n                  \"hscr\": \"\\uD835\\uDCBD\",\n                  \"Hscr\": \"\\u210B\",\n                  \"hslash\": \"\\u210F\",\n                  \"Hstrok\": \"\\u0126\",\n                  \"hstrok\": \"\\u0127\",\n                  \"HumpDownHump\": \"\\u224E\",\n                  \"HumpEqual\": \"\\u224F\",\n                  \"hybull\": \"\\u2043\",\n                  \"hyphen\": \"\\u2010\",\n                  \"Iacute\": \"\\xCD\",\n                  \"iacute\": \"\\xED\",\n                  \"ic\": \"\\u2063\",\n                  \"Icirc\": \"\\xCE\",\n                  \"icirc\": \"\\xEE\",\n                  \"Icy\": \"\\u0418\",\n                  \"icy\": \"\\u0438\",\n                  \"Idot\": \"\\u0130\",\n                  \"IEcy\": \"\\u0415\",\n                  \"iecy\": \"\\u0435\",\n                  \"iexcl\": \"\\xA1\",\n                  \"iff\": \"\\u21D4\",\n                  \"ifr\": \"\\uD835\\uDD26\",\n                  \"Ifr\": \"\\u2111\",\n                  \"Igrave\": \"\\xCC\",\n                  \"igrave\": \"\\xEC\",\n                  \"ii\": \"\\u2148\",\n                  \"iiiint\": \"\\u2A0C\",\n                  \"iiint\": \"\\u222D\",\n                  \"iinfin\": \"\\u29DC\",\n                  \"iiota\": \"\\u2129\",\n                  \"IJlig\": \"\\u0132\",\n                  \"ijlig\": \"\\u0133\",\n                  \"Imacr\": \"\\u012A\",\n                  \"imacr\": \"\\u012B\",\n                  \"image\": \"\\u2111\",\n                  \"ImaginaryI\": \"\\u2148\",\n                  \"imagline\": \"\\u2110\",\n                  \"imagpart\": \"\\u2111\",\n                  \"imath\": \"\\u0131\",\n                  \"Im\": \"\\u2111\",\n                  \"imof\": \"\\u22B7\",\n                  \"imped\": \"\\u01B5\",\n                  \"Implies\": \"\\u21D2\",\n                  \"incare\": \"\\u2105\",\n                  \"in\": \"\\u2208\",\n                  \"infin\": \"\\u221E\",\n                  \"infintie\": \"\\u29DD\",\n                  \"inodot\": \"\\u0131\",\n                  \"intcal\": \"\\u22BA\",\n                  \"int\": \"\\u222B\",\n                  \"Int\": \"\\u222C\",\n                  \"integers\": \"\\u2124\",\n                  \"Integral\": \"\\u222B\",\n                  \"intercal\": \"\\u22BA\",\n                  \"Intersection\": \"\\u22C2\",\n                  \"intlarhk\": \"\\u2A17\",\n                  \"intprod\": \"\\u2A3C\",\n                  \"InvisibleComma\": \"\\u2063\",\n                  \"InvisibleTimes\": \"\\u2062\",\n                  \"IOcy\": \"\\u0401\",\n                  \"iocy\": \"\\u0451\",\n                  \"Iogon\": \"\\u012E\",\n                  \"iogon\": \"\\u012F\",\n                  \"Iopf\": \"\\uD835\\uDD40\",\n                  \"iopf\": \"\\uD835\\uDD5A\",\n                  \"Iota\": \"\\u0399\",\n                  \"iota\": \"\\u03B9\",\n                  \"iprod\": \"\\u2A3C\",\n                  \"iquest\": \"\\xBF\",\n                  \"iscr\": \"\\uD835\\uDCBE\",\n                  \"Iscr\": \"\\u2110\",\n                  \"isin\": \"\\u2208\",\n                  \"isindot\": \"\\u22F5\",\n                  \"isinE\": \"\\u22F9\",\n                  \"isins\": \"\\u22F4\",\n                  \"isinsv\": \"\\u22F3\",\n                  \"isinv\": \"\\u2208\",\n                  \"it\": \"\\u2062\",\n                  \"Itilde\": \"\\u0128\",\n                  \"itilde\": \"\\u0129\",\n                  \"Iukcy\": \"\\u0406\",\n                  \"iukcy\": \"\\u0456\",\n                  \"Iuml\": \"\\xCF\",\n                  \"iuml\": \"\\xEF\",\n                  \"Jcirc\": \"\\u0134\",\n                  \"jcirc\": \"\\u0135\",\n                  \"Jcy\": \"\\u0419\",\n                  \"jcy\": \"\\u0439\",\n                  \"Jfr\": \"\\uD835\\uDD0D\",\n                  \"jfr\": \"\\uD835\\uDD27\",\n                  \"jmath\": \"\\u0237\",\n                  \"Jopf\": \"\\uD835\\uDD41\",\n                  \"jopf\": \"\\uD835\\uDD5B\",\n                  \"Jscr\": \"\\uD835\\uDCA5\",\n                  \"jscr\": \"\\uD835\\uDCBF\",\n                  \"Jsercy\": \"\\u0408\",\n                  \"jsercy\": \"\\u0458\",\n                  \"Jukcy\": \"\\u0404\",\n                  \"jukcy\": \"\\u0454\",\n                  \"Kappa\": \"\\u039A\",\n                  \"kappa\": \"\\u03BA\",\n                  \"kappav\": \"\\u03F0\",\n                  \"Kcedil\": \"\\u0136\",\n                  \"kcedil\": \"\\u0137\",\n                  \"Kcy\": \"\\u041A\",\n                  \"kcy\": \"\\u043A\",\n                  \"Kfr\": \"\\uD835\\uDD0E\",\n                  \"kfr\": \"\\uD835\\uDD28\",\n                  \"kgreen\": \"\\u0138\",\n                  \"KHcy\": \"\\u0425\",\n                  \"khcy\": \"\\u0445\",\n                  \"KJcy\": \"\\u040C\",\n                  \"kjcy\": \"\\u045C\",\n                  \"Kopf\": \"\\uD835\\uDD42\",\n                  \"kopf\": \"\\uD835\\uDD5C\",\n                  \"Kscr\": \"\\uD835\\uDCA6\",\n                  \"kscr\": \"\\uD835\\uDCC0\",\n                  \"lAarr\": \"\\u21DA\",\n                  \"Lacute\": \"\\u0139\",\n                  \"lacute\": \"\\u013A\",\n                  \"laemptyv\": \"\\u29B4\",\n                  \"lagran\": \"\\u2112\",\n                  \"Lambda\": \"\\u039B\",\n                  \"lambda\": \"\\u03BB\",\n                  \"lang\": \"\\u27E8\",\n                  \"Lang\": \"\\u27EA\",\n                  \"langd\": \"\\u2991\",\n                  \"langle\": \"\\u27E8\",\n                  \"lap\": \"\\u2A85\",\n                  \"Laplacetrf\": \"\\u2112\",\n                  \"laquo\": \"\\xAB\",\n                  \"larrb\": \"\\u21E4\",\n                  \"larrbfs\": \"\\u291F\",\n                  \"larr\": \"\\u2190\",\n                  \"Larr\": \"\\u219E\",\n                  \"lArr\": \"\\u21D0\",\n                  \"larrfs\": \"\\u291D\",\n                  \"larrhk\": \"\\u21A9\",\n                  \"larrlp\": \"\\u21AB\",\n                  \"larrpl\": \"\\u2939\",\n                  \"larrsim\": \"\\u2973\",\n                  \"larrtl\": \"\\u21A2\",\n                  \"latail\": \"\\u2919\",\n                  \"lAtail\": \"\\u291B\",\n                  \"lat\": \"\\u2AAB\",\n                  \"late\": \"\\u2AAD\",\n                  \"lates\": \"\\u2AAD\\uFE00\",\n                  \"lbarr\": \"\\u290C\",\n                  \"lBarr\": \"\\u290E\",\n                  \"lbbrk\": \"\\u2772\",\n                  \"lbrace\": \"{\",\n                  \"lbrack\": \"[\",\n                  \"lbrke\": \"\\u298B\",\n                  \"lbrksld\": \"\\u298F\",\n                  \"lbrkslu\": \"\\u298D\",\n                  \"Lcaron\": \"\\u013D\",\n                  \"lcaron\": \"\\u013E\",\n                  \"Lcedil\": \"\\u013B\",\n                  \"lcedil\": \"\\u013C\",\n                  \"lceil\": \"\\u2308\",\n                  \"lcub\": \"{\",\n                  \"Lcy\": \"\\u041B\",\n                  \"lcy\": \"\\u043B\",\n                  \"ldca\": \"\\u2936\",\n                  \"ldquo\": \"\\u201C\",\n                  \"ldquor\": \"\\u201E\",\n                  \"ldrdhar\": \"\\u2967\",\n                  \"ldrushar\": \"\\u294B\",\n                  \"ldsh\": \"\\u21B2\",\n                  \"le\": \"\\u2264\",\n                  \"lE\": \"\\u2266\",\n                  \"LeftAngleBracket\": \"\\u27E8\",\n                  \"LeftArrowBar\": \"\\u21E4\",\n                  \"leftarrow\": \"\\u2190\",\n                  \"LeftArrow\": \"\\u2190\",\n                  \"Leftarrow\": \"\\u21D0\",\n                  \"LeftArrowRightArrow\": \"\\u21C6\",\n                  \"leftarrowtail\": \"\\u21A2\",\n                  \"LeftCeiling\": \"\\u2308\",\n                  \"LeftDoubleBracket\": \"\\u27E6\",\n                  \"LeftDownTeeVector\": \"\\u2961\",\n                  \"LeftDownVectorBar\": \"\\u2959\",\n                  \"LeftDownVector\": \"\\u21C3\",\n                  \"LeftFloor\": \"\\u230A\",\n                  \"leftharpoondown\": \"\\u21BD\",\n                  \"leftharpoonup\": \"\\u21BC\",\n                  \"leftleftarrows\": \"\\u21C7\",\n                  \"leftrightarrow\": \"\\u2194\",\n                  \"LeftRightArrow\": \"\\u2194\",\n                  \"Leftrightarrow\": \"\\u21D4\",\n                  \"leftrightarrows\": \"\\u21C6\",\n                  \"leftrightharpoons\": \"\\u21CB\",\n                  \"leftrightsquigarrow\": \"\\u21AD\",\n                  \"LeftRightVector\": \"\\u294E\",\n                  \"LeftTeeArrow\": \"\\u21A4\",\n                  \"LeftTee\": \"\\u22A3\",\n                  \"LeftTeeVector\": \"\\u295A\",\n                  \"leftthreetimes\": \"\\u22CB\",\n                  \"LeftTriangleBar\": \"\\u29CF\",\n                  \"LeftTriangle\": \"\\u22B2\",\n                  \"LeftTriangleEqual\": \"\\u22B4\",\n                  \"LeftUpDownVector\": \"\\u2951\",\n                  \"LeftUpTeeVector\": \"\\u2960\",\n                  \"LeftUpVectorBar\": \"\\u2958\",\n                  \"LeftUpVector\": \"\\u21BF\",\n                  \"LeftVectorBar\": \"\\u2952\",\n                  \"LeftVector\": \"\\u21BC\",\n                  \"lEg\": \"\\u2A8B\",\n                  \"leg\": \"\\u22DA\",\n                  \"leq\": \"\\u2264\",\n                  \"leqq\": \"\\u2266\",\n                  \"leqslant\": \"\\u2A7D\",\n                  \"lescc\": \"\\u2AA8\",\n                  \"les\": \"\\u2A7D\",\n                  \"lesdot\": \"\\u2A7F\",\n                  \"lesdoto\": \"\\u2A81\",\n                  \"lesdotor\": \"\\u2A83\",\n                  \"lesg\": \"\\u22DA\\uFE00\",\n                  \"lesges\": \"\\u2A93\",\n                  \"lessapprox\": \"\\u2A85\",\n                  \"lessdot\": \"\\u22D6\",\n                  \"lesseqgtr\": \"\\u22DA\",\n                  \"lesseqqgtr\": \"\\u2A8B\",\n                  \"LessEqualGreater\": \"\\u22DA\",\n                  \"LessFullEqual\": \"\\u2266\",\n                  \"LessGreater\": \"\\u2276\",\n                  \"lessgtr\": \"\\u2276\",\n                  \"LessLess\": \"\\u2AA1\",\n                  \"lesssim\": \"\\u2272\",\n                  \"LessSlantEqual\": \"\\u2A7D\",\n                  \"LessTilde\": \"\\u2272\",\n                  \"lfisht\": \"\\u297C\",\n                  \"lfloor\": \"\\u230A\",\n                  \"Lfr\": \"\\uD835\\uDD0F\",\n                  \"lfr\": \"\\uD835\\uDD29\",\n                  \"lg\": \"\\u2276\",\n                  \"lgE\": \"\\u2A91\",\n                  \"lHar\": \"\\u2962\",\n                  \"lhard\": \"\\u21BD\",\n                  \"lharu\": \"\\u21BC\",\n                  \"lharul\": \"\\u296A\",\n                  \"lhblk\": \"\\u2584\",\n                  \"LJcy\": \"\\u0409\",\n                  \"ljcy\": \"\\u0459\",\n                  \"llarr\": \"\\u21C7\",\n                  \"ll\": \"\\u226A\",\n                  \"Ll\": \"\\u22D8\",\n                  \"llcorner\": \"\\u231E\",\n                  \"Lleftarrow\": \"\\u21DA\",\n                  \"llhard\": \"\\u296B\",\n                  \"lltri\": \"\\u25FA\",\n                  \"Lmidot\": \"\\u013F\",\n                  \"lmidot\": \"\\u0140\",\n                  \"lmoustache\": \"\\u23B0\",\n                  \"lmoust\": \"\\u23B0\",\n                  \"lnap\": \"\\u2A89\",\n                  \"lnapprox\": \"\\u2A89\",\n                  \"lne\": \"\\u2A87\",\n                  \"lnE\": \"\\u2268\",\n                  \"lneq\": \"\\u2A87\",\n                  \"lneqq\": \"\\u2268\",\n                  \"lnsim\": \"\\u22E6\",\n                  \"loang\": \"\\u27EC\",\n                  \"loarr\": \"\\u21FD\",\n                  \"lobrk\": \"\\u27E6\",\n                  \"longleftarrow\": \"\\u27F5\",\n                  \"LongLeftArrow\": \"\\u27F5\",\n                  \"Longleftarrow\": \"\\u27F8\",\n                  \"longleftrightarrow\": \"\\u27F7\",\n                  \"LongLeftRightArrow\": \"\\u27F7\",\n                  \"Longleftrightarrow\": \"\\u27FA\",\n                  \"longmapsto\": \"\\u27FC\",\n                  \"longrightarrow\": \"\\u27F6\",\n                  \"LongRightArrow\": \"\\u27F6\",\n                  \"Longrightarrow\": \"\\u27F9\",\n                  \"looparrowleft\": \"\\u21AB\",\n                  \"looparrowright\": \"\\u21AC\",\n                  \"lopar\": \"\\u2985\",\n                  \"Lopf\": \"\\uD835\\uDD43\",\n                  \"lopf\": \"\\uD835\\uDD5D\",\n                  \"loplus\": \"\\u2A2D\",\n                  \"lotimes\": \"\\u2A34\",\n                  \"lowast\": \"\\u2217\",\n                  \"lowbar\": \"_\",\n                  \"LowerLeftArrow\": \"\\u2199\",\n                  \"LowerRightArrow\": \"\\u2198\",\n                  \"loz\": \"\\u25CA\",\n                  \"lozenge\": \"\\u25CA\",\n                  \"lozf\": \"\\u29EB\",\n                  \"lpar\": \"(\",\n                  \"lparlt\": \"\\u2993\",\n                  \"lrarr\": \"\\u21C6\",\n                  \"lrcorner\": \"\\u231F\",\n                  \"lrhar\": \"\\u21CB\",\n                  \"lrhard\": \"\\u296D\",\n                  \"lrm\": \"\\u200E\",\n                  \"lrtri\": \"\\u22BF\",\n                  \"lsaquo\": \"\\u2039\",\n                  \"lscr\": \"\\uD835\\uDCC1\",\n                  \"Lscr\": \"\\u2112\",\n                  \"lsh\": \"\\u21B0\",\n                  \"Lsh\": \"\\u21B0\",\n                  \"lsim\": \"\\u2272\",\n                  \"lsime\": \"\\u2A8D\",\n                  \"lsimg\": \"\\u2A8F\",\n                  \"lsqb\": \"[\",\n                  \"lsquo\": \"\\u2018\",\n                  \"lsquor\": \"\\u201A\",\n                  \"Lstrok\": \"\\u0141\",\n                  \"lstrok\": \"\\u0142\",\n                  \"ltcc\": \"\\u2AA6\",\n                  \"ltcir\": \"\\u2A79\",\n                  \"lt\": \"<\",\n                  \"LT\": \"<\",\n                  \"Lt\": \"\\u226A\",\n                  \"ltdot\": \"\\u22D6\",\n                  \"lthree\": \"\\u22CB\",\n                  \"ltimes\": \"\\u22C9\",\n                  \"ltlarr\": \"\\u2976\",\n                  \"ltquest\": \"\\u2A7B\",\n                  \"ltri\": \"\\u25C3\",\n                  \"ltrie\": \"\\u22B4\",\n                  \"ltrif\": \"\\u25C2\",\n                  \"ltrPar\": \"\\u2996\",\n                  \"lurdshar\": \"\\u294A\",\n                  \"luruhar\": \"\\u2966\",\n                  \"lvertneqq\": \"\\u2268\\uFE00\",\n                  \"lvnE\": \"\\u2268\\uFE00\",\n                  \"macr\": \"\\xAF\",\n                  \"male\": \"\\u2642\",\n                  \"malt\": \"\\u2720\",\n                  \"maltese\": \"\\u2720\",\n                  \"Map\": \"\\u2905\",\n                  \"map\": \"\\u21A6\",\n                  \"mapsto\": \"\\u21A6\",\n                  \"mapstodown\": \"\\u21A7\",\n                  \"mapstoleft\": \"\\u21A4\",\n                  \"mapstoup\": \"\\u21A5\",\n                  \"marker\": \"\\u25AE\",\n                  \"mcomma\": \"\\u2A29\",\n                  \"Mcy\": \"\\u041C\",\n                  \"mcy\": \"\\u043C\",\n                  \"mdash\": \"\\u2014\",\n                  \"mDDot\": \"\\u223A\",\n                  \"measuredangle\": \"\\u2221\",\n                  \"MediumSpace\": \"\\u205F\",\n                  \"Mellintrf\": \"\\u2133\",\n                  \"Mfr\": \"\\uD835\\uDD10\",\n                  \"mfr\": \"\\uD835\\uDD2A\",\n                  \"mho\": \"\\u2127\",\n                  \"micro\": \"\\xB5\",\n                  \"midast\": \"*\",\n                  \"midcir\": \"\\u2AF0\",\n                  \"mid\": \"\\u2223\",\n                  \"middot\": \"\\xB7\",\n                  \"minusb\": \"\\u229F\",\n                  \"minus\": \"\\u2212\",\n                  \"minusd\": \"\\u2238\",\n                  \"minusdu\": \"\\u2A2A\",\n                  \"MinusPlus\": \"\\u2213\",\n                  \"mlcp\": \"\\u2ADB\",\n                  \"mldr\": \"\\u2026\",\n                  \"mnplus\": \"\\u2213\",\n                  \"models\": \"\\u22A7\",\n                  \"Mopf\": \"\\uD835\\uDD44\",\n                  \"mopf\": \"\\uD835\\uDD5E\",\n                  \"mp\": \"\\u2213\",\n                  \"mscr\": \"\\uD835\\uDCC2\",\n                  \"Mscr\": \"\\u2133\",\n                  \"mstpos\": \"\\u223E\",\n                  \"Mu\": \"\\u039C\",\n                  \"mu\": \"\\u03BC\",\n                  \"multimap\": \"\\u22B8\",\n                  \"mumap\": \"\\u22B8\",\n                  \"nabla\": \"\\u2207\",\n                  \"Nacute\": \"\\u0143\",\n                  \"nacute\": \"\\u0144\",\n                  \"nang\": \"\\u2220\\u20D2\",\n                  \"nap\": \"\\u2249\",\n                  \"napE\": \"\\u2A70\\u0338\",\n                  \"napid\": \"\\u224B\\u0338\",\n                  \"napos\": \"\\u0149\",\n                  \"napprox\": \"\\u2249\",\n                  \"natural\": \"\\u266E\",\n                  \"naturals\": \"\\u2115\",\n                  \"natur\": \"\\u266E\",\n                  \"nbsp\": \"\\xA0\",\n                  \"nbump\": \"\\u224E\\u0338\",\n                  \"nbumpe\": \"\\u224F\\u0338\",\n                  \"ncap\": \"\\u2A43\",\n                  \"Ncaron\": \"\\u0147\",\n                  \"ncaron\": \"\\u0148\",\n                  \"Ncedil\": \"\\u0145\",\n                  \"ncedil\": \"\\u0146\",\n                  \"ncong\": \"\\u2247\",\n                  \"ncongdot\": \"\\u2A6D\\u0338\",\n                  \"ncup\": \"\\u2A42\",\n                  \"Ncy\": \"\\u041D\",\n                  \"ncy\": \"\\u043D\",\n                  \"ndash\": \"\\u2013\",\n                  \"nearhk\": \"\\u2924\",\n                  \"nearr\": \"\\u2197\",\n                  \"neArr\": \"\\u21D7\",\n                  \"nearrow\": \"\\u2197\",\n                  \"ne\": \"\\u2260\",\n                  \"nedot\": \"\\u2250\\u0338\",\n                  \"NegativeMediumSpace\": \"\\u200B\",\n                  \"NegativeThickSpace\": \"\\u200B\",\n                  \"NegativeThinSpace\": \"\\u200B\",\n                  \"NegativeVeryThinSpace\": \"\\u200B\",\n                  \"nequiv\": \"\\u2262\",\n                  \"nesear\": \"\\u2928\",\n                  \"nesim\": \"\\u2242\\u0338\",\n                  \"NestedGreaterGreater\": \"\\u226B\",\n                  \"NestedLessLess\": \"\\u226A\",\n                  \"NewLine\": \"\\n\",\n                  \"nexist\": \"\\u2204\",\n                  \"nexists\": \"\\u2204\",\n                  \"Nfr\": \"\\uD835\\uDD11\",\n                  \"nfr\": \"\\uD835\\uDD2B\",\n                  \"ngE\": \"\\u2267\\u0338\",\n                  \"nge\": \"\\u2271\",\n                  \"ngeq\": \"\\u2271\",\n                  \"ngeqq\": \"\\u2267\\u0338\",\n                  \"ngeqslant\": \"\\u2A7E\\u0338\",\n                  \"nges\": \"\\u2A7E\\u0338\",\n                  \"nGg\": \"\\u22D9\\u0338\",\n                  \"ngsim\": \"\\u2275\",\n                  \"nGt\": \"\\u226B\\u20D2\",\n                  \"ngt\": \"\\u226F\",\n                  \"ngtr\": \"\\u226F\",\n                  \"nGtv\": \"\\u226B\\u0338\",\n                  \"nharr\": \"\\u21AE\",\n                  \"nhArr\": \"\\u21CE\",\n                  \"nhpar\": \"\\u2AF2\",\n                  \"ni\": \"\\u220B\",\n                  \"nis\": \"\\u22FC\",\n                  \"nisd\": \"\\u22FA\",\n                  \"niv\": \"\\u220B\",\n                  \"NJcy\": \"\\u040A\",\n                  \"njcy\": \"\\u045A\",\n                  \"nlarr\": \"\\u219A\",\n                  \"nlArr\": \"\\u21CD\",\n                  \"nldr\": \"\\u2025\",\n                  \"nlE\": \"\\u2266\\u0338\",\n                  \"nle\": \"\\u2270\",\n                  \"nleftarrow\": \"\\u219A\",\n                  \"nLeftarrow\": \"\\u21CD\",\n                  \"nleftrightarrow\": \"\\u21AE\",\n                  \"nLeftrightarrow\": \"\\u21CE\",\n                  \"nleq\": \"\\u2270\",\n                  \"nleqq\": \"\\u2266\\u0338\",\n                  \"nleqslant\": \"\\u2A7D\\u0338\",\n                  \"nles\": \"\\u2A7D\\u0338\",\n                  \"nless\": \"\\u226E\",\n                  \"nLl\": \"\\u22D8\\u0338\",\n                  \"nlsim\": \"\\u2274\",\n                  \"nLt\": \"\\u226A\\u20D2\",\n                  \"nlt\": \"\\u226E\",\n                  \"nltri\": \"\\u22EA\",\n                  \"nltrie\": \"\\u22EC\",\n                  \"nLtv\": \"\\u226A\\u0338\",\n                  \"nmid\": \"\\u2224\",\n                  \"NoBreak\": \"\\u2060\",\n                  \"NonBreakingSpace\": \"\\xA0\",\n                  \"nopf\": \"\\uD835\\uDD5F\",\n                  \"Nopf\": \"\\u2115\",\n                  \"Not\": \"\\u2AEC\",\n                  \"not\": \"\\xAC\",\n                  \"NotCongruent\": \"\\u2262\",\n                  \"NotCupCap\": \"\\u226D\",\n                  \"NotDoubleVerticalBar\": \"\\u2226\",\n                  \"NotElement\": \"\\u2209\",\n                  \"NotEqual\": \"\\u2260\",\n                  \"NotEqualTilde\": \"\\u2242\\u0338\",\n                  \"NotExists\": \"\\u2204\",\n                  \"NotGreater\": \"\\u226F\",\n                  \"NotGreaterEqual\": \"\\u2271\",\n                  \"NotGreaterFullEqual\": \"\\u2267\\u0338\",\n                  \"NotGreaterGreater\": \"\\u226B\\u0338\",\n                  \"NotGreaterLess\": \"\\u2279\",\n                  \"NotGreaterSlantEqual\": \"\\u2A7E\\u0338\",\n                  \"NotGreaterTilde\": \"\\u2275\",\n                  \"NotHumpDownHump\": \"\\u224E\\u0338\",\n                  \"NotHumpEqual\": \"\\u224F\\u0338\",\n                  \"notin\": \"\\u2209\",\n                  \"notindot\": \"\\u22F5\\u0338\",\n                  \"notinE\": \"\\u22F9\\u0338\",\n                  \"notinva\": \"\\u2209\",\n                  \"notinvb\": \"\\u22F7\",\n                  \"notinvc\": \"\\u22F6\",\n                  \"NotLeftTriangleBar\": \"\\u29CF\\u0338\",\n                  \"NotLeftTriangle\": \"\\u22EA\",\n                  \"NotLeftTriangleEqual\": \"\\u22EC\",\n                  \"NotLess\": \"\\u226E\",\n                  \"NotLessEqual\": \"\\u2270\",\n                  \"NotLessGreater\": \"\\u2278\",\n                  \"NotLessLess\": \"\\u226A\\u0338\",\n                  \"NotLessSlantEqual\": \"\\u2A7D\\u0338\",\n                  \"NotLessTilde\": \"\\u2274\",\n                  \"NotNestedGreaterGreater\": \"\\u2AA2\\u0338\",\n                  \"NotNestedLessLess\": \"\\u2AA1\\u0338\",\n                  \"notni\": \"\\u220C\",\n                  \"notniva\": \"\\u220C\",\n                  \"notnivb\": \"\\u22FE\",\n                  \"notnivc\": \"\\u22FD\",\n                  \"NotPrecedes\": \"\\u2280\",\n                  \"NotPrecedesEqual\": \"\\u2AAF\\u0338\",\n                  \"NotPrecedesSlantEqual\": \"\\u22E0\",\n                  \"NotReverseElement\": \"\\u220C\",\n                  \"NotRightTriangleBar\": \"\\u29D0\\u0338\",\n                  \"NotRightTriangle\": \"\\u22EB\",\n                  \"NotRightTriangleEqual\": \"\\u22ED\",\n                  \"NotSquareSubset\": \"\\u228F\\u0338\",\n                  \"NotSquareSubsetEqual\": \"\\u22E2\",\n                  \"NotSquareSuperset\": \"\\u2290\\u0338\",\n                  \"NotSquareSupersetEqual\": \"\\u22E3\",\n                  \"NotSubset\": \"\\u2282\\u20D2\",\n                  \"NotSubsetEqual\": \"\\u2288\",\n                  \"NotSucceeds\": \"\\u2281\",\n                  \"NotSucceedsEqual\": \"\\u2AB0\\u0338\",\n                  \"NotSucceedsSlantEqual\": \"\\u22E1\",\n                  \"NotSucceedsTilde\": \"\\u227F\\u0338\",\n                  \"NotSuperset\": \"\\u2283\\u20D2\",\n                  \"NotSupersetEqual\": \"\\u2289\",\n                  \"NotTilde\": \"\\u2241\",\n                  \"NotTildeEqual\": \"\\u2244\",\n                  \"NotTildeFullEqual\": \"\\u2247\",\n                  \"NotTildeTilde\": \"\\u2249\",\n                  \"NotVerticalBar\": \"\\u2224\",\n                  \"nparallel\": \"\\u2226\",\n                  \"npar\": \"\\u2226\",\n                  \"nparsl\": \"\\u2AFD\\u20E5\",\n                  \"npart\": \"\\u2202\\u0338\",\n                  \"npolint\": \"\\u2A14\",\n                  \"npr\": \"\\u2280\",\n                  \"nprcue\": \"\\u22E0\",\n                  \"nprec\": \"\\u2280\",\n                  \"npreceq\": \"\\u2AAF\\u0338\",\n                  \"npre\": \"\\u2AAF\\u0338\",\n                  \"nrarrc\": \"\\u2933\\u0338\",\n                  \"nrarr\": \"\\u219B\",\n                  \"nrArr\": \"\\u21CF\",\n                  \"nrarrw\": \"\\u219D\\u0338\",\n                  \"nrightarrow\": \"\\u219B\",\n                  \"nRightarrow\": \"\\u21CF\",\n                  \"nrtri\": \"\\u22EB\",\n                  \"nrtrie\": \"\\u22ED\",\n                  \"nsc\": \"\\u2281\",\n                  \"nsccue\": \"\\u22E1\",\n                  \"nsce\": \"\\u2AB0\\u0338\",\n                  \"Nscr\": \"\\uD835\\uDCA9\",\n                  \"nscr\": \"\\uD835\\uDCC3\",\n                  \"nshortmid\": \"\\u2224\",\n                  \"nshortparallel\": \"\\u2226\",\n                  \"nsim\": \"\\u2241\",\n                  \"nsime\": \"\\u2244\",\n                  \"nsimeq\": \"\\u2244\",\n                  \"nsmid\": \"\\u2224\",\n                  \"nspar\": \"\\u2226\",\n                  \"nsqsube\": \"\\u22E2\",\n                  \"nsqsupe\": \"\\u22E3\",\n                  \"nsub\": \"\\u2284\",\n                  \"nsubE\": \"\\u2AC5\\u0338\",\n                  \"nsube\": \"\\u2288\",\n                  \"nsubset\": \"\\u2282\\u20D2\",\n                  \"nsubseteq\": \"\\u2288\",\n                  \"nsubseteqq\": \"\\u2AC5\\u0338\",\n                  \"nsucc\": \"\\u2281\",\n                  \"nsucceq\": \"\\u2AB0\\u0338\",\n                  \"nsup\": \"\\u2285\",\n                  \"nsupE\": \"\\u2AC6\\u0338\",\n                  \"nsupe\": \"\\u2289\",\n                  \"nsupset\": \"\\u2283\\u20D2\",\n                  \"nsupseteq\": \"\\u2289\",\n                  \"nsupseteqq\": \"\\u2AC6\\u0338\",\n                  \"ntgl\": \"\\u2279\",\n                  \"Ntilde\": \"\\xD1\",\n                  \"ntilde\": \"\\xF1\",\n                  \"ntlg\": \"\\u2278\",\n                  \"ntriangleleft\": \"\\u22EA\",\n                  \"ntrianglelefteq\": \"\\u22EC\",\n                  \"ntriangleright\": \"\\u22EB\",\n                  \"ntrianglerighteq\": \"\\u22ED\",\n                  \"Nu\": \"\\u039D\",\n                  \"nu\": \"\\u03BD\",\n                  \"num\": \"#\",\n                  \"numero\": \"\\u2116\",\n                  \"numsp\": \"\\u2007\",\n                  \"nvap\": \"\\u224D\\u20D2\",\n                  \"nvdash\": \"\\u22AC\",\n                  \"nvDash\": \"\\u22AD\",\n                  \"nVdash\": \"\\u22AE\",\n                  \"nVDash\": \"\\u22AF\",\n                  \"nvge\": \"\\u2265\\u20D2\",\n                  \"nvgt\": \">\\u20D2\",\n                  \"nvHarr\": \"\\u2904\",\n                  \"nvinfin\": \"\\u29DE\",\n                  \"nvlArr\": \"\\u2902\",\n                  \"nvle\": \"\\u2264\\u20D2\",\n                  \"nvlt\": \"<\\u20D2\",\n                  \"nvltrie\": \"\\u22B4\\u20D2\",\n                  \"nvrArr\": \"\\u2903\",\n                  \"nvrtrie\": \"\\u22B5\\u20D2\",\n                  \"nvsim\": \"\\u223C\\u20D2\",\n                  \"nwarhk\": \"\\u2923\",\n                  \"nwarr\": \"\\u2196\",\n                  \"nwArr\": \"\\u21D6\",\n                  \"nwarrow\": \"\\u2196\",\n                  \"nwnear\": \"\\u2927\",\n                  \"Oacute\": \"\\xD3\",\n                  \"oacute\": \"\\xF3\",\n                  \"oast\": \"\\u229B\",\n                  \"Ocirc\": \"\\xD4\",\n                  \"ocirc\": \"\\xF4\",\n                  \"ocir\": \"\\u229A\",\n                  \"Ocy\": \"\\u041E\",\n                  \"ocy\": \"\\u043E\",\n                  \"odash\": \"\\u229D\",\n                  \"Odblac\": \"\\u0150\",\n                  \"odblac\": \"\\u0151\",\n                  \"odiv\": \"\\u2A38\",\n                  \"odot\": \"\\u2299\",\n                  \"odsold\": \"\\u29BC\",\n                  \"OElig\": \"\\u0152\",\n                  \"oelig\": \"\\u0153\",\n                  \"ofcir\": \"\\u29BF\",\n                  \"Ofr\": \"\\uD835\\uDD12\",\n                  \"ofr\": \"\\uD835\\uDD2C\",\n                  \"ogon\": \"\\u02DB\",\n                  \"Ograve\": \"\\xD2\",\n                  \"ograve\": \"\\xF2\",\n                  \"ogt\": \"\\u29C1\",\n                  \"ohbar\": \"\\u29B5\",\n                  \"ohm\": \"\\u03A9\",\n                  \"oint\": \"\\u222E\",\n                  \"olarr\": \"\\u21BA\",\n                  \"olcir\": \"\\u29BE\",\n                  \"olcross\": \"\\u29BB\",\n                  \"oline\": \"\\u203E\",\n                  \"olt\": \"\\u29C0\",\n                  \"Omacr\": \"\\u014C\",\n                  \"omacr\": \"\\u014D\",\n                  \"Omega\": \"\\u03A9\",\n                  \"omega\": \"\\u03C9\",\n                  \"Omicron\": \"\\u039F\",\n                  \"omicron\": \"\\u03BF\",\n                  \"omid\": \"\\u29B6\",\n                  \"ominus\": \"\\u2296\",\n                  \"Oopf\": \"\\uD835\\uDD46\",\n                  \"oopf\": \"\\uD835\\uDD60\",\n                  \"opar\": \"\\u29B7\",\n                  \"OpenCurlyDoubleQuote\": \"\\u201C\",\n                  \"OpenCurlyQuote\": \"\\u2018\",\n                  \"operp\": \"\\u29B9\",\n                  \"oplus\": \"\\u2295\",\n                  \"orarr\": \"\\u21BB\",\n                  \"Or\": \"\\u2A54\",\n                  \"or\": \"\\u2228\",\n                  \"ord\": \"\\u2A5D\",\n                  \"order\": \"\\u2134\",\n                  \"orderof\": \"\\u2134\",\n                  \"ordf\": \"\\xAA\",\n                  \"ordm\": \"\\xBA\",\n                  \"origof\": \"\\u22B6\",\n                  \"oror\": \"\\u2A56\",\n                  \"orslope\": \"\\u2A57\",\n                  \"orv\": \"\\u2A5B\",\n                  \"oS\": \"\\u24C8\",\n                  \"Oscr\": \"\\uD835\\uDCAA\",\n                  \"oscr\": \"\\u2134\",\n                  \"Oslash\": \"\\xD8\",\n                  \"oslash\": \"\\xF8\",\n                  \"osol\": \"\\u2298\",\n                  \"Otilde\": \"\\xD5\",\n                  \"otilde\": \"\\xF5\",\n                  \"otimesas\": \"\\u2A36\",\n                  \"Otimes\": \"\\u2A37\",\n                  \"otimes\": \"\\u2297\",\n                  \"Ouml\": \"\\xD6\",\n                  \"ouml\": \"\\xF6\",\n                  \"ovbar\": \"\\u233D\",\n                  \"OverBar\": \"\\u203E\",\n                  \"OverBrace\": \"\\u23DE\",\n                  \"OverBracket\": \"\\u23B4\",\n                  \"OverParenthesis\": \"\\u23DC\",\n                  \"para\": \"\\xB6\",\n                  \"parallel\": \"\\u2225\",\n                  \"par\": \"\\u2225\",\n                  \"parsim\": \"\\u2AF3\",\n                  \"parsl\": \"\\u2AFD\",\n                  \"part\": \"\\u2202\",\n                  \"PartialD\": \"\\u2202\",\n                  \"Pcy\": \"\\u041F\",\n                  \"pcy\": \"\\u043F\",\n                  \"percnt\": \"%\",\n                  \"period\": \".\",\n                  \"permil\": \"\\u2030\",\n                  \"perp\": \"\\u22A5\",\n                  \"pertenk\": \"\\u2031\",\n                  \"Pfr\": \"\\uD835\\uDD13\",\n                  \"pfr\": \"\\uD835\\uDD2D\",\n                  \"Phi\": \"\\u03A6\",\n                  \"phi\": \"\\u03C6\",\n                  \"phiv\": \"\\u03D5\",\n                  \"phmmat\": \"\\u2133\",\n                  \"phone\": \"\\u260E\",\n                  \"Pi\": \"\\u03A0\",\n                  \"pi\": \"\\u03C0\",\n                  \"pitchfork\": \"\\u22D4\",\n                  \"piv\": \"\\u03D6\",\n                  \"planck\": \"\\u210F\",\n                  \"planckh\": \"\\u210E\",\n                  \"plankv\": \"\\u210F\",\n                  \"plusacir\": \"\\u2A23\",\n                  \"plusb\": \"\\u229E\",\n                  \"pluscir\": \"\\u2A22\",\n                  \"plus\": \"+\",\n                  \"plusdo\": \"\\u2214\",\n                  \"plusdu\": \"\\u2A25\",\n                  \"pluse\": \"\\u2A72\",\n                  \"PlusMinus\": \"\\xB1\",\n                  \"plusmn\": \"\\xB1\",\n                  \"plussim\": \"\\u2A26\",\n                  \"plustwo\": \"\\u2A27\",\n                  \"pm\": \"\\xB1\",\n                  \"Poincareplane\": \"\\u210C\",\n                  \"pointint\": \"\\u2A15\",\n                  \"popf\": \"\\uD835\\uDD61\",\n                  \"Popf\": \"\\u2119\",\n                  \"pound\": \"\\xA3\",\n                  \"prap\": \"\\u2AB7\",\n                  \"Pr\": \"\\u2ABB\",\n                  \"pr\": \"\\u227A\",\n                  \"prcue\": \"\\u227C\",\n                  \"precapprox\": \"\\u2AB7\",\n                  \"prec\": \"\\u227A\",\n                  \"preccurlyeq\": \"\\u227C\",\n                  \"Precedes\": \"\\u227A\",\n                  \"PrecedesEqual\": \"\\u2AAF\",\n                  \"PrecedesSlantEqual\": \"\\u227C\",\n                  \"PrecedesTilde\": \"\\u227E\",\n                  \"preceq\": \"\\u2AAF\",\n                  \"precnapprox\": \"\\u2AB9\",\n                  \"precneqq\": \"\\u2AB5\",\n                  \"precnsim\": \"\\u22E8\",\n                  \"pre\": \"\\u2AAF\",\n                  \"prE\": \"\\u2AB3\",\n                  \"precsim\": \"\\u227E\",\n                  \"prime\": \"\\u2032\",\n                  \"Prime\": \"\\u2033\",\n                  \"primes\": \"\\u2119\",\n                  \"prnap\": \"\\u2AB9\",\n                  \"prnE\": \"\\u2AB5\",\n                  \"prnsim\": \"\\u22E8\",\n                  \"prod\": \"\\u220F\",\n                  \"Product\": \"\\u220F\",\n                  \"profalar\": \"\\u232E\",\n                  \"profline\": \"\\u2312\",\n                  \"profsurf\": \"\\u2313\",\n                  \"prop\": \"\\u221D\",\n                  \"Proportional\": \"\\u221D\",\n                  \"Proportion\": \"\\u2237\",\n                  \"propto\": \"\\u221D\",\n                  \"prsim\": \"\\u227E\",\n                  \"prurel\": \"\\u22B0\",\n                  \"Pscr\": \"\\uD835\\uDCAB\",\n                  \"pscr\": \"\\uD835\\uDCC5\",\n                  \"Psi\": \"\\u03A8\",\n                  \"psi\": \"\\u03C8\",\n                  \"puncsp\": \"\\u2008\",\n                  \"Qfr\": \"\\uD835\\uDD14\",\n                  \"qfr\": \"\\uD835\\uDD2E\",\n                  \"qint\": \"\\u2A0C\",\n                  \"qopf\": \"\\uD835\\uDD62\",\n                  \"Qopf\": \"\\u211A\",\n                  \"qprime\": \"\\u2057\",\n                  \"Qscr\": \"\\uD835\\uDCAC\",\n                  \"qscr\": \"\\uD835\\uDCC6\",\n                  \"quaternions\": \"\\u210D\",\n                  \"quatint\": \"\\u2A16\",\n                  \"quest\": \"?\",\n                  \"questeq\": \"\\u225F\",\n                  \"quot\": \"\\\"\",\n                  \"QUOT\": \"\\\"\",\n                  \"rAarr\": \"\\u21DB\",\n                  \"race\": \"\\u223D\\u0331\",\n                  \"Racute\": \"\\u0154\",\n                  \"racute\": \"\\u0155\",\n                  \"radic\": \"\\u221A\",\n                  \"raemptyv\": \"\\u29B3\",\n                  \"rang\": \"\\u27E9\",\n                  \"Rang\": \"\\u27EB\",\n                  \"rangd\": \"\\u2992\",\n                  \"range\": \"\\u29A5\",\n                  \"rangle\": \"\\u27E9\",\n                  \"raquo\": \"\\xBB\",\n                  \"rarrap\": \"\\u2975\",\n                  \"rarrb\": \"\\u21E5\",\n                  \"rarrbfs\": \"\\u2920\",\n                  \"rarrc\": \"\\u2933\",\n                  \"rarr\": \"\\u2192\",\n                  \"Rarr\": \"\\u21A0\",\n                  \"rArr\": \"\\u21D2\",\n                  \"rarrfs\": \"\\u291E\",\n                  \"rarrhk\": \"\\u21AA\",\n                  \"rarrlp\": \"\\u21AC\",\n                  \"rarrpl\": \"\\u2945\",\n                  \"rarrsim\": \"\\u2974\",\n                  \"Rarrtl\": \"\\u2916\",\n                  \"rarrtl\": \"\\u21A3\",\n                  \"rarrw\": \"\\u219D\",\n                  \"ratail\": \"\\u291A\",\n                  \"rAtail\": \"\\u291C\",\n                  \"ratio\": \"\\u2236\",\n                  \"rationals\": \"\\u211A\",\n                  \"rbarr\": \"\\u290D\",\n                  \"rBarr\": \"\\u290F\",\n                  \"RBarr\": \"\\u2910\",\n                  \"rbbrk\": \"\\u2773\",\n                  \"rbrace\": \"}\",\n                  \"rbrack\": \"]\",\n                  \"rbrke\": \"\\u298C\",\n                  \"rbrksld\": \"\\u298E\",\n                  \"rbrkslu\": \"\\u2990\",\n                  \"Rcaron\": \"\\u0158\",\n                  \"rcaron\": \"\\u0159\",\n                  \"Rcedil\": \"\\u0156\",\n                  \"rcedil\": \"\\u0157\",\n                  \"rceil\": \"\\u2309\",\n                  \"rcub\": \"}\",\n                  \"Rcy\": \"\\u0420\",\n                  \"rcy\": \"\\u0440\",\n                  \"rdca\": \"\\u2937\",\n                  \"rdldhar\": \"\\u2969\",\n                  \"rdquo\": \"\\u201D\",\n                  \"rdquor\": \"\\u201D\",\n                  \"rdsh\": \"\\u21B3\",\n                  \"real\": \"\\u211C\",\n                  \"realine\": \"\\u211B\",\n                  \"realpart\": \"\\u211C\",\n                  \"reals\": \"\\u211D\",\n                  \"Re\": \"\\u211C\",\n                  \"rect\": \"\\u25AD\",\n                  \"reg\": \"\\xAE\",\n                  \"REG\": \"\\xAE\",\n                  \"ReverseElement\": \"\\u220B\",\n                  \"ReverseEquilibrium\": \"\\u21CB\",\n                  \"ReverseUpEquilibrium\": \"\\u296F\",\n                  \"rfisht\": \"\\u297D\",\n                  \"rfloor\": \"\\u230B\",\n                  \"rfr\": \"\\uD835\\uDD2F\",\n                  \"Rfr\": \"\\u211C\",\n                  \"rHar\": \"\\u2964\",\n                  \"rhard\": \"\\u21C1\",\n                  \"rharu\": \"\\u21C0\",\n                  \"rharul\": \"\\u296C\",\n                  \"Rho\": \"\\u03A1\",\n                  \"rho\": \"\\u03C1\",\n                  \"rhov\": \"\\u03F1\",\n                  \"RightAngleBracket\": \"\\u27E9\",\n                  \"RightArrowBar\": \"\\u21E5\",\n                  \"rightarrow\": \"\\u2192\",\n                  \"RightArrow\": \"\\u2192\",\n                  \"Rightarrow\": \"\\u21D2\",\n                  \"RightArrowLeftArrow\": \"\\u21C4\",\n                  \"rightarrowtail\": \"\\u21A3\",\n                  \"RightCeiling\": \"\\u2309\",\n                  \"RightDoubleBracket\": \"\\u27E7\",\n                  \"RightDownTeeVector\": \"\\u295D\",\n                  \"RightDownVectorBar\": \"\\u2955\",\n                  \"RightDownVector\": \"\\u21C2\",\n                  \"RightFloor\": \"\\u230B\",\n                  \"rightharpoondown\": \"\\u21C1\",\n                  \"rightharpoonup\": \"\\u21C0\",\n                  \"rightleftarrows\": \"\\u21C4\",\n                  \"rightleftharpoons\": \"\\u21CC\",\n                  \"rightrightarrows\": \"\\u21C9\",\n                  \"rightsquigarrow\": \"\\u219D\",\n                  \"RightTeeArrow\": \"\\u21A6\",\n                  \"RightTee\": \"\\u22A2\",\n                  \"RightTeeVector\": \"\\u295B\",\n                  \"rightthreetimes\": \"\\u22CC\",\n                  \"RightTriangleBar\": \"\\u29D0\",\n                  \"RightTriangle\": \"\\u22B3\",\n                  \"RightTriangleEqual\": \"\\u22B5\",\n                  \"RightUpDownVector\": \"\\u294F\",\n                  \"RightUpTeeVector\": \"\\u295C\",\n                  \"RightUpVectorBar\": \"\\u2954\",\n                  \"RightUpVector\": \"\\u21BE\",\n                  \"RightVectorBar\": \"\\u2953\",\n                  \"RightVector\": \"\\u21C0\",\n                  \"ring\": \"\\u02DA\",\n                  \"risingdotseq\": \"\\u2253\",\n                  \"rlarr\": \"\\u21C4\",\n                  \"rlhar\": \"\\u21CC\",\n                  \"rlm\": \"\\u200F\",\n                  \"rmoustache\": \"\\u23B1\",\n                  \"rmoust\": \"\\u23B1\",\n                  \"rnmid\": \"\\u2AEE\",\n                  \"roang\": \"\\u27ED\",\n                  \"roarr\": \"\\u21FE\",\n                  \"robrk\": \"\\u27E7\",\n                  \"ropar\": \"\\u2986\",\n                  \"ropf\": \"\\uD835\\uDD63\",\n                  \"Ropf\": \"\\u211D\",\n                  \"roplus\": \"\\u2A2E\",\n                  \"rotimes\": \"\\u2A35\",\n                  \"RoundImplies\": \"\\u2970\",\n                  \"rpar\": \")\",\n                  \"rpargt\": \"\\u2994\",\n                  \"rppolint\": \"\\u2A12\",\n                  \"rrarr\": \"\\u21C9\",\n                  \"Rrightarrow\": \"\\u21DB\",\n                  \"rsaquo\": \"\\u203A\",\n                  \"rscr\": \"\\uD835\\uDCC7\",\n                  \"Rscr\": \"\\u211B\",\n                  \"rsh\": \"\\u21B1\",\n                  \"Rsh\": \"\\u21B1\",\n                  \"rsqb\": \"]\",\n                  \"rsquo\": \"\\u2019\",\n                  \"rsquor\": \"\\u2019\",\n                  \"rthree\": \"\\u22CC\",\n                  \"rtimes\": \"\\u22CA\",\n                  \"rtri\": \"\\u25B9\",\n                  \"rtrie\": \"\\u22B5\",\n                  \"rtrif\": \"\\u25B8\",\n                  \"rtriltri\": \"\\u29CE\",\n                  \"RuleDelayed\": \"\\u29F4\",\n                  \"ruluhar\": \"\\u2968\",\n                  \"rx\": \"\\u211E\",\n                  \"Sacute\": \"\\u015A\",\n                  \"sacute\": \"\\u015B\",\n                  \"sbquo\": \"\\u201A\",\n                  \"scap\": \"\\u2AB8\",\n                  \"Scaron\": \"\\u0160\",\n                  \"scaron\": \"\\u0161\",\n                  \"Sc\": \"\\u2ABC\",\n                  \"sc\": \"\\u227B\",\n                  \"sccue\": \"\\u227D\",\n                  \"sce\": \"\\u2AB0\",\n                  \"scE\": \"\\u2AB4\",\n                  \"Scedil\": \"\\u015E\",\n                  \"scedil\": \"\\u015F\",\n                  \"Scirc\": \"\\u015C\",\n                  \"scirc\": \"\\u015D\",\n                  \"scnap\": \"\\u2ABA\",\n                  \"scnE\": \"\\u2AB6\",\n                  \"scnsim\": \"\\u22E9\",\n                  \"scpolint\": \"\\u2A13\",\n                  \"scsim\": \"\\u227F\",\n                  \"Scy\": \"\\u0421\",\n                  \"scy\": \"\\u0441\",\n                  \"sdotb\": \"\\u22A1\",\n                  \"sdot\": \"\\u22C5\",\n                  \"sdote\": \"\\u2A66\",\n                  \"searhk\": \"\\u2925\",\n                  \"searr\": \"\\u2198\",\n                  \"seArr\": \"\\u21D8\",\n                  \"searrow\": \"\\u2198\",\n                  \"sect\": \"\\xA7\",\n                  \"semi\": \";\",\n                  \"seswar\": \"\\u2929\",\n                  \"setminus\": \"\\u2216\",\n                  \"setmn\": \"\\u2216\",\n                  \"sext\": \"\\u2736\",\n                  \"Sfr\": \"\\uD835\\uDD16\",\n                  \"sfr\": \"\\uD835\\uDD30\",\n                  \"sfrown\": \"\\u2322\",\n                  \"sharp\": \"\\u266F\",\n                  \"SHCHcy\": \"\\u0429\",\n                  \"shchcy\": \"\\u0449\",\n                  \"SHcy\": \"\\u0428\",\n                  \"shcy\": \"\\u0448\",\n                  \"ShortDownArrow\": \"\\u2193\",\n                  \"ShortLeftArrow\": \"\\u2190\",\n                  \"shortmid\": \"\\u2223\",\n                  \"shortparallel\": \"\\u2225\",\n                  \"ShortRightArrow\": \"\\u2192\",\n                  \"ShortUpArrow\": \"\\u2191\",\n                  \"shy\": \"\\xAD\",\n                  \"Sigma\": \"\\u03A3\",\n                  \"sigma\": \"\\u03C3\",\n                  \"sigmaf\": \"\\u03C2\",\n                  \"sigmav\": \"\\u03C2\",\n                  \"sim\": \"\\u223C\",\n                  \"simdot\": \"\\u2A6A\",\n                  \"sime\": \"\\u2243\",\n                  \"simeq\": \"\\u2243\",\n                  \"simg\": \"\\u2A9E\",\n                  \"simgE\": \"\\u2AA0\",\n                  \"siml\": \"\\u2A9D\",\n                  \"simlE\": \"\\u2A9F\",\n                  \"simne\": \"\\u2246\",\n                  \"simplus\": \"\\u2A24\",\n                  \"simrarr\": \"\\u2972\",\n                  \"slarr\": \"\\u2190\",\n                  \"SmallCircle\": \"\\u2218\",\n                  \"smallsetminus\": \"\\u2216\",\n                  \"smashp\": \"\\u2A33\",\n                  \"smeparsl\": \"\\u29E4\",\n                  \"smid\": \"\\u2223\",\n                  \"smile\": \"\\u2323\",\n                  \"smt\": \"\\u2AAA\",\n                  \"smte\": \"\\u2AAC\",\n                  \"smtes\": \"\\u2AAC\\uFE00\",\n                  \"SOFTcy\": \"\\u042C\",\n                  \"softcy\": \"\\u044C\",\n                  \"solbar\": \"\\u233F\",\n                  \"solb\": \"\\u29C4\",\n                  \"sol\": \"/\",\n                  \"Sopf\": \"\\uD835\\uDD4A\",\n                  \"sopf\": \"\\uD835\\uDD64\",\n                  \"spades\": \"\\u2660\",\n                  \"spadesuit\": \"\\u2660\",\n                  \"spar\": \"\\u2225\",\n                  \"sqcap\": \"\\u2293\",\n                  \"sqcaps\": \"\\u2293\\uFE00\",\n                  \"sqcup\": \"\\u2294\",\n                  \"sqcups\": \"\\u2294\\uFE00\",\n                  \"Sqrt\": \"\\u221A\",\n                  \"sqsub\": \"\\u228F\",\n                  \"sqsube\": \"\\u2291\",\n                  \"sqsubset\": \"\\u228F\",\n                  \"sqsubseteq\": \"\\u2291\",\n                  \"sqsup\": \"\\u2290\",\n                  \"sqsupe\": \"\\u2292\",\n                  \"sqsupset\": \"\\u2290\",\n                  \"sqsupseteq\": \"\\u2292\",\n                  \"square\": \"\\u25A1\",\n                  \"Square\": \"\\u25A1\",\n                  \"SquareIntersection\": \"\\u2293\",\n                  \"SquareSubset\": \"\\u228F\",\n                  \"SquareSubsetEqual\": \"\\u2291\",\n                  \"SquareSuperset\": \"\\u2290\",\n                  \"SquareSupersetEqual\": \"\\u2292\",\n                  \"SquareUnion\": \"\\u2294\",\n                  \"squarf\": \"\\u25AA\",\n                  \"squ\": \"\\u25A1\",\n                  \"squf\": \"\\u25AA\",\n                  \"srarr\": \"\\u2192\",\n                  \"Sscr\": \"\\uD835\\uDCAE\",\n                  \"sscr\": \"\\uD835\\uDCC8\",\n                  \"ssetmn\": \"\\u2216\",\n                  \"ssmile\": \"\\u2323\",\n                  \"sstarf\": \"\\u22C6\",\n                  \"Star\": \"\\u22C6\",\n                  \"star\": \"\\u2606\",\n                  \"starf\": \"\\u2605\",\n                  \"straightepsilon\": \"\\u03F5\",\n                  \"straightphi\": \"\\u03D5\",\n                  \"strns\": \"\\xAF\",\n                  \"sub\": \"\\u2282\",\n                  \"Sub\": \"\\u22D0\",\n                  \"subdot\": \"\\u2ABD\",\n                  \"subE\": \"\\u2AC5\",\n                  \"sube\": \"\\u2286\",\n                  \"subedot\": \"\\u2AC3\",\n                  \"submult\": \"\\u2AC1\",\n                  \"subnE\": \"\\u2ACB\",\n                  \"subne\": \"\\u228A\",\n                  \"subplus\": \"\\u2ABF\",\n                  \"subrarr\": \"\\u2979\",\n                  \"subset\": \"\\u2282\",\n                  \"Subset\": \"\\u22D0\",\n                  \"subseteq\": \"\\u2286\",\n                  \"subseteqq\": \"\\u2AC5\",\n                  \"SubsetEqual\": \"\\u2286\",\n                  \"subsetneq\": \"\\u228A\",\n                  \"subsetneqq\": \"\\u2ACB\",\n                  \"subsim\": \"\\u2AC7\",\n                  \"subsub\": \"\\u2AD5\",\n                  \"subsup\": \"\\u2AD3\",\n                  \"succapprox\": \"\\u2AB8\",\n                  \"succ\": \"\\u227B\",\n                  \"succcurlyeq\": \"\\u227D\",\n                  \"Succeeds\": \"\\u227B\",\n                  \"SucceedsEqual\": \"\\u2AB0\",\n                  \"SucceedsSlantEqual\": \"\\u227D\",\n                  \"SucceedsTilde\": \"\\u227F\",\n                  \"succeq\": \"\\u2AB0\",\n                  \"succnapprox\": \"\\u2ABA\",\n                  \"succneqq\": \"\\u2AB6\",\n                  \"succnsim\": \"\\u22E9\",\n                  \"succsim\": \"\\u227F\",\n                  \"SuchThat\": \"\\u220B\",\n                  \"sum\": \"\\u2211\",\n                  \"Sum\": \"\\u2211\",\n                  \"sung\": \"\\u266A\",\n                  \"sup1\": \"\\xB9\",\n                  \"sup2\": \"\\xB2\",\n                  \"sup3\": \"\\xB3\",\n                  \"sup\": \"\\u2283\",\n                  \"Sup\": \"\\u22D1\",\n                  \"supdot\": \"\\u2ABE\",\n                  \"supdsub\": \"\\u2AD8\",\n                  \"supE\": \"\\u2AC6\",\n                  \"supe\": \"\\u2287\",\n                  \"supedot\": \"\\u2AC4\",\n                  \"Superset\": \"\\u2283\",\n                  \"SupersetEqual\": \"\\u2287\",\n                  \"suphsol\": \"\\u27C9\",\n                  \"suphsub\": \"\\u2AD7\",\n                  \"suplarr\": \"\\u297B\",\n                  \"supmult\": \"\\u2AC2\",\n                  \"supnE\": \"\\u2ACC\",\n                  \"supne\": \"\\u228B\",\n                  \"supplus\": \"\\u2AC0\",\n                  \"supset\": \"\\u2283\",\n                  \"Supset\": \"\\u22D1\",\n                  \"supseteq\": \"\\u2287\",\n                  \"supseteqq\": \"\\u2AC6\",\n                  \"supsetneq\": \"\\u228B\",\n                  \"supsetneqq\": \"\\u2ACC\",\n                  \"supsim\": \"\\u2AC8\",\n                  \"supsub\": \"\\u2AD4\",\n                  \"supsup\": \"\\u2AD6\",\n                  \"swarhk\": \"\\u2926\",\n                  \"swarr\": \"\\u2199\",\n                  \"swArr\": \"\\u21D9\",\n                  \"swarrow\": \"\\u2199\",\n                  \"swnwar\": \"\\u292A\",\n                  \"szlig\": \"\\xDF\",\n                  \"Tab\": \"\\t\",\n                  \"target\": \"\\u2316\",\n                  \"Tau\": \"\\u03A4\",\n                  \"tau\": \"\\u03C4\",\n                  \"tbrk\": \"\\u23B4\",\n                  \"Tcaron\": \"\\u0164\",\n                  \"tcaron\": \"\\u0165\",\n                  \"Tcedil\": \"\\u0162\",\n                  \"tcedil\": \"\\u0163\",\n                  \"Tcy\": \"\\u0422\",\n                  \"tcy\": \"\\u0442\",\n                  \"tdot\": \"\\u20DB\",\n                  \"telrec\": \"\\u2315\",\n                  \"Tfr\": \"\\uD835\\uDD17\",\n                  \"tfr\": \"\\uD835\\uDD31\",\n                  \"there4\": \"\\u2234\",\n                  \"therefore\": \"\\u2234\",\n                  \"Therefore\": \"\\u2234\",\n                  \"Theta\": \"\\u0398\",\n                  \"theta\": \"\\u03B8\",\n                  \"thetasym\": \"\\u03D1\",\n                  \"thetav\": \"\\u03D1\",\n                  \"thickapprox\": \"\\u2248\",\n                  \"thicksim\": \"\\u223C\",\n                  \"ThickSpace\": \"\\u205F\\u200A\",\n                  \"ThinSpace\": \"\\u2009\",\n                  \"thinsp\": \"\\u2009\",\n                  \"thkap\": \"\\u2248\",\n                  \"thksim\": \"\\u223C\",\n                  \"THORN\": \"\\xDE\",\n                  \"thorn\": \"\\xFE\",\n                  \"tilde\": \"\\u02DC\",\n                  \"Tilde\": \"\\u223C\",\n                  \"TildeEqual\": \"\\u2243\",\n                  \"TildeFullEqual\": \"\\u2245\",\n                  \"TildeTilde\": \"\\u2248\",\n                  \"timesbar\": \"\\u2A31\",\n                  \"timesb\": \"\\u22A0\",\n                  \"times\": \"\\xD7\",\n                  \"timesd\": \"\\u2A30\",\n                  \"tint\": \"\\u222D\",\n                  \"toea\": \"\\u2928\",\n                  \"topbot\": \"\\u2336\",\n                  \"topcir\": \"\\u2AF1\",\n                  \"top\": \"\\u22A4\",\n                  \"Topf\": \"\\uD835\\uDD4B\",\n                  \"topf\": \"\\uD835\\uDD65\",\n                  \"topfork\": \"\\u2ADA\",\n                  \"tosa\": \"\\u2929\",\n                  \"tprime\": \"\\u2034\",\n                  \"trade\": \"\\u2122\",\n                  \"TRADE\": \"\\u2122\",\n                  \"triangle\": \"\\u25B5\",\n                  \"triangledown\": \"\\u25BF\",\n                  \"triangleleft\": \"\\u25C3\",\n                  \"trianglelefteq\": \"\\u22B4\",\n                  \"triangleq\": \"\\u225C\",\n                  \"triangleright\": \"\\u25B9\",\n                  \"trianglerighteq\": \"\\u22B5\",\n                  \"tridot\": \"\\u25EC\",\n                  \"trie\": \"\\u225C\",\n                  \"triminus\": \"\\u2A3A\",\n                  \"TripleDot\": \"\\u20DB\",\n                  \"triplus\": \"\\u2A39\",\n                  \"trisb\": \"\\u29CD\",\n                  \"tritime\": \"\\u2A3B\",\n                  \"trpezium\": \"\\u23E2\",\n                  \"Tscr\": \"\\uD835\\uDCAF\",\n                  \"tscr\": \"\\uD835\\uDCC9\",\n                  \"TScy\": \"\\u0426\",\n                  \"tscy\": \"\\u0446\",\n                  \"TSHcy\": \"\\u040B\",\n                  \"tshcy\": \"\\u045B\",\n                  \"Tstrok\": \"\\u0166\",\n                  \"tstrok\": \"\\u0167\",\n                  \"twixt\": \"\\u226C\",\n                  \"twoheadleftarrow\": \"\\u219E\",\n                  \"twoheadrightarrow\": \"\\u21A0\",\n                  \"Uacute\": \"\\xDA\",\n                  \"uacute\": \"\\xFA\",\n                  \"uarr\": \"\\u2191\",\n                  \"Uarr\": \"\\u219F\",\n                  \"uArr\": \"\\u21D1\",\n                  \"Uarrocir\": \"\\u2949\",\n                  \"Ubrcy\": \"\\u040E\",\n                  \"ubrcy\": \"\\u045E\",\n                  \"Ubreve\": \"\\u016C\",\n                  \"ubreve\": \"\\u016D\",\n                  \"Ucirc\": \"\\xDB\",\n                  \"ucirc\": \"\\xFB\",\n                  \"Ucy\": \"\\u0423\",\n                  \"ucy\": \"\\u0443\",\n                  \"udarr\": \"\\u21C5\",\n                  \"Udblac\": \"\\u0170\",\n                  \"udblac\": \"\\u0171\",\n                  \"udhar\": \"\\u296E\",\n                  \"ufisht\": \"\\u297E\",\n                  \"Ufr\": \"\\uD835\\uDD18\",\n                  \"ufr\": \"\\uD835\\uDD32\",\n                  \"Ugrave\": \"\\xD9\",\n                  \"ugrave\": \"\\xF9\",\n                  \"uHar\": \"\\u2963\",\n                  \"uharl\": \"\\u21BF\",\n                  \"uharr\": \"\\u21BE\",\n                  \"uhblk\": \"\\u2580\",\n                  \"ulcorn\": \"\\u231C\",\n                  \"ulcorner\": \"\\u231C\",\n                  \"ulcrop\": \"\\u230F\",\n                  \"ultri\": \"\\u25F8\",\n                  \"Umacr\": \"\\u016A\",\n                  \"umacr\": \"\\u016B\",\n                  \"uml\": \"\\xA8\",\n                  \"UnderBar\": \"_\",\n                  \"UnderBrace\": \"\\u23DF\",\n                  \"UnderBracket\": \"\\u23B5\",\n                  \"UnderParenthesis\": \"\\u23DD\",\n                  \"Union\": \"\\u22C3\",\n                  \"UnionPlus\": \"\\u228E\",\n                  \"Uogon\": \"\\u0172\",\n                  \"uogon\": \"\\u0173\",\n                  \"Uopf\": \"\\uD835\\uDD4C\",\n                  \"uopf\": \"\\uD835\\uDD66\",\n                  \"UpArrowBar\": \"\\u2912\",\n                  \"uparrow\": \"\\u2191\",\n                  \"UpArrow\": \"\\u2191\",\n                  \"Uparrow\": \"\\u21D1\",\n                  \"UpArrowDownArrow\": \"\\u21C5\",\n                  \"updownarrow\": \"\\u2195\",\n                  \"UpDownArrow\": \"\\u2195\",\n                  \"Updownarrow\": \"\\u21D5\",\n                  \"UpEquilibrium\": \"\\u296E\",\n                  \"upharpoonleft\": \"\\u21BF\",\n                  \"upharpoonright\": \"\\u21BE\",\n                  \"uplus\": \"\\u228E\",\n                  \"UpperLeftArrow\": \"\\u2196\",\n                  \"UpperRightArrow\": \"\\u2197\",\n                  \"upsi\": \"\\u03C5\",\n                  \"Upsi\": \"\\u03D2\",\n                  \"upsih\": \"\\u03D2\",\n                  \"Upsilon\": \"\\u03A5\",\n                  \"upsilon\": \"\\u03C5\",\n                  \"UpTeeArrow\": \"\\u21A5\",\n                  \"UpTee\": \"\\u22A5\",\n                  \"upuparrows\": \"\\u21C8\",\n                  \"urcorn\": \"\\u231D\",\n                  \"urcorner\": \"\\u231D\",\n                  \"urcrop\": \"\\u230E\",\n                  \"Uring\": \"\\u016E\",\n                  \"uring\": \"\\u016F\",\n                  \"urtri\": \"\\u25F9\",\n                  \"Uscr\": \"\\uD835\\uDCB0\",\n                  \"uscr\": \"\\uD835\\uDCCA\",\n                  \"utdot\": \"\\u22F0\",\n                  \"Utilde\": \"\\u0168\",\n                  \"utilde\": \"\\u0169\",\n                  \"utri\": \"\\u25B5\",\n                  \"utrif\": \"\\u25B4\",\n                  \"uuarr\": \"\\u21C8\",\n                  \"Uuml\": \"\\xDC\",\n                  \"uuml\": \"\\xFC\",\n                  \"uwangle\": \"\\u29A7\",\n                  \"vangrt\": \"\\u299C\",\n                  \"varepsilon\": \"\\u03F5\",\n                  \"varkappa\": \"\\u03F0\",\n                  \"varnothing\": \"\\u2205\",\n                  \"varphi\": \"\\u03D5\",\n                  \"varpi\": \"\\u03D6\",\n                  \"varpropto\": \"\\u221D\",\n                  \"varr\": \"\\u2195\",\n                  \"vArr\": \"\\u21D5\",\n                  \"varrho\": \"\\u03F1\",\n                  \"varsigma\": \"\\u03C2\",\n                  \"varsubsetneq\": \"\\u228A\\uFE00\",\n                  \"varsubsetneqq\": \"\\u2ACB\\uFE00\",\n                  \"varsupsetneq\": \"\\u228B\\uFE00\",\n                  \"varsupsetneqq\": \"\\u2ACC\\uFE00\",\n                  \"vartheta\": \"\\u03D1\",\n                  \"vartriangleleft\": \"\\u22B2\",\n                  \"vartriangleright\": \"\\u22B3\",\n                  \"vBar\": \"\\u2AE8\",\n                  \"Vbar\": \"\\u2AEB\",\n                  \"vBarv\": \"\\u2AE9\",\n                  \"Vcy\": \"\\u0412\",\n                  \"vcy\": \"\\u0432\",\n                  \"vdash\": \"\\u22A2\",\n                  \"vDash\": \"\\u22A8\",\n                  \"Vdash\": \"\\u22A9\",\n                  \"VDash\": \"\\u22AB\",\n                  \"Vdashl\": \"\\u2AE6\",\n                  \"veebar\": \"\\u22BB\",\n                  \"vee\": \"\\u2228\",\n                  \"Vee\": \"\\u22C1\",\n                  \"veeeq\": \"\\u225A\",\n                  \"vellip\": \"\\u22EE\",\n                  \"verbar\": \"|\",\n                  \"Verbar\": \"\\u2016\",\n                  \"vert\": \"|\",\n                  \"Vert\": \"\\u2016\",\n                  \"VerticalBar\": \"\\u2223\",\n                  \"VerticalLine\": \"|\",\n                  \"VerticalSeparator\": \"\\u2758\",\n                  \"VerticalTilde\": \"\\u2240\",\n                  \"VeryThinSpace\": \"\\u200A\",\n                  \"Vfr\": \"\\uD835\\uDD19\",\n                  \"vfr\": \"\\uD835\\uDD33\",\n                  \"vltri\": \"\\u22B2\",\n                  \"vnsub\": \"\\u2282\\u20D2\",\n                  \"vnsup\": \"\\u2283\\u20D2\",\n                  \"Vopf\": \"\\uD835\\uDD4D\",\n                  \"vopf\": \"\\uD835\\uDD67\",\n                  \"vprop\": \"\\u221D\",\n                  \"vrtri\": \"\\u22B3\",\n                  \"Vscr\": \"\\uD835\\uDCB1\",\n                  \"vscr\": \"\\uD835\\uDCCB\",\n                  \"vsubnE\": \"\\u2ACB\\uFE00\",\n                  \"vsubne\": \"\\u228A\\uFE00\",\n                  \"vsupnE\": \"\\u2ACC\\uFE00\",\n                  \"vsupne\": \"\\u228B\\uFE00\",\n                  \"Vvdash\": \"\\u22AA\",\n                  \"vzigzag\": \"\\u299A\",\n                  \"Wcirc\": \"\\u0174\",\n                  \"wcirc\": \"\\u0175\",\n                  \"wedbar\": \"\\u2A5F\",\n                  \"wedge\": \"\\u2227\",\n                  \"Wedge\": \"\\u22C0\",\n                  \"wedgeq\": \"\\u2259\",\n                  \"weierp\": \"\\u2118\",\n                  \"Wfr\": \"\\uD835\\uDD1A\",\n                  \"wfr\": \"\\uD835\\uDD34\",\n                  \"Wopf\": \"\\uD835\\uDD4E\",\n                  \"wopf\": \"\\uD835\\uDD68\",\n                  \"wp\": \"\\u2118\",\n                  \"wr\": \"\\u2240\",\n                  \"wreath\": \"\\u2240\",\n                  \"Wscr\": \"\\uD835\\uDCB2\",\n                  \"wscr\": \"\\uD835\\uDCCC\",\n                  \"xcap\": \"\\u22C2\",\n                  \"xcirc\": \"\\u25EF\",\n                  \"xcup\": \"\\u22C3\",\n                  \"xdtri\": \"\\u25BD\",\n                  \"Xfr\": \"\\uD835\\uDD1B\",\n                  \"xfr\": \"\\uD835\\uDD35\",\n                  \"xharr\": \"\\u27F7\",\n                  \"xhArr\": \"\\u27FA\",\n                  \"Xi\": \"\\u039E\",\n                  \"xi\": \"\\u03BE\",\n                  \"xlarr\": \"\\u27F5\",\n                  \"xlArr\": \"\\u27F8\",\n                  \"xmap\": \"\\u27FC\",\n                  \"xnis\": \"\\u22FB\",\n                  \"xodot\": \"\\u2A00\",\n                  \"Xopf\": \"\\uD835\\uDD4F\",\n                  \"xopf\": \"\\uD835\\uDD69\",\n                  \"xoplus\": \"\\u2A01\",\n                  \"xotime\": \"\\u2A02\",\n                  \"xrarr\": \"\\u27F6\",\n                  \"xrArr\": \"\\u27F9\",\n                  \"Xscr\": \"\\uD835\\uDCB3\",\n                  \"xscr\": \"\\uD835\\uDCCD\",\n                  \"xsqcup\": \"\\u2A06\",\n                  \"xuplus\": \"\\u2A04\",\n                  \"xutri\": \"\\u25B3\",\n                  \"xvee\": \"\\u22C1\",\n                  \"xwedge\": \"\\u22C0\",\n                  \"Yacute\": \"\\xDD\",\n                  \"yacute\": \"\\xFD\",\n                  \"YAcy\": \"\\u042F\",\n                  \"yacy\": \"\\u044F\",\n                  \"Ycirc\": \"\\u0176\",\n                  \"ycirc\": \"\\u0177\",\n                  \"Ycy\": \"\\u042B\",\n                  \"ycy\": \"\\u044B\",\n                  \"yen\": \"\\xA5\",\n                  \"Yfr\": \"\\uD835\\uDD1C\",\n                  \"yfr\": \"\\uD835\\uDD36\",\n                  \"YIcy\": \"\\u0407\",\n                  \"yicy\": \"\\u0457\",\n                  \"Yopf\": \"\\uD835\\uDD50\",\n                  \"yopf\": \"\\uD835\\uDD6A\",\n                  \"Yscr\": \"\\uD835\\uDCB4\",\n                  \"yscr\": \"\\uD835\\uDCCE\",\n                  \"YUcy\": \"\\u042E\",\n                  \"yucy\": \"\\u044E\",\n                  \"yuml\": \"\\xFF\",\n                  \"Yuml\": \"\\u0178\",\n                  \"Zacute\": \"\\u0179\",\n                  \"zacute\": \"\\u017A\",\n                  \"Zcaron\": \"\\u017D\",\n                  \"zcaron\": \"\\u017E\",\n                  \"Zcy\": \"\\u0417\",\n                  \"zcy\": \"\\u0437\",\n                  \"Zdot\": \"\\u017B\",\n                  \"zdot\": \"\\u017C\",\n                  \"zeetrf\": \"\\u2128\",\n                  \"ZeroWidthSpace\": \"\\u200B\",\n                  \"Zeta\": \"\\u0396\",\n                  \"zeta\": \"\\u03B6\",\n                  \"zfr\": \"\\uD835\\uDD37\",\n                  \"Zfr\": \"\\u2128\",\n                  \"ZHcy\": \"\\u0416\",\n                  \"zhcy\": \"\\u0436\",\n                  \"zigrarr\": \"\\u21DD\",\n                  \"zopf\": \"\\uD835\\uDD6B\",\n                  \"Zopf\": \"\\u2124\",\n                  \"Zscr\": \"\\uD835\\uDCB5\",\n                  \"zscr\": \"\\uD835\\uDCCF\",\n                  \"zwj\": \"\\u200D\",\n                  \"zwnj\": \"\\u200C\"\n                };\n              }, {}],\n              23: [function (require, module, exports) {\n                module.exports = {\n                  \"Aacute\": \"\\xC1\",\n                  \"aacute\": \"\\xE1\",\n                  \"Acirc\": \"\\xC2\",\n                  \"acirc\": \"\\xE2\",\n                  \"acute\": \"\\xB4\",\n                  \"AElig\": \"\\xC6\",\n                  \"aelig\": \"\\xE6\",\n                  \"Agrave\": \"\\xC0\",\n                  \"agrave\": \"\\xE0\",\n                  \"amp\": \"&\",\n                  \"AMP\": \"&\",\n                  \"Aring\": \"\\xC5\",\n                  \"aring\": \"\\xE5\",\n                  \"Atilde\": \"\\xC3\",\n                  \"atilde\": \"\\xE3\",\n                  \"Auml\": \"\\xC4\",\n                  \"auml\": \"\\xE4\",\n                  \"brvbar\": \"\\xA6\",\n                  \"Ccedil\": \"\\xC7\",\n                  \"ccedil\": \"\\xE7\",\n                  \"cedil\": \"\\xB8\",\n                  \"cent\": \"\\xA2\",\n                  \"copy\": \"\\xA9\",\n                  \"COPY\": \"\\xA9\",\n                  \"curren\": \"\\xA4\",\n                  \"deg\": \"\\xB0\",\n                  \"divide\": \"\\xF7\",\n                  \"Eacute\": \"\\xC9\",\n                  \"eacute\": \"\\xE9\",\n                  \"Ecirc\": \"\\xCA\",\n                  \"ecirc\": \"\\xEA\",\n                  \"Egrave\": \"\\xC8\",\n                  \"egrave\": \"\\xE8\",\n                  \"ETH\": \"\\xD0\",\n                  \"eth\": \"\\xF0\",\n                  \"Euml\": \"\\xCB\",\n                  \"euml\": \"\\xEB\",\n                  \"frac12\": \"\\xBD\",\n                  \"frac14\": \"\\xBC\",\n                  \"frac34\": \"\\xBE\",\n                  \"gt\": \">\",\n                  \"GT\": \">\",\n                  \"Iacute\": \"\\xCD\",\n                  \"iacute\": \"\\xED\",\n                  \"Icirc\": \"\\xCE\",\n                  \"icirc\": \"\\xEE\",\n                  \"iexcl\": \"\\xA1\",\n                  \"Igrave\": \"\\xCC\",\n                  \"igrave\": \"\\xEC\",\n                  \"iquest\": \"\\xBF\",\n                  \"Iuml\": \"\\xCF\",\n                  \"iuml\": \"\\xEF\",\n                  \"laquo\": \"\\xAB\",\n                  \"lt\": \"<\",\n                  \"LT\": \"<\",\n                  \"macr\": \"\\xAF\",\n                  \"micro\": \"\\xB5\",\n                  \"middot\": \"\\xB7\",\n                  \"nbsp\": \"\\xA0\",\n                  \"not\": \"\\xAC\",\n                  \"Ntilde\": \"\\xD1\",\n                  \"ntilde\": \"\\xF1\",\n                  \"Oacute\": \"\\xD3\",\n                  \"oacute\": \"\\xF3\",\n                  \"Ocirc\": \"\\xD4\",\n                  \"ocirc\": \"\\xF4\",\n                  \"Ograve\": \"\\xD2\",\n                  \"ograve\": \"\\xF2\",\n                  \"ordf\": \"\\xAA\",\n                  \"ordm\": \"\\xBA\",\n                  \"Oslash\": \"\\xD8\",\n                  \"oslash\": \"\\xF8\",\n                  \"Otilde\": \"\\xD5\",\n                  \"otilde\": \"\\xF5\",\n                  \"Ouml\": \"\\xD6\",\n                  \"ouml\": \"\\xF6\",\n                  \"para\": \"\\xB6\",\n                  \"plusmn\": \"\\xB1\",\n                  \"pound\": \"\\xA3\",\n                  \"quot\": \"\\\"\",\n                  \"QUOT\": \"\\\"\",\n                  \"raquo\": \"\\xBB\",\n                  \"reg\": \"\\xAE\",\n                  \"REG\": \"\\xAE\",\n                  \"sect\": \"\\xA7\",\n                  \"shy\": \"\\xAD\",\n                  \"sup1\": \"\\xB9\",\n                  \"sup2\": \"\\xB2\",\n                  \"sup3\": \"\\xB3\",\n                  \"szlig\": \"\\xDF\",\n                  \"THORN\": \"\\xDE\",\n                  \"thorn\": \"\\xFE\",\n                  \"times\": \"\\xD7\",\n                  \"Uacute\": \"\\xDA\",\n                  \"uacute\": \"\\xFA\",\n                  \"Ucirc\": \"\\xDB\",\n                  \"ucirc\": \"\\xFB\",\n                  \"Ugrave\": \"\\xD9\",\n                  \"ugrave\": \"\\xF9\",\n                  \"uml\": \"\\xA8\",\n                  \"Uuml\": \"\\xDC\",\n                  \"uuml\": \"\\xFC\",\n                  \"Yacute\": \"\\xDD\",\n                  \"yacute\": \"\\xFD\",\n                  \"yen\": \"\\xA5\",\n                  \"yuml\": \"\\xFF\"\n                };\n              }, {}],\n              24: [function (require, module, exports) {\n                module.exports = {\n                  \"amp\": \"&\",\n                  \"apos\": \"'\",\n                  \"gt\": \">\",\n                  \"lt\": \"<\",\n                  \"quot\": \"\\\"\"\n                };\n              }, {}],\n              25: [function (require, module, exports) {\n                // Copyright Joyent, Inc. and other Node contributors.\n                //\n                // Permission is hereby granted, free of charge, to any person obtaining a\n                // copy of this software and associated documentation files (the\n                // \"Software\"), to deal in the Software without restriction, including\n                // without limitation the rights to use, copy, modify, merge, publish,\n                // distribute, sublicense, and/or sell copies of the Software, and to permit\n                // persons to whom the Software is furnished to do so, subject to the\n                // following conditions:\n                //\n                // The above copyright notice and this permission notice shall be included\n                // in all copies or substantial portions of the Software.\n                //\n                // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n                // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n                // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n                // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n                // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n                // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n                // USE OR OTHER DEALINGS IN THE SOFTWARE.\n                var objectCreate = Object.create || objectCreatePolyfill;\n                var objectKeys = Object.keys || objectKeysPolyfill;\n                var bind = Function.prototype.bind || functionBindPolyfill;\n\n                function EventEmitter() {\n                  if (!this._events || !Object.prototype.hasOwnProperty.call(this, '_events')) {\n                    this._events = objectCreate(null);\n                    this._eventsCount = 0;\n                  }\n\n                  this._maxListeners = this._maxListeners || undefined;\n                }\n\n                module.exports = EventEmitter; // Backwards-compat with node 0.10.x\n\n                EventEmitter.EventEmitter = EventEmitter;\n                EventEmitter.prototype._events = undefined;\n                EventEmitter.prototype._maxListeners = undefined; // By default EventEmitters will print a warning if more than 10 listeners are\n                // added to it. This is a useful default which helps finding memory leaks.\n\n                var defaultMaxListeners = 10;\n                var hasDefineProperty;\n\n                try {\n                  var o = {};\n                  if (Object.defineProperty) Object.defineProperty(o, 'x', {\n                    value: 0\n                  });\n                  hasDefineProperty = o.x === 0;\n                } catch (err) {\n                  hasDefineProperty = false;\n                }\n\n                if (hasDefineProperty) {\n                  Object.defineProperty(EventEmitter, 'defaultMaxListeners', {\n                    enumerable: true,\n                    get: function get() {\n                      return defaultMaxListeners;\n                    },\n                    set: function set(arg) {\n                      // check whether the input is a positive number (whose value is zero or\n                      // greater and not a NaN).\n                      if (typeof arg !== 'number' || arg < 0 || arg !== arg) throw new TypeError('\"defaultMaxListeners\" must be a positive number');\n                      defaultMaxListeners = arg;\n                    }\n                  });\n                } else {\n                  EventEmitter.defaultMaxListeners = defaultMaxListeners;\n                } // Obviously not all Emitters should be limited to 10. This function allows\n                // that to be increased. Set to zero for unlimited.\n\n\n                EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n                  if (typeof n !== 'number' || n < 0 || isNaN(n)) throw new TypeError('\"n\" argument must be a positive number');\n                  this._maxListeners = n;\n                  return this;\n                };\n\n                function $getMaxListeners(that) {\n                  if (that._maxListeners === undefined) return EventEmitter.defaultMaxListeners;\n                  return that._maxListeners;\n                }\n\n                EventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n                  return $getMaxListeners(this);\n                }; // These standalone emit* functions are used to optimize calling of event\n                // handlers for fast cases because emit() itself often has a variable number of\n                // arguments and can be deoptimized because of that. These functions always have\n                // the same number of arguments and thus do not get deoptimized, so the code\n                // inside them can execute faster.\n\n\n                function emitNone(handler, isFn, self) {\n                  if (isFn) handler.call(self);else {\n                    var len = handler.length;\n                    var listeners = arrayClone(handler, len);\n\n                    for (var i = 0; i < len; ++i) {\n                      listeners[i].call(self);\n                    }\n                  }\n                }\n\n                function emitOne(handler, isFn, self, arg1) {\n                  if (isFn) handler.call(self, arg1);else {\n                    var len = handler.length;\n                    var listeners = arrayClone(handler, len);\n\n                    for (var i = 0; i < len; ++i) {\n                      listeners[i].call(self, arg1);\n                    }\n                  }\n                }\n\n                function emitTwo(handler, isFn, self, arg1, arg2) {\n                  if (isFn) handler.call(self, arg1, arg2);else {\n                    var len = handler.length;\n                    var listeners = arrayClone(handler, len);\n\n                    for (var i = 0; i < len; ++i) {\n                      listeners[i].call(self, arg1, arg2);\n                    }\n                  }\n                }\n\n                function emitThree(handler, isFn, self, arg1, arg2, arg3) {\n                  if (isFn) handler.call(self, arg1, arg2, arg3);else {\n                    var len = handler.length;\n                    var listeners = arrayClone(handler, len);\n\n                    for (var i = 0; i < len; ++i) {\n                      listeners[i].call(self, arg1, arg2, arg3);\n                    }\n                  }\n                }\n\n                function emitMany(handler, isFn, self, args) {\n                  if (isFn) handler.apply(self, args);else {\n                    var len = handler.length;\n                    var listeners = arrayClone(handler, len);\n\n                    for (var i = 0; i < len; ++i) {\n                      listeners[i].apply(self, args);\n                    }\n                  }\n                }\n\n                EventEmitter.prototype.emit = function emit(type) {\n                  var er, handler, len, args, i, events;\n                  var doError = type === 'error';\n                  events = this._events;\n                  if (events) doError = doError && events.error == null;else if (!doError) return false; // If there is no 'error' event listener then throw.\n\n                  if (doError) {\n                    if (arguments.length > 1) er = arguments[1];\n\n                    if (er instanceof Error) {\n                      throw er; // Unhandled 'error' event\n                    } else {\n                      // At least give some kind of context to the user\n                      var err = new Error('Unhandled \"error\" event. (' + er + ')');\n                      err.context = er;\n                      throw err;\n                    }\n\n                    return false;\n                  }\n\n                  handler = events[type];\n                  if (!handler) return false;\n                  var isFn = typeof handler === 'function';\n                  len = arguments.length;\n\n                  switch (len) {\n                    // fast cases\n                    case 1:\n                      emitNone(handler, isFn, this);\n                      break;\n\n                    case 2:\n                      emitOne(handler, isFn, this, arguments[1]);\n                      break;\n\n                    case 3:\n                      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n                      break;\n\n                    case 4:\n                      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n                      break;\n                    // slower\n\n                    default:\n                      args = new Array(len - 1);\n\n                      for (i = 1; i < len; i++) {\n                        args[i - 1] = arguments[i];\n                      }\n\n                      emitMany(handler, isFn, this, args);\n                  }\n\n                  return true;\n                };\n\n                function _addListener(target, type, listener, prepend) {\n                  var m;\n                  var events;\n                  var existing;\n                  if (typeof listener !== 'function') throw new TypeError('\"listener\" argument must be a function');\n                  events = target._events;\n\n                  if (!events) {\n                    events = target._events = objectCreate(null);\n                    target._eventsCount = 0;\n                  } else {\n                    // To avoid recursion in the case that type === \"newListener\"! Before\n                    // adding it to the listeners, first emit \"newListener\".\n                    if (events.newListener) {\n                      target.emit('newListener', type, listener.listener ? listener.listener : listener); // Re-assign `events` because a newListener handler could have caused the\n                      // this._events to be assigned to a new object\n\n                      events = target._events;\n                    }\n\n                    existing = events[type];\n                  }\n\n                  if (!existing) {\n                    // Optimize the case of one listener. Don't need the extra array object.\n                    existing = events[type] = listener;\n                    ++target._eventsCount;\n                  } else {\n                    if (typeof existing === 'function') {\n                      // Adding the second element, need to change to array.\n                      existing = events[type] = prepend ? [listener, existing] : [existing, listener];\n                    } else {\n                      // If we've already got an array, just append.\n                      if (prepend) {\n                        existing.unshift(listener);\n                      } else {\n                        existing.push(listener);\n                      }\n                    } // Check for listener leak\n\n\n                    if (!existing.warned) {\n                      m = $getMaxListeners(target);\n\n                      if (m && m > 0 && existing.length > m) {\n                        existing.warned = true;\n                        var w = new Error('Possible EventEmitter memory leak detected. ' + existing.length + ' \"' + String(type) + '\" listeners ' + 'added. Use emitter.setMaxListeners() to ' + 'increase limit.');\n                        w.name = 'MaxListenersExceededWarning';\n                        w.emitter = target;\n                        w.type = type;\n                        w.count = existing.length;\n\n                        if ((typeof console === \"undefined\" ? \"undefined\" : _typeof(console)) === 'object' && console.warn) {\n                          console.warn('%s: %s', w.name, w.message);\n                        }\n                      }\n                    }\n                  }\n\n                  return target;\n                }\n\n                EventEmitter.prototype.addListener = function addListener(type, listener) {\n                  return _addListener(this, type, listener, false);\n                };\n\n                EventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\n                EventEmitter.prototype.prependListener = function prependListener(type, listener) {\n                  return _addListener(this, type, listener, true);\n                };\n\n                function onceWrapper() {\n                  if (!this.fired) {\n                    this.target.removeListener(this.type, this.wrapFn);\n                    this.fired = true;\n\n                    switch (arguments.length) {\n                      case 0:\n                        return this.listener.call(this.target);\n\n                      case 1:\n                        return this.listener.call(this.target, arguments[0]);\n\n                      case 2:\n                        return this.listener.call(this.target, arguments[0], arguments[1]);\n\n                      case 3:\n                        return this.listener.call(this.target, arguments[0], arguments[1], arguments[2]);\n\n                      default:\n                        var args = new Array(arguments.length);\n\n                        for (var i = 0; i < args.length; ++i) {\n                          args[i] = arguments[i];\n                        }\n\n                        this.listener.apply(this.target, args);\n                    }\n                  }\n                }\n\n                function _onceWrap(target, type, listener) {\n                  var state = {\n                    fired: false,\n                    wrapFn: undefined,\n                    target: target,\n                    type: type,\n                    listener: listener\n                  };\n                  var wrapped = bind.call(onceWrapper, state);\n                  wrapped.listener = listener;\n                  state.wrapFn = wrapped;\n                  return wrapped;\n                }\n\n                EventEmitter.prototype.once = function once(type, listener) {\n                  if (typeof listener !== 'function') throw new TypeError('\"listener\" argument must be a function');\n                  this.on(type, _onceWrap(this, type, listener));\n                  return this;\n                };\n\n                EventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {\n                  if (typeof listener !== 'function') throw new TypeError('\"listener\" argument must be a function');\n                  this.prependListener(type, _onceWrap(this, type, listener));\n                  return this;\n                }; // Emits a 'removeListener' event if and only if the listener was removed.\n\n\n                EventEmitter.prototype.removeListener = function removeListener(type, listener) {\n                  var list, events, position, i, originalListener;\n                  if (typeof listener !== 'function') throw new TypeError('\"listener\" argument must be a function');\n                  events = this._events;\n                  if (!events) return this;\n                  list = events[type];\n                  if (!list) return this;\n\n                  if (list === listener || list.listener === listener) {\n                    if (--this._eventsCount === 0) this._events = objectCreate(null);else {\n                      delete events[type];\n                      if (events.removeListener) this.emit('removeListener', type, list.listener || listener);\n                    }\n                  } else if (typeof list !== 'function') {\n                    position = -1;\n\n                    for (i = list.length - 1; i >= 0; i--) {\n                      if (list[i] === listener || list[i].listener === listener) {\n                        originalListener = list[i].listener;\n                        position = i;\n                        break;\n                      }\n                    }\n\n                    if (position < 0) return this;\n                    if (position === 0) list.shift();else spliceOne(list, position);\n                    if (list.length === 1) events[type] = list[0];\n                    if (events.removeListener) this.emit('removeListener', type, originalListener || listener);\n                  }\n\n                  return this;\n                };\n\n                EventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {\n                  var listeners, events, i;\n                  events = this._events;\n                  if (!events) return this; // not listening for removeListener, no need to emit\n\n                  if (!events.removeListener) {\n                    if (arguments.length === 0) {\n                      this._events = objectCreate(null);\n                      this._eventsCount = 0;\n                    } else if (events[type]) {\n                      if (--this._eventsCount === 0) this._events = objectCreate(null);else delete events[type];\n                    }\n\n                    return this;\n                  } // emit removeListener for all listeners on all events\n\n\n                  if (arguments.length === 0) {\n                    var keys = objectKeys(events);\n                    var key;\n\n                    for (i = 0; i < keys.length; ++i) {\n                      key = keys[i];\n                      if (key === 'removeListener') continue;\n                      this.removeAllListeners(key);\n                    }\n\n                    this.removeAllListeners('removeListener');\n                    this._events = objectCreate(null);\n                    this._eventsCount = 0;\n                    return this;\n                  }\n\n                  listeners = events[type];\n\n                  if (typeof listeners === 'function') {\n                    this.removeListener(type, listeners);\n                  } else if (listeners) {\n                    // LIFO order\n                    for (i = listeners.length - 1; i >= 0; i--) {\n                      this.removeListener(type, listeners[i]);\n                    }\n                  }\n\n                  return this;\n                };\n\n                function _listeners(target, type, unwrap) {\n                  var events = target._events;\n                  if (!events) return [];\n                  var evlistener = events[type];\n                  if (!evlistener) return [];\n                  if (typeof evlistener === 'function') return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n                  return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n                }\n\n                EventEmitter.prototype.listeners = function listeners(type) {\n                  return _listeners(this, type, true);\n                };\n\n                EventEmitter.prototype.rawListeners = function rawListeners(type) {\n                  return _listeners(this, type, false);\n                };\n\n                EventEmitter.listenerCount = function (emitter, type) {\n                  if (typeof emitter.listenerCount === 'function') {\n                    return emitter.listenerCount(type);\n                  } else {\n                    return listenerCount.call(emitter, type);\n                  }\n                };\n\n                EventEmitter.prototype.listenerCount = listenerCount;\n\n                function listenerCount(type) {\n                  var events = this._events;\n\n                  if (events) {\n                    var evlistener = events[type];\n\n                    if (typeof evlistener === 'function') {\n                      return 1;\n                    } else if (evlistener) {\n                      return evlistener.length;\n                    }\n                  }\n\n                  return 0;\n                }\n\n                EventEmitter.prototype.eventNames = function eventNames() {\n                  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n                }; // About 1.5x faster than the two-arg version of Array#splice().\n\n\n                function spliceOne(list, index) {\n                  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {\n                    list[i] = list[k];\n                  }\n\n                  list.pop();\n                }\n\n                function arrayClone(arr, n) {\n                  var copy = new Array(n);\n\n                  for (var i = 0; i < n; ++i) {\n                    copy[i] = arr[i];\n                  }\n\n                  return copy;\n                }\n\n                function unwrapListeners(arr) {\n                  var ret = new Array(arr.length);\n\n                  for (var i = 0; i < ret.length; ++i) {\n                    ret[i] = arr[i].listener || arr[i];\n                  }\n\n                  return ret;\n                }\n\n                function objectCreatePolyfill(proto) {\n                  var F = function F() {};\n\n                  F.prototype = proto;\n                  return new F();\n                }\n\n                function objectKeysPolyfill(obj) {\n                  var keys = [];\n\n                  for (var k in obj) {\n                    if (Object.prototype.hasOwnProperty.call(obj, k)) {\n                      keys.push(k);\n                    }\n                  }\n\n                  return k;\n                }\n\n                function functionBindPolyfill(context) {\n                  var fn = this;\n                  return function () {\n                    return fn.apply(context, arguments);\n                  };\n                }\n              }, {}],\n              26: [function (require, module, exports) {\n                \"use strict\";\n\n                var __extends = this && this.__extends || function () {\n                  var _extendStatics2 = function extendStatics(d, b) {\n                    _extendStatics2 = Object.setPrototypeOf || {\n                      __proto__: []\n                    } instanceof Array && function (d, b) {\n                      d.__proto__ = b;\n                    } || function (d, b) {\n                      for (var p in b) {\n                        if (b.hasOwnProperty(p)) d[p] = b[p];\n                      }\n                    };\n\n                    return _extendStatics2(d, b);\n                  };\n\n                  return function (d, b) {\n                    _extendStatics2(d, b);\n\n                    function __() {\n                      this.constructor = d;\n                    }\n\n                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n                  };\n                }();\n\n                var __importDefault = this && this.__importDefault || function (mod) {\n                  return mod && mod.__esModule ? mod : {\n                    \"default\": mod\n                  };\n                };\n\n                Object.defineProperty(exports, \"__esModule\", {\n                  value: true\n                });\n\n                var MultiplexHandler_1 = __importDefault(require(\"./MultiplexHandler\"));\n\n                var CollectingHandler =\n                /** @class */\n                function (_super) {\n                  __extends(CollectingHandler, _super);\n\n                  function CollectingHandler(cbs) {\n                    if (cbs === void 0) {\n                      cbs = {};\n                    }\n\n                    var _this = _super.call(this, function (name) {\n                      var _a;\n\n                      var args = [];\n\n                      for (var _i = 1; _i < arguments.length; _i++) {\n                        args[_i - 1] = arguments[_i];\n                      }\n\n                      _this.events.push([name].concat(args)); // @ts-ignore\n\n\n                      if (_this._cbs[name]) (_a = _this._cbs)[name].apply(_a, args);\n                    }) || this;\n\n                    _this._cbs = cbs;\n                    _this.events = [];\n                    return _this;\n                  }\n\n                  CollectingHandler.prototype.onreset = function () {\n                    this.events = [];\n                    if (this._cbs.onreset) this._cbs.onreset();\n                  };\n\n                  CollectingHandler.prototype.restart = function () {\n                    var _a;\n\n                    if (this._cbs.onreset) this._cbs.onreset();\n\n                    for (var i = 0; i < this.events.length; i++) {\n                      var _b = this.events[i],\n                          name_1 = _b[0],\n                          args = _b.slice(1);\n\n                      if (!this._cbs[name_1]) {\n                        continue;\n                      } // @ts-ignore\n\n\n                      (_a = this._cbs)[name_1].apply(_a, args);\n                    }\n                  };\n\n                  return CollectingHandler;\n                }(MultiplexHandler_1[\"default\"]);\n\n                exports.CollectingHandler = CollectingHandler;\n              }, {\n                \"./MultiplexHandler\": 28\n              }],\n              27: [function (require, module, exports) {\n                \"use strict\";\n\n                var __extends = this && this.__extends || function () {\n                  var _extendStatics3 = function extendStatics(d, b) {\n                    _extendStatics3 = Object.setPrototypeOf || {\n                      __proto__: []\n                    } instanceof Array && function (d, b) {\n                      d.__proto__ = b;\n                    } || function (d, b) {\n                      for (var p in b) {\n                        if (b.hasOwnProperty(p)) d[p] = b[p];\n                      }\n                    };\n\n                    return _extendStatics3(d, b);\n                  };\n\n                  return function (d, b) {\n                    _extendStatics3(d, b);\n\n                    function __() {\n                      this.constructor = d;\n                    }\n\n                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n                  };\n                }();\n\n                var __importDefault = this && this.__importDefault || function (mod) {\n                  return mod && mod.__esModule ? mod : {\n                    \"default\": mod\n                  };\n                };\n\n                var __importStar = this && this.__importStar || function (mod) {\n                  if (mod && mod.__esModule) return mod;\n                  var result = {};\n                  if (mod != null) for (var k in mod) {\n                    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n                  }\n                  result[\"default\"] = mod;\n                  return result;\n                };\n\n                Object.defineProperty(exports, \"__esModule\", {\n                  value: true\n                });\n\n                var domhandler_1 = __importDefault(require(\"domhandler\"));\n\n                var DomUtils = __importStar(require(\"domutils\"));\n\n                var Parser_1 = require(\"./Parser\"); //TODO: Consume data as it is coming in\n\n\n                var FeedHandler =\n                /** @class */\n                function (_super) {\n                  __extends(FeedHandler, _super);\n                  /**\n                  *\n                  * @param callback\n                  * @param options\n                  */\n\n\n                  function FeedHandler(callback, options) {\n                    var _this = this;\n\n                    if (_typeof(callback) === \"object\" && callback !== null) {\n                      callback = undefined;\n                      options = callback;\n                    }\n\n                    _this = _super.call(this, callback, options) || this;\n                    return _this;\n                  }\n\n                  FeedHandler.prototype.onend = function () {\n                    var feed = {};\n                    var feedRoot = getOneElement(isValidFeed, this.dom);\n\n                    if (feedRoot) {\n                      if (feedRoot.name === \"feed\") {\n                        var childs = feedRoot.children;\n                        feed.type = \"atom\";\n                        addConditionally(feed, \"id\", \"id\", childs);\n                        addConditionally(feed, \"title\", \"title\", childs);\n                        var href = getAttribute(\"href\", getOneElement(\"link\", childs));\n\n                        if (href) {\n                          feed.link = href;\n                        }\n\n                        addConditionally(feed, \"description\", \"subtitle\", childs);\n                        var updated = fetch(\"updated\", childs);\n\n                        if (updated) {\n                          feed.updated = new Date(updated);\n                        }\n\n                        addConditionally(feed, \"author\", \"email\", childs, true);\n                        feed.items = getElements(\"entry\", childs).map(function (item) {\n                          var entry = {};\n                          var children = item.children;\n                          addConditionally(entry, \"id\", \"id\", children);\n                          addConditionally(entry, \"title\", \"title\", children);\n                          var href = getAttribute(\"href\", getOneElement(\"link\", children));\n\n                          if (href) {\n                            entry.link = href;\n                          }\n\n                          var description = fetch(\"summary\", children) || fetch(\"content\", children);\n\n                          if (description) {\n                            entry.description = description;\n                          }\n\n                          var pubDate = fetch(\"updated\", children);\n\n                          if (pubDate) {\n                            entry.pubDate = new Date(pubDate);\n                          }\n\n                          return entry;\n                        });\n                      } else {\n                        var childs = getOneElement(\"channel\", feedRoot.children).children;\n                        feed.type = feedRoot.name.substr(0, 3);\n                        feed.id = \"\";\n                        addConditionally(feed, \"title\", \"title\", childs);\n                        addConditionally(feed, \"link\", \"link\", childs);\n                        addConditionally(feed, \"description\", \"description\", childs);\n                        var updated = fetch(\"lastBuildDate\", childs);\n\n                        if (updated) {\n                          feed.updated = new Date(updated);\n                        }\n\n                        addConditionally(feed, \"author\", \"managingEditor\", childs, true);\n                        feed.items = getElements(\"item\", feedRoot.children).map(function (item) {\n                          var entry = {};\n                          var children = item.children;\n                          addConditionally(entry, \"id\", \"guid\", children);\n                          addConditionally(entry, \"title\", \"title\", children);\n                          addConditionally(entry, \"link\", \"link\", children);\n                          addConditionally(entry, \"description\", \"description\", children);\n                          var pubDate = fetch(\"pubDate\", children);\n                          if (pubDate) entry.pubDate = new Date(pubDate);\n                          return entry;\n                        });\n                      }\n                    }\n\n                    this.feed = feed;\n                    this.handleCallback(feedRoot ? null : Error(\"couldn't find root of feed\"));\n                  };\n\n                  return FeedHandler;\n                }(domhandler_1[\"default\"]);\n\n                exports.FeedHandler = FeedHandler;\n\n                function getElements(what, where) {\n                  return DomUtils.getElementsByTagName(what, where, true);\n                }\n\n                function getOneElement(what, where) {\n                  return DomUtils.getElementsByTagName(what, where, true, 1)[0];\n                }\n\n                function fetch(what, where, recurse) {\n                  if (recurse === void 0) {\n                    recurse = false;\n                  }\n\n                  return DomUtils.getText(DomUtils.getElementsByTagName(what, where, recurse, 1)).trim();\n                }\n\n                function getAttribute(name, elem) {\n                  if (!elem) {\n                    return null;\n                  }\n\n                  var attribs = elem.attribs;\n                  return attribs[name];\n                }\n\n                function addConditionally(obj, prop, what, where, recurse) {\n                  if (recurse === void 0) {\n                    recurse = false;\n                  }\n\n                  var tmp = fetch(what, where, recurse); // @ts-ignore\n\n                  if (tmp) obj[prop] = tmp;\n                }\n\n                function isValidFeed(value) {\n                  return value === \"rss\" || value === \"feed\" || value === \"rdf:RDF\";\n                }\n\n                var defaultOptions = {\n                  xmlMode: true\n                };\n                /**\n                * Parse a feed.\n                *\n                * @param feed The feed that should be parsed, as a string.\n                * @param options Optionally, options for parsing. When using this option, you probably want to set `xmlMode` to `true`.\n                */\n\n                function parseFeed(feed, options) {\n                  if (options === void 0) {\n                    options = defaultOptions;\n                  }\n\n                  var handler = new FeedHandler(options);\n                  new Parser_1.Parser(handler, options).end(feed);\n                  return handler.feed;\n                }\n\n                exports.parseFeed = parseFeed;\n              }, {\n                \"./Parser\": 29,\n                \"domhandler\": 7,\n                \"domutils\": 10\n              }],\n              28: [function (require, module, exports) {\n                \"use strict\";\n\n                Object.defineProperty(exports, \"__esModule\", {\n                  value: true\n                });\n                /**\n                * Calls a specific handler function for all events that are encountered.\n                *\n                * @param func — The function to multiplex all events to.\n                */\n\n                var MultiplexHandler =\n                /** @class */\n                function () {\n                  function MultiplexHandler(func) {\n                    this._func = func;\n                  }\n                  /* Format: eventname: number of arguments */\n\n\n                  MultiplexHandler.prototype.onattribute = function (name, value) {\n                    this._func(\"onattribute\", name, value);\n                  };\n\n                  MultiplexHandler.prototype.oncdatastart = function () {\n                    this._func(\"oncdatastart\");\n                  };\n\n                  MultiplexHandler.prototype.oncdataend = function () {\n                    this._func(\"oncdataend\");\n                  };\n\n                  MultiplexHandler.prototype.ontext = function (text) {\n                    this._func(\"ontext\", text);\n                  };\n\n                  MultiplexHandler.prototype.onprocessinginstruction = function (name, value) {\n                    this._func(\"onprocessinginstruction\", name, value);\n                  };\n\n                  MultiplexHandler.prototype.oncomment = function (comment) {\n                    this._func(\"oncomment\", comment);\n                  };\n\n                  MultiplexHandler.prototype.oncommentend = function () {\n                    this._func(\"oncommentend\");\n                  };\n\n                  MultiplexHandler.prototype.onclosetag = function (name) {\n                    this._func(\"onclosetag\", name);\n                  };\n\n                  MultiplexHandler.prototype.onopentag = function (name, attribs) {\n                    this._func(\"onopentag\", name, attribs);\n                  };\n\n                  MultiplexHandler.prototype.onopentagname = function (name) {\n                    this._func(\"onopentagname\", name);\n                  };\n\n                  MultiplexHandler.prototype.onerror = function (error) {\n                    this._func(\"onerror\", error);\n                  };\n\n                  MultiplexHandler.prototype.onend = function () {\n                    this._func(\"onend\");\n                  };\n\n                  MultiplexHandler.prototype.onparserinit = function (parser) {\n                    this._func(\"onparserinit\", parser);\n                  };\n\n                  MultiplexHandler.prototype.onreset = function () {\n                    this._func(\"onreset\");\n                  };\n\n                  return MultiplexHandler;\n                }();\n\n                exports[\"default\"] = MultiplexHandler;\n              }, {}],\n              29: [function (require, module, exports) {\n                \"use strict\";\n\n                var __extends = this && this.__extends || function () {\n                  var _extendStatics4 = function extendStatics(d, b) {\n                    _extendStatics4 = Object.setPrototypeOf || {\n                      __proto__: []\n                    } instanceof Array && function (d, b) {\n                      d.__proto__ = b;\n                    } || function (d, b) {\n                      for (var p in b) {\n                        if (b.hasOwnProperty(p)) d[p] = b[p];\n                      }\n                    };\n\n                    return _extendStatics4(d, b);\n                  };\n\n                  return function (d, b) {\n                    _extendStatics4(d, b);\n\n                    function __() {\n                      this.constructor = d;\n                    }\n\n                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n                  };\n                }();\n\n                var __importDefault = this && this.__importDefault || function (mod) {\n                  return mod && mod.__esModule ? mod : {\n                    \"default\": mod\n                  };\n                };\n\n                Object.defineProperty(exports, \"__esModule\", {\n                  value: true\n                });\n\n                var Tokenizer_1 = __importDefault(require(\"./Tokenizer\"));\n\n                var events_1 = require(\"events\");\n\n                var formTags = new Set([\"input\", \"option\", \"optgroup\", \"select\", \"button\", \"datalist\", \"textarea\"]);\n                var pTag = new Set([\"p\"]);\n                var openImpliesClose = {\n                  tr: new Set([\"tr\", \"th\", \"td\"]),\n                  th: new Set([\"th\"]),\n                  td: new Set([\"thead\", \"th\", \"td\"]),\n                  body: new Set([\"head\", \"link\", \"script\"]),\n                  li: new Set([\"li\"]),\n                  p: pTag,\n                  h1: pTag,\n                  h2: pTag,\n                  h3: pTag,\n                  h4: pTag,\n                  h5: pTag,\n                  h6: pTag,\n                  select: formTags,\n                  input: formTags,\n                  output: formTags,\n                  button: formTags,\n                  datalist: formTags,\n                  textarea: formTags,\n                  option: new Set([\"option\"]),\n                  optgroup: new Set([\"optgroup\", \"option\"]),\n                  dd: new Set([\"dt\", \"dd\"]),\n                  dt: new Set([\"dt\", \"dd\"]),\n                  address: pTag,\n                  article: pTag,\n                  aside: pTag,\n                  blockquote: pTag,\n                  details: pTag,\n                  div: pTag,\n                  dl: pTag,\n                  fieldset: pTag,\n                  figcaption: pTag,\n                  figure: pTag,\n                  footer: pTag,\n                  form: pTag,\n                  header: pTag,\n                  hr: pTag,\n                  main: pTag,\n                  nav: pTag,\n                  ol: pTag,\n                  pre: pTag,\n                  section: pTag,\n                  table: pTag,\n                  ul: pTag,\n                  rt: new Set([\"rt\", \"rp\"]),\n                  rp: new Set([\"rt\", \"rp\"]),\n                  tbody: new Set([\"thead\", \"tbody\"]),\n                  tfoot: new Set([\"thead\", \"tbody\"])\n                };\n                var voidElements = new Set([\"area\", \"base\", \"basefont\", \"br\", \"col\", \"command\", \"embed\", \"frame\", \"hr\", \"img\", \"input\", \"isindex\", \"keygen\", \"link\", \"meta\", \"param\", \"source\", \"track\", \"wbr\"]);\n                var foreignContextElements = new Set([\"math\", \"svg\"]);\n                var htmlIntegrationElements = new Set([\"mi\", \"mo\", \"mn\", \"ms\", \"mtext\", \"annotation-xml\", \"foreignObject\", \"desc\", \"title\"]);\n                var reNameEnd = /\\s|\\//;\n\n                var Parser =\n                /** @class */\n                function (_super) {\n                  __extends(Parser, _super);\n\n                  function Parser(cbs, options) {\n                    var _this = _super.call(this) || this;\n\n                    _this._tagname = \"\";\n                    _this._attribname = \"\";\n                    _this._attribvalue = \"\";\n                    _this._attribs = null;\n                    _this._stack = [];\n                    _this._foreignContext = [];\n                    _this.startIndex = 0;\n                    _this.endIndex = null; // Aliases for backwards compatibility\n\n                    _this.parseChunk = Parser.prototype.write;\n                    _this.done = Parser.prototype.end;\n                    _this._options = options || {};\n                    _this._cbs = cbs || {};\n                    _this._tagname = \"\";\n                    _this._attribname = \"\";\n                    _this._attribvalue = \"\";\n                    _this._attribs = null;\n                    _this._stack = [];\n                    _this._foreignContext = [];\n                    _this.startIndex = 0;\n                    _this.endIndex = null;\n                    _this._lowerCaseTagNames = \"lowerCaseTags\" in _this._options ? !!_this._options.lowerCaseTags : !_this._options.xmlMode;\n                    _this._lowerCaseAttributeNames = \"lowerCaseAttributeNames\" in _this._options ? !!_this._options.lowerCaseAttributeNames : !_this._options.xmlMode;\n                    _this._tokenizer = new (_this._options.Tokenizer || Tokenizer_1[\"default\"])(_this._options, _this);\n                    if (_this._cbs.onparserinit) _this._cbs.onparserinit(_this);\n                    return _this;\n                  }\n\n                  Parser.prototype._updatePosition = function (initialOffset) {\n                    if (this.endIndex === null) {\n                      if (this._tokenizer._sectionStart <= initialOffset) {\n                        this.startIndex = 0;\n                      } else {\n                        this.startIndex = this._tokenizer._sectionStart - initialOffset;\n                      }\n                    } else this.startIndex = this.endIndex + 1;\n\n                    this.endIndex = this._tokenizer.getAbsoluteIndex();\n                  }; //Tokenizer event handlers\n\n\n                  Parser.prototype.ontext = function (data) {\n                    this._updatePosition(1); // @ts-ignore\n\n\n                    this.endIndex--;\n                    if (this._cbs.ontext) this._cbs.ontext(data);\n                  };\n\n                  Parser.prototype.onopentagname = function (name) {\n                    if (this._lowerCaseTagNames) {\n                      name = name.toLowerCase();\n                    }\n\n                    this._tagname = name;\n\n                    if (!this._options.xmlMode && Object.prototype.hasOwnProperty.call(openImpliesClose, name)) {\n                      for (var el = void 0; // @ts-ignore\n                      openImpliesClose[name].has(el = this._stack[this._stack.length - 1]); this.onclosetag(el)) {\n                        ;\n                      }\n                    }\n\n                    if (this._options.xmlMode || !voidElements.has(name)) {\n                      this._stack.push(name);\n\n                      if (foreignContextElements.has(name)) {\n                        this._foreignContext.push(true);\n                      } else if (htmlIntegrationElements.has(name)) {\n                        this._foreignContext.push(false);\n                      }\n                    }\n\n                    if (this._cbs.onopentagname) this._cbs.onopentagname(name);\n                    if (this._cbs.onopentag) this._attribs = {};\n                  };\n\n                  Parser.prototype.onopentagend = function () {\n                    this._updatePosition(1);\n\n                    if (this._attribs) {\n                      if (this._cbs.onopentag) {\n                        this._cbs.onopentag(this._tagname, this._attribs);\n                      }\n\n                      this._attribs = null;\n                    }\n\n                    if (!this._options.xmlMode && this._cbs.onclosetag && voidElements.has(this._tagname)) {\n                      this._cbs.onclosetag(this._tagname);\n                    }\n\n                    this._tagname = \"\";\n                  };\n\n                  Parser.prototype.onclosetag = function (name) {\n                    this._updatePosition(1);\n\n                    if (this._lowerCaseTagNames) {\n                      name = name.toLowerCase();\n                    }\n\n                    if (foreignContextElements.has(name) || htmlIntegrationElements.has(name)) {\n                      this._foreignContext.pop();\n                    }\n\n                    if (this._stack.length && (this._options.xmlMode || !voidElements.has(name))) {\n                      var pos = this._stack.lastIndexOf(name);\n\n                      if (pos !== -1) {\n                        if (this._cbs.onclosetag) {\n                          pos = this._stack.length - pos; // @ts-ignore\n\n                          while (pos--) {\n                            this._cbs.onclosetag(this._stack.pop());\n                          }\n                        } else this._stack.length = pos;\n                      } else if (name === \"p\" && !this._options.xmlMode) {\n                        this.onopentagname(name);\n\n                        this._closeCurrentTag();\n                      }\n                    } else if (!this._options.xmlMode && (name === \"br\" || name === \"p\")) {\n                      this.onopentagname(name);\n\n                      this._closeCurrentTag();\n                    }\n                  };\n\n                  Parser.prototype.onselfclosingtag = function () {\n                    if (this._options.xmlMode || this._options.recognizeSelfClosing || this._foreignContext[this._foreignContext.length - 1]) {\n                      this._closeCurrentTag();\n                    } else {\n                      this.onopentagend();\n                    }\n                  };\n\n                  Parser.prototype._closeCurrentTag = function () {\n                    var name = this._tagname;\n                    this.onopentagend(); //self-closing tags will be on the top of the stack\n                    //(cheaper check than in onclosetag)\n\n                    if (this._stack[this._stack.length - 1] === name) {\n                      if (this._cbs.onclosetag) {\n                        this._cbs.onclosetag(name);\n                      }\n\n                      this._stack.pop();\n                    }\n                  };\n\n                  Parser.prototype.onattribname = function (name) {\n                    if (this._lowerCaseAttributeNames) {\n                      name = name.toLowerCase();\n                    }\n\n                    this._attribname = name;\n                  };\n\n                  Parser.prototype.onattribdata = function (value) {\n                    this._attribvalue += value;\n                  };\n\n                  Parser.prototype.onattribend = function () {\n                    if (this._cbs.onattribute) this._cbs.onattribute(this._attribname, this._attribvalue);\n\n                    if (this._attribs && !Object.prototype.hasOwnProperty.call(this._attribs, this._attribname)) {\n                      this._attribs[this._attribname] = this._attribvalue;\n                    }\n\n                    this._attribname = \"\";\n                    this._attribvalue = \"\";\n                  };\n\n                  Parser.prototype._getInstructionName = function (value) {\n                    var idx = value.search(reNameEnd);\n                    var name = idx < 0 ? value : value.substr(0, idx);\n\n                    if (this._lowerCaseTagNames) {\n                      name = name.toLowerCase();\n                    }\n\n                    return name;\n                  };\n\n                  Parser.prototype.ondeclaration = function (value) {\n                    if (this._cbs.onprocessinginstruction) {\n                      var name_1 = this._getInstructionName(value);\n\n                      this._cbs.onprocessinginstruction(\"!\" + name_1, \"!\" + value);\n                    }\n                  };\n\n                  Parser.prototype.onprocessinginstruction = function (value) {\n                    if (this._cbs.onprocessinginstruction) {\n                      var name_2 = this._getInstructionName(value);\n\n                      this._cbs.onprocessinginstruction(\"?\" + name_2, \"?\" + value);\n                    }\n                  };\n\n                  Parser.prototype.oncomment = function (value) {\n                    this._updatePosition(4);\n\n                    if (this._cbs.oncomment) this._cbs.oncomment(value);\n                    if (this._cbs.oncommentend) this._cbs.oncommentend();\n                  };\n\n                  Parser.prototype.oncdata = function (value) {\n                    this._updatePosition(1);\n\n                    if (this._options.xmlMode || this._options.recognizeCDATA) {\n                      if (this._cbs.oncdatastart) this._cbs.oncdatastart();\n                      if (this._cbs.ontext) this._cbs.ontext(value);\n                      if (this._cbs.oncdataend) this._cbs.oncdataend();\n                    } else {\n                      this.oncomment(\"[CDATA[\" + value + \"]]\");\n                    }\n                  };\n\n                  Parser.prototype.onerror = function (err) {\n                    if (this._cbs.onerror) this._cbs.onerror(err);\n                  };\n\n                  Parser.prototype.onend = function () {\n                    if (this._cbs.onclosetag) {\n                      for (var i = this._stack.length; i > 0; this._cbs.onclosetag(this._stack[--i])) {\n                        ;\n                      }\n                    }\n\n                    if (this._cbs.onend) this._cbs.onend();\n                  }; //Resets the parser to a blank state, ready to parse a new HTML document\n\n\n                  Parser.prototype.reset = function () {\n                    if (this._cbs.onreset) this._cbs.onreset();\n\n                    this._tokenizer.reset();\n\n                    this._tagname = \"\";\n                    this._attribname = \"\";\n                    this._attribs = null;\n                    this._stack = [];\n                    if (this._cbs.onparserinit) this._cbs.onparserinit(this);\n                  }; //Parses a complete HTML document and pushes it to the handler\n\n\n                  Parser.prototype.parseComplete = function (data) {\n                    this.reset();\n                    this.end(data);\n                  };\n\n                  Parser.prototype.write = function (chunk) {\n                    this._tokenizer.write(chunk);\n                  };\n\n                  Parser.prototype.end = function (chunk) {\n                    this._tokenizer.end(chunk);\n                  };\n\n                  Parser.prototype.pause = function () {\n                    this._tokenizer.pause();\n                  };\n\n                  Parser.prototype.resume = function () {\n                    this._tokenizer.resume();\n                  };\n\n                  return Parser;\n                }(events_1.EventEmitter);\n\n                exports.Parser = Parser;\n              }, {\n                \"./Tokenizer\": 30,\n                \"events\": 25\n              }],\n              30: [function (require, module, exports) {\n                \"use strict\";\n\n                var __importDefault = this && this.__importDefault || function (mod) {\n                  return mod && mod.__esModule ? mod : {\n                    \"default\": mod\n                  };\n                };\n\n                Object.defineProperty(exports, \"__esModule\", {\n                  value: true\n                });\n\n                var decode_codepoint_1 = __importDefault(require(\"entities/lib/decode_codepoint\"));\n\n                var entities_json_1 = __importDefault(require(\"entities/lib/maps/entities.json\"));\n\n                var legacy_json_1 = __importDefault(require(\"entities/lib/maps/legacy.json\"));\n\n                var xml_json_1 = __importDefault(require(\"entities/lib/maps/xml.json\"));\n\n                function whitespace(c) {\n                  return c === \" \" || c === \"\\n\" || c === \"\\t\" || c === \"\\f\" || c === \"\\r\";\n                }\n\n                function ifElseState(upper, SUCCESS, FAILURE) {\n                  var lower = upper.toLowerCase();\n\n                  if (upper === lower) {\n                    return function (t, c) {\n                      if (c === lower) {\n                        t._state = SUCCESS;\n                      } else {\n                        t._state = FAILURE;\n                        t._index--;\n                      }\n                    };\n                  } else {\n                    return function (t, c) {\n                      if (c === lower || c === upper) {\n                        t._state = SUCCESS;\n                      } else {\n                        t._state = FAILURE;\n                        t._index--;\n                      }\n                    };\n                  }\n                }\n\n                function consumeSpecialNameChar(upper, NEXT_STATE) {\n                  var lower = upper.toLowerCase();\n                  return function (t, c) {\n                    if (c === lower || c === upper) {\n                      t._state = NEXT_STATE;\n                    } else {\n                      t._state = 3\n                      /* InTagName */\n                      ;\n                      t._index--; //consume the token again\n                    }\n                  };\n                }\n\n                var stateBeforeCdata1 = ifElseState(\"C\", 23\n                /* BeforeCdata2 */\n                , 16\n                /* InDeclaration */\n                );\n                var stateBeforeCdata2 = ifElseState(\"D\", 24\n                /* BeforeCdata3 */\n                , 16\n                /* InDeclaration */\n                );\n                var stateBeforeCdata3 = ifElseState(\"A\", 25\n                /* BeforeCdata4 */\n                , 16\n                /* InDeclaration */\n                );\n                var stateBeforeCdata4 = ifElseState(\"T\", 26\n                /* BeforeCdata5 */\n                , 16\n                /* InDeclaration */\n                );\n                var stateBeforeCdata5 = ifElseState(\"A\", 27\n                /* BeforeCdata6 */\n                , 16\n                /* InDeclaration */\n                );\n                var stateBeforeScript1 = consumeSpecialNameChar(\"R\", 34\n                /* BeforeScript2 */\n                );\n                var stateBeforeScript2 = consumeSpecialNameChar(\"I\", 35\n                /* BeforeScript3 */\n                );\n                var stateBeforeScript3 = consumeSpecialNameChar(\"P\", 36\n                /* BeforeScript4 */\n                );\n                var stateBeforeScript4 = consumeSpecialNameChar(\"T\", 37\n                /* BeforeScript5 */\n                );\n                var stateAfterScript1 = ifElseState(\"R\", 39\n                /* AfterScript2 */\n                , 1\n                /* Text */\n                );\n                var stateAfterScript2 = ifElseState(\"I\", 40\n                /* AfterScript3 */\n                , 1\n                /* Text */\n                );\n                var stateAfterScript3 = ifElseState(\"P\", 41\n                /* AfterScript4 */\n                , 1\n                /* Text */\n                );\n                var stateAfterScript4 = ifElseState(\"T\", 42\n                /* AfterScript5 */\n                , 1\n                /* Text */\n                );\n                var stateBeforeStyle1 = consumeSpecialNameChar(\"Y\", 44\n                /* BeforeStyle2 */\n                );\n                var stateBeforeStyle2 = consumeSpecialNameChar(\"L\", 45\n                /* BeforeStyle3 */\n                );\n                var stateBeforeStyle3 = consumeSpecialNameChar(\"E\", 46\n                /* BeforeStyle4 */\n                );\n                var stateAfterStyle1 = ifElseState(\"Y\", 48\n                /* AfterStyle2 */\n                , 1\n                /* Text */\n                );\n                var stateAfterStyle2 = ifElseState(\"L\", 49\n                /* AfterStyle3 */\n                , 1\n                /* Text */\n                );\n                var stateAfterStyle3 = ifElseState(\"E\", 50\n                /* AfterStyle4 */\n                , 1\n                /* Text */\n                );\n                var stateBeforeEntity = ifElseState(\"#\", 52\n                /* BeforeNumericEntity */\n                , 53\n                /* InNamedEntity */\n                );\n                var stateBeforeNumericEntity = ifElseState(\"X\", 55\n                /* InHexEntity */\n                , 54\n                /* InNumericEntity */\n                );\n\n                var Tokenizer =\n                /** @class */\n                function () {\n                  function Tokenizer(options, cbs) {\n                    /** The current state the tokenizer is in. */\n                    this._state = 1\n                    /* Text */\n                    ;\n                    /** The read buffer. */\n\n                    this._buffer = \"\";\n                    /** The beginning of the section that is currently being read. */\n\n                    this._sectionStart = 0;\n                    /** The index within the buffer that we are currently looking at. */\n\n                    this._index = 0;\n                    /**\n                    * Data that has already been processed will be removed from the buffer occasionally.\n                    * `_bufferOffset` keeps track of how many characters have been removed, to make sure position information is accurate.\n                    */\n\n                    this._bufferOffset = 0;\n                    /** Some behavior, eg. when decoding entities, is done while we are in another state. This keeps track of the other state type. */\n\n                    this._baseState = 1\n                    /* Text */\n                    ;\n                    /** For special parsing behavior inside of script and style tags. */\n\n                    this._special = 1\n                    /* None */\n                    ;\n                    /** Indicates whether the tokenizer has been paused. */\n\n                    this._running = true;\n                    /** Indicates whether the tokenizer has finished running / `.end` has been called. */\n\n                    this._ended = false;\n                    this._cbs = cbs;\n                    this._xmlMode = !!(options && options.xmlMode);\n                    this._decodeEntities = !!(options && options.decodeEntities);\n                  }\n\n                  Tokenizer.prototype.reset = function () {\n                    this._state = 1\n                    /* Text */\n                    ;\n                    this._buffer = \"\";\n                    this._sectionStart = 0;\n                    this._index = 0;\n                    this._bufferOffset = 0;\n                    this._baseState = 1\n                    /* Text */\n                    ;\n                    this._special = 1\n                    /* None */\n                    ;\n                    this._running = true;\n                    this._ended = false;\n                  };\n\n                  Tokenizer.prototype._stateText = function (c) {\n                    if (c === \"<\") {\n                      if (this._index > this._sectionStart) {\n                        this._cbs.ontext(this._getSection());\n                      }\n\n                      this._state = 2\n                      /* BeforeTagName */\n                      ;\n                      this._sectionStart = this._index;\n                    } else if (this._decodeEntities && this._special === 1\n                    /* None */\n                    && c === \"&\") {\n                      if (this._index > this._sectionStart) {\n                        this._cbs.ontext(this._getSection());\n                      }\n\n                      this._baseState = 1\n                      /* Text */\n                      ;\n                      this._state = 51\n                      /* BeforeEntity */\n                      ;\n                      this._sectionStart = this._index;\n                    }\n                  };\n\n                  Tokenizer.prototype._stateBeforeTagName = function (c) {\n                    if (c === \"/\") {\n                      this._state = 5\n                      /* BeforeClosingTagName */\n                      ;\n                    } else if (c === \"<\") {\n                      this._cbs.ontext(this._getSection());\n\n                      this._sectionStart = this._index;\n                    } else if (c === \">\" || this._special !== 1\n                    /* None */\n                    || whitespace(c)) {\n                      this._state = 1\n                      /* Text */\n                      ;\n                    } else if (c === \"!\") {\n                      this._state = 15\n                      /* BeforeDeclaration */\n                      ;\n                      this._sectionStart = this._index + 1;\n                    } else if (c === \"?\") {\n                      this._state = 17\n                      /* InProcessingInstruction */\n                      ;\n                      this._sectionStart = this._index + 1;\n                    } else {\n                      this._state = !this._xmlMode && (c === \"s\" || c === \"S\") ? 31\n                      /* BeforeSpecial */\n                      : 3\n                      /* InTagName */\n                      ;\n                      this._sectionStart = this._index;\n                    }\n                  };\n\n                  Tokenizer.prototype._stateInTagName = function (c) {\n                    if (c === \"/\" || c === \">\" || whitespace(c)) {\n                      this._emitToken(\"onopentagname\");\n\n                      this._state = 8\n                      /* BeforeAttributeName */\n                      ;\n                      this._index--;\n                    }\n                  };\n\n                  Tokenizer.prototype._stateBeforeClosingTagName = function (c) {\n                    if (whitespace(c)) {// ignore\n                    } else if (c === \">\") {\n                      this._state = 1\n                      /* Text */\n                      ;\n                    } else if (this._special !== 1\n                    /* None */\n                    ) {\n                        if (c === \"s\" || c === \"S\") {\n                          this._state = 32\n                          /* BeforeSpecialEnd */\n                          ;\n                        } else {\n                          this._state = 1\n                          /* Text */\n                          ;\n                          this._index--;\n                        }\n                      } else {\n                      this._state = 6\n                      /* InClosingTagName */\n                      ;\n                      this._sectionStart = this._index;\n                    }\n                  };\n\n                  Tokenizer.prototype._stateInClosingTagName = function (c) {\n                    if (c === \">\" || whitespace(c)) {\n                      this._emitToken(\"onclosetag\");\n\n                      this._state = 7\n                      /* AfterClosingTagName */\n                      ;\n                      this._index--;\n                    }\n                  };\n\n                  Tokenizer.prototype._stateAfterClosingTagName = function (c) {\n                    //skip everything until \">\"\n                    if (c === \">\") {\n                      this._state = 1\n                      /* Text */\n                      ;\n                      this._sectionStart = this._index + 1;\n                    }\n                  };\n\n                  Tokenizer.prototype._stateBeforeAttributeName = function (c) {\n                    if (c === \">\") {\n                      this._cbs.onopentagend();\n\n                      this._state = 1\n                      /* Text */\n                      ;\n                      this._sectionStart = this._index + 1;\n                    } else if (c === \"/\") {\n                      this._state = 4\n                      /* InSelfClosingTag */\n                      ;\n                    } else if (!whitespace(c)) {\n                      this._state = 9\n                      /* InAttributeName */\n                      ;\n                      this._sectionStart = this._index;\n                    }\n                  };\n\n                  Tokenizer.prototype._stateInSelfClosingTag = function (c) {\n                    if (c === \">\") {\n                      this._cbs.onselfclosingtag();\n\n                      this._state = 1\n                      /* Text */\n                      ;\n                      this._sectionStart = this._index + 1;\n                    } else if (!whitespace(c)) {\n                      this._state = 8\n                      /* BeforeAttributeName */\n                      ;\n                      this._index--;\n                    }\n                  };\n\n                  Tokenizer.prototype._stateInAttributeName = function (c) {\n                    if (c === \"=\" || c === \"/\" || c === \">\" || whitespace(c)) {\n                      this._cbs.onattribname(this._getSection());\n\n                      this._sectionStart = -1;\n                      this._state = 10\n                      /* AfterAttributeName */\n                      ;\n                      this._index--;\n                    }\n                  };\n\n                  Tokenizer.prototype._stateAfterAttributeName = function (c) {\n                    if (c === \"=\") {\n                      this._state = 11\n                      /* BeforeAttributeValue */\n                      ;\n                    } else if (c === \"/\" || c === \">\") {\n                      this._cbs.onattribend();\n\n                      this._state = 8\n                      /* BeforeAttributeName */\n                      ;\n                      this._index--;\n                    } else if (!whitespace(c)) {\n                      this._cbs.onattribend();\n\n                      this._state = 9\n                      /* InAttributeName */\n                      ;\n                      this._sectionStart = this._index;\n                    }\n                  };\n\n                  Tokenizer.prototype._stateBeforeAttributeValue = function (c) {\n                    if (c === '\"') {\n                      this._state = 12\n                      /* InAttributeValueDq */\n                      ;\n                      this._sectionStart = this._index + 1;\n                    } else if (c === \"'\") {\n                      this._state = 13\n                      /* InAttributeValueSq */\n                      ;\n                      this._sectionStart = this._index + 1;\n                    } else if (!whitespace(c)) {\n                      this._state = 14\n                      /* InAttributeValueNq */\n                      ;\n                      this._sectionStart = this._index;\n                      this._index--; //reconsume token\n                    }\n                  };\n\n                  Tokenizer.prototype._stateInAttributeValueDoubleQuotes = function (c) {\n                    if (c === '\"') {\n                      this._emitToken(\"onattribdata\");\n\n                      this._cbs.onattribend();\n\n                      this._state = 8\n                      /* BeforeAttributeName */\n                      ;\n                    } else if (this._decodeEntities && c === \"&\") {\n                      this._emitToken(\"onattribdata\");\n\n                      this._baseState = this._state;\n                      this._state = 51\n                      /* BeforeEntity */\n                      ;\n                      this._sectionStart = this._index;\n                    }\n                  };\n\n                  Tokenizer.prototype._stateInAttributeValueSingleQuotes = function (c) {\n                    if (c === \"'\") {\n                      this._emitToken(\"onattribdata\");\n\n                      this._cbs.onattribend();\n\n                      this._state = 8\n                      /* BeforeAttributeName */\n                      ;\n                    } else if (this._decodeEntities && c === \"&\") {\n                      this._emitToken(\"onattribdata\");\n\n                      this._baseState = this._state;\n                      this._state = 51\n                      /* BeforeEntity */\n                      ;\n                      this._sectionStart = this._index;\n                    }\n                  };\n\n                  Tokenizer.prototype._stateInAttributeValueNoQuotes = function (c) {\n                    if (whitespace(c) || c === \">\") {\n                      this._emitToken(\"onattribdata\");\n\n                      this._cbs.onattribend();\n\n                      this._state = 8\n                      /* BeforeAttributeName */\n                      ;\n                      this._index--;\n                    } else if (this._decodeEntities && c === \"&\") {\n                      this._emitToken(\"onattribdata\");\n\n                      this._baseState = this._state;\n                      this._state = 51\n                      /* BeforeEntity */\n                      ;\n                      this._sectionStart = this._index;\n                    }\n                  };\n\n                  Tokenizer.prototype._stateBeforeDeclaration = function (c) {\n                    this._state = c === \"[\" ? 22\n                    /* BeforeCdata1 */\n                    : c === \"-\" ? 18\n                    /* BeforeComment */\n                    : 16\n                    /* InDeclaration */\n                    ;\n                  };\n\n                  Tokenizer.prototype._stateInDeclaration = function (c) {\n                    if (c === \">\") {\n                      this._cbs.ondeclaration(this._getSection());\n\n                      this._state = 1\n                      /* Text */\n                      ;\n                      this._sectionStart = this._index + 1;\n                    }\n                  };\n\n                  Tokenizer.prototype._stateInProcessingInstruction = function (c) {\n                    if (c === \">\") {\n                      this._cbs.onprocessinginstruction(this._getSection());\n\n                      this._state = 1\n                      /* Text */\n                      ;\n                      this._sectionStart = this._index + 1;\n                    }\n                  };\n\n                  Tokenizer.prototype._stateBeforeComment = function (c) {\n                    if (c === \"-\") {\n                      this._state = 19\n                      /* InComment */\n                      ;\n                      this._sectionStart = this._index + 1;\n                    } else {\n                      this._state = 16\n                      /* InDeclaration */\n                      ;\n                    }\n                  };\n\n                  Tokenizer.prototype._stateInComment = function (c) {\n                    if (c === \"-\") this._state = 20\n                    /* AfterComment1 */\n                    ;\n                  };\n\n                  Tokenizer.prototype._stateAfterComment1 = function (c) {\n                    if (c === \"-\") {\n                      this._state = 21\n                      /* AfterComment2 */\n                      ;\n                    } else {\n                      this._state = 19\n                      /* InComment */\n                      ;\n                    }\n                  };\n\n                  Tokenizer.prototype._stateAfterComment2 = function (c) {\n                    if (c === \">\") {\n                      //remove 2 trailing chars\n                      this._cbs.oncomment(this._buffer.substring(this._sectionStart, this._index - 2));\n\n                      this._state = 1\n                      /* Text */\n                      ;\n                      this._sectionStart = this._index + 1;\n                    } else if (c !== \"-\") {\n                      this._state = 19\n                      /* InComment */\n                      ;\n                    } // else: stay in AFTER_COMMENT_2 (`--->`)\n\n                  };\n\n                  Tokenizer.prototype._stateBeforeCdata6 = function (c) {\n                    if (c === \"[\") {\n                      this._state = 28\n                      /* InCdata */\n                      ;\n                      this._sectionStart = this._index + 1;\n                    } else {\n                      this._state = 16\n                      /* InDeclaration */\n                      ;\n                      this._index--;\n                    }\n                  };\n\n                  Tokenizer.prototype._stateInCdata = function (c) {\n                    if (c === \"]\") this._state = 29\n                    /* AfterCdata1 */\n                    ;\n                  };\n\n                  Tokenizer.prototype._stateAfterCdata1 = function (c) {\n                    if (c === \"]\") this._state = 30\n                    /* AfterCdata2 */\n                    ;else this._state = 28\n                    /* InCdata */\n                    ;\n                  };\n\n                  Tokenizer.prototype._stateAfterCdata2 = function (c) {\n                    if (c === \">\") {\n                      //remove 2 trailing chars\n                      this._cbs.oncdata(this._buffer.substring(this._sectionStart, this._index - 2));\n\n                      this._state = 1\n                      /* Text */\n                      ;\n                      this._sectionStart = this._index + 1;\n                    } else if (c !== \"]\") {\n                      this._state = 28\n                      /* InCdata */\n                      ;\n                    } //else: stay in AFTER_CDATA_2 (`]]]>`)\n\n                  };\n\n                  Tokenizer.prototype._stateBeforeSpecial = function (c) {\n                    if (c === \"c\" || c === \"C\") {\n                      this._state = 33\n                      /* BeforeScript1 */\n                      ;\n                    } else if (c === \"t\" || c === \"T\") {\n                      this._state = 43\n                      /* BeforeStyle1 */\n                      ;\n                    } else {\n                      this._state = 3\n                      /* InTagName */\n                      ;\n                      this._index--; //consume the token again\n                    }\n                  };\n\n                  Tokenizer.prototype._stateBeforeSpecialEnd = function (c) {\n                    if (this._special === 2\n                    /* Script */\n                    && (c === \"c\" || c === \"C\")) {\n                      this._state = 38\n                      /* AfterScript1 */\n                      ;\n                    } else if (this._special === 3\n                    /* Style */\n                    && (c === \"t\" || c === \"T\")) {\n                      this._state = 47\n                      /* AfterStyle1 */\n                      ;\n                    } else this._state = 1\n                    /* Text */\n                    ;\n                  };\n\n                  Tokenizer.prototype._stateBeforeScript5 = function (c) {\n                    if (c === \"/\" || c === \">\" || whitespace(c)) {\n                      this._special = 2\n                      /* Script */\n                      ;\n                    }\n\n                    this._state = 3\n                    /* InTagName */\n                    ;\n                    this._index--; //consume the token again\n                  };\n\n                  Tokenizer.prototype._stateAfterScript5 = function (c) {\n                    if (c === \">\" || whitespace(c)) {\n                      this._special = 1\n                      /* None */\n                      ;\n                      this._state = 6\n                      /* InClosingTagName */\n                      ;\n                      this._sectionStart = this._index - 6;\n                      this._index--; //reconsume the token\n                    } else this._state = 1\n                    /* Text */\n                    ;\n                  };\n\n                  Tokenizer.prototype._stateBeforeStyle4 = function (c) {\n                    if (c === \"/\" || c === \">\" || whitespace(c)) {\n                      this._special = 3\n                      /* Style */\n                      ;\n                    }\n\n                    this._state = 3\n                    /* InTagName */\n                    ;\n                    this._index--; //consume the token again\n                  };\n\n                  Tokenizer.prototype._stateAfterStyle4 = function (c) {\n                    if (c === \">\" || whitespace(c)) {\n                      this._special = 1\n                      /* None */\n                      ;\n                      this._state = 6\n                      /* InClosingTagName */\n                      ;\n                      this._sectionStart = this._index - 5;\n                      this._index--; //reconsume the token\n                    } else this._state = 1\n                    /* Text */\n                    ;\n                  }; //for entities terminated with a semicolon\n\n\n                  Tokenizer.prototype._parseNamedEntityStrict = function () {\n                    //offset = 1\n                    if (this._sectionStart + 1 < this._index) {\n                      var entity = this._buffer.substring(this._sectionStart + 1, this._index),\n                          map = this._xmlMode ? xml_json_1[\"default\"] : entities_json_1[\"default\"];\n\n                      if (Object.prototype.hasOwnProperty.call(map, entity)) {\n                        // @ts-ignore\n                        this._emitPartial(map[entity]);\n\n                        this._sectionStart = this._index + 1;\n                      }\n                    }\n                  }; //parses legacy entities (without trailing semicolon)\n\n\n                  Tokenizer.prototype._parseLegacyEntity = function () {\n                    var start = this._sectionStart + 1;\n                    var limit = this._index - start;\n                    if (limit > 6) limit = 6; // The max length of legacy entities is 6\n\n                    while (limit >= 2) {\n                      // The min length of legacy entities is 2\n                      var entity = this._buffer.substr(start, limit);\n\n                      if (Object.prototype.hasOwnProperty.call(legacy_json_1[\"default\"], entity)) {\n                        // @ts-ignore\n                        this._emitPartial(legacy_json_1[\"default\"][entity]);\n\n                        this._sectionStart += limit + 1;\n                        return;\n                      } else {\n                        limit--;\n                      }\n                    }\n                  };\n\n                  Tokenizer.prototype._stateInNamedEntity = function (c) {\n                    if (c === \";\") {\n                      this._parseNamedEntityStrict();\n\n                      if (this._sectionStart + 1 < this._index && !this._xmlMode) {\n                        this._parseLegacyEntity();\n                      }\n\n                      this._state = this._baseState;\n                    } else if ((c < \"a\" || c > \"z\") && (c < \"A\" || c > \"Z\") && (c < \"0\" || c > \"9\")) {\n                      if (this._xmlMode || this._sectionStart + 1 === this._index) {// ignore\n                      } else if (this._baseState !== 1\n                      /* Text */\n                      ) {\n                          if (c !== \"=\") {\n                            this._parseNamedEntityStrict();\n                          }\n                        } else {\n                        this._parseLegacyEntity();\n                      }\n\n                      this._state = this._baseState;\n                      this._index--;\n                    }\n                  };\n\n                  Tokenizer.prototype._decodeNumericEntity = function (offset, base) {\n                    var sectionStart = this._sectionStart + offset;\n\n                    if (sectionStart !== this._index) {\n                      //parse entity\n                      var entity = this._buffer.substring(sectionStart, this._index);\n\n                      var parsed = parseInt(entity, base);\n\n                      this._emitPartial(decode_codepoint_1[\"default\"](parsed));\n\n                      this._sectionStart = this._index;\n                    } else {\n                      this._sectionStart--;\n                    }\n\n                    this._state = this._baseState;\n                  };\n\n                  Tokenizer.prototype._stateInNumericEntity = function (c) {\n                    if (c === \";\") {\n                      this._decodeNumericEntity(2, 10);\n\n                      this._sectionStart++;\n                    } else if (c < \"0\" || c > \"9\") {\n                      if (!this._xmlMode) {\n                        this._decodeNumericEntity(2, 10);\n                      } else {\n                        this._state = this._baseState;\n                      }\n\n                      this._index--;\n                    }\n                  };\n\n                  Tokenizer.prototype._stateInHexEntity = function (c) {\n                    if (c === \";\") {\n                      this._decodeNumericEntity(3, 16);\n\n                      this._sectionStart++;\n                    } else if ((c < \"a\" || c > \"f\") && (c < \"A\" || c > \"F\") && (c < \"0\" || c > \"9\")) {\n                      if (!this._xmlMode) {\n                        this._decodeNumericEntity(3, 16);\n                      } else {\n                        this._state = this._baseState;\n                      }\n\n                      this._index--;\n                    }\n                  };\n\n                  Tokenizer.prototype._cleanup = function () {\n                    if (this._sectionStart < 0) {\n                      this._buffer = \"\";\n                      this._bufferOffset += this._index;\n                      this._index = 0;\n                    } else if (this._running) {\n                      if (this._state === 1\n                      /* Text */\n                      ) {\n                          if (this._sectionStart !== this._index) {\n                            this._cbs.ontext(this._buffer.substr(this._sectionStart));\n                          }\n\n                          this._buffer = \"\";\n                          this._bufferOffset += this._index;\n                          this._index = 0;\n                        } else if (this._sectionStart === this._index) {\n                        //the section just started\n                        this._buffer = \"\";\n                        this._bufferOffset += this._index;\n                        this._index = 0;\n                      } else {\n                        //remove everything unnecessary\n                        this._buffer = this._buffer.substr(this._sectionStart);\n                        this._index -= this._sectionStart;\n                        this._bufferOffset += this._sectionStart;\n                      }\n\n                      this._sectionStart = 0;\n                    }\n                  }; //TODO make events conditional\n\n\n                  Tokenizer.prototype.write = function (chunk) {\n                    if (this._ended) this._cbs.onerror(Error(\".write() after done!\"));\n                    this._buffer += chunk;\n\n                    this._parse();\n                  }; // Iterates through the buffer, calling the function corresponding to the current state.\n                  // States that are more likely to be hit are higher up, as a performance improvement.\n\n\n                  Tokenizer.prototype._parse = function () {\n                    while (this._index < this._buffer.length && this._running) {\n                      var c = this._buffer.charAt(this._index);\n\n                      if (this._state === 1\n                      /* Text */\n                      ) {\n                          this._stateText(c);\n                        } else if (this._state === 12\n                      /* InAttributeValueDq */\n                      ) {\n                          this._stateInAttributeValueDoubleQuotes(c);\n                        } else if (this._state === 9\n                      /* InAttributeName */\n                      ) {\n                          this._stateInAttributeName(c);\n                        } else if (this._state === 19\n                      /* InComment */\n                      ) {\n                          this._stateInComment(c);\n                        } else if (this._state === 8\n                      /* BeforeAttributeName */\n                      ) {\n                          this._stateBeforeAttributeName(c);\n                        } else if (this._state === 3\n                      /* InTagName */\n                      ) {\n                          this._stateInTagName(c);\n                        } else if (this._state === 6\n                      /* InClosingTagName */\n                      ) {\n                          this._stateInClosingTagName(c);\n                        } else if (this._state === 2\n                      /* BeforeTagName */\n                      ) {\n                          this._stateBeforeTagName(c);\n                        } else if (this._state === 10\n                      /* AfterAttributeName */\n                      ) {\n                          this._stateAfterAttributeName(c);\n                        } else if (this._state === 13\n                      /* InAttributeValueSq */\n                      ) {\n                          this._stateInAttributeValueSingleQuotes(c);\n                        } else if (this._state === 11\n                      /* BeforeAttributeValue */\n                      ) {\n                          this._stateBeforeAttributeValue(c);\n                        } else if (this._state === 5\n                      /* BeforeClosingTagName */\n                      ) {\n                          this._stateBeforeClosingTagName(c);\n                        } else if (this._state === 7\n                      /* AfterClosingTagName */\n                      ) {\n                          this._stateAfterClosingTagName(c);\n                        } else if (this._state === 31\n                      /* BeforeSpecial */\n                      ) {\n                          this._stateBeforeSpecial(c);\n                        } else if (this._state === 20\n                      /* AfterComment1 */\n                      ) {\n                          this._stateAfterComment1(c);\n                        } else if (this._state === 14\n                      /* InAttributeValueNq */\n                      ) {\n                          this._stateInAttributeValueNoQuotes(c);\n                        } else if (this._state === 4\n                      /* InSelfClosingTag */\n                      ) {\n                          this._stateInSelfClosingTag(c);\n                        } else if (this._state === 16\n                      /* InDeclaration */\n                      ) {\n                          this._stateInDeclaration(c);\n                        } else if (this._state === 15\n                      /* BeforeDeclaration */\n                      ) {\n                          this._stateBeforeDeclaration(c);\n                        } else if (this._state === 21\n                      /* AfterComment2 */\n                      ) {\n                          this._stateAfterComment2(c);\n                        } else if (this._state === 18\n                      /* BeforeComment */\n                      ) {\n                          this._stateBeforeComment(c);\n                        } else if (this._state === 32\n                      /* BeforeSpecialEnd */\n                      ) {\n                          this._stateBeforeSpecialEnd(c);\n                        } else if (this._state === 38\n                      /* AfterScript1 */\n                      ) {\n                          stateAfterScript1(this, c);\n                        } else if (this._state === 39\n                      /* AfterScript2 */\n                      ) {\n                          stateAfterScript2(this, c);\n                        } else if (this._state === 40\n                      /* AfterScript3 */\n                      ) {\n                          stateAfterScript3(this, c);\n                        } else if (this._state === 33\n                      /* BeforeScript1 */\n                      ) {\n                          stateBeforeScript1(this, c);\n                        } else if (this._state === 34\n                      /* BeforeScript2 */\n                      ) {\n                          stateBeforeScript2(this, c);\n                        } else if (this._state === 35\n                      /* BeforeScript3 */\n                      ) {\n                          stateBeforeScript3(this, c);\n                        } else if (this._state === 36\n                      /* BeforeScript4 */\n                      ) {\n                          stateBeforeScript4(this, c);\n                        } else if (this._state === 37\n                      /* BeforeScript5 */\n                      ) {\n                          this._stateBeforeScript5(c);\n                        } else if (this._state === 41\n                      /* AfterScript4 */\n                      ) {\n                          stateAfterScript4(this, c);\n                        } else if (this._state === 42\n                      /* AfterScript5 */\n                      ) {\n                          this._stateAfterScript5(c);\n                        } else if (this._state === 43\n                      /* BeforeStyle1 */\n                      ) {\n                          stateBeforeStyle1(this, c);\n                        } else if (this._state === 28\n                      /* InCdata */\n                      ) {\n                          this._stateInCdata(c);\n                        } else if (this._state === 44\n                      /* BeforeStyle2 */\n                      ) {\n                          stateBeforeStyle2(this, c);\n                        } else if (this._state === 45\n                      /* BeforeStyle3 */\n                      ) {\n                          stateBeforeStyle3(this, c);\n                        } else if (this._state === 46\n                      /* BeforeStyle4 */\n                      ) {\n                          this._stateBeforeStyle4(c);\n                        } else if (this._state === 47\n                      /* AfterStyle1 */\n                      ) {\n                          stateAfterStyle1(this, c);\n                        } else if (this._state === 48\n                      /* AfterStyle2 */\n                      ) {\n                          stateAfterStyle2(this, c);\n                        } else if (this._state === 49\n                      /* AfterStyle3 */\n                      ) {\n                          stateAfterStyle3(this, c);\n                        } else if (this._state === 50\n                      /* AfterStyle4 */\n                      ) {\n                          this._stateAfterStyle4(c);\n                        } else if (this._state === 17\n                      /* InProcessingInstruction */\n                      ) {\n                          this._stateInProcessingInstruction(c);\n                        } else if (this._state === 53\n                      /* InNamedEntity */\n                      ) {\n                          this._stateInNamedEntity(c);\n                        } else if (this._state === 22\n                      /* BeforeCdata1 */\n                      ) {\n                          stateBeforeCdata1(this, c);\n                        } else if (this._state === 51\n                      /* BeforeEntity */\n                      ) {\n                          stateBeforeEntity(this, c);\n                        } else if (this._state === 23\n                      /* BeforeCdata2 */\n                      ) {\n                          stateBeforeCdata2(this, c);\n                        } else if (this._state === 24\n                      /* BeforeCdata3 */\n                      ) {\n                          stateBeforeCdata3(this, c);\n                        } else if (this._state === 29\n                      /* AfterCdata1 */\n                      ) {\n                          this._stateAfterCdata1(c);\n                        } else if (this._state === 30\n                      /* AfterCdata2 */\n                      ) {\n                          this._stateAfterCdata2(c);\n                        } else if (this._state === 25\n                      /* BeforeCdata4 */\n                      ) {\n                          stateBeforeCdata4(this, c);\n                        } else if (this._state === 26\n                      /* BeforeCdata5 */\n                      ) {\n                          stateBeforeCdata5(this, c);\n                        } else if (this._state === 27\n                      /* BeforeCdata6 */\n                      ) {\n                          this._stateBeforeCdata6(c);\n                        } else if (this._state === 55\n                      /* InHexEntity */\n                      ) {\n                          this._stateInHexEntity(c);\n                        } else if (this._state === 54\n                      /* InNumericEntity */\n                      ) {\n                          this._stateInNumericEntity(c);\n                        } else if (this._state === 52\n                      /* BeforeNumericEntity */\n                      ) {\n                          stateBeforeNumericEntity(this, c);\n                        } else {\n                        this._cbs.onerror(Error(\"unknown _state\"), this._state);\n                      }\n\n                      this._index++;\n                    }\n\n                    this._cleanup();\n                  };\n\n                  Tokenizer.prototype.pause = function () {\n                    this._running = false;\n                  };\n\n                  Tokenizer.prototype.resume = function () {\n                    this._running = true;\n\n                    if (this._index < this._buffer.length) {\n                      this._parse();\n                    }\n\n                    if (this._ended) {\n                      this._finish();\n                    }\n                  };\n\n                  Tokenizer.prototype.end = function (chunk) {\n                    if (this._ended) this._cbs.onerror(Error(\".end() after done!\"));\n                    if (chunk) this.write(chunk);\n                    this._ended = true;\n                    if (this._running) this._finish();\n                  };\n\n                  Tokenizer.prototype._finish = function () {\n                    //if there is remaining data, emit it in a reasonable way\n                    if (this._sectionStart < this._index) {\n                      this._handleTrailingData();\n                    }\n\n                    this._cbs.onend();\n                  };\n\n                  Tokenizer.prototype._handleTrailingData = function () {\n                    var data = this._buffer.substr(this._sectionStart);\n\n                    if (this._state === 28\n                    /* InCdata */\n                    || this._state === 29\n                    /* AfterCdata1 */\n                    || this._state === 30\n                    /* AfterCdata2 */\n                    ) {\n                        this._cbs.oncdata(data);\n                      } else if (this._state === 19\n                    /* InComment */\n                    || this._state === 20\n                    /* AfterComment1 */\n                    || this._state === 21\n                    /* AfterComment2 */\n                    ) {\n                        this._cbs.oncomment(data);\n                      } else if (this._state === 53\n                    /* InNamedEntity */\n                    && !this._xmlMode) {\n                      this._parseLegacyEntity();\n\n                      if (this._sectionStart < this._index) {\n                        this._state = this._baseState;\n\n                        this._handleTrailingData();\n                      }\n                    } else if (this._state === 54\n                    /* InNumericEntity */\n                    && !this._xmlMode) {\n                      this._decodeNumericEntity(2, 10);\n\n                      if (this._sectionStart < this._index) {\n                        this._state = this._baseState;\n\n                        this._handleTrailingData();\n                      }\n                    } else if (this._state === 55\n                    /* InHexEntity */\n                    && !this._xmlMode) {\n                      this._decodeNumericEntity(3, 16);\n\n                      if (this._sectionStart < this._index) {\n                        this._state = this._baseState;\n\n                        this._handleTrailingData();\n                      }\n                    } else if (this._state !== 3\n                    /* InTagName */\n                    && this._state !== 8\n                    /* BeforeAttributeName */\n                    && this._state !== 11\n                    /* BeforeAttributeValue */\n                    && this._state !== 10\n                    /* AfterAttributeName */\n                    && this._state !== 9\n                    /* InAttributeName */\n                    && this._state !== 13\n                    /* InAttributeValueSq */\n                    && this._state !== 12\n                    /* InAttributeValueDq */\n                    && this._state !== 14\n                    /* InAttributeValueNq */\n                    && this._state !== 6\n                    /* InClosingTagName */\n                    ) {\n                        this._cbs.ontext(data);\n                      } //else, ignore remaining data\n                    //TODO add a way to remove current tag\n\n                  };\n\n                  Tokenizer.prototype.getAbsoluteIndex = function () {\n                    return this._bufferOffset + this._index;\n                  };\n\n                  Tokenizer.prototype._getSection = function () {\n                    return this._buffer.substring(this._sectionStart, this._index);\n                  };\n\n                  Tokenizer.prototype._emitToken = function (name) {\n                    this._cbs[name](this._getSection());\n\n                    this._sectionStart = -1;\n                  };\n\n                  Tokenizer.prototype._emitPartial = function (value) {\n                    if (this._baseState !== 1\n                    /* Text */\n                    ) {\n                        this._cbs.onattribdata(value); //TODO implement the new event\n\n                      } else {\n                      this._cbs.ontext(value);\n                    }\n                  };\n\n                  return Tokenizer;\n                }();\n\n                exports[\"default\"] = Tokenizer;\n              }, {\n                \"entities/lib/decode_codepoint\": 18,\n                \"entities/lib/maps/entities.json\": 22,\n                \"entities/lib/maps/legacy.json\": 23,\n                \"entities/lib/maps/xml.json\": 24\n              }],\n              31: [function (require, module, exports) {\n                \"use strict\";\n\n                function __export(m) {\n                  for (var p in m) {\n                    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n                  }\n                }\n\n                var __importStar = this && this.__importStar || function (mod) {\n                  if (mod && mod.__esModule) return mod;\n                  var result = {};\n                  if (mod != null) for (var k in mod) {\n                    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n                  }\n                  result[\"default\"] = mod;\n                  return result;\n                };\n\n                Object.defineProperty(exports, \"__esModule\", {\n                  value: true\n                });\n\n                var Parser_1 = require(\"./Parser\");\n\n                exports.Parser = Parser_1.Parser;\n\n                var domhandler_1 = require(\"domhandler\");\n\n                exports.DomHandler = domhandler_1.DomHandler;\n                exports.DefaultHandler = domhandler_1.DomHandler; // Helper methods\n\n                /**\n                 * Parses data, returns the resulting DOM.\n                 *\n                 * @param data The data that should be parsed.\n                 * @param options Optional options for the parser and DOM builder.\n                 */\n\n                function parseDOM(data, options) {\n                  var handler = new domhandler_1.DomHandler(void 0, options);\n                  new Parser_1.Parser(handler, options).end(data);\n                  return handler.dom;\n                }\n\n                exports.parseDOM = parseDOM;\n                /**\n                * Creates a parser instance, with an attached DOM handler.\n                *\n                * @param cb A callback that will be called once parsing has been completed.\n                * @param options Optional options for the parser and DOM builder.\n                * @param elementCb An optional callback that will be called every time a tag has been completed inside of the DOM.\n                */\n\n                function createDomStream(cb, options, elementCb) {\n                  var handler = new domhandler_1.DomHandler(cb, options, elementCb);\n                  return new Parser_1.Parser(handler, options);\n                }\n\n                exports.createDomStream = createDomStream;\n\n                var Tokenizer_1 = require(\"./Tokenizer\");\n\n                exports.Tokenizer = Tokenizer_1[\"default\"];\n\n                var ElementType = __importStar(require(\"domelementtype\"));\n\n                exports.ElementType = ElementType;\n                /**\n                * List of all events that the parser emits.\n                *\n                * Format: eventname: number of arguments.\n                */\n\n                exports.EVENTS = {\n                  attribute: 2,\n                  cdatastart: 0,\n                  cdataend: 0,\n                  text: 1,\n                  processinginstruction: 2,\n                  comment: 1,\n                  commentend: 0,\n                  closetag: 1,\n                  opentag: 2,\n                  opentagname: 1,\n                  error: 1,\n                  end: 0\n                };\n                /*\n                All of the following exports exist for backwards-compatibility.\n                They should probably be removed eventually.\n                */\n\n                __export(require(\"./FeedHandler\"));\n\n                __export(require(\"./WritableStream\"));\n\n                __export(require(\"./CollectingHandler\"));\n\n                var DomUtils = __importStar(require(\"domutils\"));\n\n                exports.DomUtils = DomUtils;\n\n                var FeedHandler_1 = require(\"./FeedHandler\");\n\n                exports.RssHandler = FeedHandler_1.FeedHandler;\n              }, {\n                \"./CollectingHandler\": 26,\n                \"./FeedHandler\": 27,\n                \"./Parser\": 29,\n                \"./Tokenizer\": 30,\n                \"./WritableStream\": 2,\n                \"domelementtype\": 6,\n                \"domhandler\": 7,\n                \"domutils\": 10\n              }],\n              32: [function (require, module, exports) {\n                exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n                  var e, m;\n                  var eLen = nBytes * 8 - mLen - 1;\n                  var eMax = (1 << eLen) - 1;\n                  var eBias = eMax >> 1;\n                  var nBits = -7;\n                  var i = isLE ? nBytes - 1 : 0;\n                  var d = isLE ? -1 : 1;\n                  var s = buffer[offset + i];\n                  i += d;\n                  e = s & (1 << -nBits) - 1;\n                  s >>= -nBits;\n                  nBits += eLen;\n\n                  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n                  m = e & (1 << -nBits) - 1;\n                  e >>= -nBits;\n                  nBits += mLen;\n\n                  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n                  if (e === 0) {\n                    e = 1 - eBias;\n                  } else if (e === eMax) {\n                    return m ? NaN : (s ? -1 : 1) * Infinity;\n                  } else {\n                    m = m + Math.pow(2, mLen);\n                    e = e - eBias;\n                  }\n\n                  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n                };\n\n                exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n                  var e, m, c;\n                  var eLen = nBytes * 8 - mLen - 1;\n                  var eMax = (1 << eLen) - 1;\n                  var eBias = eMax >> 1;\n                  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n                  var i = isLE ? 0 : nBytes - 1;\n                  var d = isLE ? 1 : -1;\n                  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n                  value = Math.abs(value);\n\n                  if (isNaN(value) || value === Infinity) {\n                    m = isNaN(value) ? 1 : 0;\n                    e = eMax;\n                  } else {\n                    e = Math.floor(Math.log(value) / Math.LN2);\n\n                    if (value * (c = Math.pow(2, -e)) < 1) {\n                      e--;\n                      c *= 2;\n                    }\n\n                    if (e + eBias >= 1) {\n                      value += rt / c;\n                    } else {\n                      value += rt * Math.pow(2, 1 - eBias);\n                    }\n\n                    if (value * c >= 2) {\n                      e++;\n                      c /= 2;\n                    }\n\n                    if (e + eBias >= eMax) {\n                      m = 0;\n                      e = eMax;\n                    } else if (e + eBias >= 1) {\n                      m = (value * c - 1) * Math.pow(2, mLen);\n                      e = e + eBias;\n                    } else {\n                      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n                      e = 0;\n                    }\n                  }\n\n                  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n                  e = e << mLen | m;\n                  eLen += mLen;\n\n                  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n                  buffer[offset + i - d] |= s * 128;\n                };\n              }, {}],\n              33: [function (require, module, exports) {\n                var getNative = require('./_getNative'),\n                    root = require('./_root');\n                /* Built-in method references that are verified to be native. */\n\n\n                var DataView = getNative(root, 'DataView');\n                module.exports = DataView;\n              }, {\n                \"./_getNative\": 93,\n                \"./_root\": 130\n              }],\n              34: [function (require, module, exports) {\n                var hashClear = require('./_hashClear'),\n                    hashDelete = require('./_hashDelete'),\n                    hashGet = require('./_hashGet'),\n                    hashHas = require('./_hashHas'),\n                    hashSet = require('./_hashSet');\n                /**\n                * Creates a hash object.\n                *\n                * @private\n                * @constructor\n                * @param {Array} [entries] The key-value pairs to cache.\n                */\n\n\n                function Hash(entries) {\n                  var index = -1,\n                      length = entries == null ? 0 : entries.length;\n                  this.clear();\n\n                  while (++index < length) {\n                    var entry = entries[index];\n                    this.set(entry[0], entry[1]);\n                  }\n                } // Add methods to `Hash`.\n\n\n                Hash.prototype.clear = hashClear;\n                Hash.prototype['delete'] = hashDelete;\n                Hash.prototype.get = hashGet;\n                Hash.prototype.has = hashHas;\n                Hash.prototype.set = hashSet;\n                module.exports = Hash;\n              }, {\n                \"./_hashClear\": 100,\n                \"./_hashDelete\": 101,\n                \"./_hashGet\": 102,\n                \"./_hashHas\": 103,\n                \"./_hashSet\": 104\n              }],\n              35: [function (require, module, exports) {\n                var listCacheClear = require('./_listCacheClear'),\n                    listCacheDelete = require('./_listCacheDelete'),\n                    listCacheGet = require('./_listCacheGet'),\n                    listCacheHas = require('./_listCacheHas'),\n                    listCacheSet = require('./_listCacheSet');\n                /**\n                * Creates an list cache object.\n                *\n                * @private\n                * @constructor\n                * @param {Array} [entries] The key-value pairs to cache.\n                */\n\n\n                function ListCache(entries) {\n                  var index = -1,\n                      length = entries == null ? 0 : entries.length;\n                  this.clear();\n\n                  while (++index < length) {\n                    var entry = entries[index];\n                    this.set(entry[0], entry[1]);\n                  }\n                } // Add methods to `ListCache`.\n\n\n                ListCache.prototype.clear = listCacheClear;\n                ListCache.prototype['delete'] = listCacheDelete;\n                ListCache.prototype.get = listCacheGet;\n                ListCache.prototype.has = listCacheHas;\n                ListCache.prototype.set = listCacheSet;\n                module.exports = ListCache;\n              }, {\n                \"./_listCacheClear\": 113,\n                \"./_listCacheDelete\": 114,\n                \"./_listCacheGet\": 115,\n                \"./_listCacheHas\": 116,\n                \"./_listCacheSet\": 117\n              }],\n              36: [function (require, module, exports) {\n                var getNative = require('./_getNative'),\n                    root = require('./_root');\n                /* Built-in method references that are verified to be native. */\n\n\n                var Map = getNative(root, 'Map');\n                module.exports = Map;\n              }, {\n                \"./_getNative\": 93,\n                \"./_root\": 130\n              }],\n              37: [function (require, module, exports) {\n                var mapCacheClear = require('./_mapCacheClear'),\n                    mapCacheDelete = require('./_mapCacheDelete'),\n                    mapCacheGet = require('./_mapCacheGet'),\n                    mapCacheHas = require('./_mapCacheHas'),\n                    mapCacheSet = require('./_mapCacheSet');\n                /**\n                * Creates a map cache object to store key-value pairs.\n                *\n                * @private\n                * @constructor\n                * @param {Array} [entries] The key-value pairs to cache.\n                */\n\n\n                function MapCache(entries) {\n                  var index = -1,\n                      length = entries == null ? 0 : entries.length;\n                  this.clear();\n\n                  while (++index < length) {\n                    var entry = entries[index];\n                    this.set(entry[0], entry[1]);\n                  }\n                } // Add methods to `MapCache`.\n\n\n                MapCache.prototype.clear = mapCacheClear;\n                MapCache.prototype['delete'] = mapCacheDelete;\n                MapCache.prototype.get = mapCacheGet;\n                MapCache.prototype.has = mapCacheHas;\n                MapCache.prototype.set = mapCacheSet;\n                module.exports = MapCache;\n              }, {\n                \"./_mapCacheClear\": 118,\n                \"./_mapCacheDelete\": 119,\n                \"./_mapCacheGet\": 120,\n                \"./_mapCacheHas\": 121,\n                \"./_mapCacheSet\": 122\n              }],\n              38: [function (require, module, exports) {\n                var getNative = require('./_getNative'),\n                    root = require('./_root');\n                /* Built-in method references that are verified to be native. */\n\n\n                var Promise = getNative(root, 'Promise');\n                module.exports = Promise;\n              }, {\n                \"./_getNative\": 93,\n                \"./_root\": 130\n              }],\n              39: [function (require, module, exports) {\n                var getNative = require('./_getNative'),\n                    root = require('./_root');\n                /* Built-in method references that are verified to be native. */\n\n\n                var Set = getNative(root, 'Set');\n                module.exports = Set;\n              }, {\n                \"./_getNative\": 93,\n                \"./_root\": 130\n              }],\n              40: [function (require, module, exports) {\n                var ListCache = require('./_ListCache'),\n                    stackClear = require('./_stackClear'),\n                    stackDelete = require('./_stackDelete'),\n                    stackGet = require('./_stackGet'),\n                    stackHas = require('./_stackHas'),\n                    stackSet = require('./_stackSet');\n                /**\n                * Creates a stack cache object to store key-value pairs.\n                *\n                * @private\n                * @constructor\n                * @param {Array} [entries] The key-value pairs to cache.\n                */\n\n\n                function Stack(entries) {\n                  var data = this.__data__ = new ListCache(entries);\n                  this.size = data.size;\n                } // Add methods to `Stack`.\n\n\n                Stack.prototype.clear = stackClear;\n                Stack.prototype['delete'] = stackDelete;\n                Stack.prototype.get = stackGet;\n                Stack.prototype.has = stackHas;\n                Stack.prototype.set = stackSet;\n                module.exports = Stack;\n              }, {\n                \"./_ListCache\": 35,\n                \"./_stackClear\": 134,\n                \"./_stackDelete\": 135,\n                \"./_stackGet\": 136,\n                \"./_stackHas\": 137,\n                \"./_stackSet\": 138\n              }],\n              41: [function (require, module, exports) {\n                var root = require('./_root');\n                /** Built-in value references. */\n\n\n                var _Symbol = root.Symbol;\n                module.exports = _Symbol;\n              }, {\n                \"./_root\": 130\n              }],\n              42: [function (require, module, exports) {\n                var root = require('./_root');\n                /** Built-in value references. */\n\n\n                var Uint8Array = root.Uint8Array;\n                module.exports = Uint8Array;\n              }, {\n                \"./_root\": 130\n              }],\n              43: [function (require, module, exports) {\n                var getNative = require('./_getNative'),\n                    root = require('./_root');\n                /* Built-in method references that are verified to be native. */\n\n\n                var WeakMap = getNative(root, 'WeakMap');\n                module.exports = WeakMap;\n              }, {\n                \"./_getNative\": 93,\n                \"./_root\": 130\n              }],\n              44: [function (require, module, exports) {\n                /**\n                * A faster alternative to `Function#apply`, this function invokes `func`\n                * with the `this` binding of `thisArg` and the arguments of `args`.\n                *\n                * @private\n                * @param {Function} func The function to invoke.\n                * @param {*} thisArg The `this` binding of `func`.\n                * @param {Array} args The arguments to invoke `func` with.\n                * @returns {*} Returns the result of `func`.\n                */\n                function apply(func, thisArg, args) {\n                  switch (args.length) {\n                    case 0:\n                      return func.call(thisArg);\n\n                    case 1:\n                      return func.call(thisArg, args[0]);\n\n                    case 2:\n                      return func.call(thisArg, args[0], args[1]);\n\n                    case 3:\n                      return func.call(thisArg, args[0], args[1], args[2]);\n                  }\n\n                  return func.apply(thisArg, args);\n                }\n\n                module.exports = apply;\n              }, {}],\n              45: [function (require, module, exports) {\n                /**\n                * A specialized version of `_.forEach` for arrays without support for\n                * iteratee shorthands.\n                *\n                * @private\n                * @param {Array} [array] The array to iterate over.\n                * @param {Function} iteratee The function invoked per iteration.\n                * @returns {Array} Returns `array`.\n                */\n                function arrayEach(array, iteratee) {\n                  var index = -1,\n                      length = array == null ? 0 : array.length;\n\n                  while (++index < length) {\n                    if (iteratee(array[index], index, array) === false) {\n                      break;\n                    }\n                  }\n\n                  return array;\n                }\n\n                module.exports = arrayEach;\n              }, {}],\n              46: [function (require, module, exports) {\n                /**\n                * A specialized version of `_.filter` for arrays without support for\n                * iteratee shorthands.\n                *\n                * @private\n                * @param {Array} [array] The array to iterate over.\n                * @param {Function} predicate The function invoked per iteration.\n                * @returns {Array} Returns the new filtered array.\n                */\n                function arrayFilter(array, predicate) {\n                  var index = -1,\n                      length = array == null ? 0 : array.length,\n                      resIndex = 0,\n                      result = [];\n\n                  while (++index < length) {\n                    var value = array[index];\n\n                    if (predicate(value, index, array)) {\n                      result[resIndex++] = value;\n                    }\n                  }\n\n                  return result;\n                }\n\n                module.exports = arrayFilter;\n              }, {}],\n              47: [function (require, module, exports) {\n                var baseTimes = require('./_baseTimes'),\n                    isArguments = require('./isArguments'),\n                    isArray = require('./isArray'),\n                    isBuffer = require('./isBuffer'),\n                    isIndex = require('./_isIndex'),\n                    isTypedArray = require('./isTypedArray');\n                /** Used for built-in method references. */\n\n\n                var objectProto = Object.prototype;\n                /** Used to check objects for own properties. */\n\n                var hasOwnProperty = objectProto.hasOwnProperty;\n                /**\n                * Creates an array of the enumerable property names of the array-like `value`.\n                *\n                * @private\n                * @param {*} value The value to query.\n                * @param {boolean} inherited Specify returning inherited property names.\n                * @returns {Array} Returns the array of property names.\n                */\n\n                function arrayLikeKeys(value, inherited) {\n                  var isArr = isArray(value),\n                      isArg = !isArr && isArguments(value),\n                      isBuff = !isArr && !isArg && isBuffer(value),\n                      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n                      skipIndexes = isArr || isArg || isBuff || isType,\n                      result = skipIndexes ? baseTimes(value.length, String) : [],\n                      length = result.length;\n\n                  for (var key in value) {\n                    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.\n                    key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.\n                    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n                    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.\n                    isIndex(key, length)))) {\n                      result.push(key);\n                    }\n                  }\n\n                  return result;\n                }\n\n                module.exports = arrayLikeKeys;\n              }, {\n                \"./_baseTimes\": 72,\n                \"./_isIndex\": 108,\n                \"./isArguments\": 145,\n                \"./isArray\": 146,\n                \"./isBuffer\": 149,\n                \"./isTypedArray\": 159\n              }],\n              48: [function (require, module, exports) {\n                /**\n                * A specialized version of `_.map` for arrays without support for iteratee\n                * shorthands.\n                *\n                * @private\n                * @param {Array} [array] The array to iterate over.\n                * @param {Function} iteratee The function invoked per iteration.\n                * @returns {Array} Returns the new mapped array.\n                */\n                function arrayMap(array, iteratee) {\n                  var index = -1,\n                      length = array == null ? 0 : array.length,\n                      result = Array(length);\n\n                  while (++index < length) {\n                    result[index] = iteratee(array[index], index, array);\n                  }\n\n                  return result;\n                }\n\n                module.exports = arrayMap;\n              }, {}],\n              49: [function (require, module, exports) {\n                /**\n                * Appends the elements of `values` to `array`.\n                *\n                * @private\n                * @param {Array} array The array to modify.\n                * @param {Array} values The values to append.\n                * @returns {Array} Returns `array`.\n                */\n                function arrayPush(array, values) {\n                  var index = -1,\n                      length = values.length,\n                      offset = array.length;\n\n                  while (++index < length) {\n                    array[offset + index] = values[index];\n                  }\n\n                  return array;\n                }\n\n                module.exports = arrayPush;\n              }, {}],\n              50: [function (require, module, exports) {\n                var baseAssignValue = require('./_baseAssignValue'),\n                    eq = require('./eq');\n                /**\n                * This function is like `assignValue` except that it doesn't assign\n                * `undefined` values.\n                *\n                * @private\n                * @param {Object} object The object to modify.\n                * @param {string} key The key of the property to assign.\n                * @param {*} value The value to assign.\n                */\n\n\n                function assignMergeValue(object, key, value) {\n                  if (value !== undefined && !eq(object[key], value) || value === undefined && !(key in object)) {\n                    baseAssignValue(object, key, value);\n                  }\n                }\n\n                module.exports = assignMergeValue;\n              }, {\n                \"./_baseAssignValue\": 55,\n                \"./eq\": 142\n              }],\n              51: [function (require, module, exports) {\n                var baseAssignValue = require('./_baseAssignValue'),\n                    eq = require('./eq');\n                /** Used for built-in method references. */\n\n\n                var objectProto = Object.prototype;\n                /** Used to check objects for own properties. */\n\n                var hasOwnProperty = objectProto.hasOwnProperty;\n                /**\n                * Assigns `value` to `key` of `object` if the existing value is not equivalent\n                * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n                * for equality comparisons.\n                *\n                * @private\n                * @param {Object} object The object to modify.\n                * @param {string} key The key of the property to assign.\n                * @param {*} value The value to assign.\n                */\n\n                function assignValue(object, key, value) {\n                  var objValue = object[key];\n\n                  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === undefined && !(key in object)) {\n                    baseAssignValue(object, key, value);\n                  }\n                }\n\n                module.exports = assignValue;\n              }, {\n                \"./_baseAssignValue\": 55,\n                \"./eq\": 142\n              }],\n              52: [function (require, module, exports) {\n                var eq = require('./eq');\n                /**\n                * Gets the index at which the `key` is found in `array` of key-value pairs.\n                *\n                * @private\n                * @param {Array} array The array to inspect.\n                * @param {*} key The key to search for.\n                * @returns {number} Returns the index of the matched value, else `-1`.\n                */\n\n\n                function assocIndexOf(array, key) {\n                  var length = array.length;\n\n                  while (length--) {\n                    if (eq(array[length][0], key)) {\n                      return length;\n                    }\n                  }\n\n                  return -1;\n                }\n\n                module.exports = assocIndexOf;\n              }, {\n                \"./eq\": 142\n              }],\n              53: [function (require, module, exports) {\n                var copyObject = require('./_copyObject'),\n                    keys = require('./keys');\n                /**\n                * The base implementation of `_.assign` without support for multiple sources\n                * or `customizer` functions.\n                *\n                * @private\n                * @param {Object} object The destination object.\n                * @param {Object} source The source object.\n                * @returns {Object} Returns `object`.\n                */\n\n\n                function baseAssign(object, source) {\n                  return object && copyObject(source, keys(source), object);\n                }\n\n                module.exports = baseAssign;\n              }, {\n                \"./_copyObject\": 82,\n                \"./keys\": 160\n              }],\n              54: [function (require, module, exports) {\n                var copyObject = require('./_copyObject'),\n                    keysIn = require('./keysIn');\n                /**\n                * The base implementation of `_.assignIn` without support for multiple sources\n                * or `customizer` functions.\n                *\n                * @private\n                * @param {Object} object The destination object.\n                * @param {Object} source The source object.\n                * @returns {Object} Returns `object`.\n                */\n\n\n                function baseAssignIn(object, source) {\n                  return object && copyObject(source, keysIn(source), object);\n                }\n\n                module.exports = baseAssignIn;\n              }, {\n                \"./_copyObject\": 82,\n                \"./keysIn\": 161\n              }],\n              55: [function (require, module, exports) {\n                var defineProperty = require('./_defineProperty');\n                /**\n                * The base implementation of `assignValue` and `assignMergeValue` without\n                * value checks.\n                *\n                * @private\n                * @param {Object} object The object to modify.\n                * @param {string} key The key of the property to assign.\n                * @param {*} value The value to assign.\n                */\n\n\n                function baseAssignValue(object, key, value) {\n                  if (key == '__proto__' && defineProperty) {\n                    defineProperty(object, key, {\n                      'configurable': true,\n                      'enumerable': true,\n                      'value': value,\n                      'writable': true\n                    });\n                  } else {\n                    object[key] = value;\n                  }\n                }\n\n                module.exports = baseAssignValue;\n              }, {\n                \"./_defineProperty\": 88\n              }],\n              56: [function (require, module, exports) {\n                var Stack = require('./_Stack'),\n                    arrayEach = require('./_arrayEach'),\n                    assignValue = require('./_assignValue'),\n                    baseAssign = require('./_baseAssign'),\n                    baseAssignIn = require('./_baseAssignIn'),\n                    cloneBuffer = require('./_cloneBuffer'),\n                    copyArray = require('./_copyArray'),\n                    copySymbols = require('./_copySymbols'),\n                    copySymbolsIn = require('./_copySymbolsIn'),\n                    getAllKeys = require('./_getAllKeys'),\n                    getAllKeysIn = require('./_getAllKeysIn'),\n                    getTag = require('./_getTag'),\n                    initCloneArray = require('./_initCloneArray'),\n                    initCloneByTag = require('./_initCloneByTag'),\n                    initCloneObject = require('./_initCloneObject'),\n                    isArray = require('./isArray'),\n                    isBuffer = require('./isBuffer'),\n                    isMap = require('./isMap'),\n                    isObject = require('./isObject'),\n                    isSet = require('./isSet'),\n                    keys = require('./keys'),\n                    keysIn = require('./keysIn');\n                /** Used to compose bitmasks for cloning. */\n\n\n                var CLONE_DEEP_FLAG = 1,\n                    CLONE_FLAT_FLAG = 2,\n                    CLONE_SYMBOLS_FLAG = 4;\n                /** `Object#toString` result references. */\n\n                var argsTag = '[object Arguments]',\n                    arrayTag = '[object Array]',\n                    boolTag = '[object Boolean]',\n                    dateTag = '[object Date]',\n                    errorTag = '[object Error]',\n                    funcTag = '[object Function]',\n                    genTag = '[object GeneratorFunction]',\n                    mapTag = '[object Map]',\n                    numberTag = '[object Number]',\n                    objectTag = '[object Object]',\n                    regexpTag = '[object RegExp]',\n                    setTag = '[object Set]',\n                    stringTag = '[object String]',\n                    symbolTag = '[object Symbol]',\n                    weakMapTag = '[object WeakMap]';\n                var arrayBufferTag = '[object ArrayBuffer]',\n                    dataViewTag = '[object DataView]',\n                    float32Tag = '[object Float32Array]',\n                    float64Tag = '[object Float64Array]',\n                    int8Tag = '[object Int8Array]',\n                    int16Tag = '[object Int16Array]',\n                    int32Tag = '[object Int32Array]',\n                    uint8Tag = '[object Uint8Array]',\n                    uint8ClampedTag = '[object Uint8ClampedArray]',\n                    uint16Tag = '[object Uint16Array]',\n                    uint32Tag = '[object Uint32Array]';\n                /** Used to identify `toStringTag` values supported by `_.clone`. */\n\n                var cloneableTags = {};\n                cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n                cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;\n                /**\n                * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n                * traversed objects.\n                *\n                * @private\n                * @param {*} value The value to clone.\n                * @param {boolean} bitmask The bitmask flags.\n                *  1 - Deep clone\n                *  2 - Flatten inherited properties\n                *  4 - Clone symbols\n                * @param {Function} [customizer] The function to customize cloning.\n                * @param {string} [key] The key of `value`.\n                * @param {Object} [object] The parent object of `value`.\n                * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n                * @returns {*} Returns the cloned value.\n                */\n\n                function baseClone(value, bitmask, customizer, key, object, stack) {\n                  var result,\n                      isDeep = bitmask & CLONE_DEEP_FLAG,\n                      isFlat = bitmask & CLONE_FLAT_FLAG,\n                      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n                  if (customizer) {\n                    result = object ? customizer(value, key, object, stack) : customizer(value);\n                  }\n\n                  if (result !== undefined) {\n                    return result;\n                  }\n\n                  if (!isObject(value)) {\n                    return value;\n                  }\n\n                  var isArr = isArray(value);\n\n                  if (isArr) {\n                    result = initCloneArray(value);\n\n                    if (!isDeep) {\n                      return copyArray(value, result);\n                    }\n                  } else {\n                    var tag = getTag(value),\n                        isFunc = tag == funcTag || tag == genTag;\n\n                    if (isBuffer(value)) {\n                      return cloneBuffer(value, isDeep);\n                    }\n\n                    if (tag == objectTag || tag == argsTag || isFunc && !object) {\n                      result = isFlat || isFunc ? {} : initCloneObject(value);\n\n                      if (!isDeep) {\n                        return isFlat ? copySymbolsIn(value, baseAssignIn(result, value)) : copySymbols(value, baseAssign(result, value));\n                      }\n                    } else {\n                      if (!cloneableTags[tag]) {\n                        return object ? value : {};\n                      }\n\n                      result = initCloneByTag(value, tag, isDeep);\n                    }\n                  } // Check for circular references and return its corresponding clone.\n\n\n                  stack || (stack = new Stack());\n                  var stacked = stack.get(value);\n\n                  if (stacked) {\n                    return stacked;\n                  }\n\n                  stack.set(value, result);\n\n                  if (isSet(value)) {\n                    value.forEach(function (subValue) {\n                      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n                    });\n                  } else if (isMap(value)) {\n                    value.forEach(function (subValue, key) {\n                      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n                    });\n                  }\n\n                  var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;\n                  var props = isArr ? undefined : keysFunc(value);\n                  arrayEach(props || value, function (subValue, key) {\n                    if (props) {\n                      key = subValue;\n                      subValue = value[key];\n                    } // Recursively populate clone (susceptible to call stack limits).\n\n\n                    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n                  });\n                  return result;\n                }\n\n                module.exports = baseClone;\n              }, {\n                \"./_Stack\": 40,\n                \"./_arrayEach\": 45,\n                \"./_assignValue\": 51,\n                \"./_baseAssign\": 53,\n                \"./_baseAssignIn\": 54,\n                \"./_cloneBuffer\": 76,\n                \"./_copyArray\": 81,\n                \"./_copySymbols\": 83,\n                \"./_copySymbolsIn\": 84,\n                \"./_getAllKeys\": 90,\n                \"./_getAllKeysIn\": 91,\n                \"./_getTag\": 98,\n                \"./_initCloneArray\": 105,\n                \"./_initCloneByTag\": 106,\n                \"./_initCloneObject\": 107,\n                \"./isArray\": 146,\n                \"./isBuffer\": 149,\n                \"./isMap\": 152,\n                \"./isObject\": 153,\n                \"./isSet\": 156,\n                \"./keys\": 160,\n                \"./keysIn\": 161\n              }],\n              57: [function (require, module, exports) {\n                var isObject = require('./isObject');\n                /** Built-in value references. */\n\n\n                var objectCreate = Object.create;\n                /**\n                * The base implementation of `_.create` without support for assigning\n                * properties to the created object.\n                *\n                * @private\n                * @param {Object} proto The object to inherit from.\n                * @returns {Object} Returns the new object.\n                */\n\n                var baseCreate = function () {\n                  function object() {}\n\n                  return function (proto) {\n                    if (!isObject(proto)) {\n                      return {};\n                    }\n\n                    if (objectCreate) {\n                      return objectCreate(proto);\n                    }\n\n                    object.prototype = proto;\n                    var result = new object();\n                    object.prototype = undefined;\n                    return result;\n                  };\n                }();\n\n                module.exports = baseCreate;\n              }, {\n                \"./isObject\": 153\n              }],\n              58: [function (require, module, exports) {\n                var createBaseFor = require('./_createBaseFor');\n                /**\n                * The base implementation of `baseForOwn` which iterates over `object`\n                * properties returned by `keysFunc` and invokes `iteratee` for each property.\n                * Iteratee functions may exit iteration early by explicitly returning `false`.\n                *\n                * @private\n                * @param {Object} object The object to iterate over.\n                * @param {Function} iteratee The function invoked per iteration.\n                * @param {Function} keysFunc The function to get the keys of `object`.\n                * @returns {Object} Returns `object`.\n                */\n\n\n                var baseFor = createBaseFor();\n                module.exports = baseFor;\n              }, {\n                \"./_createBaseFor\": 87\n              }],\n              59: [function (require, module, exports) {\n                var arrayPush = require('./_arrayPush'),\n                    isArray = require('./isArray');\n                /**\n                * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n                * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n                * symbols of `object`.\n                *\n                * @private\n                * @param {Object} object The object to query.\n                * @param {Function} keysFunc The function to get the keys of `object`.\n                * @param {Function} symbolsFunc The function to get the symbols of `object`.\n                * @returns {Array} Returns the array of property names and symbols.\n                */\n\n\n                function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n                  var result = keysFunc(object);\n                  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n                }\n\n                module.exports = baseGetAllKeys;\n              }, {\n                \"./_arrayPush\": 49,\n                \"./isArray\": 146\n              }],\n              60: [function (require, module, exports) {\n                var _Symbol2 = require('./_Symbol'),\n                    getRawTag = require('./_getRawTag'),\n                    objectToString = require('./_objectToString');\n                /** `Object#toString` result references. */\n\n\n                var nullTag = '[object Null]',\n                    undefinedTag = '[object Undefined]';\n                /** Built-in value references. */\n\n                var symToStringTag = _Symbol2 ? _Symbol2.toStringTag : undefined;\n                /**\n                * The base implementation of `getTag` without fallbacks for buggy environments.\n                *\n                * @private\n                * @param {*} value The value to query.\n                * @returns {string} Returns the `toStringTag`.\n                */\n\n                function baseGetTag(value) {\n                  if (value == null) {\n                    return value === undefined ? undefinedTag : nullTag;\n                  }\n\n                  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n                }\n\n                module.exports = baseGetTag;\n              }, {\n                \"./_Symbol\": 41,\n                \"./_getRawTag\": 95,\n                \"./_objectToString\": 127\n              }],\n              61: [function (require, module, exports) {\n                var baseGetTag = require('./_baseGetTag'),\n                    isObjectLike = require('./isObjectLike');\n                /** `Object#toString` result references. */\n\n\n                var argsTag = '[object Arguments]';\n                /**\n                * The base implementation of `_.isArguments`.\n                *\n                * @private\n                * @param {*} value The value to check.\n                * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n                */\n\n                function baseIsArguments(value) {\n                  return isObjectLike(value) && baseGetTag(value) == argsTag;\n                }\n\n                module.exports = baseIsArguments;\n              }, {\n                \"./_baseGetTag\": 60,\n                \"./isObjectLike\": 154\n              }],\n              62: [function (require, module, exports) {\n                var getTag = require('./_getTag'),\n                    isObjectLike = require('./isObjectLike');\n                /** `Object#toString` result references. */\n\n\n                var mapTag = '[object Map]';\n                /**\n                * The base implementation of `_.isMap` without Node.js optimizations.\n                *\n                * @private\n                * @param {*} value The value to check.\n                * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n                */\n\n                function baseIsMap(value) {\n                  return isObjectLike(value) && getTag(value) == mapTag;\n                }\n\n                module.exports = baseIsMap;\n              }, {\n                \"./_getTag\": 98,\n                \"./isObjectLike\": 154\n              }],\n              63: [function (require, module, exports) {\n                var isFunction = require('./isFunction'),\n                    isMasked = require('./_isMasked'),\n                    isObject = require('./isObject'),\n                    toSource = require('./_toSource');\n                /**\n                * Used to match `RegExp`\n                * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n                */\n\n\n                var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n                /** Used to detect host constructors (Safari). */\n\n                var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n                /** Used for built-in method references. */\n\n                var funcProto = Function.prototype,\n                    objectProto = Object.prototype;\n                /** Used to resolve the decompiled source of functions. */\n\n                var funcToString = funcProto.toString;\n                /** Used to check objects for own properties. */\n\n                var hasOwnProperty = objectProto.hasOwnProperty;\n                /** Used to detect if a method is native. */\n\n                var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n                /**\n                * The base implementation of `_.isNative` without bad shim checks.\n                *\n                * @private\n                * @param {*} value The value to check.\n                * @returns {boolean} Returns `true` if `value` is a native function,\n                *  else `false`.\n                */\n\n                function baseIsNative(value) {\n                  if (!isObject(value) || isMasked(value)) {\n                    return false;\n                  }\n\n                  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n                  return pattern.test(toSource(value));\n                }\n\n                module.exports = baseIsNative;\n              }, {\n                \"./_isMasked\": 111,\n                \"./_toSource\": 139,\n                \"./isFunction\": 150,\n                \"./isObject\": 153\n              }],\n              64: [function (require, module, exports) {\n                var getTag = require('./_getTag'),\n                    isObjectLike = require('./isObjectLike');\n                /** `Object#toString` result references. */\n\n\n                var setTag = '[object Set]';\n                /**\n                * The base implementation of `_.isSet` without Node.js optimizations.\n                *\n                * @private\n                * @param {*} value The value to check.\n                * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n                */\n\n                function baseIsSet(value) {\n                  return isObjectLike(value) && getTag(value) == setTag;\n                }\n\n                module.exports = baseIsSet;\n              }, {\n                \"./_getTag\": 98,\n                \"./isObjectLike\": 154\n              }],\n              65: [function (require, module, exports) {\n                var baseGetTag = require('./_baseGetTag'),\n                    isLength = require('./isLength'),\n                    isObjectLike = require('./isObjectLike');\n                /** `Object#toString` result references. */\n\n\n                var argsTag = '[object Arguments]',\n                    arrayTag = '[object Array]',\n                    boolTag = '[object Boolean]',\n                    dateTag = '[object Date]',\n                    errorTag = '[object Error]',\n                    funcTag = '[object Function]',\n                    mapTag = '[object Map]',\n                    numberTag = '[object Number]',\n                    objectTag = '[object Object]',\n                    regexpTag = '[object RegExp]',\n                    setTag = '[object Set]',\n                    stringTag = '[object String]',\n                    weakMapTag = '[object WeakMap]';\n                var arrayBufferTag = '[object ArrayBuffer]',\n                    dataViewTag = '[object DataView]',\n                    float32Tag = '[object Float32Array]',\n                    float64Tag = '[object Float64Array]',\n                    int8Tag = '[object Int8Array]',\n                    int16Tag = '[object Int16Array]',\n                    int32Tag = '[object Int32Array]',\n                    uint8Tag = '[object Uint8Array]',\n                    uint8ClampedTag = '[object Uint8ClampedArray]',\n                    uint16Tag = '[object Uint16Array]',\n                    uint32Tag = '[object Uint32Array]';\n                /** Used to identify `toStringTag` values of typed arrays. */\n\n                var typedArrayTags = {};\n                typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\n                typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n                /**\n                * The base implementation of `_.isTypedArray` without Node.js optimizations.\n                *\n                * @private\n                * @param {*} value The value to check.\n                * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n                */\n\n                function baseIsTypedArray(value) {\n                  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n                }\n\n                module.exports = baseIsTypedArray;\n              }, {\n                \"./_baseGetTag\": 60,\n                \"./isLength\": 151,\n                \"./isObjectLike\": 154\n              }],\n              66: [function (require, module, exports) {\n                var isPrototype = require('./_isPrototype'),\n                    nativeKeys = require('./_nativeKeys');\n                /** Used for built-in method references. */\n\n\n                var objectProto = Object.prototype;\n                /** Used to check objects for own properties. */\n\n                var hasOwnProperty = objectProto.hasOwnProperty;\n                /**\n                * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n                *\n                * @private\n                * @param {Object} object The object to query.\n                * @returns {Array} Returns the array of property names.\n                */\n\n                function baseKeys(object) {\n                  if (!isPrototype(object)) {\n                    return nativeKeys(object);\n                  }\n\n                  var result = [];\n\n                  for (var key in Object(object)) {\n                    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n                      result.push(key);\n                    }\n                  }\n\n                  return result;\n                }\n\n                module.exports = baseKeys;\n              }, {\n                \"./_isPrototype\": 112,\n                \"./_nativeKeys\": 124\n              }],\n              67: [function (require, module, exports) {\n                var isObject = require('./isObject'),\n                    isPrototype = require('./_isPrototype'),\n                    nativeKeysIn = require('./_nativeKeysIn');\n                /** Used for built-in method references. */\n\n\n                var objectProto = Object.prototype;\n                /** Used to check objects for own properties. */\n\n                var hasOwnProperty = objectProto.hasOwnProperty;\n                /**\n                * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n                *\n                * @private\n                * @param {Object} object The object to query.\n                * @returns {Array} Returns the array of property names.\n                */\n\n                function baseKeysIn(object) {\n                  if (!isObject(object)) {\n                    return nativeKeysIn(object);\n                  }\n\n                  var isProto = isPrototype(object),\n                      result = [];\n\n                  for (var key in object) {\n                    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n                      result.push(key);\n                    }\n                  }\n\n                  return result;\n                }\n\n                module.exports = baseKeysIn;\n              }, {\n                \"./_isPrototype\": 112,\n                \"./_nativeKeysIn\": 125,\n                \"./isObject\": 153\n              }],\n              68: [function (require, module, exports) {\n                var Stack = require('./_Stack'),\n                    assignMergeValue = require('./_assignMergeValue'),\n                    baseFor = require('./_baseFor'),\n                    baseMergeDeep = require('./_baseMergeDeep'),\n                    isObject = require('./isObject'),\n                    keysIn = require('./keysIn'),\n                    safeGet = require('./_safeGet');\n                /**\n                * The base implementation of `_.merge` without support for multiple sources.\n                *\n                * @private\n                * @param {Object} object The destination object.\n                * @param {Object} source The source object.\n                * @param {number} srcIndex The index of `source`.\n                * @param {Function} [customizer] The function to customize merged values.\n                * @param {Object} [stack] Tracks traversed source values and their merged\n                *  counterparts.\n                */\n\n\n                function baseMerge(object, source, srcIndex, customizer, stack) {\n                  if (object === source) {\n                    return;\n                  }\n\n                  baseFor(source, function (srcValue, key) {\n                    stack || (stack = new Stack());\n\n                    if (isObject(srcValue)) {\n                      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n                    } else {\n                      var newValue = customizer ? customizer(safeGet(object, key), srcValue, key + '', object, source, stack) : undefined;\n\n                      if (newValue === undefined) {\n                        newValue = srcValue;\n                      }\n\n                      assignMergeValue(object, key, newValue);\n                    }\n                  }, keysIn);\n                }\n\n                module.exports = baseMerge;\n              }, {\n                \"./_Stack\": 40,\n                \"./_assignMergeValue\": 50,\n                \"./_baseFor\": 58,\n                \"./_baseMergeDeep\": 69,\n                \"./_safeGet\": 131,\n                \"./isObject\": 153,\n                \"./keysIn\": 161\n              }],\n              69: [function (require, module, exports) {\n                var assignMergeValue = require('./_assignMergeValue'),\n                    cloneBuffer = require('./_cloneBuffer'),\n                    cloneTypedArray = require('./_cloneTypedArray'),\n                    copyArray = require('./_copyArray'),\n                    initCloneObject = require('./_initCloneObject'),\n                    isArguments = require('./isArguments'),\n                    isArray = require('./isArray'),\n                    isArrayLikeObject = require('./isArrayLikeObject'),\n                    isBuffer = require('./isBuffer'),\n                    isFunction = require('./isFunction'),\n                    isObject = require('./isObject'),\n                    isPlainObject = require('./isPlainObject'),\n                    isTypedArray = require('./isTypedArray'),\n                    safeGet = require('./_safeGet'),\n                    toPlainObject = require('./toPlainObject');\n                /**\n                * A specialized version of `baseMerge` for arrays and objects which performs\n                * deep merges and tracks traversed objects enabling objects with circular\n                * references to be merged.\n                *\n                * @private\n                * @param {Object} object The destination object.\n                * @param {Object} source The source object.\n                * @param {string} key The key of the value to merge.\n                * @param {number} srcIndex The index of `source`.\n                * @param {Function} mergeFunc The function to merge values.\n                * @param {Function} [customizer] The function to customize assigned values.\n                * @param {Object} [stack] Tracks traversed source values and their merged\n                *  counterparts.\n                */\n\n\n                function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n                  var objValue = safeGet(object, key),\n                      srcValue = safeGet(source, key),\n                      stacked = stack.get(srcValue);\n\n                  if (stacked) {\n                    assignMergeValue(object, key, stacked);\n                    return;\n                  }\n\n                  var newValue = customizer ? customizer(objValue, srcValue, key + '', object, source, stack) : undefined;\n                  var isCommon = newValue === undefined;\n\n                  if (isCommon) {\n                    var isArr = isArray(srcValue),\n                        isBuff = !isArr && isBuffer(srcValue),\n                        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n                    newValue = srcValue;\n\n                    if (isArr || isBuff || isTyped) {\n                      if (isArray(objValue)) {\n                        newValue = objValue;\n                      } else if (isArrayLikeObject(objValue)) {\n                        newValue = copyArray(objValue);\n                      } else if (isBuff) {\n                        isCommon = false;\n                        newValue = cloneBuffer(srcValue, true);\n                      } else if (isTyped) {\n                        isCommon = false;\n                        newValue = cloneTypedArray(srcValue, true);\n                      } else {\n                        newValue = [];\n                      }\n                    } else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n                      newValue = objValue;\n\n                      if (isArguments(objValue)) {\n                        newValue = toPlainObject(objValue);\n                      } else if (!isObject(objValue) || isFunction(objValue)) {\n                        newValue = initCloneObject(srcValue);\n                      }\n                    } else {\n                      isCommon = false;\n                    }\n                  }\n\n                  if (isCommon) {\n                    // Recursively merge objects and arrays (susceptible to call stack limits).\n                    stack.set(srcValue, newValue);\n                    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n                    stack['delete'](srcValue);\n                  }\n\n                  assignMergeValue(object, key, newValue);\n                }\n\n                module.exports = baseMergeDeep;\n              }, {\n                \"./_assignMergeValue\": 50,\n                \"./_cloneBuffer\": 76,\n                \"./_cloneTypedArray\": 80,\n                \"./_copyArray\": 81,\n                \"./_initCloneObject\": 107,\n                \"./_safeGet\": 131,\n                \"./isArguments\": 145,\n                \"./isArray\": 146,\n                \"./isArrayLikeObject\": 148,\n                \"./isBuffer\": 149,\n                \"./isFunction\": 150,\n                \"./isObject\": 153,\n                \"./isPlainObject\": 155,\n                \"./isTypedArray\": 159,\n                \"./toPlainObject\": 165\n              }],\n              70: [function (require, module, exports) {\n                var identity = require('./identity'),\n                    overRest = require('./_overRest'),\n                    setToString = require('./_setToString');\n                /**\n                * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n                *\n                * @private\n                * @param {Function} func The function to apply a rest parameter to.\n                * @param {number} [start=func.length-1] The start position of the rest parameter.\n                * @returns {Function} Returns the new function.\n                */\n\n\n                function baseRest(func, start) {\n                  return setToString(overRest(func, start, identity), func + '');\n                }\n\n                module.exports = baseRest;\n              }, {\n                \"./_overRest\": 129,\n                \"./_setToString\": 132,\n                \"./identity\": 144\n              }],\n              71: [function (require, module, exports) {\n                var constant = require('./constant'),\n                    defineProperty = require('./_defineProperty'),\n                    identity = require('./identity');\n                /**\n                * The base implementation of `setToString` without support for hot loop shorting.\n                *\n                * @private\n                * @param {Function} func The function to modify.\n                * @param {Function} string The `toString` result.\n                * @returns {Function} Returns `func`.\n                */\n\n\n                var baseSetToString = !defineProperty ? identity : function (func, string) {\n                  return defineProperty(func, 'toString', {\n                    'configurable': true,\n                    'enumerable': false,\n                    'value': constant(string),\n                    'writable': true\n                  });\n                };\n                module.exports = baseSetToString;\n              }, {\n                \"./_defineProperty\": 88,\n                \"./constant\": 141,\n                \"./identity\": 144\n              }],\n              72: [function (require, module, exports) {\n                /**\n                * The base implementation of `_.times` without support for iteratee shorthands\n                * or max array length checks.\n                *\n                * @private\n                * @param {number} n The number of times to invoke `iteratee`.\n                * @param {Function} iteratee The function invoked per iteration.\n                * @returns {Array} Returns the array of results.\n                */\n                function baseTimes(n, iteratee) {\n                  var index = -1,\n                      result = Array(n);\n\n                  while (++index < n) {\n                    result[index] = iteratee(index);\n                  }\n\n                  return result;\n                }\n\n                module.exports = baseTimes;\n              }, {}],\n              73: [function (require, module, exports) {\n                var _Symbol3 = require('./_Symbol'),\n                    arrayMap = require('./_arrayMap'),\n                    isArray = require('./isArray'),\n                    isSymbol = require('./isSymbol');\n                /** Used as references for various `Number` constants. */\n\n\n                var INFINITY = 1 / 0;\n                /** Used to convert symbols to primitives and strings. */\n\n                var symbolProto = _Symbol3 ? _Symbol3.prototype : undefined,\n                    symbolToString = symbolProto ? symbolProto.toString : undefined;\n                /**\n                * The base implementation of `_.toString` which doesn't convert nullish\n                * values to empty strings.\n                *\n                * @private\n                * @param {*} value The value to process.\n                * @returns {string} Returns the string.\n                */\n\n                function baseToString(value) {\n                  // Exit early for strings to avoid a performance hit in some environments.\n                  if (typeof value == 'string') {\n                    return value;\n                  }\n\n                  if (isArray(value)) {\n                    // Recursively convert values (susceptible to call stack limits).\n                    return arrayMap(value, baseToString) + '';\n                  }\n\n                  if (isSymbol(value)) {\n                    return symbolToString ? symbolToString.call(value) : '';\n                  }\n\n                  var result = value + '';\n                  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n                }\n\n                module.exports = baseToString;\n              }, {\n                \"./_Symbol\": 41,\n                \"./_arrayMap\": 48,\n                \"./isArray\": 146,\n                \"./isSymbol\": 158\n              }],\n              74: [function (require, module, exports) {\n                /**\n                * The base implementation of `_.unary` without support for storing metadata.\n                *\n                * @private\n                * @param {Function} func The function to cap arguments for.\n                * @returns {Function} Returns the new capped function.\n                */\n                function baseUnary(func) {\n                  return function (value) {\n                    return func(value);\n                  };\n                }\n\n                module.exports = baseUnary;\n              }, {}],\n              75: [function (require, module, exports) {\n                var Uint8Array = require('./_Uint8Array');\n                /**\n                * Creates a clone of `arrayBuffer`.\n                *\n                * @private\n                * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n                * @returns {ArrayBuffer} Returns the cloned array buffer.\n                */\n\n\n                function cloneArrayBuffer(arrayBuffer) {\n                  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n                  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n                  return result;\n                }\n\n                module.exports = cloneArrayBuffer;\n              }, {\n                \"./_Uint8Array\": 42\n              }],\n              76: [function (require, module, exports) {\n                var root = require('./_root');\n                /** Detect free variable `exports`. */\n\n\n                var freeExports = _typeof(exports) == 'object' && exports && !exports.nodeType && exports;\n                /** Detect free variable `module`. */\n\n                var freeModule = freeExports && _typeof(module) == 'object' && module && !module.nodeType && module;\n                /** Detect the popular CommonJS extension `module.exports`. */\n\n                var moduleExports = freeModule && freeModule.exports === freeExports;\n                /** Built-in value references. */\n\n                var Buffer = moduleExports ? root.Buffer : undefined,\n                    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n                /**\n                * Creates a clone of  `buffer`.\n                *\n                * @private\n                * @param {Buffer} buffer The buffer to clone.\n                * @param {boolean} [isDeep] Specify a deep clone.\n                * @returns {Buffer} Returns the cloned buffer.\n                */\n\n                function cloneBuffer(buffer, isDeep) {\n                  if (isDeep) {\n                    return buffer.slice();\n                  }\n\n                  var length = buffer.length,\n                      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n                  buffer.copy(result);\n                  return result;\n                }\n\n                module.exports = cloneBuffer;\n              }, {\n                \"./_root\": 130\n              }],\n              77: [function (require, module, exports) {\n                var cloneArrayBuffer = require('./_cloneArrayBuffer');\n                /**\n                * Creates a clone of `dataView`.\n                *\n                * @private\n                * @param {Object} dataView The data view to clone.\n                * @param {boolean} [isDeep] Specify a deep clone.\n                * @returns {Object} Returns the cloned data view.\n                */\n\n\n                function cloneDataView(dataView, isDeep) {\n                  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n                  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n                }\n\n                module.exports = cloneDataView;\n              }, {\n                \"./_cloneArrayBuffer\": 75\n              }],\n              78: [function (require, module, exports) {\n                /** Used to match `RegExp` flags from their coerced string values. */\n                var reFlags = /\\w*$/;\n                /**\n                * Creates a clone of `regexp`.\n                *\n                * @private\n                * @param {Object} regexp The regexp to clone.\n                * @returns {Object} Returns the cloned regexp.\n                */\n\n                function cloneRegExp(regexp) {\n                  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n                  result.lastIndex = regexp.lastIndex;\n                  return result;\n                }\n\n                module.exports = cloneRegExp;\n              }, {}],\n              79: [function (require, module, exports) {\n                var _Symbol4 = require('./_Symbol');\n                /** Used to convert symbols to primitives and strings. */\n\n\n                var symbolProto = _Symbol4 ? _Symbol4.prototype : undefined,\n                    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n                /**\n                * Creates a clone of the `symbol` object.\n                *\n                * @private\n                * @param {Object} symbol The symbol object to clone.\n                * @returns {Object} Returns the cloned symbol object.\n                */\n\n                function cloneSymbol(symbol) {\n                  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n                }\n\n                module.exports = cloneSymbol;\n              }, {\n                \"./_Symbol\": 41\n              }],\n              80: [function (require, module, exports) {\n                var cloneArrayBuffer = require('./_cloneArrayBuffer');\n                /**\n                * Creates a clone of `typedArray`.\n                *\n                * @private\n                * @param {Object} typedArray The typed array to clone.\n                * @param {boolean} [isDeep] Specify a deep clone.\n                * @returns {Object} Returns the cloned typed array.\n                */\n\n\n                function cloneTypedArray(typedArray, isDeep) {\n                  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n                  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n                }\n\n                module.exports = cloneTypedArray;\n              }, {\n                \"./_cloneArrayBuffer\": 75\n              }],\n              81: [function (require, module, exports) {\n                /**\n                * Copies the values of `source` to `array`.\n                *\n                * @private\n                * @param {Array} source The array to copy values from.\n                * @param {Array} [array=[]] The array to copy values to.\n                * @returns {Array} Returns `array`.\n                */\n                function copyArray(source, array) {\n                  var index = -1,\n                      length = source.length;\n                  array || (array = Array(length));\n\n                  while (++index < length) {\n                    array[index] = source[index];\n                  }\n\n                  return array;\n                }\n\n                module.exports = copyArray;\n              }, {}],\n              82: [function (require, module, exports) {\n                var assignValue = require('./_assignValue'),\n                    baseAssignValue = require('./_baseAssignValue');\n                /**\n                * Copies properties of `source` to `object`.\n                *\n                * @private\n                * @param {Object} source The object to copy properties from.\n                * @param {Array} props The property identifiers to copy.\n                * @param {Object} [object={}] The object to copy properties to.\n                * @param {Function} [customizer] The function to customize copied values.\n                * @returns {Object} Returns `object`.\n                */\n\n\n                function copyObject(source, props, object, customizer) {\n                  var isNew = !object;\n                  object || (object = {});\n                  var index = -1,\n                      length = props.length;\n\n                  while (++index < length) {\n                    var key = props[index];\n                    var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined;\n\n                    if (newValue === undefined) {\n                      newValue = source[key];\n                    }\n\n                    if (isNew) {\n                      baseAssignValue(object, key, newValue);\n                    } else {\n                      assignValue(object, key, newValue);\n                    }\n                  }\n\n                  return object;\n                }\n\n                module.exports = copyObject;\n              }, {\n                \"./_assignValue\": 51,\n                \"./_baseAssignValue\": 55\n              }],\n              83: [function (require, module, exports) {\n                var copyObject = require('./_copyObject'),\n                    getSymbols = require('./_getSymbols');\n                /**\n                * Copies own symbols of `source` to `object`.\n                *\n                * @private\n                * @param {Object} source The object to copy symbols from.\n                * @param {Object} [object={}] The object to copy symbols to.\n                * @returns {Object} Returns `object`.\n                */\n\n\n                function copySymbols(source, object) {\n                  return copyObject(source, getSymbols(source), object);\n                }\n\n                module.exports = copySymbols;\n              }, {\n                \"./_copyObject\": 82,\n                \"./_getSymbols\": 96\n              }],\n              84: [function (require, module, exports) {\n                var copyObject = require('./_copyObject'),\n                    getSymbolsIn = require('./_getSymbolsIn');\n                /**\n                * Copies own and inherited symbols of `source` to `object`.\n                *\n                * @private\n                * @param {Object} source The object to copy symbols from.\n                * @param {Object} [object={}] The object to copy symbols to.\n                * @returns {Object} Returns `object`.\n                */\n\n\n                function copySymbolsIn(source, object) {\n                  return copyObject(source, getSymbolsIn(source), object);\n                }\n\n                module.exports = copySymbolsIn;\n              }, {\n                \"./_copyObject\": 82,\n                \"./_getSymbolsIn\": 97\n              }],\n              85: [function (require, module, exports) {\n                var root = require('./_root');\n                /** Used to detect overreaching core-js shims. */\n\n\n                var coreJsData = root['__core-js_shared__'];\n                module.exports = coreJsData;\n              }, {\n                \"./_root\": 130\n              }],\n              86: [function (require, module, exports) {\n                var baseRest = require('./_baseRest'),\n                    isIterateeCall = require('./_isIterateeCall');\n                /**\n                * Creates a function like `_.assign`.\n                *\n                * @private\n                * @param {Function} assigner The function to assign values.\n                * @returns {Function} Returns the new assigner function.\n                */\n\n\n                function createAssigner(assigner) {\n                  return baseRest(function (object, sources) {\n                    var index = -1,\n                        length = sources.length,\n                        customizer = length > 1 ? sources[length - 1] : undefined,\n                        guard = length > 2 ? sources[2] : undefined;\n                    customizer = assigner.length > 3 && typeof customizer == 'function' ? (length--, customizer) : undefined;\n\n                    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n                      customizer = length < 3 ? undefined : customizer;\n                      length = 1;\n                    }\n\n                    object = Object(object);\n\n                    while (++index < length) {\n                      var source = sources[index];\n\n                      if (source) {\n                        assigner(object, source, index, customizer);\n                      }\n                    }\n\n                    return object;\n                  });\n                }\n\n                module.exports = createAssigner;\n              }, {\n                \"./_baseRest\": 70,\n                \"./_isIterateeCall\": 109\n              }],\n              87: [function (require, module, exports) {\n                /**\n                * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n                *\n                * @private\n                * @param {boolean} [fromRight] Specify iterating from right to left.\n                * @returns {Function} Returns the new base function.\n                */\n                function createBaseFor(fromRight) {\n                  return function (object, iteratee, keysFunc) {\n                    var index = -1,\n                        iterable = Object(object),\n                        props = keysFunc(object),\n                        length = props.length;\n\n                    while (length--) {\n                      var key = props[fromRight ? length : ++index];\n\n                      if (iteratee(iterable[key], key, iterable) === false) {\n                        break;\n                      }\n                    }\n\n                    return object;\n                  };\n                }\n\n                module.exports = createBaseFor;\n              }, {}],\n              88: [function (require, module, exports) {\n                var getNative = require('./_getNative');\n\n                var defineProperty = function () {\n                  try {\n                    var func = getNative(Object, 'defineProperty');\n                    func({}, '', {});\n                    return func;\n                  } catch (e) {}\n                }();\n\n                module.exports = defineProperty;\n              }, {\n                \"./_getNative\": 93\n              }],\n              89: [function (require, module, exports) {\n                (function (global) {\n                  /** Detect free variable `global` from Node.js. */\n                  var freeGlobal = _typeof(global) == 'object' && global && global.Object === Object && global;\n                  module.exports = freeGlobal;\n                }).call(this, typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});\n              }, {}],\n              90: [function (require, module, exports) {\n                var baseGetAllKeys = require('./_baseGetAllKeys'),\n                    getSymbols = require('./_getSymbols'),\n                    keys = require('./keys');\n                /**\n                * Creates an array of own enumerable property names and symbols of `object`.\n                *\n                * @private\n                * @param {Object} object The object to query.\n                * @returns {Array} Returns the array of property names and symbols.\n                */\n\n\n                function getAllKeys(object) {\n                  return baseGetAllKeys(object, keys, getSymbols);\n                }\n\n                module.exports = getAllKeys;\n              }, {\n                \"./_baseGetAllKeys\": 59,\n                \"./_getSymbols\": 96,\n                \"./keys\": 160\n              }],\n              91: [function (require, module, exports) {\n                var baseGetAllKeys = require('./_baseGetAllKeys'),\n                    getSymbolsIn = require('./_getSymbolsIn'),\n                    keysIn = require('./keysIn');\n                /**\n                * Creates an array of own and inherited enumerable property names and\n                * symbols of `object`.\n                *\n                * @private\n                * @param {Object} object The object to query.\n                * @returns {Array} Returns the array of property names and symbols.\n                */\n\n\n                function getAllKeysIn(object) {\n                  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n                }\n\n                module.exports = getAllKeysIn;\n              }, {\n                \"./_baseGetAllKeys\": 59,\n                \"./_getSymbolsIn\": 97,\n                \"./keysIn\": 161\n              }],\n              92: [function (require, module, exports) {\n                var isKeyable = require('./_isKeyable');\n                /**\n                * Gets the data for `map`.\n                *\n                * @private\n                * @param {Object} map The map to query.\n                * @param {string} key The reference key.\n                * @returns {*} Returns the map data.\n                */\n\n\n                function getMapData(map, key) {\n                  var data = map.__data__;\n                  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n                }\n\n                module.exports = getMapData;\n              }, {\n                \"./_isKeyable\": 110\n              }],\n              93: [function (require, module, exports) {\n                var baseIsNative = require('./_baseIsNative'),\n                    getValue = require('./_getValue');\n                /**\n                * Gets the native function at `key` of `object`.\n                *\n                * @private\n                * @param {Object} object The object to query.\n                * @param {string} key The key of the method to get.\n                * @returns {*} Returns the function if it's native, else `undefined`.\n                */\n\n\n                function getNative(object, key) {\n                  var value = getValue(object, key);\n                  return baseIsNative(value) ? value : undefined;\n                }\n\n                module.exports = getNative;\n              }, {\n                \"./_baseIsNative\": 63,\n                \"./_getValue\": 99\n              }],\n              94: [function (require, module, exports) {\n                var overArg = require('./_overArg');\n                /** Built-in value references. */\n\n\n                var getPrototype = overArg(Object.getPrototypeOf, Object);\n                module.exports = getPrototype;\n              }, {\n                \"./_overArg\": 128\n              }],\n              95: [function (require, module, exports) {\n                var _Symbol5 = require('./_Symbol');\n                /** Used for built-in method references. */\n\n\n                var objectProto = Object.prototype;\n                /** Used to check objects for own properties. */\n\n                var hasOwnProperty = objectProto.hasOwnProperty;\n                /**\n                * Used to resolve the\n                * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n                * of values.\n                */\n\n                var nativeObjectToString = objectProto.toString;\n                /** Built-in value references. */\n\n                var symToStringTag = _Symbol5 ? _Symbol5.toStringTag : undefined;\n                /**\n                * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n                *\n                * @private\n                * @param {*} value The value to query.\n                * @returns {string} Returns the raw `toStringTag`.\n                */\n\n                function getRawTag(value) {\n                  var isOwn = hasOwnProperty.call(value, symToStringTag),\n                      tag = value[symToStringTag];\n\n                  try {\n                    value[symToStringTag] = undefined;\n                    var unmasked = true;\n                  } catch (e) {}\n\n                  var result = nativeObjectToString.call(value);\n\n                  if (unmasked) {\n                    if (isOwn) {\n                      value[symToStringTag] = tag;\n                    } else {\n                      delete value[symToStringTag];\n                    }\n                  }\n\n                  return result;\n                }\n\n                module.exports = getRawTag;\n              }, {\n                \"./_Symbol\": 41\n              }],\n              96: [function (require, module, exports) {\n                var arrayFilter = require('./_arrayFilter'),\n                    stubArray = require('./stubArray');\n                /** Used for built-in method references. */\n\n\n                var objectProto = Object.prototype;\n                /** Built-in value references. */\n\n                var propertyIsEnumerable = objectProto.propertyIsEnumerable;\n                /* Built-in method references for those with the same name as other `lodash` methods. */\n\n                var nativeGetSymbols = Object.getOwnPropertySymbols;\n                /**\n                * Creates an array of the own enumerable symbols of `object`.\n                *\n                * @private\n                * @param {Object} object The object to query.\n                * @returns {Array} Returns the array of symbols.\n                */\n\n                var getSymbols = !nativeGetSymbols ? stubArray : function (object) {\n                  if (object == null) {\n                    return [];\n                  }\n\n                  object = Object(object);\n                  return arrayFilter(nativeGetSymbols(object), function (symbol) {\n                    return propertyIsEnumerable.call(object, symbol);\n                  });\n                };\n                module.exports = getSymbols;\n              }, {\n                \"./_arrayFilter\": 46,\n                \"./stubArray\": 163\n              }],\n              97: [function (require, module, exports) {\n                var arrayPush = require('./_arrayPush'),\n                    getPrototype = require('./_getPrototype'),\n                    getSymbols = require('./_getSymbols'),\n                    stubArray = require('./stubArray');\n                /* Built-in method references for those with the same name as other `lodash` methods. */\n\n\n                var nativeGetSymbols = Object.getOwnPropertySymbols;\n                /**\n                * Creates an array of the own and inherited enumerable symbols of `object`.\n                *\n                * @private\n                * @param {Object} object The object to query.\n                * @returns {Array} Returns the array of symbols.\n                */\n\n                var getSymbolsIn = !nativeGetSymbols ? stubArray : function (object) {\n                  var result = [];\n\n                  while (object) {\n                    arrayPush(result, getSymbols(object));\n                    object = getPrototype(object);\n                  }\n\n                  return result;\n                };\n                module.exports = getSymbolsIn;\n              }, {\n                \"./_arrayPush\": 49,\n                \"./_getPrototype\": 94,\n                \"./_getSymbols\": 96,\n                \"./stubArray\": 163\n              }],\n              98: [function (require, module, exports) {\n                var DataView = require('./_DataView'),\n                    Map = require('./_Map'),\n                    Promise = require('./_Promise'),\n                    Set = require('./_Set'),\n                    WeakMap = require('./_WeakMap'),\n                    baseGetTag = require('./_baseGetTag'),\n                    toSource = require('./_toSource');\n                /** `Object#toString` result references. */\n\n\n                var mapTag = '[object Map]',\n                    objectTag = '[object Object]',\n                    promiseTag = '[object Promise]',\n                    setTag = '[object Set]',\n                    weakMapTag = '[object WeakMap]';\n                var dataViewTag = '[object DataView]';\n                /** Used to detect maps, sets, and weakmaps. */\n\n                var dataViewCtorString = toSource(DataView),\n                    mapCtorString = toSource(Map),\n                    promiseCtorString = toSource(Promise),\n                    setCtorString = toSource(Set),\n                    weakMapCtorString = toSource(WeakMap);\n                /**\n                * Gets the `toStringTag` of `value`.\n                *\n                * @private\n                * @param {*} value The value to query.\n                * @returns {string} Returns the `toStringTag`.\n                */\n\n                var getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\n                if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n                  getTag = function getTag(value) {\n                    var result = baseGetTag(value),\n                        Ctor = result == objectTag ? value.constructor : undefined,\n                        ctorString = Ctor ? toSource(Ctor) : '';\n\n                    if (ctorString) {\n                      switch (ctorString) {\n                        case dataViewCtorString:\n                          return dataViewTag;\n\n                        case mapCtorString:\n                          return mapTag;\n\n                        case promiseCtorString:\n                          return promiseTag;\n\n                        case setCtorString:\n                          return setTag;\n\n                        case weakMapCtorString:\n                          return weakMapTag;\n                      }\n                    }\n\n                    return result;\n                  };\n                }\n\n                module.exports = getTag;\n              }, {\n                \"./_DataView\": 33,\n                \"./_Map\": 36,\n                \"./_Promise\": 38,\n                \"./_Set\": 39,\n                \"./_WeakMap\": 43,\n                \"./_baseGetTag\": 60,\n                \"./_toSource\": 139\n              }],\n              99: [function (require, module, exports) {\n                /**\n                * Gets the value at `key` of `object`.\n                *\n                * @private\n                * @param {Object} [object] The object to query.\n                * @param {string} key The key of the property to get.\n                * @returns {*} Returns the property value.\n                */\n                function getValue(object, key) {\n                  return object == null ? undefined : object[key];\n                }\n\n                module.exports = getValue;\n              }, {}],\n              100: [function (require, module, exports) {\n                var nativeCreate = require('./_nativeCreate');\n                /**\n                * Removes all key-value entries from the hash.\n                *\n                * @private\n                * @name clear\n                * @memberOf Hash\n                */\n\n\n                function hashClear() {\n                  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n                  this.size = 0;\n                }\n\n                module.exports = hashClear;\n              }, {\n                \"./_nativeCreate\": 123\n              }],\n              101: [function (require, module, exports) {\n                /**\n                * Removes `key` and its value from the hash.\n                *\n                * @private\n                * @name delete\n                * @memberOf Hash\n                * @param {Object} hash The hash to modify.\n                * @param {string} key The key of the value to remove.\n                * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n                */\n                function hashDelete(key) {\n                  var result = this.has(key) && delete this.__data__[key];\n                  this.size -= result ? 1 : 0;\n                  return result;\n                }\n\n                module.exports = hashDelete;\n              }, {}],\n              102: [function (require, module, exports) {\n                var nativeCreate = require('./_nativeCreate');\n                /** Used to stand-in for `undefined` hash values. */\n\n\n                var HASH_UNDEFINED = '__lodash_hash_undefined__';\n                /** Used for built-in method references. */\n\n                var objectProto = Object.prototype;\n                /** Used to check objects for own properties. */\n\n                var hasOwnProperty = objectProto.hasOwnProperty;\n                /**\n                * Gets the hash value for `key`.\n                *\n                * @private\n                * @name get\n                * @memberOf Hash\n                * @param {string} key The key of the value to get.\n                * @returns {*} Returns the entry value.\n                */\n\n                function hashGet(key) {\n                  var data = this.__data__;\n\n                  if (nativeCreate) {\n                    var result = data[key];\n                    return result === HASH_UNDEFINED ? undefined : result;\n                  }\n\n                  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n                }\n\n                module.exports = hashGet;\n              }, {\n                \"./_nativeCreate\": 123\n              }],\n              103: [function (require, module, exports) {\n                var nativeCreate = require('./_nativeCreate');\n                /** Used for built-in method references. */\n\n\n                var objectProto = Object.prototype;\n                /** Used to check objects for own properties. */\n\n                var hasOwnProperty = objectProto.hasOwnProperty;\n                /**\n                * Checks if a hash value for `key` exists.\n                *\n                * @private\n                * @name has\n                * @memberOf Hash\n                * @param {string} key The key of the entry to check.\n                * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n                */\n\n                function hashHas(key) {\n                  var data = this.__data__;\n                  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n                }\n\n                module.exports = hashHas;\n              }, {\n                \"./_nativeCreate\": 123\n              }],\n              104: [function (require, module, exports) {\n                var nativeCreate = require('./_nativeCreate');\n                /** Used to stand-in for `undefined` hash values. */\n\n\n                var HASH_UNDEFINED = '__lodash_hash_undefined__';\n                /**\n                * Sets the hash `key` to `value`.\n                *\n                * @private\n                * @name set\n                * @memberOf Hash\n                * @param {string} key The key of the value to set.\n                * @param {*} value The value to set.\n                * @returns {Object} Returns the hash instance.\n                */\n\n                function hashSet(key, value) {\n                  var data = this.__data__;\n                  this.size += this.has(key) ? 0 : 1;\n                  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n                  return this;\n                }\n\n                module.exports = hashSet;\n              }, {\n                \"./_nativeCreate\": 123\n              }],\n              105: [function (require, module, exports) {\n                /** Used for built-in method references. */\n                var objectProto = Object.prototype;\n                /** Used to check objects for own properties. */\n\n                var hasOwnProperty = objectProto.hasOwnProperty;\n                /**\n                * Initializes an array clone.\n                *\n                * @private\n                * @param {Array} array The array to clone.\n                * @returns {Array} Returns the initialized clone.\n                */\n\n                function initCloneArray(array) {\n                  var length = array.length,\n                      result = new array.constructor(length); // Add properties assigned by `RegExp#exec`.\n\n                  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n                    result.index = array.index;\n                    result.input = array.input;\n                  }\n\n                  return result;\n                }\n\n                module.exports = initCloneArray;\n              }, {}],\n              106: [function (require, module, exports) {\n                var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n                    cloneDataView = require('./_cloneDataView'),\n                    cloneRegExp = require('./_cloneRegExp'),\n                    cloneSymbol = require('./_cloneSymbol'),\n                    cloneTypedArray = require('./_cloneTypedArray');\n                /** `Object#toString` result references. */\n\n\n                var boolTag = '[object Boolean]',\n                    dateTag = '[object Date]',\n                    mapTag = '[object Map]',\n                    numberTag = '[object Number]',\n                    regexpTag = '[object RegExp]',\n                    setTag = '[object Set]',\n                    stringTag = '[object String]',\n                    symbolTag = '[object Symbol]';\n                var arrayBufferTag = '[object ArrayBuffer]',\n                    dataViewTag = '[object DataView]',\n                    float32Tag = '[object Float32Array]',\n                    float64Tag = '[object Float64Array]',\n                    int8Tag = '[object Int8Array]',\n                    int16Tag = '[object Int16Array]',\n                    int32Tag = '[object Int32Array]',\n                    uint8Tag = '[object Uint8Array]',\n                    uint8ClampedTag = '[object Uint8ClampedArray]',\n                    uint16Tag = '[object Uint16Array]',\n                    uint32Tag = '[object Uint32Array]';\n                /**\n                * Initializes an object clone based on its `toStringTag`.\n                *\n                * **Note:** This function only supports cloning values with tags of\n                * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n                *\n                * @private\n                * @param {Object} object The object to clone.\n                * @param {string} tag The `toStringTag` of the object to clone.\n                * @param {boolean} [isDeep] Specify a deep clone.\n                * @returns {Object} Returns the initialized clone.\n                */\n\n                function initCloneByTag(object, tag, isDeep) {\n                  var Ctor = object.constructor;\n\n                  switch (tag) {\n                    case arrayBufferTag:\n                      return cloneArrayBuffer(object);\n\n                    case boolTag:\n                    case dateTag:\n                      return new Ctor(+object);\n\n                    case dataViewTag:\n                      return cloneDataView(object, isDeep);\n\n                    case float32Tag:\n                    case float64Tag:\n                    case int8Tag:\n                    case int16Tag:\n                    case int32Tag:\n                    case uint8Tag:\n                    case uint8ClampedTag:\n                    case uint16Tag:\n                    case uint32Tag:\n                      return cloneTypedArray(object, isDeep);\n\n                    case mapTag:\n                      return new Ctor();\n\n                    case numberTag:\n                    case stringTag:\n                      return new Ctor(object);\n\n                    case regexpTag:\n                      return cloneRegExp(object);\n\n                    case setTag:\n                      return new Ctor();\n\n                    case symbolTag:\n                      return cloneSymbol(object);\n                  }\n                }\n\n                module.exports = initCloneByTag;\n              }, {\n                \"./_cloneArrayBuffer\": 75,\n                \"./_cloneDataView\": 77,\n                \"./_cloneRegExp\": 78,\n                \"./_cloneSymbol\": 79,\n                \"./_cloneTypedArray\": 80\n              }],\n              107: [function (require, module, exports) {\n                var baseCreate = require('./_baseCreate'),\n                    getPrototype = require('./_getPrototype'),\n                    isPrototype = require('./_isPrototype');\n                /**\n                * Initializes an object clone.\n                *\n                * @private\n                * @param {Object} object The object to clone.\n                * @returns {Object} Returns the initialized clone.\n                */\n\n\n                function initCloneObject(object) {\n                  return typeof object.constructor == 'function' && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};\n                }\n\n                module.exports = initCloneObject;\n              }, {\n                \"./_baseCreate\": 57,\n                \"./_getPrototype\": 94,\n                \"./_isPrototype\": 112\n              }],\n              108: [function (require, module, exports) {\n                /** Used as references for various `Number` constants. */\n                var MAX_SAFE_INTEGER = 9007199254740991;\n                /** Used to detect unsigned integer values. */\n\n                var reIsUint = /^(?:0|[1-9]\\d*)$/;\n                /**\n                * Checks if `value` is a valid array-like index.\n                *\n                * @private\n                * @param {*} value The value to check.\n                * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n                * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n                */\n\n                function isIndex(value, length) {\n                  var type = _typeof(value);\n\n                  length = length == null ? MAX_SAFE_INTEGER : length;\n                  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n                }\n\n                module.exports = isIndex;\n              }, {}],\n              109: [function (require, module, exports) {\n                var eq = require('./eq'),\n                    isArrayLike = require('./isArrayLike'),\n                    isIndex = require('./_isIndex'),\n                    isObject = require('./isObject');\n                /**\n                * Checks if the given arguments are from an iteratee call.\n                *\n                * @private\n                * @param {*} value The potential iteratee value argument.\n                * @param {*} index The potential iteratee index or key argument.\n                * @param {*} object The potential iteratee object argument.\n                * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n                *  else `false`.\n                */\n\n\n                function isIterateeCall(value, index, object) {\n                  if (!isObject(object)) {\n                    return false;\n                  }\n\n                  var type = _typeof(index);\n\n                  if (type == 'number' ? isArrayLike(object) && isIndex(index, object.length) : type == 'string' && index in object) {\n                    return eq(object[index], value);\n                  }\n\n                  return false;\n                }\n\n                module.exports = isIterateeCall;\n              }, {\n                \"./_isIndex\": 108,\n                \"./eq\": 142,\n                \"./isArrayLike\": 147,\n                \"./isObject\": 153\n              }],\n              110: [function (require, module, exports) {\n                /**\n                * Checks if `value` is suitable for use as unique object key.\n                *\n                * @private\n                * @param {*} value The value to check.\n                * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n                */\n                function isKeyable(value) {\n                  var type = _typeof(value);\n\n                  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n                }\n\n                module.exports = isKeyable;\n              }, {}],\n              111: [function (require, module, exports) {\n                var coreJsData = require('./_coreJsData');\n                /** Used to detect methods masquerading as native. */\n\n\n                var maskSrcKey = function () {\n                  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n                  return uid ? 'Symbol(src)_1.' + uid : '';\n                }();\n                /**\n                * Checks if `func` has its source masked.\n                *\n                * @private\n                * @param {Function} func The function to check.\n                * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n                */\n\n\n                function isMasked(func) {\n                  return !!maskSrcKey && maskSrcKey in func;\n                }\n\n                module.exports = isMasked;\n              }, {\n                \"./_coreJsData\": 85\n              }],\n              112: [function (require, module, exports) {\n                /** Used for built-in method references. */\n                var objectProto = Object.prototype;\n                /**\n                * Checks if `value` is likely a prototype object.\n                *\n                * @private\n                * @param {*} value The value to check.\n                * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n                */\n\n                function isPrototype(value) {\n                  var Ctor = value && value.constructor,\n                      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n                  return value === proto;\n                }\n\n                module.exports = isPrototype;\n              }, {}],\n              113: [function (require, module, exports) {\n                /**\n                * Removes all key-value entries from the list cache.\n                *\n                * @private\n                * @name clear\n                * @memberOf ListCache\n                */\n                function listCacheClear() {\n                  this.__data__ = [];\n                  this.size = 0;\n                }\n\n                module.exports = listCacheClear;\n              }, {}],\n              114: [function (require, module, exports) {\n                var assocIndexOf = require('./_assocIndexOf');\n                /** Used for built-in method references. */\n\n\n                var arrayProto = Array.prototype;\n                /** Built-in value references. */\n\n                var splice = arrayProto.splice;\n                /**\n                * Removes `key` and its value from the list cache.\n                *\n                * @private\n                * @name delete\n                * @memberOf ListCache\n                * @param {string} key The key of the value to remove.\n                * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n                */\n\n                function listCacheDelete(key) {\n                  var data = this.__data__,\n                      index = assocIndexOf(data, key);\n\n                  if (index < 0) {\n                    return false;\n                  }\n\n                  var lastIndex = data.length - 1;\n\n                  if (index == lastIndex) {\n                    data.pop();\n                  } else {\n                    splice.call(data, index, 1);\n                  }\n\n                  --this.size;\n                  return true;\n                }\n\n                module.exports = listCacheDelete;\n              }, {\n                \"./_assocIndexOf\": 52\n              }],\n              115: [function (require, module, exports) {\n                var assocIndexOf = require('./_assocIndexOf');\n                /**\n                * Gets the list cache value for `key`.\n                *\n                * @private\n                * @name get\n                * @memberOf ListCache\n                * @param {string} key The key of the value to get.\n                * @returns {*} Returns the entry value.\n                */\n\n\n                function listCacheGet(key) {\n                  var data = this.__data__,\n                      index = assocIndexOf(data, key);\n                  return index < 0 ? undefined : data[index][1];\n                }\n\n                module.exports = listCacheGet;\n              }, {\n                \"./_assocIndexOf\": 52\n              }],\n              116: [function (require, module, exports) {\n                var assocIndexOf = require('./_assocIndexOf');\n                /**\n                * Checks if a list cache value for `key` exists.\n                *\n                * @private\n                * @name has\n                * @memberOf ListCache\n                * @param {string} key The key of the entry to check.\n                * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n                */\n\n\n                function listCacheHas(key) {\n                  return assocIndexOf(this.__data__, key) > -1;\n                }\n\n                module.exports = listCacheHas;\n              }, {\n                \"./_assocIndexOf\": 52\n              }],\n              117: [function (require, module, exports) {\n                var assocIndexOf = require('./_assocIndexOf');\n                /**\n                * Sets the list cache `key` to `value`.\n                *\n                * @private\n                * @name set\n                * @memberOf ListCache\n                * @param {string} key The key of the value to set.\n                * @param {*} value The value to set.\n                * @returns {Object} Returns the list cache instance.\n                */\n\n\n                function listCacheSet(key, value) {\n                  var data = this.__data__,\n                      index = assocIndexOf(data, key);\n\n                  if (index < 0) {\n                    ++this.size;\n                    data.push([key, value]);\n                  } else {\n                    data[index][1] = value;\n                  }\n\n                  return this;\n                }\n\n                module.exports = listCacheSet;\n              }, {\n                \"./_assocIndexOf\": 52\n              }],\n              118: [function (require, module, exports) {\n                var Hash = require('./_Hash'),\n                    ListCache = require('./_ListCache'),\n                    Map = require('./_Map');\n                /**\n                * Removes all key-value entries from the map.\n                *\n                * @private\n                * @name clear\n                * @memberOf MapCache\n                */\n\n\n                function mapCacheClear() {\n                  this.size = 0;\n                  this.__data__ = {\n                    'hash': new Hash(),\n                    'map': new (Map || ListCache)(),\n                    'string': new Hash()\n                  };\n                }\n\n                module.exports = mapCacheClear;\n              }, {\n                \"./_Hash\": 34,\n                \"./_ListCache\": 35,\n                \"./_Map\": 36\n              }],\n              119: [function (require, module, exports) {\n                var getMapData = require('./_getMapData');\n                /**\n                * Removes `key` and its value from the map.\n                *\n                * @private\n                * @name delete\n                * @memberOf MapCache\n                * @param {string} key The key of the value to remove.\n                * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n                */\n\n\n                function mapCacheDelete(key) {\n                  var result = getMapData(this, key)['delete'](key);\n                  this.size -= result ? 1 : 0;\n                  return result;\n                }\n\n                module.exports = mapCacheDelete;\n              }, {\n                \"./_getMapData\": 92\n              }],\n              120: [function (require, module, exports) {\n                var getMapData = require('./_getMapData');\n                /**\n                * Gets the map value for `key`.\n                *\n                * @private\n                * @name get\n                * @memberOf MapCache\n                * @param {string} key The key of the value to get.\n                * @returns {*} Returns the entry value.\n                */\n\n\n                function mapCacheGet(key) {\n                  return getMapData(this, key).get(key);\n                }\n\n                module.exports = mapCacheGet;\n              }, {\n                \"./_getMapData\": 92\n              }],\n              121: [function (require, module, exports) {\n                var getMapData = require('./_getMapData');\n                /**\n                * Checks if a map value for `key` exists.\n                *\n                * @private\n                * @name has\n                * @memberOf MapCache\n                * @param {string} key The key of the entry to check.\n                * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n                */\n\n\n                function mapCacheHas(key) {\n                  return getMapData(this, key).has(key);\n                }\n\n                module.exports = mapCacheHas;\n              }, {\n                \"./_getMapData\": 92\n              }],\n              122: [function (require, module, exports) {\n                var getMapData = require('./_getMapData');\n                /**\n                * Sets the map `key` to `value`.\n                *\n                * @private\n                * @name set\n                * @memberOf MapCache\n                * @param {string} key The key of the value to set.\n                * @param {*} value The value to set.\n                * @returns {Object} Returns the map cache instance.\n                */\n\n\n                function mapCacheSet(key, value) {\n                  var data = getMapData(this, key),\n                      size = data.size;\n                  data.set(key, value);\n                  this.size += data.size == size ? 0 : 1;\n                  return this;\n                }\n\n                module.exports = mapCacheSet;\n              }, {\n                \"./_getMapData\": 92\n              }],\n              123: [function (require, module, exports) {\n                var getNative = require('./_getNative');\n                /* Built-in method references that are verified to be native. */\n\n\n                var nativeCreate = getNative(Object, 'create');\n                module.exports = nativeCreate;\n              }, {\n                \"./_getNative\": 93\n              }],\n              124: [function (require, module, exports) {\n                var overArg = require('./_overArg');\n                /* Built-in method references for those with the same name as other `lodash` methods. */\n\n\n                var nativeKeys = overArg(Object.keys, Object);\n                module.exports = nativeKeys;\n              }, {\n                \"./_overArg\": 128\n              }],\n              125: [function (require, module, exports) {\n                /**\n                * This function is like\n                * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n                * except that it includes inherited enumerable properties.\n                *\n                * @private\n                * @param {Object} object The object to query.\n                * @returns {Array} Returns the array of property names.\n                */\n                function nativeKeysIn(object) {\n                  var result = [];\n\n                  if (object != null) {\n                    for (var key in Object(object)) {\n                      result.push(key);\n                    }\n                  }\n\n                  return result;\n                }\n\n                module.exports = nativeKeysIn;\n              }, {}],\n              126: [function (require, module, exports) {\n                var freeGlobal = require('./_freeGlobal');\n                /** Detect free variable `exports`. */\n\n\n                var freeExports = _typeof(exports) == 'object' && exports && !exports.nodeType && exports;\n                /** Detect free variable `module`. */\n\n                var freeModule = freeExports && _typeof(module) == 'object' && module && !module.nodeType && module;\n                /** Detect the popular CommonJS extension `module.exports`. */\n\n                var moduleExports = freeModule && freeModule.exports === freeExports;\n                /** Detect free variable `process` from Node.js. */\n\n                var freeProcess = moduleExports && freeGlobal.process;\n                /** Used to access faster Node.js helpers. */\n\n                var nodeUtil = function () {\n                  try {\n                    // Use `util.types` for Node.js 10+.\n                    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n                    if (types) {\n                      return types;\n                    } // Legacy `process.binding('util')` for Node.js < 10.\n\n\n                    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n                  } catch (e) {}\n                }();\n\n                module.exports = nodeUtil;\n              }, {\n                \"./_freeGlobal\": 89\n              }],\n              127: [function (require, module, exports) {\n                /** Used for built-in method references. */\n                var objectProto = Object.prototype;\n                /**\n                * Used to resolve the\n                * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n                * of values.\n                */\n\n                var nativeObjectToString = objectProto.toString;\n                /**\n                * Converts `value` to a string using `Object.prototype.toString`.\n                *\n                * @private\n                * @param {*} value The value to convert.\n                * @returns {string} Returns the converted string.\n                */\n\n                function objectToString(value) {\n                  return nativeObjectToString.call(value);\n                }\n\n                module.exports = objectToString;\n              }, {}],\n              128: [function (require, module, exports) {\n                /**\n                * Creates a unary function that invokes `func` with its argument transformed.\n                *\n                * @private\n                * @param {Function} func The function to wrap.\n                * @param {Function} transform The argument transform.\n                * @returns {Function} Returns the new function.\n                */\n                function overArg(func, transform) {\n                  return function (arg) {\n                    return func(transform(arg));\n                  };\n                }\n\n                module.exports = overArg;\n              }, {}],\n              129: [function (require, module, exports) {\n                var apply = require('./_apply');\n                /* Built-in method references for those with the same name as other `lodash` methods. */\n\n\n                var nativeMax = Math.max;\n                /**\n                * A specialized version of `baseRest` which transforms the rest array.\n                *\n                * @private\n                * @param {Function} func The function to apply a rest parameter to.\n                * @param {number} [start=func.length-1] The start position of the rest parameter.\n                * @param {Function} transform The rest array transform.\n                * @returns {Function} Returns the new function.\n                */\n\n                function overRest(func, start, transform) {\n                  start = nativeMax(start === undefined ? func.length - 1 : start, 0);\n                  return function () {\n                    var args = arguments,\n                        index = -1,\n                        length = nativeMax(args.length - start, 0),\n                        array = Array(length);\n\n                    while (++index < length) {\n                      array[index] = args[start + index];\n                    }\n\n                    index = -1;\n                    var otherArgs = Array(start + 1);\n\n                    while (++index < start) {\n                      otherArgs[index] = args[index];\n                    }\n\n                    otherArgs[start] = transform(array);\n                    return apply(func, this, otherArgs);\n                  };\n                }\n\n                module.exports = overRest;\n              }, {\n                \"./_apply\": 44\n              }],\n              130: [function (require, module, exports) {\n                var freeGlobal = require('./_freeGlobal');\n                /** Detect free variable `self`. */\n\n\n                var freeSelf = (typeof self === \"undefined\" ? \"undefined\" : _typeof(self)) == 'object' && self && self.Object === Object && self;\n                /** Used as a reference to the global object. */\n\n                var root = freeGlobal || freeSelf || Function('return this')();\n                module.exports = root;\n              }, {\n                \"./_freeGlobal\": 89\n              }],\n              131: [function (require, module, exports) {\n                /**\n                * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n                *\n                * @private\n                * @param {Object} object The object to query.\n                * @param {string} key The key of the property to get.\n                * @returns {*} Returns the property value.\n                */\n                function safeGet(object, key) {\n                  if (key === 'constructor' && typeof object[key] === 'function') {\n                    return;\n                  }\n\n                  if (key == '__proto__') {\n                    return;\n                  }\n\n                  return object[key];\n                }\n\n                module.exports = safeGet;\n              }, {}],\n              132: [function (require, module, exports) {\n                var baseSetToString = require('./_baseSetToString'),\n                    shortOut = require('./_shortOut');\n                /**\n                * Sets the `toString` method of `func` to return `string`.\n                *\n                * @private\n                * @param {Function} func The function to modify.\n                * @param {Function} string The `toString` result.\n                * @returns {Function} Returns `func`.\n                */\n\n\n                var setToString = shortOut(baseSetToString);\n                module.exports = setToString;\n              }, {\n                \"./_baseSetToString\": 71,\n                \"./_shortOut\": 133\n              }],\n              133: [function (require, module, exports) {\n                /** Used to detect hot functions by number of calls within a span of milliseconds. */\n                var HOT_COUNT = 800,\n                    HOT_SPAN = 16;\n                /* Built-in method references for those with the same name as other `lodash` methods. */\n\n                var nativeNow = Date.now;\n                /**\n                * Creates a function that'll short out and invoke `identity` instead\n                * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n                * milliseconds.\n                *\n                * @private\n                * @param {Function} func The function to restrict.\n                * @returns {Function} Returns the new shortable function.\n                */\n\n                function shortOut(func) {\n                  var count = 0,\n                      lastCalled = 0;\n                  return function () {\n                    var stamp = nativeNow(),\n                        remaining = HOT_SPAN - (stamp - lastCalled);\n                    lastCalled = stamp;\n\n                    if (remaining > 0) {\n                      if (++count >= HOT_COUNT) {\n                        return arguments[0];\n                      }\n                    } else {\n                      count = 0;\n                    }\n\n                    return func.apply(undefined, arguments);\n                  };\n                }\n\n                module.exports = shortOut;\n              }, {}],\n              134: [function (require, module, exports) {\n                var ListCache = require('./_ListCache');\n                /**\n                * Removes all key-value entries from the stack.\n                *\n                * @private\n                * @name clear\n                * @memberOf Stack\n                */\n\n\n                function stackClear() {\n                  this.__data__ = new ListCache();\n                  this.size = 0;\n                }\n\n                module.exports = stackClear;\n              }, {\n                \"./_ListCache\": 35\n              }],\n              135: [function (require, module, exports) {\n                /**\n                * Removes `key` and its value from the stack.\n                *\n                * @private\n                * @name delete\n                * @memberOf Stack\n                * @param {string} key The key of the value to remove.\n                * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n                */\n                function stackDelete(key) {\n                  var data = this.__data__,\n                      result = data['delete'](key);\n                  this.size = data.size;\n                  return result;\n                }\n\n                module.exports = stackDelete;\n              }, {}],\n              136: [function (require, module, exports) {\n                /**\n                * Gets the stack value for `key`.\n                *\n                * @private\n                * @name get\n                * @memberOf Stack\n                * @param {string} key The key of the value to get.\n                * @returns {*} Returns the entry value.\n                */\n                function stackGet(key) {\n                  return this.__data__.get(key);\n                }\n\n                module.exports = stackGet;\n              }, {}],\n              137: [function (require, module, exports) {\n                /**\n                * Checks if a stack value for `key` exists.\n                *\n                * @private\n                * @name has\n                * @memberOf Stack\n                * @param {string} key The key of the entry to check.\n                * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n                */\n                function stackHas(key) {\n                  return this.__data__.has(key);\n                }\n\n                module.exports = stackHas;\n              }, {}],\n              138: [function (require, module, exports) {\n                var ListCache = require('./_ListCache'),\n                    Map = require('./_Map'),\n                    MapCache = require('./_MapCache');\n                /** Used as the size to enable large array optimizations. */\n\n\n                var LARGE_ARRAY_SIZE = 200;\n                /**\n                * Sets the stack `key` to `value`.\n                *\n                * @private\n                * @name set\n                * @memberOf Stack\n                * @param {string} key The key of the value to set.\n                * @param {*} value The value to set.\n                * @returns {Object} Returns the stack cache instance.\n                */\n\n                function stackSet(key, value) {\n                  var data = this.__data__;\n\n                  if (data instanceof ListCache) {\n                    var pairs = data.__data__;\n\n                    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n                      pairs.push([key, value]);\n                      this.size = ++data.size;\n                      return this;\n                    }\n\n                    data = this.__data__ = new MapCache(pairs);\n                  }\n\n                  data.set(key, value);\n                  this.size = data.size;\n                  return this;\n                }\n\n                module.exports = stackSet;\n              }, {\n                \"./_ListCache\": 35,\n                \"./_Map\": 36,\n                \"./_MapCache\": 37\n              }],\n              139: [function (require, module, exports) {\n                /** Used for built-in method references. */\n                var funcProto = Function.prototype;\n                /** Used to resolve the decompiled source of functions. */\n\n                var funcToString = funcProto.toString;\n                /**\n                * Converts `func` to its source code.\n                *\n                * @private\n                * @param {Function} func The function to convert.\n                * @returns {string} Returns the source code.\n                */\n\n                function toSource(func) {\n                  if (func != null) {\n                    try {\n                      return funcToString.call(func);\n                    } catch (e) {}\n\n                    try {\n                      return func + '';\n                    } catch (e) {}\n                  }\n\n                  return '';\n                }\n\n                module.exports = toSource;\n              }, {}],\n              140: [function (require, module, exports) {\n                var baseClone = require('./_baseClone');\n                /** Used to compose bitmasks for cloning. */\n\n\n                var CLONE_DEEP_FLAG = 1,\n                    CLONE_SYMBOLS_FLAG = 4;\n                /**\n                * This method is like `_.clone` except that it recursively clones `value`.\n                *\n                * @static\n                * @memberOf _\n                * @since 1.0.0\n                * @category Lang\n                * @param {*} value The value to recursively clone.\n                * @returns {*} Returns the deep cloned value.\n                * @see _.clone\n                * @example\n                *\n                * var objects = [{ 'a': 1 }, { 'b': 2 }];\n                *\n                * var deep = _.cloneDeep(objects);\n                * console.log(deep[0] === objects[0]);\n                * // => false\n                */\n\n                function cloneDeep(value) {\n                  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n                }\n\n                module.exports = cloneDeep;\n              }, {\n                \"./_baseClone\": 56\n              }],\n              141: [function (require, module, exports) {\n                /**\n                * Creates a function that returns `value`.\n                *\n                * @static\n                * @memberOf _\n                * @since 2.4.0\n                * @category Util\n                * @param {*} value The value to return from the new function.\n                * @returns {Function} Returns the new constant function.\n                * @example\n                *\n                * var objects = _.times(2, _.constant({ 'a': 1 }));\n                *\n                * console.log(objects);\n                * // => [{ 'a': 1 }, { 'a': 1 }]\n                *\n                * console.log(objects[0] === objects[1]);\n                * // => true\n                */\n                function constant(value) {\n                  return function () {\n                    return value;\n                  };\n                }\n\n                module.exports = constant;\n              }, {}],\n              142: [function (require, module, exports) {\n                /**\n                * Performs a\n                * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n                * comparison between two values to determine if they are equivalent.\n                *\n                * @static\n                * @memberOf _\n                * @since 4.0.0\n                * @category Lang\n                * @param {*} value The value to compare.\n                * @param {*} other The other value to compare.\n                * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n                * @example\n                *\n                * var object = { 'a': 1 };\n                * var other = { 'a': 1 };\n                *\n                * _.eq(object, object);\n                * // => true\n                *\n                * _.eq(object, other);\n                * // => false\n                *\n                * _.eq('a', 'a');\n                * // => true\n                *\n                * _.eq('a', Object('a'));\n                * // => false\n                *\n                * _.eq(NaN, NaN);\n                * // => true\n                */\n                function eq(value, other) {\n                  return value === other || value !== value && other !== other;\n                }\n\n                module.exports = eq;\n              }, {}],\n              143: [function (require, module, exports) {\n                var toString = require('./toString');\n                /**\n                * Used to match `RegExp`\n                * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n                */\n\n\n                var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n                    reHasRegExpChar = RegExp(reRegExpChar.source);\n                /**\n                * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n                * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n                *\n                * @static\n                * @memberOf _\n                * @since 3.0.0\n                * @category String\n                * @param {string} [string=''] The string to escape.\n                * @returns {string} Returns the escaped string.\n                * @example\n                *\n                * _.escapeRegExp('[lodash](https://lodash.com/)');\n                * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n                */\n\n                function escapeRegExp(string) {\n                  string = toString(string);\n                  return string && reHasRegExpChar.test(string) ? string.replace(reRegExpChar, '\\\\$&') : string;\n                }\n\n                module.exports = escapeRegExp;\n              }, {\n                \"./toString\": 166\n              }],\n              144: [function (require, module, exports) {\n                /**\n                * This method returns the first argument it receives.\n                *\n                * @static\n                * @since 0.1.0\n                * @memberOf _\n                * @category Util\n                * @param {*} value Any value.\n                * @returns {*} Returns `value`.\n                * @example\n                *\n                * var object = { 'a': 1 };\n                *\n                * console.log(_.identity(object) === object);\n                * // => true\n                */\n                function identity(value) {\n                  return value;\n                }\n\n                module.exports = identity;\n              }, {}],\n              145: [function (require, module, exports) {\n                var baseIsArguments = require('./_baseIsArguments'),\n                    isObjectLike = require('./isObjectLike');\n                /** Used for built-in method references. */\n\n\n                var objectProto = Object.prototype;\n                /** Used to check objects for own properties. */\n\n                var hasOwnProperty = objectProto.hasOwnProperty;\n                /** Built-in value references. */\n\n                var propertyIsEnumerable = objectProto.propertyIsEnumerable;\n                /**\n                * Checks if `value` is likely an `arguments` object.\n                *\n                * @static\n                * @memberOf _\n                * @since 0.1.0\n                * @category Lang\n                * @param {*} value The value to check.\n                * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n                *  else `false`.\n                * @example\n                *\n                * _.isArguments(function() { return arguments; }());\n                * // => true\n                *\n                * _.isArguments([1, 2, 3]);\n                * // => false\n                */\n\n                var isArguments = baseIsArguments(function () {\n                  return arguments;\n                }()) ? baseIsArguments : function (value) {\n                  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n                };\n                module.exports = isArguments;\n              }, {\n                \"./_baseIsArguments\": 61,\n                \"./isObjectLike\": 154\n              }],\n              146: [function (require, module, exports) {\n                /**\n                * Checks if `value` is classified as an `Array` object.\n                *\n                * @static\n                * @memberOf _\n                * @since 0.1.0\n                * @category Lang\n                * @param {*} value The value to check.\n                * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n                * @example\n                *\n                * _.isArray([1, 2, 3]);\n                * // => true\n                *\n                * _.isArray(document.body.children);\n                * // => false\n                *\n                * _.isArray('abc');\n                * // => false\n                *\n                * _.isArray(_.noop);\n                * // => false\n                */\n                var isArray = Array.isArray;\n                module.exports = isArray;\n              }, {}],\n              147: [function (require, module, exports) {\n                var isFunction = require('./isFunction'),\n                    isLength = require('./isLength');\n                /**\n                * Checks if `value` is array-like. A value is considered array-like if it's\n                * not a function and has a `value.length` that's an integer greater than or\n                * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n                *\n                * @static\n                * @memberOf _\n                * @since 4.0.0\n                * @category Lang\n                * @param {*} value The value to check.\n                * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n                * @example\n                *\n                * _.isArrayLike([1, 2, 3]);\n                * // => true\n                *\n                * _.isArrayLike(document.body.children);\n                * // => true\n                *\n                * _.isArrayLike('abc');\n                * // => true\n                *\n                * _.isArrayLike(_.noop);\n                * // => false\n                */\n\n\n                function isArrayLike(value) {\n                  return value != null && isLength(value.length) && !isFunction(value);\n                }\n\n                module.exports = isArrayLike;\n              }, {\n                \"./isFunction\": 150,\n                \"./isLength\": 151\n              }],\n              148: [function (require, module, exports) {\n                var isArrayLike = require('./isArrayLike'),\n                    isObjectLike = require('./isObjectLike');\n                /**\n                * This method is like `_.isArrayLike` except that it also checks if `value`\n                * is an object.\n                *\n                * @static\n                * @memberOf _\n                * @since 4.0.0\n                * @category Lang\n                * @param {*} value The value to check.\n                * @returns {boolean} Returns `true` if `value` is an array-like object,\n                *  else `false`.\n                * @example\n                *\n                * _.isArrayLikeObject([1, 2, 3]);\n                * // => true\n                *\n                * _.isArrayLikeObject(document.body.children);\n                * // => true\n                *\n                * _.isArrayLikeObject('abc');\n                * // => false\n                *\n                * _.isArrayLikeObject(_.noop);\n                * // => false\n                */\n\n\n                function isArrayLikeObject(value) {\n                  return isObjectLike(value) && isArrayLike(value);\n                }\n\n                module.exports = isArrayLikeObject;\n              }, {\n                \"./isArrayLike\": 147,\n                \"./isObjectLike\": 154\n              }],\n              149: [function (require, module, exports) {\n                var root = require('./_root'),\n                    stubFalse = require('./stubFalse');\n                /** Detect free variable `exports`. */\n\n\n                var freeExports = _typeof(exports) == 'object' && exports && !exports.nodeType && exports;\n                /** Detect free variable `module`. */\n\n                var freeModule = freeExports && _typeof(module) == 'object' && module && !module.nodeType && module;\n                /** Detect the popular CommonJS extension `module.exports`. */\n\n                var moduleExports = freeModule && freeModule.exports === freeExports;\n                /** Built-in value references. */\n\n                var Buffer = moduleExports ? root.Buffer : undefined;\n                /* Built-in method references for those with the same name as other `lodash` methods. */\n\n                var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n                /**\n                * Checks if `value` is a buffer.\n                *\n                * @static\n                * @memberOf _\n                * @since 4.3.0\n                * @category Lang\n                * @param {*} value The value to check.\n                * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n                * @example\n                *\n                * _.isBuffer(new Buffer(2));\n                * // => true\n                *\n                * _.isBuffer(new Uint8Array(2));\n                * // => false\n                */\n\n                var isBuffer = nativeIsBuffer || stubFalse;\n                module.exports = isBuffer;\n              }, {\n                \"./_root\": 130,\n                \"./stubFalse\": 164\n              }],\n              150: [function (require, module, exports) {\n                var baseGetTag = require('./_baseGetTag'),\n                    isObject = require('./isObject');\n                /** `Object#toString` result references. */\n\n\n                var asyncTag = '[object AsyncFunction]',\n                    funcTag = '[object Function]',\n                    genTag = '[object GeneratorFunction]',\n                    proxyTag = '[object Proxy]';\n                /**\n                * Checks if `value` is classified as a `Function` object.\n                *\n                * @static\n                * @memberOf _\n                * @since 0.1.0\n                * @category Lang\n                * @param {*} value The value to check.\n                * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n                * @example\n                *\n                * _.isFunction(_);\n                * // => true\n                *\n                * _.isFunction(/abc/);\n                * // => false\n                */\n\n                function isFunction(value) {\n                  if (!isObject(value)) {\n                    return false;\n                  } // The use of `Object#toString` avoids issues with the `typeof` operator\n                  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n                  var tag = baseGetTag(value);\n                  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n                }\n\n                module.exports = isFunction;\n              }, {\n                \"./_baseGetTag\": 60,\n                \"./isObject\": 153\n              }],\n              151: [function (require, module, exports) {\n                /** Used as references for various `Number` constants. */\n                var MAX_SAFE_INTEGER = 9007199254740991;\n                /**\n                * Checks if `value` is a valid array-like length.\n                *\n                * **Note:** This method is loosely based on\n                * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n                *\n                * @static\n                * @memberOf _\n                * @since 4.0.0\n                * @category Lang\n                * @param {*} value The value to check.\n                * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n                * @example\n                *\n                * _.isLength(3);\n                * // => true\n                *\n                * _.isLength(Number.MIN_VALUE);\n                * // => false\n                *\n                * _.isLength(Infinity);\n                * // => false\n                *\n                * _.isLength('3');\n                * // => false\n                */\n\n                function isLength(value) {\n                  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n                }\n\n                module.exports = isLength;\n              }, {}],\n              152: [function (require, module, exports) {\n                var baseIsMap = require('./_baseIsMap'),\n                    baseUnary = require('./_baseUnary'),\n                    nodeUtil = require('./_nodeUtil');\n                /* Node.js helper references. */\n\n\n                var nodeIsMap = nodeUtil && nodeUtil.isMap;\n                /**\n                * Checks if `value` is classified as a `Map` object.\n                *\n                * @static\n                * @memberOf _\n                * @since 4.3.0\n                * @category Lang\n                * @param {*} value The value to check.\n                * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n                * @example\n                *\n                * _.isMap(new Map);\n                * // => true\n                *\n                * _.isMap(new WeakMap);\n                * // => false\n                */\n\n                var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n                module.exports = isMap;\n              }, {\n                \"./_baseIsMap\": 62,\n                \"./_baseUnary\": 74,\n                \"./_nodeUtil\": 126\n              }],\n              153: [function (require, module, exports) {\n                /**\n                * Checks if `value` is the\n                * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n                * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n                *\n                * @static\n                * @memberOf _\n                * @since 0.1.0\n                * @category Lang\n                * @param {*} value The value to check.\n                * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n                * @example\n                *\n                * _.isObject({});\n                * // => true\n                *\n                * _.isObject([1, 2, 3]);\n                * // => true\n                *\n                * _.isObject(_.noop);\n                * // => true\n                *\n                * _.isObject(null);\n                * // => false\n                */\n                function isObject(value) {\n                  var type = _typeof(value);\n\n                  return value != null && (type == 'object' || type == 'function');\n                }\n\n                module.exports = isObject;\n              }, {}],\n              154: [function (require, module, exports) {\n                /**\n                * Checks if `value` is object-like. A value is object-like if it's not `null`\n                * and has a `typeof` result of \"object\".\n                *\n                * @static\n                * @memberOf _\n                * @since 4.0.0\n                * @category Lang\n                * @param {*} value The value to check.\n                * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n                * @example\n                *\n                * _.isObjectLike({});\n                * // => true\n                *\n                * _.isObjectLike([1, 2, 3]);\n                * // => true\n                *\n                * _.isObjectLike(_.noop);\n                * // => false\n                *\n                * _.isObjectLike(null);\n                * // => false\n                */\n                function isObjectLike(value) {\n                  return value != null && _typeof(value) == 'object';\n                }\n\n                module.exports = isObjectLike;\n              }, {}],\n              155: [function (require, module, exports) {\n                var baseGetTag = require('./_baseGetTag'),\n                    getPrototype = require('./_getPrototype'),\n                    isObjectLike = require('./isObjectLike');\n                /** `Object#toString` result references. */\n\n\n                var objectTag = '[object Object]';\n                /** Used for built-in method references. */\n\n                var funcProto = Function.prototype,\n                    objectProto = Object.prototype;\n                /** Used to resolve the decompiled source of functions. */\n\n                var funcToString = funcProto.toString;\n                /** Used to check objects for own properties. */\n\n                var hasOwnProperty = objectProto.hasOwnProperty;\n                /** Used to infer the `Object` constructor. */\n\n                var objectCtorString = funcToString.call(Object);\n                /**\n                * Checks if `value` is a plain object, that is, an object created by the\n                * `Object` constructor or one with a `[[Prototype]]` of `null`.\n                *\n                * @static\n                * @memberOf _\n                * @since 0.8.0\n                * @category Lang\n                * @param {*} value The value to check.\n                * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n                * @example\n                *\n                * function Foo() {\n                *   this.a = 1;\n                * }\n                *\n                * _.isPlainObject(new Foo);\n                * // => false\n                *\n                * _.isPlainObject([1, 2, 3]);\n                * // => false\n                *\n                * _.isPlainObject({ 'x': 0, 'y': 0 });\n                * // => true\n                *\n                * _.isPlainObject(Object.create(null));\n                * // => true\n                */\n\n                function isPlainObject(value) {\n                  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n                    return false;\n                  }\n\n                  var proto = getPrototype(value);\n\n                  if (proto === null) {\n                    return true;\n                  }\n\n                  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n                  return typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;\n                }\n\n                module.exports = isPlainObject;\n              }, {\n                \"./_baseGetTag\": 60,\n                \"./_getPrototype\": 94,\n                \"./isObjectLike\": 154\n              }],\n              156: [function (require, module, exports) {\n                var baseIsSet = require('./_baseIsSet'),\n                    baseUnary = require('./_baseUnary'),\n                    nodeUtil = require('./_nodeUtil');\n                /* Node.js helper references. */\n\n\n                var nodeIsSet = nodeUtil && nodeUtil.isSet;\n                /**\n                * Checks if `value` is classified as a `Set` object.\n                *\n                * @static\n                * @memberOf _\n                * @since 4.3.0\n                * @category Lang\n                * @param {*} value The value to check.\n                * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n                * @example\n                *\n                * _.isSet(new Set);\n                * // => true\n                *\n                * _.isSet(new WeakSet);\n                * // => false\n                */\n\n                var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n                module.exports = isSet;\n              }, {\n                \"./_baseIsSet\": 64,\n                \"./_baseUnary\": 74,\n                \"./_nodeUtil\": 126\n              }],\n              157: [function (require, module, exports) {\n                var baseGetTag = require('./_baseGetTag'),\n                    isArray = require('./isArray'),\n                    isObjectLike = require('./isObjectLike');\n                /** `Object#toString` result references. */\n\n\n                var stringTag = '[object String]';\n                /**\n                * Checks if `value` is classified as a `String` primitive or object.\n                *\n                * @static\n                * @since 0.1.0\n                * @memberOf _\n                * @category Lang\n                * @param {*} value The value to check.\n                * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n                * @example\n                *\n                * _.isString('abc');\n                * // => true\n                *\n                * _.isString(1);\n                * // => false\n                */\n\n                function isString(value) {\n                  return typeof value == 'string' || !isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag;\n                }\n\n                module.exports = isString;\n              }, {\n                \"./_baseGetTag\": 60,\n                \"./isArray\": 146,\n                \"./isObjectLike\": 154\n              }],\n              158: [function (require, module, exports) {\n                var baseGetTag = require('./_baseGetTag'),\n                    isObjectLike = require('./isObjectLike');\n                /** `Object#toString` result references. */\n\n\n                var symbolTag = '[object Symbol]';\n                /**\n                * Checks if `value` is classified as a `Symbol` primitive or object.\n                *\n                * @static\n                * @memberOf _\n                * @since 4.0.0\n                * @category Lang\n                * @param {*} value The value to check.\n                * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n                * @example\n                *\n                * _.isSymbol(Symbol.iterator);\n                * // => true\n                *\n                * _.isSymbol('abc');\n                * // => false\n                */\n\n                function isSymbol(value) {\n                  return _typeof(value) == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;\n                }\n\n                module.exports = isSymbol;\n              }, {\n                \"./_baseGetTag\": 60,\n                \"./isObjectLike\": 154\n              }],\n              159: [function (require, module, exports) {\n                var baseIsTypedArray = require('./_baseIsTypedArray'),\n                    baseUnary = require('./_baseUnary'),\n                    nodeUtil = require('./_nodeUtil');\n                /* Node.js helper references. */\n\n\n                var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n                /**\n                * Checks if `value` is classified as a typed array.\n                *\n                * @static\n                * @memberOf _\n                * @since 3.0.0\n                * @category Lang\n                * @param {*} value The value to check.\n                * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n                * @example\n                *\n                * _.isTypedArray(new Uint8Array);\n                * // => true\n                *\n                * _.isTypedArray([]);\n                * // => false\n                */\n\n                var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n                module.exports = isTypedArray;\n              }, {\n                \"./_baseIsTypedArray\": 65,\n                \"./_baseUnary\": 74,\n                \"./_nodeUtil\": 126\n              }],\n              160: [function (require, module, exports) {\n                var arrayLikeKeys = require('./_arrayLikeKeys'),\n                    baseKeys = require('./_baseKeys'),\n                    isArrayLike = require('./isArrayLike');\n                /**\n                * Creates an array of the own enumerable property names of `object`.\n                *\n                * **Note:** Non-object values are coerced to objects. See the\n                * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n                * for more details.\n                *\n                * @static\n                * @since 0.1.0\n                * @memberOf _\n                * @category Object\n                * @param {Object} object The object to query.\n                * @returns {Array} Returns the array of property names.\n                * @example\n                *\n                * function Foo() {\n                *   this.a = 1;\n                *   this.b = 2;\n                * }\n                *\n                * Foo.prototype.c = 3;\n                *\n                * _.keys(new Foo);\n                * // => ['a', 'b'] (iteration order is not guaranteed)\n                *\n                * _.keys('hi');\n                * // => ['0', '1']\n                */\n\n\n                function keys(object) {\n                  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n                }\n\n                module.exports = keys;\n              }, {\n                \"./_arrayLikeKeys\": 47,\n                \"./_baseKeys\": 66,\n                \"./isArrayLike\": 147\n              }],\n              161: [function (require, module, exports) {\n                var arrayLikeKeys = require('./_arrayLikeKeys'),\n                    baseKeysIn = require('./_baseKeysIn'),\n                    isArrayLike = require('./isArrayLike');\n                /**\n                * Creates an array of the own and inherited enumerable property names of `object`.\n                *\n                * **Note:** Non-object values are coerced to objects.\n                *\n                * @static\n                * @memberOf _\n                * @since 3.0.0\n                * @category Object\n                * @param {Object} object The object to query.\n                * @returns {Array} Returns the array of property names.\n                * @example\n                *\n                * function Foo() {\n                *   this.a = 1;\n                *   this.b = 2;\n                * }\n                *\n                * Foo.prototype.c = 3;\n                *\n                * _.keysIn(new Foo);\n                * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n                */\n\n\n                function keysIn(object) {\n                  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n                }\n\n                module.exports = keysIn;\n              }, {\n                \"./_arrayLikeKeys\": 47,\n                \"./_baseKeysIn\": 67,\n                \"./isArrayLike\": 147\n              }],\n              162: [function (require, module, exports) {\n                var baseMerge = require('./_baseMerge'),\n                    createAssigner = require('./_createAssigner');\n                /**\n                * This method is like `_.merge` except that it accepts `customizer` which\n                * is invoked to produce the merged values of the destination and source\n                * properties. If `customizer` returns `undefined`, merging is handled by the\n                * method instead. The `customizer` is invoked with six arguments:\n                * (objValue, srcValue, key, object, source, stack).\n                *\n                * **Note:** This method mutates `object`.\n                *\n                * @static\n                * @memberOf _\n                * @since 4.0.0\n                * @category Object\n                * @param {Object} object The destination object.\n                * @param {...Object} sources The source objects.\n                * @param {Function} customizer The function to customize assigned values.\n                * @returns {Object} Returns `object`.\n                * @example\n                *\n                * function customizer(objValue, srcValue) {\n                *   if (_.isArray(objValue)) {\n                *     return objValue.concat(srcValue);\n                *   }\n                * }\n                *\n                * var object = { 'a': [1], 'b': [2] };\n                * var other = { 'a': [3], 'b': [4] };\n                *\n                * _.mergeWith(object, other, customizer);\n                * // => { 'a': [1, 3], 'b': [2, 4] }\n                */\n\n\n                var mergeWith = createAssigner(function (object, source, srcIndex, customizer) {\n                  baseMerge(object, source, srcIndex, customizer);\n                });\n                module.exports = mergeWith;\n              }, {\n                \"./_baseMerge\": 68,\n                \"./_createAssigner\": 86\n              }],\n              163: [function (require, module, exports) {\n                /**\n                * This method returns a new empty array.\n                *\n                * @static\n                * @memberOf _\n                * @since 4.13.0\n                * @category Util\n                * @returns {Array} Returns the new empty array.\n                * @example\n                *\n                * var arrays = _.times(2, _.stubArray);\n                *\n                * console.log(arrays);\n                * // => [[], []]\n                *\n                * console.log(arrays[0] === arrays[1]);\n                * // => false\n                */\n                function stubArray() {\n                  return [];\n                }\n\n                module.exports = stubArray;\n              }, {}],\n              164: [function (require, module, exports) {\n                /**\n                * This method returns `false`.\n                *\n                * @static\n                * @memberOf _\n                * @since 4.13.0\n                * @category Util\n                * @returns {boolean} Returns `false`.\n                * @example\n                *\n                * _.times(2, _.stubFalse);\n                * // => [false, false]\n                */\n                function stubFalse() {\n                  return false;\n                }\n\n                module.exports = stubFalse;\n              }, {}],\n              165: [function (require, module, exports) {\n                var copyObject = require('./_copyObject'),\n                    keysIn = require('./keysIn');\n                /**\n                * Converts `value` to a plain object flattening inherited enumerable string\n                * keyed properties of `value` to own properties of the plain object.\n                *\n                * @static\n                * @memberOf _\n                * @since 3.0.0\n                * @category Lang\n                * @param {*} value The value to convert.\n                * @returns {Object} Returns the converted plain object.\n                * @example\n                *\n                * function Foo() {\n                *   this.b = 2;\n                * }\n                *\n                * Foo.prototype.c = 3;\n                *\n                * _.assign({ 'a': 1 }, new Foo);\n                * // => { 'a': 1, 'b': 2 }\n                *\n                * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n                * // => { 'a': 1, 'b': 2, 'c': 3 }\n                */\n\n\n                function toPlainObject(value) {\n                  return copyObject(value, keysIn(value));\n                }\n\n                module.exports = toPlainObject;\n              }, {\n                \"./_copyObject\": 82,\n                \"./keysIn\": 161\n              }],\n              166: [function (require, module, exports) {\n                var baseToString = require('./_baseToString');\n                /**\n                * Converts `value` to a string. An empty string is returned for `null`\n                * and `undefined` values. The sign of `-0` is preserved.\n                *\n                * @static\n                * @memberOf _\n                * @since 4.0.0\n                * @category Lang\n                * @param {*} value The value to convert.\n                * @returns {string} Returns the converted string.\n                * @example\n                *\n                * _.toString(null);\n                * // => ''\n                *\n                * _.toString(-0);\n                * // => '-0'\n                *\n                * _.toString([1, 2, 3]);\n                * // => '1,2,3'\n                */\n\n\n                function toString(value) {\n                  return value == null ? '' : baseToString(value);\n                }\n\n                module.exports = toString;\n              }, {\n                \"./_baseToString\": 73\n              }],\n              167: [function (require, module, exports) {\n                /**\n                * Srcset Parser\n                *\n                * By Alex Bell |  MIT License\n                *\n                * JS Parser for the string value that appears in markup <img srcset=\"here\">\n                *\n                * @returns Array [{url: _, d: _, w: _, h:_}, ...]\n                *\n                * Based super duper closely on the reference algorithm at:\n                * https://html.spec.whatwg.org/multipage/embedded-content.html#parse-a-srcset-attribute\n                *\n                * Most comments are copied in directly from the spec\n                * (except for comments in parens).\n                */\n                (function (root, factory) {\n                  if (typeof define === 'function' && define.amd) {\n                    // AMD. Register as an anonymous module.\n                    define([], factory);\n                  } else if (_typeof(module) === 'object' && module.exports) {\n                    // Node. Does not work with strict CommonJS, but\n                    // only CommonJS-like environments that support module.exports,\n                    // like Node.\n                    module.exports = factory();\n                  } else {\n                    // Browser globals (root is window)\n                    root.parseSrcset = factory();\n                  }\n                })(this, function () {\n                  // 1. Let input be the value passed to this algorithm.\n                  return function (input) {\n                    // UTILITY FUNCTIONS\n                    // Manual is faster than RegEx\n                    // http://bjorn.tipling.com/state-and-regular-expressions-in-javascript\n                    // http://jsperf.com/whitespace-character/5\n                    function isSpace(c) {\n                      return c === \" \" || // space\n                      c === \"\\t\" || // horizontal tab\n                      c === \"\\n\" || // new line\n                      c === \"\\f\" || // form feed\n                      c === \"\\r\"; // carriage return\n                    }\n\n                    function collectCharacters(regEx) {\n                      var chars,\n                          match = regEx.exec(input.substring(pos));\n\n                      if (match) {\n                        chars = match[0];\n                        pos += chars.length;\n                        return chars;\n                      }\n                    }\n\n                    var inputLength = input.length,\n                        // (Don't use \\s, to avoid matching non-breaking space)\n                    regexLeadingSpaces = /^[ \\t\\n\\r\\u000c]+/,\n                        regexLeadingCommasOrSpaces = /^[, \\t\\n\\r\\u000c]+/,\n                        regexLeadingNotSpaces = /^[^ \\t\\n\\r\\u000c]+/,\n                        regexTrailingCommas = /[,]+$/,\n                        regexNonNegativeInteger = /^\\d+$/,\n                        // ( Positive or negative or unsigned integers or decimals, without or without exponents.\n                    // Must include at least one digit.\n                    // According to spec tests any decimal point must be followed by a digit.\n                    // No leading plus sign is allowed.)\n                    // https://html.spec.whatwg.org/multipage/infrastructure.html#valid-floating-point-number\n                    regexFloatingPoint = /^-?(?:[0-9]+|[0-9]*\\.[0-9]+)(?:[eE][+-]?[0-9]+)?$/,\n                        url,\n                        descriptors,\n                        currentDescriptor,\n                        state,\n                        c,\n                        // 2. Let position be a pointer into input, initially pointing at the start\n                    //    of the string.\n                    pos = 0,\n                        // 3. Let candidates be an initially empty source set.\n                    candidates = []; // 4. Splitting loop: Collect a sequence of characters that are space\n                    //    characters or U+002C COMMA characters. If any U+002C COMMA characters\n                    //    were collected, that is a parse error.\n\n                    while (true) {\n                      collectCharacters(regexLeadingCommasOrSpaces); // 5. If position is past the end of input, return candidates and abort these steps.\n\n                      if (pos >= inputLength) {\n                        return candidates; // (we're done, this is the sole return path)\n                      } // 6. Collect a sequence of characters that are not space characters,\n                      //    and let that be url.\n\n\n                      url = collectCharacters(regexLeadingNotSpaces); // 7. Let descriptors be a new empty list.\n\n                      descriptors = []; // 8. If url ends with a U+002C COMMA character (,), follow these substeps:\n                      //\t\t(1). Remove all trailing U+002C COMMA characters from url. If this removed\n                      //         more than one character, that is a parse error.\n\n                      if (url.slice(-1) === \",\") {\n                        url = url.replace(regexTrailingCommas, \"\"); // (Jump ahead to step 9 to skip tokenization and just push the candidate).\n\n                        parseDescriptors(); //\tOtherwise, follow these substeps:\n                      } else {\n                        tokenize();\n                      } // (close else of step 8)\n                      // 16. Return to the step labeled splitting loop.\n\n                    } // (Close of big while loop.)\n\n                    /**\n                    \t\t * Tokenizes descriptor properties prior to parsing\n                    \t\t * Returns undefined.\n                    \t\t */\n\n\n                    function tokenize() {\n                      // 8.1. Descriptor tokeniser: Skip whitespace\n                      collectCharacters(regexLeadingSpaces); // 8.2. Let current descriptor be the empty string.\n\n                      currentDescriptor = \"\"; // 8.3. Let state be in descriptor.\n\n                      state = \"in descriptor\";\n\n                      while (true) {\n                        // 8.4. Let c be the character at position.\n                        c = input.charAt(pos); //  Do the following depending on the value of state.\n                        //  For the purpose of this step, \"EOF\" is a special character representing\n                        //  that position is past the end of input.\n                        // In descriptor\n\n                        if (state === \"in descriptor\") {\n                          // Do the following, depending on the value of c:\n                          // Space character\n                          // If current descriptor is not empty, append current descriptor to\n                          // descriptors and let current descriptor be the empty string.\n                          // Set state to after descriptor.\n                          if (isSpace(c)) {\n                            if (currentDescriptor) {\n                              descriptors.push(currentDescriptor);\n                              currentDescriptor = \"\";\n                              state = \"after descriptor\";\n                            } // U+002C COMMA (,)\n                            // Advance position to the next character in input. If current descriptor\n                            // is not empty, append current descriptor to descriptors. Jump to the step\n                            // labeled descriptor parser.\n\n                          } else if (c === \",\") {\n                            pos += 1;\n\n                            if (currentDescriptor) {\n                              descriptors.push(currentDescriptor);\n                            }\n\n                            parseDescriptors();\n                            return; // U+0028 LEFT PARENTHESIS (()\n                            // Append c to current descriptor. Set state to in parens.\n                          } else if (c === \"(\") {\n                            currentDescriptor = currentDescriptor + c;\n                            state = \"in parens\"; // EOF\n                            // If current descriptor is not empty, append current descriptor to\n                            // descriptors. Jump to the step labeled descriptor parser.\n                          } else if (c === \"\") {\n                            if (currentDescriptor) {\n                              descriptors.push(currentDescriptor);\n                            }\n\n                            parseDescriptors();\n                            return; // Anything else\n                            // Append c to current descriptor.\n                          } else {\n                            currentDescriptor = currentDescriptor + c;\n                          } // (end \"in descriptor\"\n                          // In parens\n\n                        } else if (state === \"in parens\") {\n                          // U+0029 RIGHT PARENTHESIS ())\n                          // Append c to current descriptor. Set state to in descriptor.\n                          if (c === \")\") {\n                            currentDescriptor = currentDescriptor + c;\n                            state = \"in descriptor\"; // EOF\n                            // Append current descriptor to descriptors. Jump to the step labeled\n                            // descriptor parser.\n                          } else if (c === \"\") {\n                            descriptors.push(currentDescriptor);\n                            parseDescriptors();\n                            return; // Anything else\n                            // Append c to current descriptor.\n                          } else {\n                            currentDescriptor = currentDescriptor + c;\n                          } // After descriptor\n\n                        } else if (state === \"after descriptor\") {\n                          // Do the following, depending on the value of c:\n                          // Space character: Stay in this state.\n                          if (isSpace(c)) {// EOF: Jump to the step labeled descriptor parser.\n                          } else if (c === \"\") {\n                            parseDescriptors();\n                            return; // Anything else\n                            // Set state to in descriptor. Set position to the previous character in input.\n                          } else {\n                            state = \"in descriptor\";\n                            pos -= 1;\n                          }\n                        } // Advance position to the next character in input.\n\n\n                        pos += 1; // Repeat this step.\n                      } // (close while true loop)\n\n                    }\n                    /**\n                    \t * Adds descriptor properties to a candidate, pushes to the candidates array\n                    \t * @return undefined\n                    \t */\n                    // Declared outside of the while loop so that it's only created once.\n\n\n                    function parseDescriptors() {\n                      // 9. Descriptor parser: Let error be no.\n                      var pError = false,\n                          // 10. Let width be absent.\n                      // 11. Let density be absent.\n                      // 12. Let future-compat-h be absent. (We're implementing it now as h)\n                      w,\n                          d,\n                          h,\n                          i,\n                          candidate = {},\n                          desc,\n                          lastChar,\n                          value,\n                          intVal,\n                          floatVal; // 13. For each descriptor in descriptors, run the appropriate set of steps\n                      // from the following list:\n\n                      for (i = 0; i < descriptors.length; i++) {\n                        desc = descriptors[i];\n                        lastChar = desc[desc.length - 1];\n                        value = desc.substring(0, desc.length - 1);\n                        intVal = parseInt(value, 10);\n                        floatVal = parseFloat(value); // If the descriptor consists of a valid non-negative integer followed by\n                        // a U+0077 LATIN SMALL LETTER W character\n\n                        if (regexNonNegativeInteger.test(value) && lastChar === \"w\") {\n                          // If width and density are not both absent, then let error be yes.\n                          if (w || d) {\n                            pError = true;\n                          } // Apply the rules for parsing non-negative integers to the descriptor.\n                          // If the result is zero, let error be yes.\n                          // Otherwise, let width be the result.\n\n\n                          if (intVal === 0) {\n                            pError = true;\n                          } else {\n                            w = intVal;\n                          } // If the descriptor consists of a valid floating-point number followed by\n                          // a U+0078 LATIN SMALL LETTER X character\n\n                        } else if (regexFloatingPoint.test(value) && lastChar === \"x\") {\n                          // If width, density and future-compat-h are not all absent, then let error\n                          // be yes.\n                          if (w || d || h) {\n                            pError = true;\n                          } // Apply the rules for parsing floating-point number values to the descriptor.\n                          // If the result is less than zero, let error be yes. Otherwise, let density\n                          // be the result.\n\n\n                          if (floatVal < 0) {\n                            pError = true;\n                          } else {\n                            d = floatVal;\n                          } // If the descriptor consists of a valid non-negative integer followed by\n                          // a U+0068 LATIN SMALL LETTER H character\n\n                        } else if (regexNonNegativeInteger.test(value) && lastChar === \"h\") {\n                          // If height and density are not both absent, then let error be yes.\n                          if (h || d) {\n                            pError = true;\n                          } // Apply the rules for parsing non-negative integers to the descriptor.\n                          // If the result is zero, let error be yes. Otherwise, let future-compat-h\n                          // be the result.\n\n\n                          if (intVal === 0) {\n                            pError = true;\n                          } else {\n                            h = intVal;\n                          } // Anything else, Let error be yes.\n\n                        } else {\n                          pError = true;\n                        }\n                      } // (close step 13 for loop)\n                      // 15. If error is still no, then append a new image source to candidates whose\n                      // URL is url, associated with a width width if not absent and a pixel\n                      // density density if not absent. Otherwise, there is a parse error.\n\n\n                      if (!pError) {\n                        candidate.url = url;\n\n                        if (w) {\n                          candidate.w = w;\n                        }\n\n                        if (d) {\n                          candidate.d = d;\n                        }\n\n                        if (h) {\n                          candidate.h = h;\n                        }\n\n                        candidates.push(candidate);\n                      } else if (console && console.log) {\n                        console.log(\"Invalid srcset descriptor found in '\" + input + \"' at '\" + desc + \"'.\");\n                      }\n                    } // (close parseDescriptors fn)\n\n                  };\n                });\n              }, {}],\n              168: [function (require, module, exports) {\n                (function (process) {\n                  // .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n                  // backported and transplited with Babel, with backwards-compat fixes\n                  // Copyright Joyent, Inc. and other Node contributors.\n                  //\n                  // Permission is hereby granted, free of charge, to any person obtaining a\n                  // copy of this software and associated documentation files (the\n                  // \"Software\"), to deal in the Software without restriction, including\n                  // without limitation the rights to use, copy, modify, merge, publish,\n                  // distribute, sublicense, and/or sell copies of the Software, and to permit\n                  // persons to whom the Software is furnished to do so, subject to the\n                  // following conditions:\n                  //\n                  // The above copyright notice and this permission notice shall be included\n                  // in all copies or substantial portions of the Software.\n                  //\n                  // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n                  // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n                  // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n                  // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n                  // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n                  // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n                  // USE OR OTHER DEALINGS IN THE SOFTWARE.\n                  // resolves . and .. elements in a path array with directory names there\n                  // must be no slashes, empty elements, or device names (c:\\) in the array\n                  // (so also no leading and trailing slashes - it does not distinguish\n                  // relative and absolute paths)\n                  function normalizeArray(parts, allowAboveRoot) {\n                    // if the path tries to go above the root, `up` ends up > 0\n                    var up = 0;\n\n                    for (var i = parts.length - 1; i >= 0; i--) {\n                      var last = parts[i];\n\n                      if (last === '.') {\n                        parts.splice(i, 1);\n                      } else if (last === '..') {\n                        parts.splice(i, 1);\n                        up++;\n                      } else if (up) {\n                        parts.splice(i, 1);\n                        up--;\n                      }\n                    } // if the path is allowed to go above the root, restore leading ..s\n\n\n                    if (allowAboveRoot) {\n                      for (; up--; up) {\n                        parts.unshift('..');\n                      }\n                    }\n\n                    return parts;\n                  } // path.resolve([from ...], to)\n                  // posix version\n\n\n                  exports.resolve = function () {\n                    var resolvedPath = '',\n                        resolvedAbsolute = false;\n\n                    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n                      var path = i >= 0 ? arguments[i] : process.cwd(); // Skip empty and invalid entries\n\n                      if (typeof path !== 'string') {\n                        throw new TypeError('Arguments to path.resolve must be strings');\n                      } else if (!path) {\n                        continue;\n                      }\n\n                      resolvedPath = path + '/' + resolvedPath;\n                      resolvedAbsolute = path.charAt(0) === '/';\n                    } // At this point the path should be resolved to a full absolute path, but\n                    // handle relative paths to be safe (might happen when process.cwd() fails)\n                    // Normalize the path\n\n\n                    resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function (p) {\n                      return !!p;\n                    }), !resolvedAbsolute).join('/');\n                    return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n                  }; // path.normalize(path)\n                  // posix version\n\n\n                  exports.normalize = function (path) {\n                    var isAbsolute = exports.isAbsolute(path),\n                        trailingSlash = substr(path, -1) === '/'; // Normalize the path\n\n                    path = normalizeArray(filter(path.split('/'), function (p) {\n                      return !!p;\n                    }), !isAbsolute).join('/');\n\n                    if (!path && !isAbsolute) {\n                      path = '.';\n                    }\n\n                    if (path && trailingSlash) {\n                      path += '/';\n                    }\n\n                    return (isAbsolute ? '/' : '') + path;\n                  }; // posix version\n\n\n                  exports.isAbsolute = function (path) {\n                    return path.charAt(0) === '/';\n                  }; // posix version\n\n\n                  exports.join = function () {\n                    var paths = Array.prototype.slice.call(arguments, 0);\n                    return exports.normalize(filter(paths, function (p, index) {\n                      if (typeof p !== 'string') {\n                        throw new TypeError('Arguments to path.join must be strings');\n                      }\n\n                      return p;\n                    }).join('/'));\n                  }; // path.relative(from, to)\n                  // posix version\n\n\n                  exports.relative = function (from, to) {\n                    from = exports.resolve(from).substr(1);\n                    to = exports.resolve(to).substr(1);\n\n                    function trim(arr) {\n                      var start = 0;\n\n                      for (; start < arr.length; start++) {\n                        if (arr[start] !== '') break;\n                      }\n\n                      var end = arr.length - 1;\n\n                      for (; end >= 0; end--) {\n                        if (arr[end] !== '') break;\n                      }\n\n                      if (start > end) return [];\n                      return arr.slice(start, end - start + 1);\n                    }\n\n                    var fromParts = trim(from.split('/'));\n                    var toParts = trim(to.split('/'));\n                    var length = Math.min(fromParts.length, toParts.length);\n                    var samePartsLength = length;\n\n                    for (var i = 0; i < length; i++) {\n                      if (fromParts[i] !== toParts[i]) {\n                        samePartsLength = i;\n                        break;\n                      }\n                    }\n\n                    var outputParts = [];\n\n                    for (var i = samePartsLength; i < fromParts.length; i++) {\n                      outputParts.push('..');\n                    }\n\n                    outputParts = outputParts.concat(toParts.slice(samePartsLength));\n                    return outputParts.join('/');\n                  };\n\n                  exports.sep = '/';\n                  exports.delimiter = ':';\n\n                  exports.dirname = function (path) {\n                    if (typeof path !== 'string') path = path + '';\n                    if (path.length === 0) return '.';\n                    var code = path.charCodeAt(0);\n                    var hasRoot = code === 47\n                    /*/*/\n                    ;\n                    var end = -1;\n                    var matchedSlash = true;\n\n                    for (var i = path.length - 1; i >= 1; --i) {\n                      code = path.charCodeAt(i);\n\n                      if (code === 47\n                      /*/*/\n                      ) {\n                          if (!matchedSlash) {\n                            end = i;\n                            break;\n                          }\n                        } else {\n                        // We saw the first non-path separator\n                        matchedSlash = false;\n                      }\n                    }\n\n                    if (end === -1) return hasRoot ? '/' : '.';\n\n                    if (hasRoot && end === 1) {\n                      // return '//';\n                      // Backwards-compat fix:\n                      return '/';\n                    }\n\n                    return path.slice(0, end);\n                  };\n\n                  function basename(path) {\n                    if (typeof path !== 'string') path = path + '';\n                    var start = 0;\n                    var end = -1;\n                    var matchedSlash = true;\n                    var i;\n\n                    for (i = path.length - 1; i >= 0; --i) {\n                      if (path.charCodeAt(i) === 47\n                      /*/*/\n                      ) {\n                          // If we reached a path separator that was not part of a set of path\n                          // separators at the end of the string, stop now\n                          if (!matchedSlash) {\n                            start = i + 1;\n                            break;\n                          }\n                        } else if (end === -1) {\n                        // We saw the first non-path separator, mark this as the end of our\n                        // path component\n                        matchedSlash = false;\n                        end = i + 1;\n                      }\n                    }\n\n                    if (end === -1) return '';\n                    return path.slice(start, end);\n                  } // Uses a mixed approach for backwards-compatibility, as ext behavior changed\n                  // in new Node.js versions, so only basename() above is backported here\n\n\n                  exports.basename = function (path, ext) {\n                    var f = basename(path);\n\n                    if (ext && f.substr(-1 * ext.length) === ext) {\n                      f = f.substr(0, f.length - ext.length);\n                    }\n\n                    return f;\n                  };\n\n                  exports.extname = function (path) {\n                    if (typeof path !== 'string') path = path + '';\n                    var startDot = -1;\n                    var startPart = 0;\n                    var end = -1;\n                    var matchedSlash = true; // Track the state of characters (if any) we see before our first dot and\n                    // after any path separator we find\n\n                    var preDotState = 0;\n\n                    for (var i = path.length - 1; i >= 0; --i) {\n                      var code = path.charCodeAt(i);\n\n                      if (code === 47\n                      /*/*/\n                      ) {\n                          // If we reached a path separator that was not part of a set of path\n                          // separators at the end of the string, stop now\n                          if (!matchedSlash) {\n                            startPart = i + 1;\n                            break;\n                          }\n\n                          continue;\n                        }\n\n                      if (end === -1) {\n                        // We saw the first non-path separator, mark this as the end of our\n                        // extension\n                        matchedSlash = false;\n                        end = i + 1;\n                      }\n\n                      if (code === 46\n                      /*.*/\n                      ) {\n                          // If this is our first dot, mark it as the start of our extension\n                          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n                        } else if (startDot !== -1) {\n                        // We saw a non-dot and non-path separator before our dot, so we should\n                        // have a good chance at having a non-empty extension\n                        preDotState = -1;\n                      }\n                    }\n\n                    if (startDot === -1 || end === -1 || // We saw a non-dot character immediately before the dot\n                    preDotState === 0 || // The (right-most) trimmed path component is exactly '..'\n                    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n                      return '';\n                    }\n\n                    return path.slice(startDot, end);\n                  };\n\n                  function filter(xs, f) {\n                    if (xs.filter) return xs.filter(f);\n                    var res = [];\n\n                    for (var i = 0; i < xs.length; i++) {\n                      if (f(xs[i], i, xs)) res.push(xs[i]);\n                    }\n\n                    return res;\n                  } // String.prototype.substr - negative index don't work in IE8\n\n\n                  var substr = 'ab'.substr(-1) === 'b' ? function (str, start, len) {\n                    return str.substr(start, len);\n                  } : function (str, start, len) {\n                    if (start < 0) start = str.length + start;\n                    return str.substr(start, len);\n                  };\n                }).call(this, require('_process'));\n              }, {\n                \"_process\": 193\n              }],\n              169: [function (require, module, exports) {\n                \"use strict\";\n\n                exports.__esModule = true;\n                exports[\"default\"] = void 0;\n\n                var _container = _interopRequireDefault(require(\"./container\"));\n\n                function _interopRequireDefault(obj) {\n                  return obj && obj.__esModule ? obj : {\n                    \"default\": obj\n                  };\n                }\n\n                function _inheritsLoose(subClass, superClass) {\n                  subClass.prototype = Object.create(superClass.prototype);\n                  subClass.prototype.constructor = subClass;\n                  subClass.__proto__ = superClass;\n                }\n                /**\n                * Represents an at-rule.\n                *\n                * If it’s followed in the CSS by a {} block, this node will have\n                * a nodes property representing its children.\n                *\n                * @extends Container\n                *\n                * @example\n                * const root = postcss.parse('@charset \"UTF-8\"; @media print {}')\n                *\n                * const charset = root.first\n                * charset.type  //=> 'atrule'\n                * charset.nodes //=> undefined\n                *\n                * const media = root.last\n                * media.nodes   //=> []\n                */\n\n\n                var AtRule = /*#__PURE__*/function (_Container) {\n                  _inheritsLoose(AtRule, _Container);\n\n                  function AtRule(defaults) {\n                    var _this;\n\n                    _this = _Container.call(this, defaults) || this;\n                    _this.type = 'atrule';\n                    return _this;\n                  }\n\n                  var _proto = AtRule.prototype;\n\n                  _proto.append = function append() {\n                    var _Container$prototype$;\n\n                    if (!this.nodes) this.nodes = [];\n\n                    for (var _len = arguments.length, children = new Array(_len), _key = 0; _key < _len; _key++) {\n                      children[_key] = arguments[_key];\n                    }\n\n                    return (_Container$prototype$ = _Container.prototype.append).call.apply(_Container$prototype$, [this].concat(children));\n                  };\n\n                  _proto.prepend = function prepend() {\n                    var _Container$prototype$2;\n\n                    if (!this.nodes) this.nodes = [];\n\n                    for (var _len2 = arguments.length, children = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                      children[_key2] = arguments[_key2];\n                    }\n\n                    return (_Container$prototype$2 = _Container.prototype.prepend).call.apply(_Container$prototype$2, [this].concat(children));\n                  }\n                  /**\n                  * @memberof AtRule#\n                  * @member {string} name The at-rule’s name immediately follows the `@`.\n                  *\n                  * @example\n                  * const root  = postcss.parse('@media print {}')\n                  * media.name //=> 'media'\n                  * const media = root.first\n                  */\n\n                  /**\n                  * @memberof AtRule#\n                  * @member {string} params The at-rule’s parameters, the values\n                  *                         that follow the at-rule’s name but precede\n                  *                         any {} block.\n                  *\n                  * @example\n                  * const root  = postcss.parse('@media print, screen {}')\n                  * const media = root.first\n                  * media.params //=> 'print, screen'\n                  */\n\n                  /**\n                  * @memberof AtRule#\n                  * @member {object} raws Information to generate byte-to-byte equal\n                  *                        node string as it was in the origin input.\n                  *\n                  * Every parser saves its own properties,\n                  * but the default CSS parser uses:\n                  *\n                  * * `before`: the space symbols before the node. It also stores `*`\n                  *   and `_` symbols before the declaration (IE hack).\n                  * * `after`: the space symbols after the last child of the node\n                  *   to the end of the node.\n                  * * `between`: the symbols between the property and value\n                  *   for declarations, selector and `{` for rules, or last parameter\n                  *   and `{` for at-rules.\n                  * * `semicolon`: contains true if the last child has\n                  *   an (optional) semicolon.\n                  * * `afterName`: the space between the at-rule name and its parameters.\n                  *\n                  * PostCSS cleans at-rule parameters from comments and extra spaces,\n                  * but it stores origin content in raws properties.\n                  * As such, if you don’t change a declaration’s value,\n                  * PostCSS will use the raw value with comments.\n                  *\n                  * @example\n                  * const root = postcss.parse('  @media\\nprint {\\n}')\n                  * root.first.first.raws //=> { before: '  ',\n                  *                       //     between: ' ',\n                  *                       //     afterName: '\\n',\n                  *                       //     after: '\\n' }\n                  */\n                  ;\n\n                  return AtRule;\n                }(_container[\"default\"]);\n\n                var _default = AtRule;\n                exports[\"default\"] = _default;\n                module.exports = exports[\"default\"];\n              }, {\n                \"./container\": 171\n              }],\n              170: [function (require, module, exports) {\n                \"use strict\";\n\n                exports.__esModule = true;\n                exports[\"default\"] = void 0;\n\n                var _node = _interopRequireDefault(require(\"./node\"));\n\n                function _interopRequireDefault(obj) {\n                  return obj && obj.__esModule ? obj : {\n                    \"default\": obj\n                  };\n                }\n\n                function _inheritsLoose(subClass, superClass) {\n                  subClass.prototype = Object.create(superClass.prototype);\n                  subClass.prototype.constructor = subClass;\n                  subClass.__proto__ = superClass;\n                }\n                /**\n                * Represents a comment between declarations or statements (rule and at-rules).\n                *\n                * Comments inside selectors, at-rule parameters, or declaration values\n                * will be stored in the `raws` properties explained above.\n                *\n                * @extends Node\n                */\n\n\n                var Comment = /*#__PURE__*/function (_Node) {\n                  _inheritsLoose(Comment, _Node);\n\n                  function Comment(defaults) {\n                    var _this;\n\n                    _this = _Node.call(this, defaults) || this;\n                    _this.type = 'comment';\n                    return _this;\n                  }\n                  /**\n                  * @memberof Comment#\n                  * @member {string} text The comment’s text.\n                  */\n\n                  /**\n                  * @memberof Comment#\n                  * @member {object} raws Information to generate byte-to-byte equal\n                  *                       node string as it was in the origin input.\n                  *\n                  * Every parser saves its own properties,\n                  * but the default CSS parser uses:\n                  *\n                  * * `before`: the space symbols before the node.\n                  * * `left`: the space symbols between `/*` and the comment’s text.\n                  * * `right`: the space symbols between the comment’s text.\n                  */\n\n\n                  return Comment;\n                }(_node[\"default\"]);\n\n                var _default = Comment;\n                exports[\"default\"] = _default;\n                module.exports = exports[\"default\"];\n              }, {\n                \"./node\": 178\n              }],\n              171: [function (require, module, exports) {\n                \"use strict\";\n\n                exports.__esModule = true;\n                exports[\"default\"] = void 0;\n\n                var _declaration = _interopRequireDefault(require(\"./declaration\"));\n\n                var _comment = _interopRequireDefault(require(\"./comment\"));\n\n                var _node = _interopRequireDefault(require(\"./node\"));\n\n                function _interopRequireDefault(obj) {\n                  return obj && obj.__esModule ? obj : {\n                    \"default\": obj\n                  };\n                }\n\n                function _defineProperties(target, props) {\n                  for (var i = 0; i < props.length; i++) {\n                    var descriptor = props[i];\n                    descriptor.enumerable = descriptor.enumerable || false;\n                    descriptor.configurable = true;\n                    if (\"value\" in descriptor) descriptor.writable = true;\n                    Object.defineProperty(target, descriptor.key, descriptor);\n                  }\n                }\n\n                function _createClass(Constructor, protoProps, staticProps) {\n                  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n                  if (staticProps) _defineProperties(Constructor, staticProps);\n                  return Constructor;\n                }\n\n                function _inheritsLoose(subClass, superClass) {\n                  subClass.prototype = Object.create(superClass.prototype);\n                  subClass.prototype.constructor = subClass;\n                  subClass.__proto__ = superClass;\n                }\n\n                function cleanSource(nodes) {\n                  return nodes.map(function (i) {\n                    if (i.nodes) i.nodes = cleanSource(i.nodes);\n                    delete i.source;\n                    return i;\n                  });\n                }\n                /**\n                * The {@link Root}, {@link AtRule}, and {@link Rule} container nodes\n                * inherit some common methods to help work with their children.\n                *\n                * Note that all containers can store any content. If you write a rule inside\n                * a rule, PostCSS will parse it.\n                *\n                * @extends Node\n                * @abstract\n                */\n\n\n                var Container = /*#__PURE__*/function (_Node) {\n                  _inheritsLoose(Container, _Node);\n\n                  function Container() {\n                    return _Node.apply(this, arguments) || this;\n                  }\n\n                  var _proto = Container.prototype;\n\n                  _proto.push = function push(child) {\n                    child.parent = this;\n                    this.nodes.push(child);\n                    return this;\n                  }\n                  /**\n                  * Iterates through the container’s immediate children,\n                  * calling `callback` for each child.\n                  *\n                  * Returning `false` in the callback will break iteration.\n                  *\n                  * This method only iterates through the container’s immediate children.\n                  * If you need to recursively iterate through all the container’s descendant\n                  * nodes, use {@link Container#walk}.\n                  *\n                  * Unlike the for `{}`-cycle or `Array#forEach` this iterator is safe\n                  * if you are mutating the array of child nodes during iteration.\n                  * PostCSS will adjust the current index to match the mutations.\n                  *\n                  * @param {childIterator} callback Iterator receives each node and index.\n                  *\n                  * @return {false|undefined} Returns `false` if iteration was broke.\n                  *\n                  * @example\n                  * const root = postcss.parse('a { color: black; z-index: 1 }')\n                  * const rule = root.first\n                  *\n                  * for (const decl of rule.nodes) {\n                  *   decl.cloneBefore({ prop: '-webkit-' + decl.prop })\n                  *   // Cycle will be infinite, because cloneBefore moves the current node\n                  *   // to the next index\n                  * }\n                  *\n                  * rule.each(decl => {\n                  *   decl.cloneBefore({ prop: '-webkit-' + decl.prop })\n                  *   // Will be executed only for color and z-index\n                  * })\n                  */\n                  ;\n\n                  _proto.each = function each(callback) {\n                    if (!this.lastEach) this.lastEach = 0;\n                    if (!this.indexes) this.indexes = {};\n                    this.lastEach += 1;\n                    var id = this.lastEach;\n                    this.indexes[id] = 0;\n                    if (!this.nodes) return undefined;\n                    var index, result;\n\n                    while (this.indexes[id] < this.nodes.length) {\n                      index = this.indexes[id];\n                      result = callback(this.nodes[index], index);\n                      if (result === false) break;\n                      this.indexes[id] += 1;\n                    }\n\n                    delete this.indexes[id];\n                    return result;\n                  }\n                  /**\n                  * Traverses the container’s descendant nodes, calling callback\n                  * for each node.\n                  *\n                  * Like container.each(), this method is safe to use\n                  * if you are mutating arrays during iteration.\n                  *\n                  * If you only need to iterate through the container’s immediate children,\n                  * use {@link Container#each}.\n                  *\n                  * @param {childIterator} callback Iterator receives each node and index.\n                  *\n                  * @return {false|undefined} Returns `false` if iteration was broke.\n                  *\n                  * @example\n                  * root.walk(node => {\n                  *   // Traverses all descendant nodes.\n                  * })\n                  */\n                  ;\n\n                  _proto.walk = function walk(callback) {\n                    return this.each(function (child, i) {\n                      var result;\n\n                      try {\n                        result = callback(child, i);\n                      } catch (e) {\n                        e.postcssNode = child;\n\n                        if (e.stack && child.source && /\\n\\s{4}at /.test(e.stack)) {\n                          var s = child.source;\n                          e.stack = e.stack.replace(/\\n\\s{4}at /, \"$&\" + s.input.from + \":\" + s.start.line + \":\" + s.start.column + \"$&\");\n                        }\n\n                        throw e;\n                      }\n\n                      if (result !== false && child.walk) {\n                        result = child.walk(callback);\n                      }\n\n                      return result;\n                    });\n                  }\n                  /**\n                  * Traverses the container’s descendant nodes, calling callback\n                  * for each declaration node.\n                  *\n                  * If you pass a filter, iteration will only happen over declarations\n                  * with matching properties.\n                  *\n                  * Like {@link Container#each}, this method is safe\n                  * to use if you are mutating arrays during iteration.\n                  *\n                  * @param {string|RegExp} [prop]   String or regular expression\n                  *                                 to filter declarations by property name.\n                  * @param {childIterator} callback Iterator receives each node and index.\n                  *\n                  * @return {false|undefined} Returns `false` if iteration was broke.\n                  *\n                  * @example\n                  * root.walkDecls(decl => {\n                  *   checkPropertySupport(decl.prop)\n                  * })\n                  *\n                  * root.walkDecls('border-radius', decl => {\n                  *   decl.remove()\n                  * })\n                  *\n                  * root.walkDecls(/^background/, decl => {\n                  *   decl.value = takeFirstColorFromGradient(decl.value)\n                  * })\n                  */\n                  ;\n\n                  _proto.walkDecls = function walkDecls(prop, callback) {\n                    if (!callback) {\n                      callback = prop;\n                      return this.walk(function (child, i) {\n                        if (child.type === 'decl') {\n                          return callback(child, i);\n                        }\n                      });\n                    }\n\n                    if (prop instanceof RegExp) {\n                      return this.walk(function (child, i) {\n                        if (child.type === 'decl' && prop.test(child.prop)) {\n                          return callback(child, i);\n                        }\n                      });\n                    }\n\n                    return this.walk(function (child, i) {\n                      if (child.type === 'decl' && child.prop === prop) {\n                        return callback(child, i);\n                      }\n                    });\n                  }\n                  /**\n                  * Traverses the container’s descendant nodes, calling callback\n                  * for each rule node.\n                  *\n                  * If you pass a filter, iteration will only happen over rules\n                  * with matching selectors.\n                  *\n                  * Like {@link Container#each}, this method is safe\n                  * to use if you are mutating arrays during iteration.\n                  *\n                  * @param {string|RegExp} [selector] String or regular expression\n                  *                                   to filter rules by selector.\n                  * @param {childIterator} callback   Iterator receives each node and index.\n                  *\n                  * @return {false|undefined} returns `false` if iteration was broke.\n                  *\n                  * @example\n                  * const selectors = []\n                  * root.walkRules(rule => {\n                  *   selectors.push(rule.selector)\n                  * })\n                  * console.log(`Your CSS uses ${ selectors.length } selectors`)\n                  */\n                  ;\n\n                  _proto.walkRules = function walkRules(selector, callback) {\n                    if (!callback) {\n                      callback = selector;\n                      return this.walk(function (child, i) {\n                        if (child.type === 'rule') {\n                          return callback(child, i);\n                        }\n                      });\n                    }\n\n                    if (selector instanceof RegExp) {\n                      return this.walk(function (child, i) {\n                        if (child.type === 'rule' && selector.test(child.selector)) {\n                          return callback(child, i);\n                        }\n                      });\n                    }\n\n                    return this.walk(function (child, i) {\n                      if (child.type === 'rule' && child.selector === selector) {\n                        return callback(child, i);\n                      }\n                    });\n                  }\n                  /**\n                  * Traverses the container’s descendant nodes, calling callback\n                  * for each at-rule node.\n                  *\n                  * If you pass a filter, iteration will only happen over at-rules\n                  * that have matching names.\n                  *\n                  * Like {@link Container#each}, this method is safe\n                  * to use if you are mutating arrays during iteration.\n                  *\n                  * @param {string|RegExp} [name]   String or regular expression\n                  *                                 to filter at-rules by name.\n                  * @param {childIterator} callback Iterator receives each node and index.\n                  *\n                  * @return {false|undefined} Returns `false` if iteration was broke.\n                  *\n                  * @example\n                  * root.walkAtRules(rule => {\n                  *   if (isOld(rule.name)) rule.remove()\n                  * })\n                  *\n                  * let first = false\n                  * root.walkAtRules('charset', rule => {\n                  *   if (!first) {\n                  *     first = true\n                  *   } else {\n                  *     rule.remove()\n                  *   }\n                  * })\n                  */\n                  ;\n\n                  _proto.walkAtRules = function walkAtRules(name, callback) {\n                    if (!callback) {\n                      callback = name;\n                      return this.walk(function (child, i) {\n                        if (child.type === 'atrule') {\n                          return callback(child, i);\n                        }\n                      });\n                    }\n\n                    if (name instanceof RegExp) {\n                      return this.walk(function (child, i) {\n                        if (child.type === 'atrule' && name.test(child.name)) {\n                          return callback(child, i);\n                        }\n                      });\n                    }\n\n                    return this.walk(function (child, i) {\n                      if (child.type === 'atrule' && child.name === name) {\n                        return callback(child, i);\n                      }\n                    });\n                  }\n                  /**\n                  * Traverses the container’s descendant nodes, calling callback\n                  * for each comment node.\n                  *\n                  * Like {@link Container#each}, this method is safe\n                  * to use if you are mutating arrays during iteration.\n                  *\n                  * @param {childIterator} callback Iterator receives each node and index.\n                  *\n                  * @return {false|undefined} Returns `false` if iteration was broke.\n                  *\n                  * @example\n                  * root.walkComments(comment => {\n                  *   comment.remove()\n                  * })\n                  */\n                  ;\n\n                  _proto.walkComments = function walkComments(callback) {\n                    return this.walk(function (child, i) {\n                      if (child.type === 'comment') {\n                        return callback(child, i);\n                      }\n                    });\n                  }\n                  /**\n                  * Inserts new nodes to the end of the container.\n                  *\n                  * @param {...(Node|object|string|Node[])} children New nodes.\n                  *\n                  * @return {Node} This node for methods chain.\n                  *\n                  * @example\n                  * const decl1 = postcss.decl({ prop: 'color', value: 'black' })\n                  * const decl2 = postcss.decl({ prop: 'background-color', value: 'white' })\n                  * rule.append(decl1, decl2)\n                  *\n                  * root.append({ name: 'charset', params: '\"UTF-8\"' })  // at-rule\n                  * root.append({ selector: 'a' })                       // rule\n                  * rule.append({ prop: 'color', value: 'black' })       // declaration\n                  * rule.append({ text: 'Comment' })                     // comment\n                  *\n                  * root.append('a {}')\n                  * root.first.append('color: black; z-index: 1')\n                  */\n                  ;\n\n                  _proto.append = function append() {\n                    for (var _len = arguments.length, children = new Array(_len), _key = 0; _key < _len; _key++) {\n                      children[_key] = arguments[_key];\n                    }\n\n                    for (var _i = 0, _children = children; _i < _children.length; _i++) {\n                      var child = _children[_i];\n                      var nodes = this.normalize(child, this.last);\n\n                      for (var _iterator = nodes, _isArray = Array.isArray(_iterator), _i2 = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n                        var _ref;\n\n                        if (_isArray) {\n                          if (_i2 >= _iterator.length) break;\n                          _ref = _iterator[_i2++];\n                        } else {\n                          _i2 = _iterator.next();\n                          if (_i2.done) break;\n                          _ref = _i2.value;\n                        }\n\n                        var node = _ref;\n                        this.nodes.push(node);\n                      }\n                    }\n\n                    return this;\n                  }\n                  /**\n                  * Inserts new nodes to the start of the container.\n                  *\n                  * @param {...(Node|object|string|Node[])} children New nodes.\n                  *\n                  * @return {Node} This node for methods chain.\n                  *\n                  * @example\n                  * const decl1 = postcss.decl({ prop: 'color', value: 'black' })\n                  * const decl2 = postcss.decl({ prop: 'background-color', value: 'white' })\n                  * rule.prepend(decl1, decl2)\n                  *\n                  * root.append({ name: 'charset', params: '\"UTF-8\"' })  // at-rule\n                  * root.append({ selector: 'a' })                       // rule\n                  * rule.append({ prop: 'color', value: 'black' })       // declaration\n                  * rule.append({ text: 'Comment' })                     // comment\n                  *\n                  * root.append('a {}')\n                  * root.first.append('color: black; z-index: 1')\n                  */\n                  ;\n\n                  _proto.prepend = function prepend() {\n                    for (var _len2 = arguments.length, children = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                      children[_key2] = arguments[_key2];\n                    }\n\n                    children = children.reverse();\n\n                    for (var _iterator2 = children, _isArray2 = Array.isArray(_iterator2), _i3 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n                      var _ref2;\n\n                      if (_isArray2) {\n                        if (_i3 >= _iterator2.length) break;\n                        _ref2 = _iterator2[_i3++];\n                      } else {\n                        _i3 = _iterator2.next();\n                        if (_i3.done) break;\n                        _ref2 = _i3.value;\n                      }\n\n                      var child = _ref2;\n                      var nodes = this.normalize(child, this.first, 'prepend').reverse();\n\n                      for (var _iterator3 = nodes, _isArray3 = Array.isArray(_iterator3), _i4 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n                        var _ref3;\n\n                        if (_isArray3) {\n                          if (_i4 >= _iterator3.length) break;\n                          _ref3 = _iterator3[_i4++];\n                        } else {\n                          _i4 = _iterator3.next();\n                          if (_i4.done) break;\n                          _ref3 = _i4.value;\n                        }\n\n                        var node = _ref3;\n                        this.nodes.unshift(node);\n                      }\n\n                      for (var id in this.indexes) {\n                        this.indexes[id] = this.indexes[id] + nodes.length;\n                      }\n                    }\n\n                    return this;\n                  };\n\n                  _proto.cleanRaws = function cleanRaws(keepBetween) {\n                    _Node.prototype.cleanRaws.call(this, keepBetween);\n\n                    if (this.nodes) {\n                      for (var _iterator4 = this.nodes, _isArray4 = Array.isArray(_iterator4), _i5 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n                        var _ref4;\n\n                        if (_isArray4) {\n                          if (_i5 >= _iterator4.length) break;\n                          _ref4 = _iterator4[_i5++];\n                        } else {\n                          _i5 = _iterator4.next();\n                          if (_i5.done) break;\n                          _ref4 = _i5.value;\n                        }\n\n                        var node = _ref4;\n                        node.cleanRaws(keepBetween);\n                      }\n                    }\n                  }\n                  /**\n                  * Insert new node before old node within the container.\n                  *\n                  * @param {Node|number} exist             Child or child’s index.\n                  * @param {Node|object|string|Node[]} add New node.\n                  *\n                  * @return {Node} This node for methods chain.\n                  *\n                  * @example\n                  * rule.insertBefore(decl, decl.clone({ prop: '-webkit-' + decl.prop }))\n                  */\n                  ;\n\n                  _proto.insertBefore = function insertBefore(exist, add) {\n                    exist = this.index(exist);\n                    var type = exist === 0 ? 'prepend' : false;\n                    var nodes = this.normalize(add, this.nodes[exist], type).reverse();\n\n                    for (var _iterator5 = nodes, _isArray5 = Array.isArray(_iterator5), _i6 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {\n                      var _ref5;\n\n                      if (_isArray5) {\n                        if (_i6 >= _iterator5.length) break;\n                        _ref5 = _iterator5[_i6++];\n                      } else {\n                        _i6 = _iterator5.next();\n                        if (_i6.done) break;\n                        _ref5 = _i6.value;\n                      }\n\n                      var node = _ref5;\n                      this.nodes.splice(exist, 0, node);\n                    }\n\n                    var index;\n\n                    for (var id in this.indexes) {\n                      index = this.indexes[id];\n\n                      if (exist <= index) {\n                        this.indexes[id] = index + nodes.length;\n                      }\n                    }\n\n                    return this;\n                  }\n                  /**\n                  * Insert new node after old node within the container.\n                  *\n                  * @param {Node|number} exist             Child or child’s index.\n                  * @param {Node|object|string|Node[]} add New node.\n                  *\n                  * @return {Node} This node for methods chain.\n                  */\n                  ;\n\n                  _proto.insertAfter = function insertAfter(exist, add) {\n                    exist = this.index(exist);\n                    var nodes = this.normalize(add, this.nodes[exist]).reverse();\n\n                    for (var _iterator6 = nodes, _isArray6 = Array.isArray(_iterator6), _i7 = 0, _iterator6 = _isArray6 ? _iterator6 : _iterator6[Symbol.iterator]();;) {\n                      var _ref6;\n\n                      if (_isArray6) {\n                        if (_i7 >= _iterator6.length) break;\n                        _ref6 = _iterator6[_i7++];\n                      } else {\n                        _i7 = _iterator6.next();\n                        if (_i7.done) break;\n                        _ref6 = _i7.value;\n                      }\n\n                      var node = _ref6;\n                      this.nodes.splice(exist + 1, 0, node);\n                    }\n\n                    var index;\n\n                    for (var id in this.indexes) {\n                      index = this.indexes[id];\n\n                      if (exist < index) {\n                        this.indexes[id] = index + nodes.length;\n                      }\n                    }\n\n                    return this;\n                  }\n                  /**\n                  * Removes node from the container and cleans the parent properties\n                  * from the node and its children.\n                  *\n                  * @param {Node|number} child Child or child’s index.\n                  *\n                  * @return {Node} This node for methods chain\n                  *\n                  * @example\n                  * rule.nodes.length  //=> 5\n                  * rule.removeChild(decl)\n                  * rule.nodes.length  //=> 4\n                  * decl.parent        //=> undefined\n                  */\n                  ;\n\n                  _proto.removeChild = function removeChild(child) {\n                    child = this.index(child);\n                    this.nodes[child].parent = undefined;\n                    this.nodes.splice(child, 1);\n                    var index;\n\n                    for (var id in this.indexes) {\n                      index = this.indexes[id];\n\n                      if (index >= child) {\n                        this.indexes[id] = index - 1;\n                      }\n                    }\n\n                    return this;\n                  }\n                  /**\n                  * Removes all children from the container\n                  * and cleans their parent properties.\n                  *\n                  * @return {Node} This node for methods chain.\n                  *\n                  * @example\n                  * rule.removeAll()\n                  * rule.nodes.length //=> 0\n                  */\n                  ;\n\n                  _proto.removeAll = function removeAll() {\n                    for (var _iterator7 = this.nodes, _isArray7 = Array.isArray(_iterator7), _i8 = 0, _iterator7 = _isArray7 ? _iterator7 : _iterator7[Symbol.iterator]();;) {\n                      var _ref7;\n\n                      if (_isArray7) {\n                        if (_i8 >= _iterator7.length) break;\n                        _ref7 = _iterator7[_i8++];\n                      } else {\n                        _i8 = _iterator7.next();\n                        if (_i8.done) break;\n                        _ref7 = _i8.value;\n                      }\n\n                      var node = _ref7;\n                      node.parent = undefined;\n                    }\n\n                    this.nodes = [];\n                    return this;\n                  }\n                  /**\n                  * Passes all declaration values within the container that match pattern\n                  * through callback, replacing those values with the returned result\n                  * of callback.\n                  *\n                  * This method is useful if you are using a custom unit or function\n                  * and need to iterate through all values.\n                  *\n                  * @param {string|RegExp} pattern      Replace pattern.\n                  * @param {object} opts                Options to speed up the search.\n                  * @param {string|string[]} opts.props An array of property names.\n                  * @param {string} opts.fast           String that’s used to narrow down\n                  *                                     values and speed up the regexp search.\n                  * @param {function|string} callback   String to replace pattern or callback\n                  *                                     that returns a new value. The callback\n                  *                                     will receive the same arguments\n                  *                                     as those passed to a function parameter\n                  *                                     of `String#replace`.\n                  *\n                  * @return {Node} This node for methods chain.\n                  *\n                  * @example\n                  * root.replaceValues(/\\d+rem/, { fast: 'rem' }, string => {\n                  *   return 15 * parseInt(string) + 'px'\n                  * })\n                  */\n                  ;\n\n                  _proto.replaceValues = function replaceValues(pattern, opts, callback) {\n                    if (!callback) {\n                      callback = opts;\n                      opts = {};\n                    }\n\n                    this.walkDecls(function (decl) {\n                      if (opts.props && opts.props.indexOf(decl.prop) === -1) return;\n                      if (opts.fast && decl.value.indexOf(opts.fast) === -1) return;\n                      decl.value = decl.value.replace(pattern, callback);\n                    });\n                    return this;\n                  }\n                  /**\n                  * Returns `true` if callback returns `true`\n                  * for all of the container’s children.\n                  *\n                  * @param {childCondition} condition Iterator returns true or false.\n                  *\n                  * @return {boolean} Is every child pass condition.\n                  *\n                  * @example\n                  * const noPrefixes = rule.every(i => i.prop[0] !== '-')\n                  */\n                  ;\n\n                  _proto.every = function every(condition) {\n                    return this.nodes.every(condition);\n                  }\n                  /**\n                  * Returns `true` if callback returns `true` for (at least) one\n                  * of the container’s children.\n                  *\n                  * @param {childCondition} condition Iterator returns true or false.\n                  *\n                  * @return {boolean} Is some child pass condition.\n                  *\n                  * @example\n                  * const hasPrefix = rule.some(i => i.prop[0] === '-')\n                  */\n                  ;\n\n                  _proto.some = function some(condition) {\n                    return this.nodes.some(condition);\n                  }\n                  /**\n                  * Returns a `child`’s index within the {@link Container#nodes} array.\n                  *\n                  * @param {Node} child Child of the current container.\n                  *\n                  * @return {number} Child index.\n                  *\n                  * @example\n                  * rule.index( rule.nodes[2] ) //=> 2\n                  */\n                  ;\n\n                  _proto.index = function index(child) {\n                    if (typeof child === 'number') {\n                      return child;\n                    }\n\n                    return this.nodes.indexOf(child);\n                  }\n                  /**\n                  * The container’s first child.\n                  *\n                  * @type {Node}\n                  *\n                  * @example\n                  * rule.first === rules.nodes[0]\n                  */\n                  ;\n\n                  _proto.normalize = function normalize(nodes, sample) {\n                    var _this = this;\n\n                    if (typeof nodes === 'string') {\n                      var parse = require('./parse');\n\n                      nodes = cleanSource(parse(nodes).nodes);\n                    } else if (Array.isArray(nodes)) {\n                      nodes = nodes.slice(0);\n\n                      for (var _iterator8 = nodes, _isArray8 = Array.isArray(_iterator8), _i9 = 0, _iterator8 = _isArray8 ? _iterator8 : _iterator8[Symbol.iterator]();;) {\n                        var _ref8;\n\n                        if (_isArray8) {\n                          if (_i9 >= _iterator8.length) break;\n                          _ref8 = _iterator8[_i9++];\n                        } else {\n                          _i9 = _iterator8.next();\n                          if (_i9.done) break;\n                          _ref8 = _i9.value;\n                        }\n\n                        var i = _ref8;\n                        if (i.parent) i.parent.removeChild(i, 'ignore');\n                      }\n                    } else if (nodes.type === 'root') {\n                      nodes = nodes.nodes.slice(0);\n\n                      for (var _iterator9 = nodes, _isArray9 = Array.isArray(_iterator9), _i10 = 0, _iterator9 = _isArray9 ? _iterator9 : _iterator9[Symbol.iterator]();;) {\n                        var _ref9;\n\n                        if (_isArray9) {\n                          if (_i10 >= _iterator9.length) break;\n                          _ref9 = _iterator9[_i10++];\n                        } else {\n                          _i10 = _iterator9.next();\n                          if (_i10.done) break;\n                          _ref9 = _i10.value;\n                        }\n\n                        var _i11 = _ref9;\n                        if (_i11.parent) _i11.parent.removeChild(_i11, 'ignore');\n                      }\n                    } else if (nodes.type) {\n                      nodes = [nodes];\n                    } else if (nodes.prop) {\n                      if (typeof nodes.value === 'undefined') {\n                        throw new Error('Value field is missed in node creation');\n                      } else if (typeof nodes.value !== 'string') {\n                        nodes.value = String(nodes.value);\n                      }\n\n                      nodes = [new _declaration[\"default\"](nodes)];\n                    } else if (nodes.selector) {\n                      var Rule = require('./rule');\n\n                      nodes = [new Rule(nodes)];\n                    } else if (nodes.name) {\n                      var AtRule = require('./at-rule');\n\n                      nodes = [new AtRule(nodes)];\n                    } else if (nodes.text) {\n                      nodes = [new _comment[\"default\"](nodes)];\n                    } else {\n                      throw new Error('Unknown node type in node creation');\n                    }\n\n                    var processed = nodes.map(function (i) {\n                      if (i.parent) i.parent.removeChild(i);\n\n                      if (typeof i.raws.before === 'undefined') {\n                        if (sample && typeof sample.raws.before !== 'undefined') {\n                          i.raws.before = sample.raws.before.replace(/[^\\s]/g, '');\n                        }\n                      }\n\n                      i.parent = _this;\n                      return i;\n                    });\n                    return processed;\n                  }\n                  /**\n                  * @memberof Container#\n                  * @member {Node[]} nodes An array containing the container’s children.\n                  *\n                  * @example\n                  * const root = postcss.parse('a { color: black }')\n                  * root.nodes.length           //=> 1\n                  * root.nodes[0].selector      //=> 'a'\n                  * root.nodes[0].nodes[0].prop //=> 'color'\n                  */\n                  ;\n\n                  _createClass(Container, [{\n                    key: \"first\",\n                    get: function get() {\n                      if (!this.nodes) return undefined;\n                      return this.nodes[0];\n                    }\n                    /**\n                    * The container’s last child.\n                    *\n                    * @type {Node}\n                    *\n                    * @example\n                    * rule.last === rule.nodes[rule.nodes.length - 1]\n                    */\n\n                  }, {\n                    key: \"last\",\n                    get: function get() {\n                      if (!this.nodes) return undefined;\n                      return this.nodes[this.nodes.length - 1];\n                    }\n                  }]);\n\n                  return Container;\n                }(_node[\"default\"]);\n\n                var _default = Container;\n                /**\n                * @callback childCondition\n                * @param {Node} node    Container child.\n                * @param {number} index Child index.\n                * @param {Node[]} nodes All container children.\n                * @return {boolean}\n                */\n\n                /**\n                * @callback childIterator\n                * @param {Node} node    Container child.\n                * @param {number} index Child index.\n                * @return {false|undefined} Returning `false` will break iteration.\n                */\n\n                exports[\"default\"] = _default;\n                module.exports = exports[\"default\"];\n              }, {\n                \"./at-rule\": 169,\n                \"./comment\": 170,\n                \"./declaration\": 173,\n                \"./node\": 178,\n                \"./parse\": 179,\n                \"./rule\": 186\n              }],\n              172: [function (require, module, exports) {\n                \"use strict\";\n\n                exports.__esModule = true;\n                exports[\"default\"] = void 0;\n\n                var _supportsColor = _interopRequireDefault(require(\"supports-color\"));\n\n                var _chalk = _interopRequireDefault(require(\"chalk\"));\n\n                var _terminalHighlight = _interopRequireDefault(require(\"./terminal-highlight\"));\n\n                function _interopRequireDefault(obj) {\n                  return obj && obj.__esModule ? obj : {\n                    \"default\": obj\n                  };\n                }\n\n                function _assertThisInitialized(self) {\n                  if (self === void 0) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                  }\n\n                  return self;\n                }\n\n                function _inheritsLoose(subClass, superClass) {\n                  subClass.prototype = Object.create(superClass.prototype);\n                  subClass.prototype.constructor = subClass;\n                  subClass.__proto__ = superClass;\n                }\n\n                function _wrapNativeSuper(Class) {\n                  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n                  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n                    if (Class === null || !_isNativeFunction(Class)) return Class;\n\n                    if (typeof Class !== \"function\") {\n                      throw new TypeError(\"Super expression must either be null or a function\");\n                    }\n\n                    if (typeof _cache !== \"undefined\") {\n                      if (_cache.has(Class)) return _cache.get(Class);\n\n                      _cache.set(Class, Wrapper);\n                    }\n\n                    function Wrapper() {\n                      return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n                    }\n\n                    Wrapper.prototype = Object.create(Class.prototype, {\n                      constructor: {\n                        value: Wrapper,\n                        enumerable: false,\n                        writable: true,\n                        configurable: true\n                      }\n                    });\n                    return _setPrototypeOf(Wrapper, Class);\n                  };\n\n                  return _wrapNativeSuper(Class);\n                }\n\n                function isNativeReflectConstruct() {\n                  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n                  if (Reflect.construct.sham) return false;\n                  if (typeof Proxy === \"function\") return true;\n\n                  try {\n                    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n                    return true;\n                  } catch (e) {\n                    return false;\n                  }\n                }\n\n                function _construct(Parent, args, Class) {\n                  if (isNativeReflectConstruct()) {\n                    _construct = Reflect.construct;\n                  } else {\n                    _construct = function _construct(Parent, args, Class) {\n                      var a = [null];\n                      a.push.apply(a, args);\n                      var Constructor = Function.bind.apply(Parent, a);\n                      var instance = new Constructor();\n                      if (Class) _setPrototypeOf(instance, Class.prototype);\n                      return instance;\n                    };\n                  }\n\n                  return _construct.apply(null, arguments);\n                }\n\n                function _isNativeFunction(fn) {\n                  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n                }\n\n                function _setPrototypeOf(o, p) {\n                  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n                    o.__proto__ = p;\n                    return o;\n                  };\n\n                  return _setPrototypeOf(o, p);\n                }\n\n                function _getPrototypeOf(o) {\n                  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n                    return o.__proto__ || Object.getPrototypeOf(o);\n                  };\n                  return _getPrototypeOf(o);\n                }\n                /**\n                * The CSS parser throws this error for broken CSS.\n                *\n                * Custom parsers can throw this error for broken custom syntax using\n                * the {@link Node#error} method.\n                *\n                * PostCSS will use the input source map to detect the original error location.\n                * If you wrote a Sass file, compiled it to CSS and then parsed it with PostCSS,\n                * PostCSS will show the original position in the Sass file.\n                *\n                * If you need the position in the PostCSS input\n                * (e.g., to debug the previous compiler), use `error.input.file`.\n                *\n                * @example\n                * // Catching and checking syntax error\n                * try {\n                *   postcss.parse('a{')\n                * } catch (error) {\n                *   if (error.name === 'CssSyntaxError') {\n                *     error //=> CssSyntaxError\n                *   }\n                * }\n                *\n                * @example\n                * // Raising error from plugin\n                * throw node.error('Unknown variable', { plugin: 'postcss-vars' })\n                */\n\n\n                var CssSyntaxError = /*#__PURE__*/function (_Error) {\n                  _inheritsLoose(CssSyntaxError, _Error);\n                  /**\n                  * @param {string} message  Error message.\n                  * @param {number} [line]   Source line of the error.\n                  * @param {number} [column] Source column of the error.\n                  * @param {string} [source] Source code of the broken file.\n                  * @param {string} [file]   Absolute path to the broken file.\n                  * @param {string} [plugin] PostCSS plugin name, if error came from plugin.\n                  */\n\n\n                  function CssSyntaxError(message, line, column, source, file, plugin) {\n                    var _this;\n\n                    _this = _Error.call(this, message) || this;\n                    /**\n                    * Always equal to `'CssSyntaxError'`. You should always check error type\n                    * by `error.name === 'CssSyntaxError'`\n                    * instead of `error instanceof CssSyntaxError`,\n                    * because npm could have several PostCSS versions.\n                    *\n                    * @type {string}\n                    *\n                    * @example\n                    * if (error.name === 'CssSyntaxError') {\n                    *   error //=> CssSyntaxError\n                    * }\n                    */\n\n                    _this.name = 'CssSyntaxError';\n                    /**\n                    * Error message.\n                    *\n                    * @type {string}\n                    *\n                    * @example\n                    * error.message //=> 'Unclosed block'\n                    */\n\n                    _this.reason = message;\n\n                    if (file) {\n                      /**\n                      * Absolute path to the broken file.\n                      *\n                      * @type {string}\n                      *\n                      * @example\n                      * error.file       //=> 'a.sass'\n                      * error.input.file //=> 'a.css'\n                      */\n                      _this.file = file;\n                    }\n\n                    if (source) {\n                      /**\n                      * Source code of the broken file.\n                      *\n                      * @type {string}\n                      *\n                      * @example\n                      * error.source       //=> 'a { b {} }'\n                      * error.input.column //=> 'a b { }'\n                      */\n                      _this.source = source;\n                    }\n\n                    if (plugin) {\n                      /**\n                      * Plugin name, if error came from plugin.\n                      *\n                      * @type {string}\n                      *\n                      * @example\n                      * error.plugin //=> 'postcss-vars'\n                      */\n                      _this.plugin = plugin;\n                    }\n\n                    if (typeof line !== 'undefined' && typeof column !== 'undefined') {\n                      /**\n                      * Source line of the error.\n                      *\n                      * @type {number}\n                      *\n                      * @example\n                      * error.line       //=> 2\n                      * error.input.line //=> 4\n                      */\n                      _this.line = line;\n                      /**\n                      * Source column of the error.\n                      *\n                      * @type {number}\n                      *\n                      * @example\n                      * error.column       //=> 1\n                      * error.input.column //=> 4\n                      */\n\n                      _this.column = column;\n                    }\n\n                    _this.setMessage();\n\n                    if (Error.captureStackTrace) {\n                      Error.captureStackTrace(_assertThisInitialized(_this), CssSyntaxError);\n                    }\n\n                    return _this;\n                  }\n\n                  var _proto = CssSyntaxError.prototype;\n\n                  _proto.setMessage = function setMessage() {\n                    /**\n                    * Full error text in the GNU error format\n                    * with plugin, file, line and column.\n                    *\n                    * @type {string}\n                    *\n                    * @example\n                    * error.message //=> 'a.css:1:1: Unclosed block'\n                    */\n                    this.message = this.plugin ? this.plugin + ': ' : '';\n                    this.message += this.file ? this.file : '<css input>';\n\n                    if (typeof this.line !== 'undefined') {\n                      this.message += ':' + this.line + ':' + this.column;\n                    }\n\n                    this.message += ': ' + this.reason;\n                  }\n                  /**\n                  * Returns a few lines of CSS source that caused the error.\n                  *\n                  * If the CSS has an input source map without `sourceContent`,\n                  * this method will return an empty string.\n                  *\n                  * @param {boolean} [color] Whether arrow will be colored red by terminal\n                  *                          color codes. By default, PostCSS will detect\n                  *                          color support by `process.stdout.isTTY`\n                  *                          and `process.env.NODE_DISABLE_COLORS`.\n                  *\n                  * @example\n                  * error.showSourceCode() //=> \"  4 | }\n                  *                        //      5 | a {\n                  *                        //    > 6 |   bad\n                  *                        //        |   ^\n                  *                        //      7 | }\n                  *                        //      8 | b {\"\n                  *\n                  * @return {string} Few lines of CSS source that caused the error.\n                  */\n                  ;\n\n                  _proto.showSourceCode = function showSourceCode(color) {\n                    var _this2 = this;\n\n                    if (!this.source) return '';\n                    var css = this.source;\n\n                    if (_terminalHighlight[\"default\"]) {\n                      if (typeof color === 'undefined') color = _supportsColor[\"default\"].stdout;\n                      if (color) css = (0, _terminalHighlight[\"default\"])(css);\n                    }\n\n                    var lines = css.split(/\\r?\\n/);\n                    var start = Math.max(this.line - 3, 0);\n                    var end = Math.min(this.line + 2, lines.length);\n                    var maxWidth = String(end).length;\n\n                    function mark(text) {\n                      if (color && _chalk[\"default\"].red) {\n                        return _chalk[\"default\"].red.bold(text);\n                      }\n\n                      return text;\n                    }\n\n                    function aside(text) {\n                      if (color && _chalk[\"default\"].gray) {\n                        return _chalk[\"default\"].gray(text);\n                      }\n\n                      return text;\n                    }\n\n                    return lines.slice(start, end).map(function (line, index) {\n                      var number = start + 1 + index;\n                      var gutter = ' ' + (' ' + number).slice(-maxWidth) + ' | ';\n\n                      if (number === _this2.line) {\n                        var spacing = aside(gutter.replace(/\\d/g, ' ')) + line.slice(0, _this2.column - 1).replace(/[^\\t]/g, ' ');\n                        return mark('>') + aside(gutter) + line + '\\n ' + spacing + mark('^');\n                      }\n\n                      return ' ' + aside(gutter) + line;\n                    }).join('\\n');\n                  }\n                  /**\n                  * Returns error position, message and source code of the broken part.\n                  *\n                  * @example\n                  * error.toString() //=> \"CssSyntaxError: app.css:1:1: Unclosed block\n                  *                  //    > 1 | a {\n                  *                  //        | ^\"\n                  *\n                  * @return {string} Error position, message and source code.\n                  */\n                  ;\n\n                  _proto.toString = function toString() {\n                    var code = this.showSourceCode();\n\n                    if (code) {\n                      code = '\\n\\n' + code + '\\n';\n                    }\n\n                    return this.name + ': ' + this.message + code;\n                  }\n                  /**\n                  * @memberof CssSyntaxError#\n                  * @member {Input} input Input object with PostCSS internal information\n                  *                       about input file. If input has source map\n                  *                       from previous tool, PostCSS will use origin\n                  *                       (for example, Sass) source. You can use this\n                  *                       object to get PostCSS input source.\n                  *\n                  * @example\n                  * error.input.file //=> 'a.css'\n                  * error.file       //=> 'a.sass'\n                  */\n                  ;\n\n                  return CssSyntaxError;\n                }(_wrapNativeSuper(Error));\n\n                var _default = CssSyntaxError;\n                exports[\"default\"] = _default;\n                module.exports = exports[\"default\"];\n              }, {\n                \"./terminal-highlight\": 2,\n                \"chalk\": 2,\n                \"supports-color\": 2\n              }],\n              173: [function (require, module, exports) {\n                \"use strict\";\n\n                exports.__esModule = true;\n                exports[\"default\"] = void 0;\n\n                var _node = _interopRequireDefault(require(\"./node\"));\n\n                function _interopRequireDefault(obj) {\n                  return obj && obj.__esModule ? obj : {\n                    \"default\": obj\n                  };\n                }\n\n                function _inheritsLoose(subClass, superClass) {\n                  subClass.prototype = Object.create(superClass.prototype);\n                  subClass.prototype.constructor = subClass;\n                  subClass.__proto__ = superClass;\n                }\n                /**\n                * Represents a CSS declaration.\n                *\n                * @extends Node\n                *\n                * @example\n                * const root = postcss.parse('a { color: black }')\n                * const decl = root.first.first\n                * decl.type       //=> 'decl'\n                * decl.toString() //=> ' color: black'\n                */\n\n\n                var Declaration = /*#__PURE__*/function (_Node) {\n                  _inheritsLoose(Declaration, _Node);\n\n                  function Declaration(defaults) {\n                    var _this;\n\n                    _this = _Node.call(this, defaults) || this;\n                    _this.type = 'decl';\n                    return _this;\n                  }\n                  /**\n                  * @memberof Declaration#\n                  * @member {string} prop The declaration’s property name.\n                  *\n                  * @example\n                  * const root = postcss.parse('a { color: black }')\n                  * const decl = root.first.first\n                  * decl.prop //=> 'color'\n                  */\n\n                  /**\n                  * @memberof Declaration#\n                  * @member {string} value The declaration’s value.\n                  *\n                  * @example\n                  * const root = postcss.parse('a { color: black }')\n                  * const decl = root.first.first\n                  * decl.value //=> 'black'\n                  */\n\n                  /**\n                  * @memberof Declaration#\n                  * @member {boolean} important `true` if the declaration\n                  *                             has an !important annotation.\n                  *\n                  * @example\n                  * const root = postcss.parse('a { color: black !important; color: red }')\n                  * root.first.first.important //=> true\n                  * root.first.last.important  //=> undefined\n                  */\n\n                  /**\n                  * @memberof Declaration#\n                  * @member {object} raws Information to generate byte-to-byte equal\n                  *                       node string as it was in the origin input.\n                  *\n                  * Every parser saves its own properties,\n                  * but the default CSS parser uses:\n                  *\n                  * * `before`: the space symbols before the node. It also stores `*`\n                  *   and `_` symbols before the declaration (IE hack).\n                  * * `between`: the symbols between the property and value\n                  *   for declarations.\n                  * * `important`: the content of the important statement,\n                  *   if it is not just `!important`.\n                  *\n                  * PostCSS cleans declaration from comments and extra spaces,\n                  * but it stores origin content in raws properties.\n                  * As such, if you don’t change a declaration’s value,\n                  * PostCSS will use the raw value with comments.\n                  *\n                  * @example\n                  * const root = postcss.parse('a {\\n  color:black\\n}')\n                  * root.first.first.raws //=> { before: '\\n  ', between: ':' }\n                  */\n\n\n                  return Declaration;\n                }(_node[\"default\"]);\n\n                var _default = Declaration;\n                exports[\"default\"] = _default;\n                module.exports = exports[\"default\"];\n              }, {\n                \"./node\": 178\n              }],\n              174: [function (require, module, exports) {\n                \"use strict\";\n\n                exports.__esModule = true;\n                exports[\"default\"] = void 0;\n\n                var _path = _interopRequireDefault(require(\"path\"));\n\n                var _cssSyntaxError = _interopRequireDefault(require(\"./css-syntax-error\"));\n\n                var _previousMap = _interopRequireDefault(require(\"./previous-map\"));\n\n                function _interopRequireDefault(obj) {\n                  return obj && obj.__esModule ? obj : {\n                    \"default\": obj\n                  };\n                }\n\n                function _defineProperties(target, props) {\n                  for (var i = 0; i < props.length; i++) {\n                    var descriptor = props[i];\n                    descriptor.enumerable = descriptor.enumerable || false;\n                    descriptor.configurable = true;\n                    if (\"value\" in descriptor) descriptor.writable = true;\n                    Object.defineProperty(target, descriptor.key, descriptor);\n                  }\n                }\n\n                function _createClass(Constructor, protoProps, staticProps) {\n                  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n                  if (staticProps) _defineProperties(Constructor, staticProps);\n                  return Constructor;\n                }\n\n                var sequence = 0;\n                /**\n                * Represents the source CSS.\n                *\n                * @example\n                * const root  = postcss.parse(css, { from: file })\n                * const input = root.source.input\n                */\n\n                var Input = /*#__PURE__*/function () {\n                  /**\n                  * @param {string} css    Input CSS source.\n                  * @param {object} [opts] {@link Processor#process} options.\n                  */\n                  function Input(css, opts) {\n                    if (opts === void 0) {\n                      opts = {};\n                    }\n\n                    if (css === null || _typeof(css) === 'object' && !css.toString) {\n                      throw new Error(\"PostCSS received \" + css + \" instead of CSS string\");\n                    }\n                    /**\n                    * Input CSS source\n                    *\n                    * @type {string}\n                    *\n                    * @example\n                    * const input = postcss.parse('a{}', { from: file }).input\n                    * input.css //=> \"a{}\"\n                    */\n\n\n                    this.css = css.toString();\n\n                    if (this.css[0] === \"\\uFEFF\" || this.css[0] === \"\\uFFFE\") {\n                      this.hasBOM = true;\n                      this.css = this.css.slice(1);\n                    } else {\n                      this.hasBOM = false;\n                    }\n\n                    if (opts.from) {\n                      if (/^\\w+:\\/\\//.test(opts.from) || _path[\"default\"].isAbsolute(opts.from)) {\n                        /**\n                        * The absolute path to the CSS source file defined\n                        * with the `from` option.\n                        *\n                        * @type {string}\n                        *\n                        * @example\n                        * const root = postcss.parse(css, { from: 'a.css' })\n                        * root.source.input.file //=> '/home/ai/a.css'\n                        */\n                        this.file = opts.from;\n                      } else {\n                        this.file = _path[\"default\"].resolve(opts.from);\n                      }\n                    }\n\n                    var map = new _previousMap[\"default\"](this.css, opts);\n\n                    if (map.text) {\n                      /**\n                      * The input source map passed from a compilation step before PostCSS\n                      * (for example, from Sass compiler).\n                      *\n                      * @type {PreviousMap}\n                      *\n                      * @example\n                      * root.source.input.map.consumer().sources //=> ['a.sass']\n                      */\n                      this.map = map;\n                      var file = map.consumer().file;\n                      if (!this.file && file) this.file = this.mapResolve(file);\n                    }\n\n                    if (!this.file) {\n                      sequence += 1;\n                      /**\n                      * The unique ID of the CSS source. It will be created if `from` option\n                      * is not provided (because PostCSS does not know the file path).\n                      *\n                      * @type {string}\n                      *\n                      * @example\n                      * const root = postcss.parse(css)\n                      * root.source.input.file //=> undefined\n                      * root.source.input.id   //=> \"<input css 1>\"\n                      */\n\n                      this.id = '<input css ' + sequence + '>';\n                    }\n\n                    if (this.map) this.map.file = this.from;\n                  }\n\n                  var _proto = Input.prototype;\n\n                  _proto.error = function error(message, line, column, opts) {\n                    if (opts === void 0) {\n                      opts = {};\n                    }\n\n                    var result;\n                    var origin = this.origin(line, column);\n\n                    if (origin) {\n                      result = new _cssSyntaxError[\"default\"](message, origin.line, origin.column, origin.source, origin.file, opts.plugin);\n                    } else {\n                      result = new _cssSyntaxError[\"default\"](message, line, column, this.css, this.file, opts.plugin);\n                    }\n\n                    result.input = {\n                      line: line,\n                      column: column,\n                      source: this.css\n                    };\n                    if (this.file) result.input.file = this.file;\n                    return result;\n                  }\n                  /**\n                  * Reads the input source map and returns a symbol position\n                  * in the input source (e.g., in a Sass file that was compiled\n                  * to CSS before being passed to PostCSS).\n                  *\n                  * @param {number} line   Line in input CSS.\n                  * @param {number} column Column in input CSS.\n                  *\n                  * @return {filePosition} Position in input source.\n                  *\n                  * @example\n                  * root.source.input.origin(1, 1) //=> { file: 'a.css', line: 3, column: 1 }\n                  */\n                  ;\n\n                  _proto.origin = function origin(line, column) {\n                    if (!this.map) return false;\n                    var consumer = this.map.consumer();\n                    var from = consumer.originalPositionFor({\n                      line: line,\n                      column: column\n                    });\n                    if (!from.source) return false;\n                    var result = {\n                      file: this.mapResolve(from.source),\n                      line: from.line,\n                      column: from.column\n                    };\n                    var source = consumer.sourceContentFor(from.source);\n                    if (source) result.source = source;\n                    return result;\n                  };\n\n                  _proto.mapResolve = function mapResolve(file) {\n                    if (/^\\w+:\\/\\//.test(file)) {\n                      return file;\n                    }\n\n                    return _path[\"default\"].resolve(this.map.consumer().sourceRoot || '.', file);\n                  }\n                  /**\n                  * The CSS source identifier. Contains {@link Input#file} if the user\n                  * set the `from` option, or {@link Input#id} if they did not.\n                  *\n                  * @type {string}\n                  *\n                  * @example\n                  * const root = postcss.parse(css, { from: 'a.css' })\n                  * root.source.input.from //=> \"/home/ai/a.css\"\n                  *\n                  * const root = postcss.parse(css)\n                  * root.source.input.from //=> \"<input css 1>\"\n                  */\n                  ;\n\n                  _createClass(Input, [{\n                    key: \"from\",\n                    get: function get() {\n                      return this.file || this.id;\n                    }\n                  }]);\n\n                  return Input;\n                }();\n\n                var _default = Input;\n                /**\n                * @typedef  {object} filePosition\n                * @property {string} file   Path to file.\n                * @property {number} line   Source line in file.\n                * @property {number} column Source column in file.\n                */\n\n                exports[\"default\"] = _default;\n                module.exports = exports[\"default\"];\n              }, {\n                \"./css-syntax-error\": 172,\n                \"./previous-map\": 182,\n                \"path\": 168\n              }],\n              175: [function (require, module, exports) {\n                (function (process) {\n                  \"use strict\";\n\n                  exports.__esModule = true;\n                  exports[\"default\"] = void 0;\n\n                  var _mapGenerator = _interopRequireDefault(require(\"./map-generator\"));\n\n                  var _stringify2 = _interopRequireDefault(require(\"./stringify\"));\n\n                  var _warnOnce = _interopRequireDefault(require(\"./warn-once\"));\n\n                  var _result = _interopRequireDefault(require(\"./result\"));\n\n                  var _parse = _interopRequireDefault(require(\"./parse\"));\n\n                  function _interopRequireDefault(obj) {\n                    return obj && obj.__esModule ? obj : {\n                      \"default\": obj\n                    };\n                  }\n\n                  function _defineProperties(target, props) {\n                    for (var i = 0; i < props.length; i++) {\n                      var descriptor = props[i];\n                      descriptor.enumerable = descriptor.enumerable || false;\n                      descriptor.configurable = true;\n                      if (\"value\" in descriptor) descriptor.writable = true;\n                      Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                  }\n\n                  function _createClass(Constructor, protoProps, staticProps) {\n                    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) _defineProperties(Constructor, staticProps);\n                    return Constructor;\n                  }\n\n                  function isPromise(obj) {\n                    return _typeof(obj) === 'object' && typeof obj.then === 'function';\n                  }\n                  /**\n                  * A Promise proxy for the result of PostCSS transformations.\n                  *\n                  * A `LazyResult` instance is returned by {@link Processor#process}.\n                  *\n                  * @example\n                  * const lazy = postcss([autoprefixer]).process(css)\n                  */\n\n\n                  var LazyResult = /*#__PURE__*/function () {\n                    function LazyResult(processor, css, opts) {\n                      this.stringified = false;\n                      this.processed = false;\n                      var root;\n\n                      if (_typeof(css) === 'object' && css !== null && css.type === 'root') {\n                        root = css;\n                      } else if (css instanceof LazyResult || css instanceof _result[\"default\"]) {\n                        root = css.root;\n\n                        if (css.map) {\n                          if (typeof opts.map === 'undefined') opts.map = {};\n                          if (!opts.map.inline) opts.map.inline = false;\n                          opts.map.prev = css.map;\n                        }\n                      } else {\n                        var parser = _parse[\"default\"];\n                        if (opts.syntax) parser = opts.syntax.parse;\n                        if (opts.parser) parser = opts.parser;\n                        if (parser.parse) parser = parser.parse;\n\n                        try {\n                          root = parser(css, opts);\n                        } catch (error) {\n                          this.error = error;\n                        }\n                      }\n\n                      this.result = new _result[\"default\"](processor, root, opts);\n                    }\n                    /**\n                    * Returns a {@link Processor} instance, which will be used\n                    * for CSS transformations.\n                    *\n                    * @type {Processor}\n                    */\n\n\n                    var _proto = LazyResult.prototype;\n                    /**\n                    * Processes input CSS through synchronous plugins\n                    * and calls {@link Result#warnings()}.\n                    *\n                    * @return {Warning[]} Warnings from plugins.\n                    */\n\n                    _proto.warnings = function warnings() {\n                      return this.sync().warnings();\n                    }\n                    /**\n                    * Alias for the {@link LazyResult#css} property.\n                    *\n                    * @example\n                    * lazy + '' === lazy.css\n                    *\n                    * @return {string} Output CSS.\n                    */\n                    ;\n\n                    _proto.toString = function toString() {\n                      return this.css;\n                    }\n                    /**\n                    * Processes input CSS through synchronous and asynchronous plugins\n                    * and calls `onFulfilled` with a Result instance. If a plugin throws\n                    * an error, the `onRejected` callback will be executed.\n                    *\n                    * It implements standard Promise API.\n                    *\n                    * @param {onFulfilled} onFulfilled Callback will be executed\n                    *                                  when all plugins will finish work.\n                    * @param {onRejected}  onRejected  Callback will be executed on any error.\n                    *\n                    * @return {Promise} Promise API to make queue.\n                    *\n                    * @example\n                    * postcss([autoprefixer]).process(css, { from: cssPath }).then(result => {\n                    *   console.log(result.css)\n                    * })\n                    */\n                    ;\n\n                    _proto.then = function then(onFulfilled, onRejected) {\n                      if (process.env.NODE_ENV !== 'production') {\n                        if (!('from' in this.opts)) {\n                          (0, _warnOnce[\"default\"])('Without `from` option PostCSS could generate wrong source map ' + 'and will not find Browserslist config. Set it to CSS file path ' + 'or to `undefined` to prevent this warning.');\n                        }\n                      }\n\n                      return this.async().then(onFulfilled, onRejected);\n                    }\n                    /**\n                    * Processes input CSS through synchronous and asynchronous plugins\n                    * and calls onRejected for each error thrown in any plugin.\n                    *\n                    * It implements standard Promise API.\n                    *\n                    * @param {onRejected} onRejected Callback will be executed on any error.\n                    *\n                    * @return {Promise} Promise API to make queue.\n                    *\n                    * @example\n                    * postcss([autoprefixer]).process(css).then(result => {\n                    *   console.log(result.css)\n                    * }).catch(error => {\n                    *   console.error(error)\n                    * })\n                    */\n                    ;\n\n                    _proto[\"catch\"] = function _catch(onRejected) {\n                      return this.async()[\"catch\"](onRejected);\n                    }\n                    /**\n                    * Processes input CSS through synchronous and asynchronous plugins\n                    * and calls onFinally on any error or when all plugins will finish work.\n                    *\n                    * It implements standard Promise API.\n                    *\n                    * @param {onFinally} onFinally Callback will be executed on any error or\n                    *                              when all plugins will finish work.\n                    *\n                    * @return {Promise} Promise API to make queue.\n                    *\n                    * @example\n                    * postcss([autoprefixer]).process(css).finally(() => {\n                    *   console.log('processing ended')\n                    * })\n                    */\n                    ;\n\n                    _proto[\"finally\"] = function _finally(onFinally) {\n                      return this.async().then(onFinally, onFinally);\n                    };\n\n                    _proto.handleError = function handleError(error, plugin) {\n                      try {\n                        this.error = error;\n\n                        if (error.name === 'CssSyntaxError' && !error.plugin) {\n                          error.plugin = plugin.postcssPlugin;\n                          error.setMessage();\n                        } else if (plugin.postcssVersion) {\n                          if (process.env.NODE_ENV !== 'production') {\n                            var pluginName = plugin.postcssPlugin;\n                            var pluginVer = plugin.postcssVersion;\n                            var runtimeVer = this.result.processor.version;\n                            var a = pluginVer.split('.');\n                            var b = runtimeVer.split('.');\n\n                            if (a[0] !== b[0] || parseInt(a[1]) > parseInt(b[1])) {\n                              console.error('Unknown error from PostCSS plugin. Your current PostCSS ' + 'version is ' + runtimeVer + ', but ' + pluginName + ' uses ' + pluginVer + '. Perhaps this is the source of the error below.');\n                            }\n                          }\n                        }\n                      } catch (err) {\n                        if (console && console.error) console.error(err);\n                      }\n                    };\n\n                    _proto.asyncTick = function asyncTick(resolve, reject) {\n                      var _this = this;\n\n                      if (this.plugin >= this.processor.plugins.length) {\n                        this.processed = true;\n                        return resolve();\n                      }\n\n                      try {\n                        var plugin = this.processor.plugins[this.plugin];\n                        var promise = this.run(plugin);\n                        this.plugin += 1;\n\n                        if (isPromise(promise)) {\n                          promise.then(function () {\n                            _this.asyncTick(resolve, reject);\n                          })[\"catch\"](function (error) {\n                            _this.handleError(error, plugin);\n\n                            _this.processed = true;\n                            reject(error);\n                          });\n                        } else {\n                          this.asyncTick(resolve, reject);\n                        }\n                      } catch (error) {\n                        this.processed = true;\n                        reject(error);\n                      }\n                    };\n\n                    _proto.async = function async() {\n                      var _this2 = this;\n\n                      if (this.processed) {\n                        return new Promise(function (resolve, reject) {\n                          if (_this2.error) {\n                            reject(_this2.error);\n                          } else {\n                            resolve(_this2.stringify());\n                          }\n                        });\n                      }\n\n                      if (this.processing) {\n                        return this.processing;\n                      }\n\n                      this.processing = new Promise(function (resolve, reject) {\n                        if (_this2.error) return reject(_this2.error);\n                        _this2.plugin = 0;\n\n                        _this2.asyncTick(resolve, reject);\n                      }).then(function () {\n                        _this2.processed = true;\n                        return _this2.stringify();\n                      });\n                      return this.processing;\n                    };\n\n                    _proto.sync = function sync() {\n                      if (this.processed) return this.result;\n                      this.processed = true;\n\n                      if (this.processing) {\n                        throw new Error('Use process(css).then(cb) to work with async plugins');\n                      }\n\n                      if (this.error) throw this.error;\n\n                      for (var _iterator = this.result.processor.plugins, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n                        var _ref;\n\n                        if (_isArray) {\n                          if (_i >= _iterator.length) break;\n                          _ref = _iterator[_i++];\n                        } else {\n                          _i = _iterator.next();\n                          if (_i.done) break;\n                          _ref = _i.value;\n                        }\n\n                        var plugin = _ref;\n                        var promise = this.run(plugin);\n\n                        if (isPromise(promise)) {\n                          throw new Error('Use process(css).then(cb) to work with async plugins');\n                        }\n                      }\n\n                      return this.result;\n                    };\n\n                    _proto.run = function run(plugin) {\n                      this.result.lastPlugin = plugin;\n\n                      try {\n                        return plugin(this.result.root, this.result);\n                      } catch (error) {\n                        this.handleError(error, plugin);\n                        throw error;\n                      }\n                    };\n\n                    _proto.stringify = function stringify() {\n                      if (this.stringified) return this.result;\n                      this.stringified = true;\n                      this.sync();\n                      var opts = this.result.opts;\n                      var str = _stringify2[\"default\"];\n                      if (opts.syntax) str = opts.syntax.stringify;\n                      if (opts.stringifier) str = opts.stringifier;\n                      if (str.stringify) str = str.stringify;\n                      var map = new _mapGenerator[\"default\"](str, this.result.root, this.result.opts);\n                      var data = map.generate();\n                      this.result.css = data[0];\n                      this.result.map = data[1];\n                      return this.result;\n                    };\n\n                    _createClass(LazyResult, [{\n                      key: \"processor\",\n                      get: function get() {\n                        return this.result.processor;\n                      }\n                      /**\n                      * Options from the {@link Processor#process} call.\n                      *\n                      * @type {processOptions}\n                      */\n\n                    }, {\n                      key: \"opts\",\n                      get: function get() {\n                        return this.result.opts;\n                      }\n                      /**\n                      * Processes input CSS through synchronous plugins, converts `Root`\n                      * to a CSS string and returns {@link Result#css}.\n                      *\n                      * This property will only work with synchronous plugins.\n                      * If the processor contains any asynchronous plugins\n                      * it will throw an error. This is why this method is only\n                      * for debug purpose, you should always use {@link LazyResult#then}.\n                      *\n                      * @type {string}\n                      * @see Result#css\n                      */\n\n                    }, {\n                      key: \"css\",\n                      get: function get() {\n                        return this.stringify().css;\n                      }\n                      /**\n                      * An alias for the `css` property. Use it with syntaxes\n                      * that generate non-CSS output.\n                      *\n                      * This property will only work with synchronous plugins.\n                      * If the processor contains any asynchronous plugins\n                      * it will throw an error. This is why this method is only\n                      * for debug purpose, you should always use {@link LazyResult#then}.\n                      *\n                      * @type {string}\n                      * @see Result#content\n                      */\n\n                    }, {\n                      key: \"content\",\n                      get: function get() {\n                        return this.stringify().content;\n                      }\n                      /**\n                      * Processes input CSS through synchronous plugins\n                      * and returns {@link Result#map}.\n                      *\n                      * This property will only work with synchronous plugins.\n                      * If the processor contains any asynchronous plugins\n                      * it will throw an error. This is why this method is only\n                      * for debug purpose, you should always use {@link LazyResult#then}.\n                      *\n                      * @type {SourceMapGenerator}\n                      * @see Result#map\n                      */\n\n                    }, {\n                      key: \"map\",\n                      get: function get() {\n                        return this.stringify().map;\n                      }\n                      /**\n                      * Processes input CSS through synchronous plugins\n                      * and returns {@link Result#root}.\n                      *\n                      * This property will only work with synchronous plugins. If the processor\n                      * contains any asynchronous plugins it will throw an error.\n                      *\n                      * This is why this method is only for debug purpose,\n                      * you should always use {@link LazyResult#then}.\n                      *\n                      * @type {Root}\n                      * @see Result#root\n                      */\n\n                    }, {\n                      key: \"root\",\n                      get: function get() {\n                        return this.sync().root;\n                      }\n                      /**\n                      * Processes input CSS through synchronous plugins\n                      * and returns {@link Result#messages}.\n                      *\n                      * This property will only work with synchronous plugins. If the processor\n                      * contains any asynchronous plugins it will throw an error.\n                      *\n                      * This is why this method is only for debug purpose,\n                      * you should always use {@link LazyResult#then}.\n                      *\n                      * @type {Message[]}\n                      * @see Result#messages\n                      */\n\n                    }, {\n                      key: \"messages\",\n                      get: function get() {\n                        return this.sync().messages;\n                      }\n                    }]);\n\n                    return LazyResult;\n                  }();\n\n                  var _default = LazyResult;\n                  /**\n                  * @callback onFulfilled\n                  * @param {Result} result\n                  */\n\n                  /**\n                  * @callback onRejected\n                  * @param {Error} error\n                  */\n\n                  exports[\"default\"] = _default;\n                  module.exports = exports[\"default\"];\n                }).call(this, require('_process'));\n              }, {\n                \"./map-generator\": 177,\n                \"./parse\": 179,\n                \"./result\": 184,\n                \"./stringify\": 188,\n                \"./warn-once\": 191,\n                \"_process\": 193\n              }],\n              176: [function (require, module, exports) {\n                \"use strict\";\n\n                exports.__esModule = true;\n                exports[\"default\"] = void 0;\n                /**\n                * Contains helpers for safely splitting lists of CSS values,\n                * preserving parentheses and quotes.\n                *\n                * @example\n                * const list = postcss.list\n                *\n                * @namespace list\n                */\n\n                var list = {\n                  split: function split(string, separators, last) {\n                    var array = [];\n                    var current = '';\n                    var split = false;\n                    var func = 0;\n                    var quote = false;\n                    var escape = false;\n\n                    for (var i = 0; i < string.length; i++) {\n                      var letter = string[i];\n\n                      if (quote) {\n                        if (escape) {\n                          escape = false;\n                        } else if (letter === '\\\\') {\n                          escape = true;\n                        } else if (letter === quote) {\n                          quote = false;\n                        }\n                      } else if (letter === '\"' || letter === '\\'') {\n                        quote = letter;\n                      } else if (letter === '(') {\n                        func += 1;\n                      } else if (letter === ')') {\n                        if (func > 0) func -= 1;\n                      } else if (func === 0) {\n                        if (separators.indexOf(letter) !== -1) split = true;\n                      }\n\n                      if (split) {\n                        if (current !== '') array.push(current.trim());\n                        current = '';\n                        split = false;\n                      } else {\n                        current += letter;\n                      }\n                    }\n\n                    if (last || current !== '') array.push(current.trim());\n                    return array;\n                  },\n\n                  /**\n                  * Safely splits space-separated values (such as those for `background`,\n                  * `border-radius`, and other shorthand properties).\n                  *\n                  * @param {string} string Space-separated values.\n                  *\n                  * @return {string[]} Split values.\n                  *\n                  * @example\n                  * postcss.list.space('1px calc(10% + 1px)') //=> ['1px', 'calc(10% + 1px)']\n                  */\n                  space: function space(string) {\n                    var spaces = [' ', '\\n', '\\t'];\n                    return list.split(string, spaces);\n                  },\n\n                  /**\n                  * Safely splits comma-separated values (such as those for `transition-*`\n                  * and `background` properties).\n                  *\n                  * @param {string} string Comma-separated values.\n                  *\n                  * @return {string[]} Split values.\n                  *\n                  * @example\n                  * postcss.list.comma('black, linear-gradient(white, black)')\n                  * //=> ['black', 'linear-gradient(white, black)']\n                  */\n                  comma: function comma(string) {\n                    return list.split(string, [','], true);\n                  }\n                };\n                var _default = list;\n                exports[\"default\"] = _default;\n                module.exports = exports[\"default\"];\n              }, {}],\n              177: [function (require, module, exports) {\n                (function (Buffer) {\n                  \"use strict\";\n\n                  exports.__esModule = true;\n                  exports[\"default\"] = void 0;\n\n                  var _sourceMap = _interopRequireDefault(require(\"source-map\"));\n\n                  var _path = _interopRequireDefault(require(\"path\"));\n\n                  function _interopRequireDefault(obj) {\n                    return obj && obj.__esModule ? obj : {\n                      \"default\": obj\n                    };\n                  }\n\n                  var MapGenerator = /*#__PURE__*/function () {\n                    function MapGenerator(stringify, root, opts) {\n                      this.stringify = stringify;\n                      this.mapOpts = opts.map || {};\n                      this.root = root;\n                      this.opts = opts;\n                    }\n\n                    var _proto = MapGenerator.prototype;\n\n                    _proto.isMap = function isMap() {\n                      if (typeof this.opts.map !== 'undefined') {\n                        return !!this.opts.map;\n                      }\n\n                      return this.previous().length > 0;\n                    };\n\n                    _proto.previous = function previous() {\n                      var _this = this;\n\n                      if (!this.previousMaps) {\n                        this.previousMaps = [];\n                        this.root.walk(function (node) {\n                          if (node.source && node.source.input.map) {\n                            var map = node.source.input.map;\n\n                            if (_this.previousMaps.indexOf(map) === -1) {\n                              _this.previousMaps.push(map);\n                            }\n                          }\n                        });\n                      }\n\n                      return this.previousMaps;\n                    };\n\n                    _proto.isInline = function isInline() {\n                      if (typeof this.mapOpts.inline !== 'undefined') {\n                        return this.mapOpts.inline;\n                      }\n\n                      var annotation = this.mapOpts.annotation;\n\n                      if (typeof annotation !== 'undefined' && annotation !== true) {\n                        return false;\n                      }\n\n                      if (this.previous().length) {\n                        return this.previous().some(function (i) {\n                          return i.inline;\n                        });\n                      }\n\n                      return true;\n                    };\n\n                    _proto.isSourcesContent = function isSourcesContent() {\n                      if (typeof this.mapOpts.sourcesContent !== 'undefined') {\n                        return this.mapOpts.sourcesContent;\n                      }\n\n                      if (this.previous().length) {\n                        return this.previous().some(function (i) {\n                          return i.withContent();\n                        });\n                      }\n\n                      return true;\n                    };\n\n                    _proto.clearAnnotation = function clearAnnotation() {\n                      if (this.mapOpts.annotation === false) return;\n                      var node;\n\n                      for (var i = this.root.nodes.length - 1; i >= 0; i--) {\n                        node = this.root.nodes[i];\n                        if (node.type !== 'comment') continue;\n\n                        if (node.text.indexOf('# sourceMappingURL=') === 0) {\n                          this.root.removeChild(i);\n                        }\n                      }\n                    };\n\n                    _proto.setSourcesContent = function setSourcesContent() {\n                      var _this2 = this;\n\n                      var already = {};\n                      this.root.walk(function (node) {\n                        if (node.source) {\n                          var from = node.source.input.from;\n\n                          if (from && !already[from]) {\n                            already[from] = true;\n\n                            var relative = _this2.relative(from);\n\n                            _this2.map.setSourceContent(relative, node.source.input.css);\n                          }\n                        }\n                      });\n                    };\n\n                    _proto.applyPrevMaps = function applyPrevMaps() {\n                      for (var _iterator = this.previous(), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n                        var _ref;\n\n                        if (_isArray) {\n                          if (_i >= _iterator.length) break;\n                          _ref = _iterator[_i++];\n                        } else {\n                          _i = _iterator.next();\n                          if (_i.done) break;\n                          _ref = _i.value;\n                        }\n\n                        var prev = _ref;\n                        var from = this.relative(prev.file);\n\n                        var root = prev.root || _path[\"default\"].dirname(prev.file);\n\n                        var map = void 0;\n\n                        if (this.mapOpts.sourcesContent === false) {\n                          map = new _sourceMap[\"default\"].SourceMapConsumer(prev.text);\n\n                          if (map.sourcesContent) {\n                            map.sourcesContent = map.sourcesContent.map(function () {\n                              return null;\n                            });\n                          }\n                        } else {\n                          map = prev.consumer();\n                        }\n\n                        this.map.applySourceMap(map, from, this.relative(root));\n                      }\n                    };\n\n                    _proto.isAnnotation = function isAnnotation() {\n                      if (this.isInline()) {\n                        return true;\n                      }\n\n                      if (typeof this.mapOpts.annotation !== 'undefined') {\n                        return this.mapOpts.annotation;\n                      }\n\n                      if (this.previous().length) {\n                        return this.previous().some(function (i) {\n                          return i.annotation;\n                        });\n                      }\n\n                      return true;\n                    };\n\n                    _proto.toBase64 = function toBase64(str) {\n                      if (Buffer) {\n                        return Buffer.from(str).toString('base64');\n                      }\n\n                      return window.btoa(unescape(encodeURIComponent(str)));\n                    };\n\n                    _proto.addAnnotation = function addAnnotation() {\n                      var content;\n\n                      if (this.isInline()) {\n                        content = 'data:application/json;base64,' + this.toBase64(this.map.toString());\n                      } else if (typeof this.mapOpts.annotation === 'string') {\n                        content = this.mapOpts.annotation;\n                      } else {\n                        content = this.outputFile() + '.map';\n                      }\n\n                      var eol = '\\n';\n                      if (this.css.indexOf('\\r\\n') !== -1) eol = '\\r\\n';\n                      this.css += eol + '/*# sourceMappingURL=' + content + ' */';\n                    };\n\n                    _proto.outputFile = function outputFile() {\n                      if (this.opts.to) {\n                        return this.relative(this.opts.to);\n                      }\n\n                      if (this.opts.from) {\n                        return this.relative(this.opts.from);\n                      }\n\n                      return 'to.css';\n                    };\n\n                    _proto.generateMap = function generateMap() {\n                      this.generateString();\n                      if (this.isSourcesContent()) this.setSourcesContent();\n                      if (this.previous().length > 0) this.applyPrevMaps();\n                      if (this.isAnnotation()) this.addAnnotation();\n\n                      if (this.isInline()) {\n                        return [this.css];\n                      }\n\n                      return [this.css, this.map];\n                    };\n\n                    _proto.relative = function relative(file) {\n                      if (file.indexOf('<') === 0) return file;\n                      if (/^\\w+:\\/\\//.test(file)) return file;\n                      var from = this.opts.to ? _path[\"default\"].dirname(this.opts.to) : '.';\n\n                      if (typeof this.mapOpts.annotation === 'string') {\n                        from = _path[\"default\"].dirname(_path[\"default\"].resolve(from, this.mapOpts.annotation));\n                      }\n\n                      file = _path[\"default\"].relative(from, file);\n\n                      if (_path[\"default\"].sep === '\\\\') {\n                        return file.replace(/\\\\/g, '/');\n                      }\n\n                      return file;\n                    };\n\n                    _proto.sourcePath = function sourcePath(node) {\n                      if (this.mapOpts.from) {\n                        return this.mapOpts.from;\n                      }\n\n                      return this.relative(node.source.input.from);\n                    };\n\n                    _proto.generateString = function generateString() {\n                      var _this3 = this;\n\n                      this.css = '';\n                      this.map = new _sourceMap[\"default\"].SourceMapGenerator({\n                        file: this.outputFile()\n                      });\n                      var line = 1;\n                      var column = 1;\n                      var lines, last;\n                      this.stringify(this.root, function (str, node, type) {\n                        _this3.css += str;\n\n                        if (node && type !== 'end') {\n                          if (node.source && node.source.start) {\n                            _this3.map.addMapping({\n                              source: _this3.sourcePath(node),\n                              generated: {\n                                line: line,\n                                column: column - 1\n                              },\n                              original: {\n                                line: node.source.start.line,\n                                column: node.source.start.column - 1\n                              }\n                            });\n                          } else {\n                            _this3.map.addMapping({\n                              source: '<no source>',\n                              original: {\n                                line: 1,\n                                column: 0\n                              },\n                              generated: {\n                                line: line,\n                                column: column - 1\n                              }\n                            });\n                          }\n                        }\n\n                        lines = str.match(/\\n/g);\n\n                        if (lines) {\n                          line += lines.length;\n                          last = str.lastIndexOf('\\n');\n                          column = str.length - last;\n                        } else {\n                          column += str.length;\n                        }\n\n                        if (node && type !== 'start') {\n                          var p = node.parent || {\n                            raws: {}\n                          };\n\n                          if (node.type !== 'decl' || node !== p.last || p.raws.semicolon) {\n                            if (node.source && node.source.end) {\n                              _this3.map.addMapping({\n                                source: _this3.sourcePath(node),\n                                generated: {\n                                  line: line,\n                                  column: column - 2\n                                },\n                                original: {\n                                  line: node.source.end.line,\n                                  column: node.source.end.column - 1\n                                }\n                              });\n                            } else {\n                              _this3.map.addMapping({\n                                source: '<no source>',\n                                original: {\n                                  line: 1,\n                                  column: 0\n                                },\n                                generated: {\n                                  line: line,\n                                  column: column - 1\n                                }\n                              });\n                            }\n                          }\n                        }\n                      });\n                    };\n\n                    _proto.generate = function generate() {\n                      this.clearAnnotation();\n\n                      if (this.isMap()) {\n                        return this.generateMap();\n                      }\n\n                      var result = '';\n                      this.stringify(this.root, function (i) {\n                        result += i;\n                      });\n                      return [result];\n                    };\n\n                    return MapGenerator;\n                  }();\n\n                  var _default = MapGenerator;\n                  exports[\"default\"] = _default;\n                  module.exports = exports[\"default\"];\n                }).call(this, require(\"buffer\").Buffer);\n              }, {\n                \"buffer\": 3,\n                \"path\": 168,\n                \"source-map\": 208\n              }],\n              178: [function (require, module, exports) {\n                (function (process) {\n                  \"use strict\";\n\n                  exports.__esModule = true;\n                  exports[\"default\"] = void 0;\n\n                  var _cssSyntaxError = _interopRequireDefault(require(\"./css-syntax-error\"));\n\n                  var _stringifier = _interopRequireDefault(require(\"./stringifier\"));\n\n                  var _stringify = _interopRequireDefault(require(\"./stringify\"));\n\n                  function _interopRequireDefault(obj) {\n                    return obj && obj.__esModule ? obj : {\n                      \"default\": obj\n                    };\n                  }\n\n                  function cloneNode(obj, parent) {\n                    var cloned = new obj.constructor();\n\n                    for (var i in obj) {\n                      if (!obj.hasOwnProperty(i)) continue;\n                      var value = obj[i];\n\n                      var type = _typeof(value);\n\n                      if (i === 'parent' && type === 'object') {\n                        if (parent) cloned[i] = parent;\n                      } else if (i === 'source') {\n                        cloned[i] = value;\n                      } else if (value instanceof Array) {\n                        cloned[i] = value.map(function (j) {\n                          return cloneNode(j, cloned);\n                        });\n                      } else {\n                        if (type === 'object' && value !== null) value = cloneNode(value);\n                        cloned[i] = value;\n                      }\n                    }\n\n                    return cloned;\n                  }\n                  /**\n                  * All node classes inherit the following common methods.\n                  *\n                  * @abstract\n                  */\n\n\n                  var Node = /*#__PURE__*/function () {\n                    /**\n                    * @param {object} [defaults] Value for node properties.\n                    */\n                    function Node(defaults) {\n                      if (defaults === void 0) {\n                        defaults = {};\n                      }\n\n                      this.raws = {};\n\n                      if (process.env.NODE_ENV !== 'production') {\n                        if (_typeof(defaults) !== 'object' && typeof defaults !== 'undefined') {\n                          throw new Error('PostCSS nodes constructor accepts object, not ' + JSON.stringify(defaults));\n                        }\n                      }\n\n                      for (var name in defaults) {\n                        this[name] = defaults[name];\n                      }\n                    }\n                    /**\n                    * Returns a `CssSyntaxError` instance containing the original position\n                    * of the node in the source, showing line and column numbers and also\n                    * a small excerpt to facilitate debugging.\n                    *\n                    * If present, an input source map will be used to get the original position\n                    * of the source, even from a previous compilation step\n                    * (e.g., from Sass compilation).\n                    *\n                    * This method produces very useful error messages.\n                    *\n                    * @param {string} message     Error description.\n                    * @param {object} [opts]      Options.\n                    * @param {string} opts.plugin Plugin name that created this error.\n                    *                             PostCSS will set it automatically.\n                    * @param {string} opts.word   A word inside a node’s string that should\n                    *                             be highlighted as the source of the error.\n                    * @param {number} opts.index  An index inside a node’s string that should\n                    *                             be highlighted as the source of the error.\n                    *\n                    * @return {CssSyntaxError} Error object to throw it.\n                    *\n                    * @example\n                    * if (!variables[name]) {\n                    *   throw decl.error('Unknown variable ' + name, { word: name })\n                    *   // CssSyntaxError: postcss-vars:a.sass:4:3: Unknown variable $black\n                    *   //   color: $black\n                    *   // a\n                    *   //          ^\n                    *   //   background: white\n                    * }\n                    */\n\n\n                    var _proto = Node.prototype;\n\n                    _proto.error = function error(message, opts) {\n                      if (opts === void 0) {\n                        opts = {};\n                      }\n\n                      if (this.source) {\n                        var pos = this.positionBy(opts);\n                        return this.source.input.error(message, pos.line, pos.column, opts);\n                      }\n\n                      return new _cssSyntaxError[\"default\"](message);\n                    }\n                    /**\n                    * This method is provided as a convenience wrapper for {@link Result#warn}.\n                    *\n                    * @param {Result} result      The {@link Result} instance\n                    *                             that will receive the warning.\n                    * @param {string} text        Warning message.\n                    * @param {object} [opts]      Options\n                    * @param {string} opts.plugin Plugin name that created this warning.\n                    *                             PostCSS will set it automatically.\n                    * @param {string} opts.word   A word inside a node’s string that should\n                    *                             be highlighted as the source of the warning.\n                    * @param {number} opts.index  An index inside a node’s string that should\n                    *                             be highlighted as the source of the warning.\n                    *\n                    * @return {Warning} Created warning object.\n                    *\n                    * @example\n                    * const plugin = postcss.plugin('postcss-deprecated', () => {\n                    *   return (root, result) => {\n                    *     root.walkDecls('bad', decl => {\n                    *       decl.warn(result, 'Deprecated property bad')\n                    *     })\n                    *   }\n                    * })\n                    */\n                    ;\n\n                    _proto.warn = function warn(result, text, opts) {\n                      var data = {\n                        node: this\n                      };\n\n                      for (var i in opts) {\n                        data[i] = opts[i];\n                      }\n\n                      return result.warn(text, data);\n                    }\n                    /**\n                    * Removes the node from its parent and cleans the parent properties\n                    * from the node and its children.\n                    *\n                    * @example\n                    * if (decl.prop.match(/^-webkit-/)) {\n                    *   decl.remove()\n                    * }\n                    *\n                    * @return {Node} Node to make calls chain.\n                    */\n                    ;\n\n                    _proto.remove = function remove() {\n                      if (this.parent) {\n                        this.parent.removeChild(this);\n                      }\n\n                      this.parent = undefined;\n                      return this;\n                    }\n                    /**\n                    * Returns a CSS string representing the node.\n                    *\n                    * @param {stringifier|syntax} [stringifier] A syntax to use\n                    *                                           in string generation.\n                    *\n                    * @return {string} CSS string of this node.\n                    *\n                    * @example\n                    * postcss.rule({ selector: 'a' }).toString() //=> \"a {}\"\n                    */\n                    ;\n\n                    _proto.toString = function toString(stringifier) {\n                      if (stringifier === void 0) {\n                        stringifier = _stringify[\"default\"];\n                      }\n\n                      if (stringifier.stringify) stringifier = stringifier.stringify;\n                      var result = '';\n                      stringifier(this, function (i) {\n                        result += i;\n                      });\n                      return result;\n                    }\n                    /**\n                    * Returns an exact clone of the node.\n                    *\n                    * The resulting cloned node and its (cloned) children will retain\n                    * code style properties.\n                    *\n                    * @param {object} [overrides] New properties to override in the clone.\n                    *\n                    * @example\n                    * decl.raws.before    //=> \"\\n  \"\n                    * const cloned = decl.clone({ prop: '-moz-' + decl.prop })\n                    * cloned.raws.before  //=> \"\\n  \"\n                    * cloned.toString()   //=> -moz-transform: scale(0)\n                    *\n                    * @return {Node} Clone of the node.\n                    */\n                    ;\n\n                    _proto.clone = function clone(overrides) {\n                      if (overrides === void 0) {\n                        overrides = {};\n                      }\n\n                      var cloned = cloneNode(this);\n\n                      for (var name in overrides) {\n                        cloned[name] = overrides[name];\n                      }\n\n                      return cloned;\n                    }\n                    /**\n                    * Shortcut to clone the node and insert the resulting cloned node\n                    * before the current node.\n                    *\n                    * @param {object} [overrides] Mew properties to override in the clone.\n                    *\n                    * @example\n                    * decl.cloneBefore({ prop: '-moz-' + decl.prop })\n                    *\n                    * @return {Node} New node\n                    */\n                    ;\n\n                    _proto.cloneBefore = function cloneBefore(overrides) {\n                      if (overrides === void 0) {\n                        overrides = {};\n                      }\n\n                      var cloned = this.clone(overrides);\n                      this.parent.insertBefore(this, cloned);\n                      return cloned;\n                    }\n                    /**\n                    * Shortcut to clone the node and insert the resulting cloned node\n                    * after the current node.\n                    *\n                    * @param {object} [overrides] New properties to override in the clone.\n                    *\n                    * @return {Node} New node.\n                    */\n                    ;\n\n                    _proto.cloneAfter = function cloneAfter(overrides) {\n                      if (overrides === void 0) {\n                        overrides = {};\n                      }\n\n                      var cloned = this.clone(overrides);\n                      this.parent.insertAfter(this, cloned);\n                      return cloned;\n                    }\n                    /**\n                    * Inserts node(s) before the current node and removes the current node.\n                    *\n                    * @param {...Node} nodes Mode(s) to replace current one.\n                    *\n                    * @example\n                    * if (atrule.name === 'mixin') {\n                    *   atrule.replaceWith(mixinRules[atrule.params])\n                    * }\n                    *\n                    * @return {Node} Current node to methods chain.\n                    */\n                    ;\n\n                    _proto.replaceWith = function replaceWith() {\n                      if (this.parent) {\n                        for (var _len = arguments.length, nodes = new Array(_len), _key = 0; _key < _len; _key++) {\n                          nodes[_key] = arguments[_key];\n                        }\n\n                        for (var _i = 0, _nodes = nodes; _i < _nodes.length; _i++) {\n                          var node = _nodes[_i];\n                          this.parent.insertBefore(this, node);\n                        }\n\n                        this.remove();\n                      }\n\n                      return this;\n                    }\n                    /**\n                    * Returns the next child of the node’s parent.\n                    * Returns `undefined` if the current node is the last child.\n                    *\n                    * @return {Node|undefined} Next node.\n                    *\n                    * @example\n                    * if (comment.text === 'delete next') {\n                    *   const next = comment.next()\n                    *   if (next) {\n                    *     next.remove()\n                    *   }\n                    * }\n                    */\n                    ;\n\n                    _proto.next = function next() {\n                      if (!this.parent) return undefined;\n                      var index = this.parent.index(this);\n                      return this.parent.nodes[index + 1];\n                    }\n                    /**\n                    * Returns the previous child of the node’s parent.\n                    * Returns `undefined` if the current node is the first child.\n                    *\n                    * @return {Node|undefined} Previous node.\n                    *\n                    * @example\n                    * const annotation = decl.prev()\n                    * if (annotation.type === 'comment') {\n                    *   readAnnotation(annotation.text)\n                    * }\n                    */\n                    ;\n\n                    _proto.prev = function prev() {\n                      if (!this.parent) return undefined;\n                      var index = this.parent.index(this);\n                      return this.parent.nodes[index - 1];\n                    }\n                    /**\n                    * Insert new node before current node to current node’s parent.\n                    *\n                    * Just alias for `node.parent.insertBefore(node, add)`.\n                    *\n                    * @param {Node|object|string|Node[]} add New node.\n                    *\n                    * @return {Node} This node for methods chain.\n                    *\n                    * @example\n                    * decl.before('content: \"\"')\n                    */\n                    ;\n\n                    _proto.before = function before(add) {\n                      this.parent.insertBefore(this, add);\n                      return this;\n                    }\n                    /**\n                    * Insert new node after current node to current node’s parent.\n                    *\n                    * Just alias for `node.parent.insertAfter(node, add)`.\n                    *\n                    * @param {Node|object|string|Node[]} add New node.\n                    *\n                    * @return {Node} This node for methods chain.\n                    *\n                    * @example\n                    * decl.after('color: black')\n                    */\n                    ;\n\n                    _proto.after = function after(add) {\n                      this.parent.insertAfter(this, add);\n                      return this;\n                    };\n\n                    _proto.toJSON = function toJSON() {\n                      var fixed = {};\n\n                      for (var name in this) {\n                        if (!this.hasOwnProperty(name)) continue;\n                        if (name === 'parent') continue;\n                        var value = this[name];\n\n                        if (value instanceof Array) {\n                          fixed[name] = value.map(function (i) {\n                            if (_typeof(i) === 'object' && i.toJSON) {\n                              return i.toJSON();\n                            } else {\n                              return i;\n                            }\n                          });\n                        } else if (_typeof(value) === 'object' && value.toJSON) {\n                          fixed[name] = value.toJSON();\n                        } else {\n                          fixed[name] = value;\n                        }\n                      }\n\n                      return fixed;\n                    }\n                    /**\n                    * Returns a {@link Node#raws} value. If the node is missing\n                    * the code style property (because the node was manually built or cloned),\n                    * PostCSS will try to autodetect the code style property by looking\n                    * at other nodes in the tree.\n                    *\n                    * @param {string} prop          Name of code style property.\n                    * @param {string} [defaultType] Name of default value, it can be missed\n                    *                               if the value is the same as prop.\n                    *\n                    * @example\n                    * const root = postcss.parse('a { background: white }')\n                    * root.nodes[0].append({ prop: 'color', value: 'black' })\n                    * root.nodes[0].nodes[1].raws.before   //=> undefined\n                    * root.nodes[0].nodes[1].raw('before') //=> ' '\n                    *\n                    * @return {string} Code style value.\n                    */\n                    ;\n\n                    _proto.raw = function raw(prop, defaultType) {\n                      var str = new _stringifier[\"default\"]();\n                      return str.raw(this, prop, defaultType);\n                    }\n                    /**\n                    * Finds the Root instance of the node’s tree.\n                    *\n                    * @example\n                    * root.nodes[0].nodes[0].root() === root\n                    *\n                    * @return {Root} Root parent.\n                    */\n                    ;\n\n                    _proto.root = function root() {\n                      var result = this;\n\n                      while (result.parent) {\n                        result = result.parent;\n                      }\n\n                      return result;\n                    }\n                    /**\n                    * Clear the code style properties for the node and its children.\n                    *\n                    * @param {boolean} [keepBetween] Keep the raws.between symbols.\n                    *\n                    * @return {undefined}\n                    *\n                    * @example\n                    * node.raws.before  //=> ' '\n                    * node.cleanRaws()\n                    * node.raws.before  //=> undefined\n                    */\n                    ;\n\n                    _proto.cleanRaws = function cleanRaws(keepBetween) {\n                      delete this.raws.before;\n                      delete this.raws.after;\n                      if (!keepBetween) delete this.raws.between;\n                    };\n\n                    _proto.positionInside = function positionInside(index) {\n                      var string = this.toString();\n                      var column = this.source.start.column;\n                      var line = this.source.start.line;\n\n                      for (var i = 0; i < index; i++) {\n                        if (string[i] === '\\n') {\n                          column = 1;\n                          line += 1;\n                        } else {\n                          column += 1;\n                        }\n                      }\n\n                      return {\n                        line: line,\n                        column: column\n                      };\n                    };\n\n                    _proto.positionBy = function positionBy(opts) {\n                      var pos = this.source.start;\n\n                      if (opts.index) {\n                        pos = this.positionInside(opts.index);\n                      } else if (opts.word) {\n                        var index = this.toString().indexOf(opts.word);\n                        if (index !== -1) pos = this.positionInside(index);\n                      }\n\n                      return pos;\n                    }\n                    /**\n                    * @memberof Node#\n                    * @member {string} type String representing the node’s type.\n                    *                       Possible values are `root`, `atrule`, `rule`,\n                    *                       `decl`, or `comment`.\n                    *\n                    * @example\n                    * postcss.decl({ prop: 'color', value: 'black' }).type //=> 'decl'\n                    */\n\n                    /**\n                    * @memberof Node#\n                    * @member {Container} parent The node’s parent node.\n                    *\n                    * @example\n                    * root.nodes[0].parent === root\n                    */\n\n                    /**\n                    * @memberof Node#\n                    * @member {source} source The input source of the node.\n                    *\n                    * The property is used in source map generation.\n                    *\n                    * If you create a node manually (e.g., with `postcss.decl()`),\n                    * that node will not have a `source` property and will be absent\n                    * from the source map. For this reason, the plugin developer should\n                    * consider cloning nodes to create new ones (in which case the new node’s\n                    * source will reference the original, cloned node) or setting\n                    * the `source` property manually.\n                    *\n                    * ```js\n                    * // Bad\n                    * const prefixed = postcss.decl({\n                    *   prop: '-moz-' + decl.prop,\n                    *   value: decl.value\n                    * })\n                    *\n                    * // Good\n                    * const prefixed = decl.clone({ prop: '-moz-' + decl.prop })\n                    * ```\n                    *\n                    * ```js\n                    * if (atrule.name === 'add-link') {\n                    *   const rule = postcss.rule({ selector: 'a', source: atrule.source })\n                    *   atrule.parent.insertBefore(atrule, rule)\n                    * }\n                    * ```\n                    *\n                    * @example\n                    * decl.source.input.from //=> '/home/ai/a.sass'\n                    * decl.source.start      //=> { line: 10, column: 2 }\n                    * decl.source.end        //=> { line: 10, column: 12 }\n                    */\n\n                    /**\n                    * @memberof Node#\n                    * @member {object} raws Information to generate byte-to-byte equal\n                    *                       node string as it was in the origin input.\n                    *\n                    * Every parser saves its own properties,\n                    * but the default CSS parser uses:\n                    *\n                    * * `before`: the space symbols before the node. It also stores `*`\n                    *   and `_` symbols before the declaration (IE hack).\n                    * * `after`: the space symbols after the last child of the node\n                    *   to the end of the node.\n                    * * `between`: the symbols between the property and value\n                    *   for declarations, selector and `{` for rules, or last parameter\n                    *   and `{` for at-rules.\n                    * * `semicolon`: contains true if the last child has\n                    *   an (optional) semicolon.\n                    * * `afterName`: the space between the at-rule name and its parameters.\n                    * * `left`: the space symbols between `/*` and the comment’s text.\n                    * * `right`: the space symbols between the comment’s text\n                    *   and <code>*&#47;</code>.\n                    * * `important`: the content of the important statement,\n                    *   if it is not just `!important`.\n                    *\n                    * PostCSS cleans selectors, declaration values and at-rule parameters\n                    * from comments and extra spaces, but it stores origin content in raws\n                    * properties. As such, if you don’t change a declaration’s value,\n                    * PostCSS will use the raw value with comments.\n                    *\n                    * @example\n                    * const root = postcss.parse('a {\\n  color:black\\n}')\n                    * root.first.first.raws //=> { before: '\\n  ', between: ':' }\n                    */\n                    ;\n\n                    return Node;\n                  }();\n\n                  var _default = Node;\n                  /**\n                  * @typedef {object} position\n                  * @property {number} line   Source line in file.\n                  * @property {number} column Source column in file.\n                  */\n\n                  /**\n                  * @typedef {object} source\n                  * @property {Input} input    {@link Input} with input file\n                  * @property {position} start The starting position of the node’s source.\n                  * @property {position} end   The ending position of the node’s source.\n                  */\n\n                  exports[\"default\"] = _default;\n                  module.exports = exports[\"default\"];\n                }).call(this, require('_process'));\n              }, {\n                \"./css-syntax-error\": 172,\n                \"./stringifier\": 187,\n                \"./stringify\": 188,\n                \"_process\": 193\n              }],\n              179: [function (require, module, exports) {\n                (function (process) {\n                  \"use strict\";\n\n                  exports.__esModule = true;\n                  exports[\"default\"] = void 0;\n\n                  var _parser = _interopRequireDefault(require(\"./parser\"));\n\n                  var _input = _interopRequireDefault(require(\"./input\"));\n\n                  function _interopRequireDefault(obj) {\n                    return obj && obj.__esModule ? obj : {\n                      \"default\": obj\n                    };\n                  }\n\n                  function parse(css, opts) {\n                    var input = new _input[\"default\"](css, opts);\n                    var parser = new _parser[\"default\"](input);\n\n                    try {\n                      parser.parse();\n                    } catch (e) {\n                      if (process.env.NODE_ENV !== 'production') {\n                        if (e.name === 'CssSyntaxError' && opts && opts.from) {\n                          if (/\\.scss$/i.test(opts.from)) {\n                            e.message += '\\nYou tried to parse SCSS with ' + 'the standard CSS parser; ' + 'try again with the postcss-scss parser';\n                          } else if (/\\.sass/i.test(opts.from)) {\n                            e.message += '\\nYou tried to parse Sass with ' + 'the standard CSS parser; ' + 'try again with the postcss-sass parser';\n                          } else if (/\\.less$/i.test(opts.from)) {\n                            e.message += '\\nYou tried to parse Less with ' + 'the standard CSS parser; ' + 'try again with the postcss-less parser';\n                          }\n                        }\n                      }\n\n                      throw e;\n                    }\n\n                    return parser.root;\n                  }\n\n                  var _default = parse;\n                  exports[\"default\"] = _default;\n                  module.exports = exports[\"default\"];\n                }).call(this, require('_process'));\n              }, {\n                \"./input\": 174,\n                \"./parser\": 180,\n                \"_process\": 193\n              }],\n              180: [function (require, module, exports) {\n                \"use strict\";\n\n                exports.__esModule = true;\n                exports[\"default\"] = void 0;\n\n                var _declaration = _interopRequireDefault(require(\"./declaration\"));\n\n                var _tokenize = _interopRequireDefault(require(\"./tokenize\"));\n\n                var _comment = _interopRequireDefault(require(\"./comment\"));\n\n                var _atRule = _interopRequireDefault(require(\"./at-rule\"));\n\n                var _root = _interopRequireDefault(require(\"./root\"));\n\n                var _rule = _interopRequireDefault(require(\"./rule\"));\n\n                function _interopRequireDefault(obj) {\n                  return obj && obj.__esModule ? obj : {\n                    \"default\": obj\n                  };\n                }\n\n                var Parser = /*#__PURE__*/function () {\n                  function Parser(input) {\n                    this.input = input;\n                    this.root = new _root[\"default\"]();\n                    this.current = this.root;\n                    this.spaces = '';\n                    this.semicolon = false;\n                    this.createTokenizer();\n                    this.root.source = {\n                      input: input,\n                      start: {\n                        line: 1,\n                        column: 1\n                      }\n                    };\n                  }\n\n                  var _proto = Parser.prototype;\n\n                  _proto.createTokenizer = function createTokenizer() {\n                    this.tokenizer = (0, _tokenize[\"default\"])(this.input);\n                  };\n\n                  _proto.parse = function parse() {\n                    var token;\n\n                    while (!this.tokenizer.endOfFile()) {\n                      token = this.tokenizer.nextToken();\n\n                      switch (token[0]) {\n                        case 'space':\n                          this.spaces += token[1];\n                          break;\n\n                        case ';':\n                          this.freeSemicolon(token);\n                          break;\n\n                        case '}':\n                          this.end(token);\n                          break;\n\n                        case 'comment':\n                          this.comment(token);\n                          break;\n\n                        case 'at-word':\n                          this.atrule(token);\n                          break;\n\n                        case '{':\n                          this.emptyRule(token);\n                          break;\n\n                        default:\n                          this.other(token);\n                          break;\n                      }\n                    }\n\n                    this.endFile();\n                  };\n\n                  _proto.comment = function comment(token) {\n                    var node = new _comment[\"default\"]();\n                    this.init(node, token[2], token[3]);\n                    node.source.end = {\n                      line: token[4],\n                      column: token[5]\n                    };\n                    var text = token[1].slice(2, -2);\n\n                    if (/^\\s*$/.test(text)) {\n                      node.text = '';\n                      node.raws.left = text;\n                      node.raws.right = '';\n                    } else {\n                      var match = text.match(/^(\\s*)([^]*[^\\s])(\\s*)$/);\n                      node.text = match[2];\n                      node.raws.left = match[1];\n                      node.raws.right = match[3];\n                    }\n                  };\n\n                  _proto.emptyRule = function emptyRule(token) {\n                    var node = new _rule[\"default\"]();\n                    this.init(node, token[2], token[3]);\n                    node.selector = '';\n                    node.raws.between = '';\n                    this.current = node;\n                  };\n\n                  _proto.other = function other(start) {\n                    var end = false;\n                    var type = null;\n                    var colon = false;\n                    var bracket = null;\n                    var brackets = [];\n                    var tokens = [];\n                    var token = start;\n\n                    while (token) {\n                      type = token[0];\n                      tokens.push(token);\n\n                      if (type === '(' || type === '[') {\n                        if (!bracket) bracket = token;\n                        brackets.push(type === '(' ? ')' : ']');\n                      } else if (brackets.length === 0) {\n                        if (type === ';') {\n                          if (colon) {\n                            this.decl(tokens);\n                            return;\n                          } else {\n                            break;\n                          }\n                        } else if (type === '{') {\n                          this.rule(tokens);\n                          return;\n                        } else if (type === '}') {\n                          this.tokenizer.back(tokens.pop());\n                          end = true;\n                          break;\n                        } else if (type === ':') {\n                          colon = true;\n                        }\n                      } else if (type === brackets[brackets.length - 1]) {\n                        brackets.pop();\n                        if (brackets.length === 0) bracket = null;\n                      }\n\n                      token = this.tokenizer.nextToken();\n                    }\n\n                    if (this.tokenizer.endOfFile()) end = true;\n                    if (brackets.length > 0) this.unclosedBracket(bracket);\n\n                    if (end && colon) {\n                      while (tokens.length) {\n                        token = tokens[tokens.length - 1][0];\n                        if (token !== 'space' && token !== 'comment') break;\n                        this.tokenizer.back(tokens.pop());\n                      }\n\n                      this.decl(tokens);\n                    } else {\n                      this.unknownWord(tokens);\n                    }\n                  };\n\n                  _proto.rule = function rule(tokens) {\n                    tokens.pop();\n                    var node = new _rule[\"default\"]();\n                    this.init(node, tokens[0][2], tokens[0][3]);\n                    node.raws.between = this.spacesAndCommentsFromEnd(tokens);\n                    this.raw(node, 'selector', tokens);\n                    this.current = node;\n                  };\n\n                  _proto.decl = function decl(tokens) {\n                    var node = new _declaration[\"default\"]();\n                    this.init(node);\n                    var last = tokens[tokens.length - 1];\n\n                    if (last[0] === ';') {\n                      this.semicolon = true;\n                      tokens.pop();\n                    }\n\n                    if (last[4]) {\n                      node.source.end = {\n                        line: last[4],\n                        column: last[5]\n                      };\n                    } else {\n                      node.source.end = {\n                        line: last[2],\n                        column: last[3]\n                      };\n                    }\n\n                    while (tokens[0][0] !== 'word') {\n                      if (tokens.length === 1) this.unknownWord(tokens);\n                      node.raws.before += tokens.shift()[1];\n                    }\n\n                    node.source.start = {\n                      line: tokens[0][2],\n                      column: tokens[0][3]\n                    };\n                    node.prop = '';\n\n                    while (tokens.length) {\n                      var type = tokens[0][0];\n\n                      if (type === ':' || type === 'space' || type === 'comment') {\n                        break;\n                      }\n\n                      node.prop += tokens.shift()[1];\n                    }\n\n                    node.raws.between = '';\n                    var token;\n\n                    while (tokens.length) {\n                      token = tokens.shift();\n\n                      if (token[0] === ':') {\n                        node.raws.between += token[1];\n                        break;\n                      } else {\n                        if (token[0] === 'word' && /\\w/.test(token[1])) {\n                          this.unknownWord([token]);\n                        }\n\n                        node.raws.between += token[1];\n                      }\n                    }\n\n                    if (node.prop[0] === '_' || node.prop[0] === '*') {\n                      node.raws.before += node.prop[0];\n                      node.prop = node.prop.slice(1);\n                    }\n\n                    node.raws.between += this.spacesAndCommentsFromStart(tokens);\n                    this.precheckMissedSemicolon(tokens);\n\n                    for (var i = tokens.length - 1; i > 0; i--) {\n                      token = tokens[i];\n\n                      if (token[1].toLowerCase() === '!important') {\n                        node.important = true;\n                        var string = this.stringFrom(tokens, i);\n                        string = this.spacesFromEnd(tokens) + string;\n                        if (string !== ' !important') node.raws.important = string;\n                        break;\n                      } else if (token[1].toLowerCase() === 'important') {\n                        var cache = tokens.slice(0);\n                        var str = '';\n\n                        for (var j = i; j > 0; j--) {\n                          var _type = cache[j][0];\n\n                          if (str.trim().indexOf('!') === 0 && _type !== 'space') {\n                            break;\n                          }\n\n                          str = cache.pop()[1] + str;\n                        }\n\n                        if (str.trim().indexOf('!') === 0) {\n                          node.important = true;\n                          node.raws.important = str;\n                          tokens = cache;\n                        }\n                      }\n\n                      if (token[0] !== 'space' && token[0] !== 'comment') {\n                        break;\n                      }\n                    }\n\n                    this.raw(node, 'value', tokens);\n                    if (node.value.indexOf(':') !== -1) this.checkMissedSemicolon(tokens);\n                  };\n\n                  _proto.atrule = function atrule(token) {\n                    var node = new _atRule[\"default\"]();\n                    node.name = token[1].slice(1);\n\n                    if (node.name === '') {\n                      this.unnamedAtrule(node, token);\n                    }\n\n                    this.init(node, token[2], token[3]);\n                    var prev;\n                    var shift;\n                    var last = false;\n                    var open = false;\n                    var params = [];\n\n                    while (!this.tokenizer.endOfFile()) {\n                      token = this.tokenizer.nextToken();\n\n                      if (token[0] === ';') {\n                        node.source.end = {\n                          line: token[2],\n                          column: token[3]\n                        };\n                        this.semicolon = true;\n                        break;\n                      } else if (token[0] === '{') {\n                        open = true;\n                        break;\n                      } else if (token[0] === '}') {\n                        if (params.length > 0) {\n                          shift = params.length - 1;\n                          prev = params[shift];\n\n                          while (prev && prev[0] === 'space') {\n                            prev = params[--shift];\n                          }\n\n                          if (prev) {\n                            node.source.end = {\n                              line: prev[4],\n                              column: prev[5]\n                            };\n                          }\n                        }\n\n                        this.end(token);\n                        break;\n                      } else {\n                        params.push(token);\n                      }\n\n                      if (this.tokenizer.endOfFile()) {\n                        last = true;\n                        break;\n                      }\n                    }\n\n                    node.raws.between = this.spacesAndCommentsFromEnd(params);\n\n                    if (params.length) {\n                      node.raws.afterName = this.spacesAndCommentsFromStart(params);\n                      this.raw(node, 'params', params);\n\n                      if (last) {\n                        token = params[params.length - 1];\n                        node.source.end = {\n                          line: token[4],\n                          column: token[5]\n                        };\n                        this.spaces = node.raws.between;\n                        node.raws.between = '';\n                      }\n                    } else {\n                      node.raws.afterName = '';\n                      node.params = '';\n                    }\n\n                    if (open) {\n                      node.nodes = [];\n                      this.current = node;\n                    }\n                  };\n\n                  _proto.end = function end(token) {\n                    if (this.current.nodes && this.current.nodes.length) {\n                      this.current.raws.semicolon = this.semicolon;\n                    }\n\n                    this.semicolon = false;\n                    this.current.raws.after = (this.current.raws.after || '') + this.spaces;\n                    this.spaces = '';\n\n                    if (this.current.parent) {\n                      this.current.source.end = {\n                        line: token[2],\n                        column: token[3]\n                      };\n                      this.current = this.current.parent;\n                    } else {\n                      this.unexpectedClose(token);\n                    }\n                  };\n\n                  _proto.endFile = function endFile() {\n                    if (this.current.parent) this.unclosedBlock();\n\n                    if (this.current.nodes && this.current.nodes.length) {\n                      this.current.raws.semicolon = this.semicolon;\n                    }\n\n                    this.current.raws.after = (this.current.raws.after || '') + this.spaces;\n                  };\n\n                  _proto.freeSemicolon = function freeSemicolon(token) {\n                    this.spaces += token[1];\n\n                    if (this.current.nodes) {\n                      var prev = this.current.nodes[this.current.nodes.length - 1];\n\n                      if (prev && prev.type === 'rule' && !prev.raws.ownSemicolon) {\n                        prev.raws.ownSemicolon = this.spaces;\n                        this.spaces = '';\n                      }\n                    }\n                  } // Helpers\n                  ;\n\n                  _proto.init = function init(node, line, column) {\n                    this.current.push(node);\n                    node.source = {\n                      start: {\n                        line: line,\n                        column: column\n                      },\n                      input: this.input\n                    };\n                    node.raws.before = this.spaces;\n                    this.spaces = '';\n                    if (node.type !== 'comment') this.semicolon = false;\n                  };\n\n                  _proto.raw = function raw(node, prop, tokens) {\n                    var token, type;\n                    var length = tokens.length;\n                    var value = '';\n                    var clean = true;\n                    var next, prev;\n                    var pattern = /^([.|#])?([\\w])+/i;\n\n                    for (var i = 0; i < length; i += 1) {\n                      token = tokens[i];\n                      type = token[0];\n\n                      if (type === 'comment' && node.type === 'rule') {\n                        prev = tokens[i - 1];\n                        next = tokens[i + 1];\n\n                        if (prev[0] !== 'space' && next[0] !== 'space' && pattern.test(prev[1]) && pattern.test(next[1])) {\n                          value += token[1];\n                        } else {\n                          clean = false;\n                        }\n\n                        continue;\n                      }\n\n                      if (type === 'comment' || type === 'space' && i === length - 1) {\n                        clean = false;\n                      } else {\n                        value += token[1];\n                      }\n                    }\n\n                    if (!clean) {\n                      var raw = tokens.reduce(function (all, i) {\n                        return all + i[1];\n                      }, '');\n                      node.raws[prop] = {\n                        value: value,\n                        raw: raw\n                      };\n                    }\n\n                    node[prop] = value;\n                  };\n\n                  _proto.spacesAndCommentsFromEnd = function spacesAndCommentsFromEnd(tokens) {\n                    var lastTokenType;\n                    var spaces = '';\n\n                    while (tokens.length) {\n                      lastTokenType = tokens[tokens.length - 1][0];\n                      if (lastTokenType !== 'space' && lastTokenType !== 'comment') break;\n                      spaces = tokens.pop()[1] + spaces;\n                    }\n\n                    return spaces;\n                  };\n\n                  _proto.spacesAndCommentsFromStart = function spacesAndCommentsFromStart(tokens) {\n                    var next;\n                    var spaces = '';\n\n                    while (tokens.length) {\n                      next = tokens[0][0];\n                      if (next !== 'space' && next !== 'comment') break;\n                      spaces += tokens.shift()[1];\n                    }\n\n                    return spaces;\n                  };\n\n                  _proto.spacesFromEnd = function spacesFromEnd(tokens) {\n                    var lastTokenType;\n                    var spaces = '';\n\n                    while (tokens.length) {\n                      lastTokenType = tokens[tokens.length - 1][0];\n                      if (lastTokenType !== 'space') break;\n                      spaces = tokens.pop()[1] + spaces;\n                    }\n\n                    return spaces;\n                  };\n\n                  _proto.stringFrom = function stringFrom(tokens, from) {\n                    var result = '';\n\n                    for (var i = from; i < tokens.length; i++) {\n                      result += tokens[i][1];\n                    }\n\n                    tokens.splice(from, tokens.length - from);\n                    return result;\n                  };\n\n                  _proto.colon = function colon(tokens) {\n                    var brackets = 0;\n                    var token, type, prev;\n\n                    for (var i = 0; i < tokens.length; i++) {\n                      token = tokens[i];\n                      type = token[0];\n\n                      if (type === '(') {\n                        brackets += 1;\n                      }\n\n                      if (type === ')') {\n                        brackets -= 1;\n                      }\n\n                      if (brackets === 0 && type === ':') {\n                        if (!prev) {\n                          this.doubleColon(token);\n                        } else if (prev[0] === 'word' && prev[1] === 'progid') {\n                          continue;\n                        } else {\n                          return i;\n                        }\n                      }\n\n                      prev = token;\n                    }\n\n                    return false;\n                  } // Errors\n                  ;\n\n                  _proto.unclosedBracket = function unclosedBracket(bracket) {\n                    throw this.input.error('Unclosed bracket', bracket[2], bracket[3]);\n                  };\n\n                  _proto.unknownWord = function unknownWord(tokens) {\n                    throw this.input.error('Unknown word', tokens[0][2], tokens[0][3]);\n                  };\n\n                  _proto.unexpectedClose = function unexpectedClose(token) {\n                    throw this.input.error('Unexpected }', token[2], token[3]);\n                  };\n\n                  _proto.unclosedBlock = function unclosedBlock() {\n                    var pos = this.current.source.start;\n                    throw this.input.error('Unclosed block', pos.line, pos.column);\n                  };\n\n                  _proto.doubleColon = function doubleColon(token) {\n                    throw this.input.error('Double colon', token[2], token[3]);\n                  };\n\n                  _proto.unnamedAtrule = function unnamedAtrule(node, token) {\n                    throw this.input.error('At-rule without name', token[2], token[3]);\n                  };\n\n                  _proto.precheckMissedSemicolon = function precheckMissedSemicolon()\n                  /* tokens */\n                  {// Hook for Safe Parser\n                  };\n\n                  _proto.checkMissedSemicolon = function checkMissedSemicolon(tokens) {\n                    var colon = this.colon(tokens);\n                    if (colon === false) return;\n                    var founded = 0;\n                    var token;\n\n                    for (var j = colon - 1; j >= 0; j--) {\n                      token = tokens[j];\n\n                      if (token[0] !== 'space') {\n                        founded += 1;\n                        if (founded === 2) break;\n                      }\n                    }\n\n                    throw this.input.error('Missed semicolon', token[2], token[3]);\n                  };\n\n                  return Parser;\n                }();\n\n                exports[\"default\"] = Parser;\n                module.exports = exports[\"default\"];\n              }, {\n                \"./at-rule\": 169,\n                \"./comment\": 170,\n                \"./declaration\": 173,\n                \"./root\": 185,\n                \"./rule\": 186,\n                \"./tokenize\": 189\n              }],\n              181: [function (require, module, exports) {\n                \"use strict\";\n\n                exports.__esModule = true;\n                exports[\"default\"] = void 0;\n\n                var _declaration = _interopRequireDefault(require(\"./declaration\"));\n\n                var _processor = _interopRequireDefault(require(\"./processor\"));\n\n                var _stringify = _interopRequireDefault(require(\"./stringify\"));\n\n                var _comment = _interopRequireDefault(require(\"./comment\"));\n\n                var _atRule = _interopRequireDefault(require(\"./at-rule\"));\n\n                var _vendor = _interopRequireDefault(require(\"./vendor\"));\n\n                var _parse = _interopRequireDefault(require(\"./parse\"));\n\n                var _list = _interopRequireDefault(require(\"./list\"));\n\n                var _rule = _interopRequireDefault(require(\"./rule\"));\n\n                var _root = _interopRequireDefault(require(\"./root\"));\n\n                function _interopRequireDefault(obj) {\n                  return obj && obj.__esModule ? obj : {\n                    \"default\": obj\n                  };\n                }\n                /**\n                * Create a new {@link Processor} instance that will apply `plugins`\n                * as CSS processors.\n                *\n                * @param {Array.<Plugin|pluginFunction>|Processor} plugins PostCSS plugins.\n                *        See {@link Processor#use} for plugin format.\n                *\n                * @return {Processor} Processor to process multiple CSS.\n                *\n                * @example\n                * import postcss from 'postcss'\n                *\n                * postcss(plugins).process(css, { from, to }).then(result => {\n                *   console.log(result.css)\n                * })\n                *\n                * @namespace postcss\n                */\n\n\n                function postcss() {\n                  for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {\n                    plugins[_key] = arguments[_key];\n                  }\n\n                  if (plugins.length === 1 && Array.isArray(plugins[0])) {\n                    plugins = plugins[0];\n                  }\n\n                  return new _processor[\"default\"](plugins);\n                }\n                /**\n                * Creates a PostCSS plugin with a standard API.\n                *\n                * The newly-wrapped function will provide both the name and PostCSS\n                * version of the plugin.\n                *\n                * ```js\n                * const processor = postcss([replace])\n                * processor.plugins[0].postcssPlugin  //=> 'postcss-replace'\n                * processor.plugins[0].postcssVersion //=> '6.0.0'\n                * ```\n                *\n                * The plugin function receives 2 arguments: {@link Root}\n                * and {@link Result} instance. The function should mutate the provided\n                * `Root` node. Alternatively, you can create a new `Root` node\n                * and override the `result.root` property.\n                *\n                * ```js\n                * const cleaner = postcss.plugin('postcss-cleaner', () => {\n                *   return (root, result) => {\n                *     result.root = postcss.root()\n                *   }\n                * })\n                * ```\n                *\n                * As a convenience, plugins also expose a `process` method so that you can use\n                * them as standalone tools.\n                *\n                * ```js\n                * cleaner.process(css, processOpts, pluginOpts)\n                * // This is equivalent to:\n                * postcss([ cleaner(pluginOpts) ]).process(css, processOpts)\n                * ```\n                *\n                * Asynchronous plugins should return a `Promise` instance.\n                *\n                * ```js\n                * postcss.plugin('postcss-import', () => {\n                *   return (root, result) => {\n                *     return new Promise( (resolve, reject) => {\n                *       fs.readFile('base.css', (base) => {\n                *         root.prepend(base)\n                *         resolve()\n                *       })\n                *     })\n                *   }\n                * })\n                * ```\n                *\n                * Add warnings using the {@link Node#warn} method.\n                * Send data to other plugins using the {@link Result#messages} array.\n                *\n                * ```js\n                * postcss.plugin('postcss-caniuse-test', () => {\n                *   return (root, result) => {\n                *     root.walkDecls(decl => {\n                *       if (!caniuse.support(decl.prop)) {\n                *         decl.warn(result, 'Some browsers do not support ' + decl.prop)\n                *       }\n                *     })\n                *   }\n                * })\n                * ```\n                *\n                * @param {string} name          PostCSS plugin name. Same as in `name`\n                *                               property in `package.json`. It will be saved\n                *                               in `plugin.postcssPlugin` property.\n                * @param {function} initializer Will receive plugin options\n                *                               and should return {@link pluginFunction}\n                *\n                * @return {Plugin} PostCSS plugin.\n                */\n\n\n                postcss.plugin = function plugin(name, initializer) {\n                  function creator() {\n                    var transformer = initializer.apply(void 0, arguments);\n                    transformer.postcssPlugin = name;\n                    transformer.postcssVersion = new _processor[\"default\"]().version;\n                    return transformer;\n                  }\n\n                  var cache;\n                  Object.defineProperty(creator, 'postcss', {\n                    get: function get() {\n                      if (!cache) cache = creator();\n                      return cache;\n                    }\n                  });\n\n                  creator.process = function (css, processOpts, pluginOpts) {\n                    return postcss([creator(pluginOpts)]).process(css, processOpts);\n                  };\n\n                  return creator;\n                };\n                /**\n                * Default function to convert a node tree into a CSS string.\n                *\n                * @param {Node} node       Start node for stringifing. Usually {@link Root}.\n                * @param {builder} builder Function to concatenate CSS from node’s parts\n                *                          or generate string and source map.\n                *\n                * @return {void}\n                *\n                * @function\n                */\n\n\n                postcss.stringify = _stringify[\"default\"];\n                /**\n                * Parses source css and returns a new {@link Root} node,\n                * which contains the source CSS nodes.\n                *\n                * @param {string|toString} css   String with input CSS or any object\n                *                                with toString() method, like a Buffer\n                * @param {processOptions} [opts] Options with only `from` and `map` keys.\n                *\n                * @return {Root} PostCSS AST.\n                *\n                * @example\n                * // Simple CSS concatenation with source map support\n                * const root1 = postcss.parse(css1, { from: file1 })\n                * const root2 = postcss.parse(css2, { from: file2 })\n                * root1.append(root2).toResult().css\n                *\n                * @function\n                */\n\n                postcss.parse = _parse[\"default\"];\n                /**\n                * Contains the {@link vendor} module.\n                *\n                * @type {vendor}\n                *\n                * @example\n                * postcss.vendor.unprefixed('-moz-tab') //=> ['tab']\n                */\n\n                postcss.vendor = _vendor[\"default\"];\n                /**\n                * Contains the {@link list} module.\n                *\n                * @member {list}\n                *\n                * @example\n                * postcss.list.space('5px calc(10% + 5px)') //=> ['5px', 'calc(10% + 5px)']\n                */\n\n                postcss.list = _list[\"default\"];\n                /**\n                * Creates a new {@link Comment} node.\n                *\n                * @param {object} [defaults] Properties for the new node.\n                *\n                * @return {Comment} New comment node\n                *\n                * @example\n                * postcss.comment({ text: 'test' })\n                */\n\n                postcss.comment = function (defaults) {\n                  return new _comment[\"default\"](defaults);\n                };\n                /**\n                * Creates a new {@link AtRule} node.\n                *\n                * @param {object} [defaults] Properties for the new node.\n                *\n                * @return {AtRule} new at-rule node\n                *\n                * @example\n                * postcss.atRule({ name: 'charset' }).toString() //=> \"@charset\"\n                */\n\n\n                postcss.atRule = function (defaults) {\n                  return new _atRule[\"default\"](defaults);\n                };\n                /**\n                * Creates a new {@link Declaration} node.\n                *\n                * @param {object} [defaults] Properties for the new node.\n                *\n                * @return {Declaration} new declaration node\n                *\n                * @example\n                * postcss.decl({ prop: 'color', value: 'red' }).toString() //=> \"color: red\"\n                */\n\n\n                postcss.decl = function (defaults) {\n                  return new _declaration[\"default\"](defaults);\n                };\n                /**\n                * Creates a new {@link Rule} node.\n                *\n                * @param {object} [defaults] Properties for the new node.\n                *\n                * @return {Rule} new rule node\n                *\n                * @example\n                * postcss.rule({ selector: 'a' }).toString() //=> \"a {\\n}\"\n                */\n\n\n                postcss.rule = function (defaults) {\n                  return new _rule[\"default\"](defaults);\n                };\n                /**\n                * Creates a new {@link Root} node.\n                *\n                * @param {object} [defaults] Properties for the new node.\n                *\n                * @return {Root} new root node.\n                *\n                * @example\n                * postcss.root({ after: '\\n' }).toString() //=> \"\\n\"\n                */\n\n\n                postcss.root = function (defaults) {\n                  return new _root[\"default\"](defaults);\n                };\n\n                var _default = postcss;\n                exports[\"default\"] = _default;\n                module.exports = exports[\"default\"];\n              }, {\n                \"./at-rule\": 169,\n                \"./comment\": 170,\n                \"./declaration\": 173,\n                \"./list\": 176,\n                \"./parse\": 179,\n                \"./processor\": 183,\n                \"./root\": 185,\n                \"./rule\": 186,\n                \"./stringify\": 188,\n                \"./vendor\": 190\n              }],\n              182: [function (require, module, exports) {\n                (function (Buffer) {\n                  \"use strict\";\n\n                  exports.__esModule = true;\n                  exports[\"default\"] = void 0;\n\n                  var _sourceMap = _interopRequireDefault(require(\"source-map\"));\n\n                  var _path = _interopRequireDefault(require(\"path\"));\n\n                  var _fs = _interopRequireDefault(require(\"fs\"));\n\n                  function _interopRequireDefault(obj) {\n                    return obj && obj.__esModule ? obj : {\n                      \"default\": obj\n                    };\n                  }\n\n                  function fromBase64(str) {\n                    if (Buffer) {\n                      return Buffer.from(str, 'base64').toString();\n                    } else {\n                      return window.atob(str);\n                    }\n                  }\n                  /**\n                  * Source map information from input CSS.\n                  * For example, source map after Sass compiler.\n                  *\n                  * This class will automatically find source map in input CSS or in file system\n                  * near input file (according `from` option).\n                  *\n                  * @example\n                  * const root = postcss.parse(css, { from: 'a.sass.css' })\n                  * root.input.map //=> PreviousMap\n                  */\n\n\n                  var PreviousMap = /*#__PURE__*/function () {\n                    /**\n                    * @param {string}         css    Input CSS source.\n                    * @param {processOptions} [opts] {@link Processor#process} options.\n                    */\n                    function PreviousMap(css, opts) {\n                      this.loadAnnotation(css);\n                      /**\n                      * Was source map inlined by data-uri to input CSS.\n                      *\n                      * @type {boolean}\n                      */\n\n                      this.inline = this.startWith(this.annotation, 'data:');\n                      var prev = opts.map ? opts.map.prev : undefined;\n                      var text = this.loadMap(opts.from, prev);\n                      if (text) this.text = text;\n                    }\n                    /**\n                    * Create a instance of `SourceMapGenerator` class\n                    * from the `source-map` library to work with source map information.\n                    *\n                    * It is lazy method, so it will create object only on first call\n                    * and then it will use cache.\n                    *\n                    * @return {SourceMapGenerator} Object with source map information.\n                    */\n\n\n                    var _proto = PreviousMap.prototype;\n\n                    _proto.consumer = function consumer() {\n                      if (!this.consumerCache) {\n                        this.consumerCache = new _sourceMap[\"default\"].SourceMapConsumer(this.text);\n                      }\n\n                      return this.consumerCache;\n                    }\n                    /**\n                    * Does source map contains `sourcesContent` with input source text.\n                    *\n                    * @return {boolean} Is `sourcesContent` present.\n                    */\n                    ;\n\n                    _proto.withContent = function withContent() {\n                      return !!(this.consumer().sourcesContent && this.consumer().sourcesContent.length > 0);\n                    };\n\n                    _proto.startWith = function startWith(string, start) {\n                      if (!string) return false;\n                      return string.substr(0, start.length) === start;\n                    };\n\n                    _proto.getAnnotationURL = function getAnnotationURL(sourceMapString) {\n                      return sourceMapString.match(/\\/\\*\\s*# sourceMappingURL=(.*)\\s*\\*\\//)[1].trim();\n                    };\n\n                    _proto.loadAnnotation = function loadAnnotation(css) {\n                      var annotations = css.match(/\\/\\*\\s*# sourceMappingURL=(.*)\\s*\\*\\//mg);\n\n                      if (annotations && annotations.length > 0) {\n                        // Locate the last sourceMappingURL to avoid picking up\n                        // sourceMappingURLs from comments, strings, etc.\n                        var lastAnnotation = annotations[annotations.length - 1];\n\n                        if (lastAnnotation) {\n                          this.annotation = this.getAnnotationURL(lastAnnotation);\n                        }\n                      }\n                    };\n\n                    _proto.decodeInline = function decodeInline(text) {\n                      var baseCharsetUri = /^data:application\\/json;charset=utf-?8;base64,/;\n                      var baseUri = /^data:application\\/json;base64,/;\n                      var uri = 'data:application/json,';\n\n                      if (this.startWith(text, uri)) {\n                        return decodeURIComponent(text.substr(uri.length));\n                      }\n\n                      if (baseCharsetUri.test(text) || baseUri.test(text)) {\n                        return fromBase64(text.substr(RegExp.lastMatch.length));\n                      }\n\n                      var encoding = text.match(/data:application\\/json;([^,]+),/)[1];\n                      throw new Error('Unsupported source map encoding ' + encoding);\n                    };\n\n                    _proto.loadMap = function loadMap(file, prev) {\n                      if (prev === false) return false;\n\n                      if (prev) {\n                        if (typeof prev === 'string') {\n                          return prev;\n                        } else if (typeof prev === 'function') {\n                          var prevPath = prev(file);\n\n                          if (prevPath && _fs[\"default\"].existsSync && _fs[\"default\"].existsSync(prevPath)) {\n                            return _fs[\"default\"].readFileSync(prevPath, 'utf-8').toString().trim();\n                          } else {\n                            throw new Error('Unable to load previous source map: ' + prevPath.toString());\n                          }\n                        } else if (prev instanceof _sourceMap[\"default\"].SourceMapConsumer) {\n                          return _sourceMap[\"default\"].SourceMapGenerator.fromSourceMap(prev).toString();\n                        } else if (prev instanceof _sourceMap[\"default\"].SourceMapGenerator) {\n                          return prev.toString();\n                        } else if (this.isMap(prev)) {\n                          return JSON.stringify(prev);\n                        } else {\n                          throw new Error('Unsupported previous source map format: ' + prev.toString());\n                        }\n                      } else if (this.inline) {\n                        return this.decodeInline(this.annotation);\n                      } else if (this.annotation) {\n                        var map = this.annotation;\n                        if (file) map = _path[\"default\"].join(_path[\"default\"].dirname(file), map);\n                        this.root = _path[\"default\"].dirname(map);\n\n                        if (_fs[\"default\"].existsSync && _fs[\"default\"].existsSync(map)) {\n                          return _fs[\"default\"].readFileSync(map, 'utf-8').toString().trim();\n                        } else {\n                          return false;\n                        }\n                      }\n                    };\n\n                    _proto.isMap = function isMap(map) {\n                      if (_typeof(map) !== 'object') return false;\n                      return typeof map.mappings === 'string' || typeof map._mappings === 'string';\n                    };\n\n                    return PreviousMap;\n                  }();\n\n                  var _default = PreviousMap;\n                  exports[\"default\"] = _default;\n                  module.exports = exports[\"default\"];\n                }).call(this, require(\"buffer\").Buffer);\n              }, {\n                \"buffer\": 3,\n                \"fs\": 2,\n                \"path\": 168,\n                \"source-map\": 208\n              }],\n              183: [function (require, module, exports) {\n                (function (process) {\n                  \"use strict\";\n\n                  exports.__esModule = true;\n                  exports[\"default\"] = void 0;\n\n                  var _lazyResult = _interopRequireDefault(require(\"./lazy-result\"));\n\n                  function _interopRequireDefault(obj) {\n                    return obj && obj.__esModule ? obj : {\n                      \"default\": obj\n                    };\n                  }\n                  /**\n                  * Contains plugins to process CSS. Create one `Processor` instance,\n                  * initialize its plugins, and then use that instance on numerous CSS files.\n                  *\n                  * @example\n                  * const processor = postcss([autoprefixer, precss])\n                  * processor.process(css1).then(result => console.log(result.css))\n                  * processor.process(css2).then(result => console.log(result.css))\n                  */\n\n\n                  var Processor = /*#__PURE__*/function () {\n                    /**\n                    * @param {Array.<Plugin|pluginFunction>|Processor} plugins PostCSS plugins.\n                    *        See {@link Processor#use} for plugin format.\n                    */\n                    function Processor(plugins) {\n                      if (plugins === void 0) {\n                        plugins = [];\n                      }\n                      /**\n                      * Current PostCSS version.\n                      *\n                      * @type {string}\n                      *\n                      * @example\n                      * if (result.processor.version.split('.')[0] !== '6') {\n                      *   throw new Error('This plugin works only with PostCSS 6')\n                      * }\n                      */\n\n\n                      this.version = '7.0.31';\n                      /**\n                      * Plugins added to this processor.\n                      *\n                      * @type {pluginFunction[]}\n                      *\n                      * @example\n                      * const processor = postcss([autoprefixer, precss])\n                      * processor.plugins.length //=> 2\n                      */\n\n                      this.plugins = this.normalize(plugins);\n                    }\n                    /**\n                    * Adds a plugin to be used as a CSS processor.\n                    *\n                    * PostCSS plugin can be in 4 formats:\n                    * * A plugin created by {@link postcss.plugin} method.\n                    * * A function. PostCSS will pass the function a @{link Root}\n                    *   as the first argument and current {@link Result} instance\n                    *   as the second.\n                    * * An object with a `postcss` method. PostCSS will use that method\n                    *   as described in #2.\n                    * * Another {@link Processor} instance. PostCSS will copy plugins\n                    *   from that instance into this one.\n                    *\n                    * Plugins can also be added by passing them as arguments when creating\n                    * a `postcss` instance (see [`postcss(plugins)`]).\n                    *\n                    * Asynchronous plugins should return a `Promise` instance.\n                    *\n                    * @param {Plugin|pluginFunction|Processor} plugin PostCSS plugin\n                    *                                                 or {@link Processor}\n                    *                                                 with plugins.\n                    *\n                    * @example\n                    * const processor = postcss()\n                    *   .use(autoprefixer)\n                    *   .use(precss)\n                    *\n                    * @return {Processes} Current processor to make methods chain.\n                    */\n\n\n                    var _proto = Processor.prototype;\n\n                    _proto.use = function use(plugin) {\n                      this.plugins = this.plugins.concat(this.normalize([plugin]));\n                      return this;\n                    }\n                    /**\n                    * Parses source CSS and returns a {@link LazyResult} Promise proxy.\n                    * Because some plugins can be asynchronous it doesn’t make\n                    * any transformations. Transformations will be applied\n                    * in the {@link LazyResult} methods.\n                    *\n                    * @param {string|toString|Result} css String with input CSS or any object\n                    *                                     with a `toString()` method,\n                    *                                     like a Buffer. Optionally, send\n                    *                                     a {@link Result} instance\n                    *                                     and the processor will take\n                    *                                     the {@link Root} from it.\n                    * @param {processOptions} [opts]      Options.\n                    *\n                    * @return {LazyResult} Promise proxy.\n                    *\n                    * @example\n                    * processor.process(css, { from: 'a.css', to: 'a.out.css' })\n                    *   .then(result => {\n                    *      console.log(result.css)\n                    *   })\n                    */\n                    ;\n\n                    _proto.process = function (_process) {\n                      function process(_x) {\n                        return _process.apply(this, arguments);\n                      }\n\n                      process.toString = function () {\n                        return _process.toString();\n                      };\n\n                      return process;\n                    }(function (css, opts) {\n                      if (opts === void 0) {\n                        opts = {};\n                      }\n\n                      if (this.plugins.length === 0 && opts.parser === opts.stringifier) {\n                        if (process.env.NODE_ENV !== 'production') {\n                          if (typeof console !== 'undefined' && console.warn) {\n                            console.warn('You did not set any plugins, parser, or stringifier. ' + 'Right now, PostCSS does nothing. Pick plugins for your case ' + 'on https://www.postcss.parts/ and use them in postcss.config.js.');\n                          }\n                        }\n                      }\n\n                      return new _lazyResult[\"default\"](this, css, opts);\n                    });\n\n                    _proto.normalize = function normalize(plugins) {\n                      var normalized = [];\n\n                      for (var _iterator = plugins, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n                        var _ref;\n\n                        if (_isArray) {\n                          if (_i >= _iterator.length) break;\n                          _ref = _iterator[_i++];\n                        } else {\n                          _i = _iterator.next();\n                          if (_i.done) break;\n                          _ref = _i.value;\n                        }\n\n                        var i = _ref;\n                        if (i.postcss) i = i.postcss;\n\n                        if (_typeof(i) === 'object' && Array.isArray(i.plugins)) {\n                          normalized = normalized.concat(i.plugins);\n                        } else if (typeof i === 'function') {\n                          normalized.push(i);\n                        } else if (_typeof(i) === 'object' && (i.parse || i.stringify)) {\n                          if (process.env.NODE_ENV !== 'production') {\n                            throw new Error('PostCSS syntaxes cannot be used as plugins. Instead, please use ' + 'one of the syntax/parser/stringifier options as outlined ' + 'in your PostCSS runner documentation.');\n                          }\n                        } else {\n                          throw new Error(i + ' is not a PostCSS plugin');\n                        }\n                      }\n\n                      return normalized;\n                    };\n\n                    return Processor;\n                  }();\n\n                  var _default = Processor;\n                  /**\n                  * @callback builder\n                  * @param {string} part          Part of generated CSS connected to this node.\n                  * @param {Node}   node          AST node.\n                  * @param {\"start\"|\"end\"} [type] Node’s part type.\n                  */\n\n                  /**\n                  * @callback parser\n                  *\n                  * @param {string|toString} css   String with input CSS or any object\n                  *                                with toString() method, like a Buffer.\n                  * @param {processOptions} [opts] Options with only `from` and `map` keys.\n                  *\n                  * @return {Root} PostCSS AST\n                  */\n\n                  /**\n                  * @callback stringifier\n                  *\n                  * @param {Node} node       Start node for stringifing. Usually {@link Root}.\n                  * @param {builder} builder Function to concatenate CSS from node’s parts\n                  *                          or generate string and source map.\n                  *\n                  * @return {void}\n                  */\n\n                  /**\n                  * @typedef {object} syntax\n                  * @property {parser} parse          Function to generate AST by string.\n                  * @property {stringifier} stringify Function to generate string by AST.\n                  */\n\n                  /**\n                  * @typedef {object} toString\n                  * @property {function} toString\n                  */\n\n                  /**\n                  * @callback pluginFunction\n                  * @param {Root} root     Parsed input CSS.\n                  * @param {Result} result Result to set warnings or check other plugins.\n                  */\n\n                  /**\n                  * @typedef {object} Plugin\n                  * @property {function} postcss PostCSS plugin function.\n                  */\n\n                  /**\n                  * @typedef {object} processOptions\n                  * @property {string} from             The path of the CSS source file.\n                  *                                     You should always set `from`,\n                  *                                     because it is used in source map\n                  *                                     generation and syntax error messages.\n                  * @property {string} to               The path where you’ll put the output\n                  *                                     CSS file. You should always set `to`\n                  *                                     to generate correct source maps.\n                  * @property {parser} parser           Function to generate AST by string.\n                  * @property {stringifier} stringifier Class to generate string by AST.\n                  * @property {syntax} syntax           Object with `parse` and `stringify`.\n                  * @property {object} map              Source map options.\n                  * @property {boolean} map.inline                    Does source map should\n                  *                                                   be embedded in the output\n                  *                                                   CSS as a base64-encoded\n                  *                                                   comment.\n                  * @property {string|object|false|function} map.prev Source map content\n                  *                                                   from a previous\n                  *                                                   processing step\n                  *                                                   (for example, Sass).\n                  *                                                   PostCSS will try to find\n                  *                                                   previous map automatically,\n                  *                                                   so you could disable it by\n                  *                                                   `false` value.\n                  * @property {boolean} map.sourcesContent            Does PostCSS should set\n                  *                                                   the origin content to map.\n                  * @property {string|false} map.annotation           Does PostCSS should set\n                  *                                                   annotation comment to map.\n                  * @property {string} map.from                       Override `from` in map’s\n                  *                                                   sources`.\n                  */\n\n                  exports[\"default\"] = _default;\n                  module.exports = exports[\"default\"];\n                }).call(this, require('_process'));\n              }, {\n                \"./lazy-result\": 175,\n                \"_process\": 193\n              }],\n              184: [function (require, module, exports) {\n                \"use strict\";\n\n                exports.__esModule = true;\n                exports[\"default\"] = void 0;\n\n                var _warning = _interopRequireDefault(require(\"./warning\"));\n\n                function _interopRequireDefault(obj) {\n                  return obj && obj.__esModule ? obj : {\n                    \"default\": obj\n                  };\n                }\n\n                function _defineProperties(target, props) {\n                  for (var i = 0; i < props.length; i++) {\n                    var descriptor = props[i];\n                    descriptor.enumerable = descriptor.enumerable || false;\n                    descriptor.configurable = true;\n                    if (\"value\" in descriptor) descriptor.writable = true;\n                    Object.defineProperty(target, descriptor.key, descriptor);\n                  }\n                }\n\n                function _createClass(Constructor, protoProps, staticProps) {\n                  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n                  if (staticProps) _defineProperties(Constructor, staticProps);\n                  return Constructor;\n                }\n                /**\n                * Provides the result of the PostCSS transformations.\n                *\n                * A Result instance is returned by {@link LazyResult#then}\n                * or {@link Root#toResult} methods.\n                *\n                * @example\n                * postcss([autoprefixer]).process(css).then(result => {\n                *  console.log(result.css)\n                * })\n                *\n                * @example\n                * const result2 = postcss.parse(css).toResult()\n                */\n\n\n                var Result = /*#__PURE__*/function () {\n                  /**\n                  * @param {Processor} processor Processor used for this transformation.\n                  * @param {Root}      root      Root node after all transformations.\n                  * @param {processOptions} opts Options from the {@link Processor#process}\n                  *                              or {@link Root#toResult}.\n                  */\n                  function Result(processor, root, opts) {\n                    /**\n                    * The Processor instance used for this transformation.\n                    *\n                    * @type {Processor}\n                    *\n                    * @example\n                    * for (const plugin of result.processor.plugins) {\n                    *   if (plugin.postcssPlugin === 'postcss-bad') {\n                    *     throw 'postcss-good is incompatible with postcss-bad'\n                    *   }\n                    * })\n                    */\n                    this.processor = processor;\n                    /**\n                    * Contains messages from plugins (e.g., warnings or custom messages).\n                    * Each message should have type and plugin properties.\n                    *\n                    * @type {Message[]}\n                    *\n                    * @example\n                    * postcss.plugin('postcss-min-browser', () => {\n                    *   return (root, result) => {\n                    *     const browsers = detectMinBrowsersByCanIUse(root)\n                    *     result.messages.push({\n                    *       type: 'min-browser',\n                    *       plugin: 'postcss-min-browser',\n                    *       browsers\n                    *     })\n                    *   }\n                    * })\n                    */\n\n                    this.messages = [];\n                    /**\n                    * Root node after all transformations.\n                    *\n                    * @type {Root}\n                    *\n                    * @example\n                    * root.toResult().root === root\n                    */\n\n                    this.root = root;\n                    /**\n                    * Options from the {@link Processor#process} or {@link Root#toResult} call\n                    * that produced this Result instance.\n                    *\n                    * @type {processOptions}\n                    *\n                    * @example\n                    * root.toResult(opts).opts === opts\n                    */\n\n                    this.opts = opts;\n                    /**\n                    * A CSS string representing of {@link Result#root}.\n                    *\n                    * @type {string}\n                    *\n                    * @example\n                    * postcss.parse('a{}').toResult().css //=> \"a{}\"\n                    */\n\n                    this.css = undefined;\n                    /**\n                    * An instance of `SourceMapGenerator` class from the `source-map` library,\n                    * representing changes to the {@link Result#root} instance.\n                    *\n                    * @type {SourceMapGenerator}\n                    *\n                    * @example\n                    * result.map.toJSON() //=> { version: 3, file: 'a.css', … }\n                    *\n                    * @example\n                    * if (result.map) {\n                    *   fs.writeFileSync(result.opts.to + '.map', result.map.toString())\n                    * }\n                    */\n\n                    this.map = undefined;\n                  }\n                  /**\n                  * Returns for @{link Result#css} content.\n                  *\n                  * @example\n                  * result + '' === result.css\n                  *\n                  * @return {string} String representing of {@link Result#root}.\n                  */\n\n\n                  var _proto = Result.prototype;\n\n                  _proto.toString = function toString() {\n                    return this.css;\n                  }\n                  /**\n                  * Creates an instance of {@link Warning} and adds it\n                  * to {@link Result#messages}.\n                  *\n                  * @param {string} text        Warning message.\n                  * @param {Object} [opts]      Warning options.\n                  * @param {Node}   opts.node   CSS node that caused the warning.\n                  * @param {string} opts.word   Word in CSS source that caused the warning.\n                  * @param {number} opts.index  Index in CSS node string that caused\n                  *                             the warning.\n                  * @param {string} opts.plugin Name of the plugin that created\n                  *                             this warning. {@link Result#warn} fills\n                  *                             this property automatically.\n                  *\n                  * @return {Warning} Created warning.\n                  */\n                  ;\n\n                  _proto.warn = function warn(text, opts) {\n                    if (opts === void 0) {\n                      opts = {};\n                    }\n\n                    if (!opts.plugin) {\n                      if (this.lastPlugin && this.lastPlugin.postcssPlugin) {\n                        opts.plugin = this.lastPlugin.postcssPlugin;\n                      }\n                    }\n\n                    var warning = new _warning[\"default\"](text, opts);\n                    this.messages.push(warning);\n                    return warning;\n                  }\n                  /**\n                  * Returns warnings from plugins. Filters {@link Warning} instances\n                  * from {@link Result#messages}.\n                  *\n                  * @example\n                  * result.warnings().forEach(warn => {\n                  *   console.warn(warn.toString())\n                  * })\n                  *\n                  * @return {Warning[]} Warnings from plugins.\n                  */\n                  ;\n\n                  _proto.warnings = function warnings() {\n                    return this.messages.filter(function (i) {\n                      return i.type === 'warning';\n                    });\n                  }\n                  /**\n                  * An alias for the {@link Result#css} property.\n                  * Use it with syntaxes that generate non-CSS output.\n                  *\n                  * @type {string}\n                  *\n                  * @example\n                  * result.css === result.content\n                  */\n                  ;\n\n                  _createClass(Result, [{\n                    key: \"content\",\n                    get: function get() {\n                      return this.css;\n                    }\n                  }]);\n\n                  return Result;\n                }();\n\n                var _default = Result;\n                /**\n                * @typedef  {object} Message\n                * @property {string} type   Message type.\n                * @property {string} plugin Source PostCSS plugin name.\n                */\n\n                exports[\"default\"] = _default;\n                module.exports = exports[\"default\"];\n              }, {\n                \"./warning\": 192\n              }],\n              185: [function (require, module, exports) {\n                \"use strict\";\n\n                exports.__esModule = true;\n                exports[\"default\"] = void 0;\n\n                var _container = _interopRequireDefault(require(\"./container\"));\n\n                function _interopRequireDefault(obj) {\n                  return obj && obj.__esModule ? obj : {\n                    \"default\": obj\n                  };\n                }\n\n                function _inheritsLoose(subClass, superClass) {\n                  subClass.prototype = Object.create(superClass.prototype);\n                  subClass.prototype.constructor = subClass;\n                  subClass.__proto__ = superClass;\n                }\n                /**\n                * Represents a CSS file and contains all its parsed nodes.\n                *\n                * @extends Container\n                *\n                * @example\n                * const root = postcss.parse('a{color:black} b{z-index:2}')\n                * root.type         //=> 'root'\n                * root.nodes.length //=> 2\n                */\n\n\n                var Root = /*#__PURE__*/function (_Container) {\n                  _inheritsLoose(Root, _Container);\n\n                  function Root(defaults) {\n                    var _this;\n\n                    _this = _Container.call(this, defaults) || this;\n                    _this.type = 'root';\n                    if (!_this.nodes) _this.nodes = [];\n                    return _this;\n                  }\n\n                  var _proto = Root.prototype;\n\n                  _proto.removeChild = function removeChild(child, ignore) {\n                    var index = this.index(child);\n\n                    if (!ignore && index === 0 && this.nodes.length > 1) {\n                      this.nodes[1].raws.before = this.nodes[index].raws.before;\n                    }\n\n                    return _Container.prototype.removeChild.call(this, child);\n                  };\n\n                  _proto.normalize = function normalize(child, sample, type) {\n                    var nodes = _Container.prototype.normalize.call(this, child);\n\n                    if (sample) {\n                      if (type === 'prepend') {\n                        if (this.nodes.length > 1) {\n                          sample.raws.before = this.nodes[1].raws.before;\n                        } else {\n                          delete sample.raws.before;\n                        }\n                      } else if (this.first !== sample) {\n                        for (var _iterator = nodes, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n                          var _ref;\n\n                          if (_isArray) {\n                            if (_i >= _iterator.length) break;\n                            _ref = _iterator[_i++];\n                          } else {\n                            _i = _iterator.next();\n                            if (_i.done) break;\n                            _ref = _i.value;\n                          }\n\n                          var node = _ref;\n                          node.raws.before = sample.raws.before;\n                        }\n                      }\n                    }\n\n                    return nodes;\n                  }\n                  /**\n                  * Returns a {@link Result} instance representing the root’s CSS.\n                  *\n                  * @param {processOptions} [opts] Options with only `to` and `map` keys.\n                  *\n                  * @return {Result} Result with current root’s CSS.\n                  *\n                  * @example\n                  * const root1 = postcss.parse(css1, { from: 'a.css' })\n                  * const root2 = postcss.parse(css2, { from: 'b.css' })\n                  * root1.append(root2)\n                  * const result = root1.toResult({ to: 'all.css', map: true })\n                  */\n                  ;\n\n                  _proto.toResult = function toResult(opts) {\n                    if (opts === void 0) {\n                      opts = {};\n                    }\n\n                    var LazyResult = require('./lazy-result');\n\n                    var Processor = require('./processor');\n\n                    var lazy = new LazyResult(new Processor(), this, opts);\n                    return lazy.stringify();\n                  }\n                  /**\n                  * @memberof Root#\n                  * @member {object} raws Information to generate byte-to-byte equal\n                  *                       node string as it was in the origin input.\n                  *\n                  * Every parser saves its own properties,\n                  * but the default CSS parser uses:\n                  *\n                  * * `after`: the space symbols after the last child to the end of file.\n                  * * `semicolon`: is the last child has an (optional) semicolon.\n                  *\n                  * @example\n                  * postcss.parse('a {}\\n').raws //=> { after: '\\n' }\n                  * postcss.parse('a {}').raws   //=> { after: '' }\n                  */\n                  ;\n\n                  return Root;\n                }(_container[\"default\"]);\n\n                var _default = Root;\n                exports[\"default\"] = _default;\n                module.exports = exports[\"default\"];\n              }, {\n                \"./container\": 171,\n                \"./lazy-result\": 175,\n                \"./processor\": 183\n              }],\n              186: [function (require, module, exports) {\n                \"use strict\";\n\n                exports.__esModule = true;\n                exports[\"default\"] = void 0;\n\n                var _container = _interopRequireDefault(require(\"./container\"));\n\n                var _list = _interopRequireDefault(require(\"./list\"));\n\n                function _interopRequireDefault(obj) {\n                  return obj && obj.__esModule ? obj : {\n                    \"default\": obj\n                  };\n                }\n\n                function _defineProperties(target, props) {\n                  for (var i = 0; i < props.length; i++) {\n                    var descriptor = props[i];\n                    descriptor.enumerable = descriptor.enumerable || false;\n                    descriptor.configurable = true;\n                    if (\"value\" in descriptor) descriptor.writable = true;\n                    Object.defineProperty(target, descriptor.key, descriptor);\n                  }\n                }\n\n                function _createClass(Constructor, protoProps, staticProps) {\n                  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n                  if (staticProps) _defineProperties(Constructor, staticProps);\n                  return Constructor;\n                }\n\n                function _inheritsLoose(subClass, superClass) {\n                  subClass.prototype = Object.create(superClass.prototype);\n                  subClass.prototype.constructor = subClass;\n                  subClass.__proto__ = superClass;\n                }\n                /**\n                * Represents a CSS rule: a selector followed by a declaration block.\n                *\n                * @extends Container\n                *\n                * @example\n                * const root = postcss.parse('a{}')\n                * const rule = root.first\n                * rule.type       //=> 'rule'\n                * rule.toString() //=> 'a{}'\n                */\n\n\n                var Rule = /*#__PURE__*/function (_Container) {\n                  _inheritsLoose(Rule, _Container);\n\n                  function Rule(defaults) {\n                    var _this;\n\n                    _this = _Container.call(this, defaults) || this;\n                    _this.type = 'rule';\n                    if (!_this.nodes) _this.nodes = [];\n                    return _this;\n                  }\n                  /**\n                  * An array containing the rule’s individual selectors.\n                  * Groups of selectors are split at commas.\n                  *\n                  * @type {string[]}\n                  *\n                  * @example\n                  * const root = postcss.parse('a, b { }')\n                  * const rule = root.first\n                  *\n                  * rule.selector  //=> 'a, b'\n                  * rule.selectors //=> ['a', 'b']\n                  *\n                  * rule.selectors = ['a', 'strong']\n                  * rule.selector //=> 'a, strong'\n                  */\n\n\n                  _createClass(Rule, [{\n                    key: \"selectors\",\n                    get: function get() {\n                      return _list[\"default\"].comma(this.selector);\n                    },\n                    set: function set(values) {\n                      var match = this.selector ? this.selector.match(/,\\s*/) : null;\n                      var sep = match ? match[0] : ',' + this.raw('between', 'beforeOpen');\n                      this.selector = values.join(sep);\n                    }\n                    /**\n                    * @memberof Rule#\n                    * @member {string} selector The rule’s full selector represented\n                    *                           as a string.\n                    *\n                    * @example\n                    * const root = postcss.parse('a, b { }')\n                    * const rule = root.first\n                    * rule.selector //=> 'a, b'\n                    */\n\n                    /**\n                    * @memberof Rule#\n                    * @member {object} raws Information to generate byte-to-byte equal\n                    *                       node string as it was in the origin input.\n                    *\n                    * Every parser saves its own properties,\n                    * but the default CSS parser uses:\n                    *\n                    * * `before`: the space symbols before the node. It also stores `*`\n                    *   and `_` symbols before the declaration (IE hack).\n                    * * `after`: the space symbols after the last child of the node\n                    *   to the end of the node.\n                    * * `between`: the symbols between the property and value\n                    *   for declarations, selector and `{` for rules, or last parameter\n                    *   and `{` for at-rules.\n                    * * `semicolon`: contains `true` if the last child has\n                    *   an (optional) semicolon.\n                    * * `ownSemicolon`: contains `true` if there is semicolon after rule.\n                    *\n                    * PostCSS cleans selectors from comments and extra spaces,\n                    * but it stores origin content in raws properties.\n                    * As such, if you don’t change a declaration’s value,\n                    * PostCSS will use the raw value with comments.\n                    *\n                    * @example\n                    * const root = postcss.parse('a {\\n  color:black\\n}')\n                    * root.first.first.raws //=> { before: '', between: ' ', after: '\\n' }\n                    */\n\n                  }]);\n\n                  return Rule;\n                }(_container[\"default\"]);\n\n                var _default = Rule;\n                exports[\"default\"] = _default;\n                module.exports = exports[\"default\"];\n              }, {\n                \"./container\": 171,\n                \"./list\": 176\n              }],\n              187: [function (require, module, exports) {\n                \"use strict\";\n\n                exports.__esModule = true;\n                exports[\"default\"] = void 0;\n                var DEFAULT_RAW = {\n                  colon: ': ',\n                  indent: '    ',\n                  beforeDecl: '\\n',\n                  beforeRule: '\\n',\n                  beforeOpen: ' ',\n                  beforeClose: '\\n',\n                  beforeComment: '\\n',\n                  after: '\\n',\n                  emptyBody: '',\n                  commentLeft: ' ',\n                  commentRight: ' ',\n                  semicolon: false\n                };\n\n                function capitalize(str) {\n                  return str[0].toUpperCase() + str.slice(1);\n                }\n\n                var Stringifier = /*#__PURE__*/function () {\n                  function Stringifier(builder) {\n                    this.builder = builder;\n                  }\n\n                  var _proto = Stringifier.prototype;\n\n                  _proto.stringify = function stringify(node, semicolon) {\n                    this[node.type](node, semicolon);\n                  };\n\n                  _proto.root = function root(node) {\n                    this.body(node);\n                    if (node.raws.after) this.builder(node.raws.after);\n                  };\n\n                  _proto.comment = function comment(node) {\n                    var left = this.raw(node, 'left', 'commentLeft');\n                    var right = this.raw(node, 'right', 'commentRight');\n                    this.builder('/*' + left + node.text + right + '*/', node);\n                  };\n\n                  _proto.decl = function decl(node, semicolon) {\n                    var between = this.raw(node, 'between', 'colon');\n                    var string = node.prop + between + this.rawValue(node, 'value');\n\n                    if (node.important) {\n                      string += node.raws.important || ' !important';\n                    }\n\n                    if (semicolon) string += ';';\n                    this.builder(string, node);\n                  };\n\n                  _proto.rule = function rule(node) {\n                    this.block(node, this.rawValue(node, 'selector'));\n\n                    if (node.raws.ownSemicolon) {\n                      this.builder(node.raws.ownSemicolon, node, 'end');\n                    }\n                  };\n\n                  _proto.atrule = function atrule(node, semicolon) {\n                    var name = '@' + node.name;\n                    var params = node.params ? this.rawValue(node, 'params') : '';\n\n                    if (typeof node.raws.afterName !== 'undefined') {\n                      name += node.raws.afterName;\n                    } else if (params) {\n                      name += ' ';\n                    }\n\n                    if (node.nodes) {\n                      this.block(node, name + params);\n                    } else {\n                      var end = (node.raws.between || '') + (semicolon ? ';' : '');\n                      this.builder(name + params + end, node);\n                    }\n                  };\n\n                  _proto.body = function body(node) {\n                    var last = node.nodes.length - 1;\n\n                    while (last > 0) {\n                      if (node.nodes[last].type !== 'comment') break;\n                      last -= 1;\n                    }\n\n                    var semicolon = this.raw(node, 'semicolon');\n\n                    for (var i = 0; i < node.nodes.length; i++) {\n                      var child = node.nodes[i];\n                      var before = this.raw(child, 'before');\n                      if (before) this.builder(before);\n                      this.stringify(child, last !== i || semicolon);\n                    }\n                  };\n\n                  _proto.block = function block(node, start) {\n                    var between = this.raw(node, 'between', 'beforeOpen');\n                    this.builder(start + between + '{', node, 'start');\n                    var after;\n\n                    if (node.nodes && node.nodes.length) {\n                      this.body(node);\n                      after = this.raw(node, 'after');\n                    } else {\n                      after = this.raw(node, 'after', 'emptyBody');\n                    }\n\n                    if (after) this.builder(after);\n                    this.builder('}', node, 'end');\n                  };\n\n                  _proto.raw = function raw(node, own, detect) {\n                    var value;\n                    if (!detect) detect = own; // Already had\n\n                    if (own) {\n                      value = node.raws[own];\n                      if (typeof value !== 'undefined') return value;\n                    }\n\n                    var parent = node.parent; // Hack for first rule in CSS\n\n                    if (detect === 'before') {\n                      if (!parent || parent.type === 'root' && parent.first === node) {\n                        return '';\n                      }\n                    } // Floating child without parent\n\n\n                    if (!parent) return DEFAULT_RAW[detect]; // Detect style by other nodes\n\n                    var root = node.root();\n                    if (!root.rawCache) root.rawCache = {};\n\n                    if (typeof root.rawCache[detect] !== 'undefined') {\n                      return root.rawCache[detect];\n                    }\n\n                    if (detect === 'before' || detect === 'after') {\n                      return this.beforeAfter(node, detect);\n                    } else {\n                      var method = 'raw' + capitalize(detect);\n\n                      if (this[method]) {\n                        value = this[method](root, node);\n                      } else {\n                        root.walk(function (i) {\n                          value = i.raws[own];\n                          if (typeof value !== 'undefined') return false;\n                        });\n                      }\n                    }\n\n                    if (typeof value === 'undefined') value = DEFAULT_RAW[detect];\n                    root.rawCache[detect] = value;\n                    return value;\n                  };\n\n                  _proto.rawSemicolon = function rawSemicolon(root) {\n                    var value;\n                    root.walk(function (i) {\n                      if (i.nodes && i.nodes.length && i.last.type === 'decl') {\n                        value = i.raws.semicolon;\n                        if (typeof value !== 'undefined') return false;\n                      }\n                    });\n                    return value;\n                  };\n\n                  _proto.rawEmptyBody = function rawEmptyBody(root) {\n                    var value;\n                    root.walk(function (i) {\n                      if (i.nodes && i.nodes.length === 0) {\n                        value = i.raws.after;\n                        if (typeof value !== 'undefined') return false;\n                      }\n                    });\n                    return value;\n                  };\n\n                  _proto.rawIndent = function rawIndent(root) {\n                    if (root.raws.indent) return root.raws.indent;\n                    var value;\n                    root.walk(function (i) {\n                      var p = i.parent;\n\n                      if (p && p !== root && p.parent && p.parent === root) {\n                        if (typeof i.raws.before !== 'undefined') {\n                          var parts = i.raws.before.split('\\n');\n                          value = parts[parts.length - 1];\n                          value = value.replace(/[^\\s]/g, '');\n                          return false;\n                        }\n                      }\n                    });\n                    return value;\n                  };\n\n                  _proto.rawBeforeComment = function rawBeforeComment(root, node) {\n                    var value;\n                    root.walkComments(function (i) {\n                      if (typeof i.raws.before !== 'undefined') {\n                        value = i.raws.before;\n\n                        if (value.indexOf('\\n') !== -1) {\n                          value = value.replace(/[^\\n]+$/, '');\n                        }\n\n                        return false;\n                      }\n                    });\n\n                    if (typeof value === 'undefined') {\n                      value = this.raw(node, null, 'beforeDecl');\n                    } else if (value) {\n                      value = value.replace(/[^\\s]/g, '');\n                    }\n\n                    return value;\n                  };\n\n                  _proto.rawBeforeDecl = function rawBeforeDecl(root, node) {\n                    var value;\n                    root.walkDecls(function (i) {\n                      if (typeof i.raws.before !== 'undefined') {\n                        value = i.raws.before;\n\n                        if (value.indexOf('\\n') !== -1) {\n                          value = value.replace(/[^\\n]+$/, '');\n                        }\n\n                        return false;\n                      }\n                    });\n\n                    if (typeof value === 'undefined') {\n                      value = this.raw(node, null, 'beforeRule');\n                    } else if (value) {\n                      value = value.replace(/[^\\s]/g, '');\n                    }\n\n                    return value;\n                  };\n\n                  _proto.rawBeforeRule = function rawBeforeRule(root) {\n                    var value;\n                    root.walk(function (i) {\n                      if (i.nodes && (i.parent !== root || root.first !== i)) {\n                        if (typeof i.raws.before !== 'undefined') {\n                          value = i.raws.before;\n\n                          if (value.indexOf('\\n') !== -1) {\n                            value = value.replace(/[^\\n]+$/, '');\n                          }\n\n                          return false;\n                        }\n                      }\n                    });\n                    if (value) value = value.replace(/[^\\s]/g, '');\n                    return value;\n                  };\n\n                  _proto.rawBeforeClose = function rawBeforeClose(root) {\n                    var value;\n                    root.walk(function (i) {\n                      if (i.nodes && i.nodes.length > 0) {\n                        if (typeof i.raws.after !== 'undefined') {\n                          value = i.raws.after;\n\n                          if (value.indexOf('\\n') !== -1) {\n                            value = value.replace(/[^\\n]+$/, '');\n                          }\n\n                          return false;\n                        }\n                      }\n                    });\n                    if (value) value = value.replace(/[^\\s]/g, '');\n                    return value;\n                  };\n\n                  _proto.rawBeforeOpen = function rawBeforeOpen(root) {\n                    var value;\n                    root.walk(function (i) {\n                      if (i.type !== 'decl') {\n                        value = i.raws.between;\n                        if (typeof value !== 'undefined') return false;\n                      }\n                    });\n                    return value;\n                  };\n\n                  _proto.rawColon = function rawColon(root) {\n                    var value;\n                    root.walkDecls(function (i) {\n                      if (typeof i.raws.between !== 'undefined') {\n                        value = i.raws.between.replace(/[^\\s:]/g, '');\n                        return false;\n                      }\n                    });\n                    return value;\n                  };\n\n                  _proto.beforeAfter = function beforeAfter(node, detect) {\n                    var value;\n\n                    if (node.type === 'decl') {\n                      value = this.raw(node, null, 'beforeDecl');\n                    } else if (node.type === 'comment') {\n                      value = this.raw(node, null, 'beforeComment');\n                    } else if (detect === 'before') {\n                      value = this.raw(node, null, 'beforeRule');\n                    } else {\n                      value = this.raw(node, null, 'beforeClose');\n                    }\n\n                    var buf = node.parent;\n                    var depth = 0;\n\n                    while (buf && buf.type !== 'root') {\n                      depth += 1;\n                      buf = buf.parent;\n                    }\n\n                    if (value.indexOf('\\n') !== -1) {\n                      var indent = this.raw(node, null, 'indent');\n\n                      if (indent.length) {\n                        for (var step = 0; step < depth; step++) {\n                          value += indent;\n                        }\n                      }\n                    }\n\n                    return value;\n                  };\n\n                  _proto.rawValue = function rawValue(node, prop) {\n                    var value = node[prop];\n                    var raw = node.raws[prop];\n\n                    if (raw && raw.value === value) {\n                      return raw.raw;\n                    }\n\n                    return value;\n                  };\n\n                  return Stringifier;\n                }();\n\n                var _default = Stringifier;\n                exports[\"default\"] = _default;\n                module.exports = exports[\"default\"];\n              }, {}],\n              188: [function (require, module, exports) {\n                \"use strict\";\n\n                exports.__esModule = true;\n                exports[\"default\"] = void 0;\n\n                var _stringifier = _interopRequireDefault(require(\"./stringifier\"));\n\n                function _interopRequireDefault(obj) {\n                  return obj && obj.__esModule ? obj : {\n                    \"default\": obj\n                  };\n                }\n\n                function stringify(node, builder) {\n                  var str = new _stringifier[\"default\"](builder);\n                  str.stringify(node);\n                }\n\n                var _default = stringify;\n                exports[\"default\"] = _default;\n                module.exports = exports[\"default\"];\n              }, {\n                \"./stringifier\": 187\n              }],\n              189: [function (require, module, exports) {\n                \"use strict\";\n\n                exports.__esModule = true;\n                exports[\"default\"] = tokenizer;\n                var SINGLE_QUOTE = '\\''.charCodeAt(0);\n                var DOUBLE_QUOTE = '\"'.charCodeAt(0);\n                var BACKSLASH = '\\\\'.charCodeAt(0);\n                var SLASH = '/'.charCodeAt(0);\n                var NEWLINE = '\\n'.charCodeAt(0);\n                var SPACE = ' '.charCodeAt(0);\n                var FEED = '\\f'.charCodeAt(0);\n                var TAB = '\\t'.charCodeAt(0);\n                var CR = '\\r'.charCodeAt(0);\n                var OPEN_SQUARE = '['.charCodeAt(0);\n                var CLOSE_SQUARE = ']'.charCodeAt(0);\n                var OPEN_PARENTHESES = '('.charCodeAt(0);\n                var CLOSE_PARENTHESES = ')'.charCodeAt(0);\n                var OPEN_CURLY = '{'.charCodeAt(0);\n                var CLOSE_CURLY = '}'.charCodeAt(0);\n                var SEMICOLON = ';'.charCodeAt(0);\n                var ASTERISK = '*'.charCodeAt(0);\n                var COLON = ':'.charCodeAt(0);\n                var AT = '@'.charCodeAt(0);\n                var RE_AT_END = /[ \\n\\t\\r\\f{}()'\"\\\\;/[\\]#]/g;\n                var RE_WORD_END = /[ \\n\\t\\r\\f(){}:;@!'\"\\\\\\][#]|\\/(?=\\*)/g;\n                var RE_BAD_BRACKET = /.[\\\\/(\"'\\n]/;\n                var RE_HEX_ESCAPE = /[a-f0-9]/i;\n\n                function tokenizer(input, options) {\n                  if (options === void 0) {\n                    options = {};\n                  }\n\n                  var css = input.css.valueOf();\n                  var ignore = options.ignoreErrors;\n                  var code, next, quote, lines, last, content, escape;\n                  var nextLine, nextOffset, escaped, escapePos, prev, n, currentToken;\n                  var length = css.length;\n                  var offset = -1;\n                  var line = 1;\n                  var pos = 0;\n                  var buffer = [];\n                  var returned = [];\n\n                  function position() {\n                    return pos;\n                  }\n\n                  function unclosed(what) {\n                    throw input.error('Unclosed ' + what, line, pos - offset);\n                  }\n\n                  function endOfFile() {\n                    return returned.length === 0 && pos >= length;\n                  }\n\n                  function nextToken(opts) {\n                    if (returned.length) return returned.pop();\n                    if (pos >= length) return;\n                    var ignoreUnclosed = opts ? opts.ignoreUnclosed : false;\n                    code = css.charCodeAt(pos);\n\n                    if (code === NEWLINE || code === FEED || code === CR && css.charCodeAt(pos + 1) !== NEWLINE) {\n                      offset = pos;\n                      line += 1;\n                    }\n\n                    switch (code) {\n                      case NEWLINE:\n                      case SPACE:\n                      case TAB:\n                      case CR:\n                      case FEED:\n                        next = pos;\n\n                        do {\n                          next += 1;\n                          code = css.charCodeAt(next);\n\n                          if (code === NEWLINE) {\n                            offset = next;\n                            line += 1;\n                          }\n                        } while (code === SPACE || code === NEWLINE || code === TAB || code === CR || code === FEED);\n\n                        currentToken = ['space', css.slice(pos, next)];\n                        pos = next - 1;\n                        break;\n\n                      case OPEN_SQUARE:\n                      case CLOSE_SQUARE:\n                      case OPEN_CURLY:\n                      case CLOSE_CURLY:\n                      case COLON:\n                      case SEMICOLON:\n                      case CLOSE_PARENTHESES:\n                        var controlChar = String.fromCharCode(code);\n                        currentToken = [controlChar, controlChar, line, pos - offset];\n                        break;\n\n                      case OPEN_PARENTHESES:\n                        prev = buffer.length ? buffer.pop()[1] : '';\n                        n = css.charCodeAt(pos + 1);\n\n                        if (prev === 'url' && n !== SINGLE_QUOTE && n !== DOUBLE_QUOTE && n !== SPACE && n !== NEWLINE && n !== TAB && n !== FEED && n !== CR) {\n                          next = pos;\n\n                          do {\n                            escaped = false;\n                            next = css.indexOf(')', next + 1);\n\n                            if (next === -1) {\n                              if (ignore || ignoreUnclosed) {\n                                next = pos;\n                                break;\n                              } else {\n                                unclosed('bracket');\n                              }\n                            }\n\n                            escapePos = next;\n\n                            while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n                              escapePos -= 1;\n                              escaped = !escaped;\n                            }\n                          } while (escaped);\n\n                          currentToken = ['brackets', css.slice(pos, next + 1), line, pos - offset, line, next - offset];\n                          pos = next;\n                        } else {\n                          next = css.indexOf(')', pos + 1);\n                          content = css.slice(pos, next + 1);\n\n                          if (next === -1 || RE_BAD_BRACKET.test(content)) {\n                            currentToken = ['(', '(', line, pos - offset];\n                          } else {\n                            currentToken = ['brackets', content, line, pos - offset, line, next - offset];\n                            pos = next;\n                          }\n                        }\n\n                        break;\n\n                      case SINGLE_QUOTE:\n                      case DOUBLE_QUOTE:\n                        quote = code === SINGLE_QUOTE ? '\\'' : '\"';\n                        next = pos;\n\n                        do {\n                          escaped = false;\n                          next = css.indexOf(quote, next + 1);\n\n                          if (next === -1) {\n                            if (ignore || ignoreUnclosed) {\n                              next = pos + 1;\n                              break;\n                            } else {\n                              unclosed('string');\n                            }\n                          }\n\n                          escapePos = next;\n\n                          while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n                            escapePos -= 1;\n                            escaped = !escaped;\n                          }\n                        } while (escaped);\n\n                        content = css.slice(pos, next + 1);\n                        lines = content.split('\\n');\n                        last = lines.length - 1;\n\n                        if (last > 0) {\n                          nextLine = line + last;\n                          nextOffset = next - lines[last].length;\n                        } else {\n                          nextLine = line;\n                          nextOffset = offset;\n                        }\n\n                        currentToken = ['string', css.slice(pos, next + 1), line, pos - offset, nextLine, next - nextOffset];\n                        offset = nextOffset;\n                        line = nextLine;\n                        pos = next;\n                        break;\n\n                      case AT:\n                        RE_AT_END.lastIndex = pos + 1;\n                        RE_AT_END.test(css);\n\n                        if (RE_AT_END.lastIndex === 0) {\n                          next = css.length - 1;\n                        } else {\n                          next = RE_AT_END.lastIndex - 2;\n                        }\n\n                        currentToken = ['at-word', css.slice(pos, next + 1), line, pos - offset, line, next - offset];\n                        pos = next;\n                        break;\n\n                      case BACKSLASH:\n                        next = pos;\n                        escape = true;\n\n                        while (css.charCodeAt(next + 1) === BACKSLASH) {\n                          next += 1;\n                          escape = !escape;\n                        }\n\n                        code = css.charCodeAt(next + 1);\n\n                        if (escape && code !== SLASH && code !== SPACE && code !== NEWLINE && code !== TAB && code !== CR && code !== FEED) {\n                          next += 1;\n\n                          if (RE_HEX_ESCAPE.test(css.charAt(next))) {\n                            while (RE_HEX_ESCAPE.test(css.charAt(next + 1))) {\n                              next += 1;\n                            }\n\n                            if (css.charCodeAt(next + 1) === SPACE) {\n                              next += 1;\n                            }\n                          }\n                        }\n\n                        currentToken = ['word', css.slice(pos, next + 1), line, pos - offset, line, next - offset];\n                        pos = next;\n                        break;\n\n                      default:\n                        if (code === SLASH && css.charCodeAt(pos + 1) === ASTERISK) {\n                          next = css.indexOf('*/', pos + 2) + 1;\n\n                          if (next === 0) {\n                            if (ignore || ignoreUnclosed) {\n                              next = css.length;\n                            } else {\n                              unclosed('comment');\n                            }\n                          }\n\n                          content = css.slice(pos, next + 1);\n                          lines = content.split('\\n');\n                          last = lines.length - 1;\n\n                          if (last > 0) {\n                            nextLine = line + last;\n                            nextOffset = next - lines[last].length;\n                          } else {\n                            nextLine = line;\n                            nextOffset = offset;\n                          }\n\n                          currentToken = ['comment', content, line, pos - offset, nextLine, next - nextOffset];\n                          offset = nextOffset;\n                          line = nextLine;\n                          pos = next;\n                        } else {\n                          RE_WORD_END.lastIndex = pos + 1;\n                          RE_WORD_END.test(css);\n\n                          if (RE_WORD_END.lastIndex === 0) {\n                            next = css.length - 1;\n                          } else {\n                            next = RE_WORD_END.lastIndex - 2;\n                          }\n\n                          currentToken = ['word', css.slice(pos, next + 1), line, pos - offset, line, next - offset];\n                          buffer.push(currentToken);\n                          pos = next;\n                        }\n\n                        break;\n                    }\n\n                    pos++;\n                    return currentToken;\n                  }\n\n                  function back(token) {\n                    returned.push(token);\n                  }\n\n                  return {\n                    back: back,\n                    nextToken: nextToken,\n                    endOfFile: endOfFile,\n                    position: position\n                  };\n                }\n\n                module.exports = exports[\"default\"];\n              }, {}],\n              190: [function (require, module, exports) {\n                \"use strict\";\n\n                exports.__esModule = true;\n                exports[\"default\"] = void 0;\n                /**\n                * Contains helpers for working with vendor prefixes.\n                *\n                * @example\n                * const vendor = postcss.vendor\n                *\n                * @namespace vendor\n                */\n\n                var vendor = {\n                  /**\n                  * Returns the vendor prefix extracted from an input string.\n                  *\n                  * @param {string} prop String with or without vendor prefix.\n                  *\n                  * @return {string} vendor prefix or empty string\n                  *\n                  * @example\n                  * postcss.vendor.prefix('-moz-tab-size') //=> '-moz-'\n                  * postcss.vendor.prefix('tab-size')      //=> ''\n                  */\n                  prefix: function prefix(prop) {\n                    var match = prop.match(/^(-\\w+-)/);\n\n                    if (match) {\n                      return match[0];\n                    }\n\n                    return '';\n                  },\n\n                  /**\n                  * Returns the input string stripped of its vendor prefix.\n                  *\n                  * @param {string} prop String with or without vendor prefix.\n                  *\n                  * @return {string} String name without vendor prefixes.\n                  *\n                  * @example\n                  * postcss.vendor.unprefixed('-moz-tab-size') //=> 'tab-size'\n                  */\n                  unprefixed: function unprefixed(prop) {\n                    return prop.replace(/^-\\w+-/, '');\n                  }\n                };\n                var _default = vendor;\n                exports[\"default\"] = _default;\n                module.exports = exports[\"default\"];\n              }, {}],\n              191: [function (require, module, exports) {\n                \"use strict\";\n\n                exports.__esModule = true;\n                exports[\"default\"] = warnOnce;\n                var printed = {};\n\n                function warnOnce(message) {\n                  if (printed[message]) return;\n                  printed[message] = true;\n\n                  if (typeof console !== 'undefined' && console.warn) {\n                    console.warn(message);\n                  }\n                }\n\n                module.exports = exports[\"default\"];\n              }, {}],\n              192: [function (require, module, exports) {\n                \"use strict\";\n\n                exports.__esModule = true;\n                exports[\"default\"] = void 0;\n                /**\n                * Represents a plugin’s warning. It can be created using {@link Node#warn}.\n                *\n                * @example\n                * if (decl.important) {\n                *   decl.warn(result, 'Avoid !important', { word: '!important' })\n                * }\n                */\n\n                var Warning = /*#__PURE__*/function () {\n                  /**\n                  * @param {string} text        Warning message.\n                  * @param {Object} [opts]      Warning options.\n                  * @param {Node}   opts.node   CSS node that caused the warning.\n                  * @param {string} opts.word   Word in CSS source that caused the warning.\n                  * @param {number} opts.index  Index in CSS node string that caused\n                  *                             the warning.\n                  * @param {string} opts.plugin Name of the plugin that created\n                  *                             this warning. {@link Result#warn} fills\n                  *                             this property automatically.\n                  */\n                  function Warning(text, opts) {\n                    if (opts === void 0) {\n                      opts = {};\n                    }\n                    /**\n                    * Type to filter warnings from {@link Result#messages}.\n                    * Always equal to `\"warning\"`.\n                    *\n                    * @type {string}\n                    *\n                    * @example\n                    * const nonWarning = result.messages.filter(i => i.type !== 'warning')\n                    */\n\n\n                    this.type = 'warning';\n                    /**\n                    * The warning message.\n                    *\n                    * @type {string}\n                    *\n                    * @example\n                    * warning.text //=> 'Try to avoid !important'\n                    */\n\n                    this.text = text;\n\n                    if (opts.node && opts.node.source) {\n                      var pos = opts.node.positionBy(opts);\n                      /**\n                      * Line in the input file with this warning’s source.\n                      * @type {number}\n                      *\n                      * @example\n                      * warning.line //=> 5\n                      */\n\n                      this.line = pos.line;\n                      /**\n                      * Column in the input file with this warning’s source.\n                      *\n                      * @type {number}\n                      *\n                      * @example\n                      * warning.column //=> 6\n                      */\n\n                      this.column = pos.column;\n                    }\n\n                    for (var opt in opts) {\n                      this[opt] = opts[opt];\n                    }\n                  }\n                  /**\n                  * Returns a warning position and message.\n                  *\n                  * @example\n                  * warning.toString() //=> 'postcss-lint:a.css:10:14: Avoid !important'\n                  *\n                  * @return {string} Warning position and message.\n                  */\n\n\n                  var _proto = Warning.prototype;\n\n                  _proto.toString = function toString() {\n                    if (this.node) {\n                      return this.node.error(this.text, {\n                        plugin: this.plugin,\n                        index: this.index,\n                        word: this.word\n                      }).message;\n                    }\n\n                    if (this.plugin) {\n                      return this.plugin + ': ' + this.text;\n                    }\n\n                    return this.text;\n                  }\n                  /**\n                  * @memberof Warning#\n                  * @member {string} plugin The name of the plugin that created\n                  *                         it will fill this property automatically.\n                  *                         this warning. When you call {@link Node#warn}\n                  *\n                  * @example\n                  * warning.plugin //=> 'postcss-important'\n                  */\n\n                  /**\n                  * @memberof Warning#\n                  * @member {Node} node Contains the CSS node that caused the warning.\n                  *\n                  * @example\n                  * warning.node.toString() //=> 'color: white !important'\n                  */\n                  ;\n\n                  return Warning;\n                }();\n\n                var _default = Warning;\n                exports[\"default\"] = _default;\n                module.exports = exports[\"default\"];\n              }, {}],\n              193: [function (require, module, exports) {\n                // shim for using process in browser\n                var process = module.exports = {}; // cached from whatever global is present so that test runners that stub it\n                // don't break things.  But we need to wrap it in a try catch in case it is\n                // wrapped in strict mode code which doesn't define any globals.  It's inside a\n                // function because try/catches deoptimize in certain engines.\n\n                var cachedSetTimeout;\n                var cachedClearTimeout;\n\n                function defaultSetTimout() {\n                  throw new Error('setTimeout has not been defined');\n                }\n\n                function defaultClearTimeout() {\n                  throw new Error('clearTimeout has not been defined');\n                }\n\n                (function () {\n                  try {\n                    if (typeof setTimeout === 'function') {\n                      cachedSetTimeout = setTimeout;\n                    } else {\n                      cachedSetTimeout = defaultSetTimout;\n                    }\n                  } catch (e) {\n                    cachedSetTimeout = defaultSetTimout;\n                  }\n\n                  try {\n                    if (typeof clearTimeout === 'function') {\n                      cachedClearTimeout = clearTimeout;\n                    } else {\n                      cachedClearTimeout = defaultClearTimeout;\n                    }\n                  } catch (e) {\n                    cachedClearTimeout = defaultClearTimeout;\n                  }\n                })();\n\n                function runTimeout(fun) {\n                  if (cachedSetTimeout === setTimeout) {\n                    //normal enviroments in sane situations\n                    return setTimeout(fun, 0);\n                  } // if setTimeout wasn't available but was latter defined\n\n\n                  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n                    cachedSetTimeout = setTimeout;\n                    return setTimeout(fun, 0);\n                  }\n\n                  try {\n                    // when when somebody has screwed with setTimeout but no I.E. maddness\n                    return cachedSetTimeout(fun, 0);\n                  } catch (e) {\n                    try {\n                      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n                      return cachedSetTimeout.call(null, fun, 0);\n                    } catch (e) {\n                      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n                      return cachedSetTimeout.call(this, fun, 0);\n                    }\n                  }\n                }\n\n                function runClearTimeout(marker) {\n                  if (cachedClearTimeout === clearTimeout) {\n                    //normal enviroments in sane situations\n                    return clearTimeout(marker);\n                  } // if clearTimeout wasn't available but was latter defined\n\n\n                  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n                    cachedClearTimeout = clearTimeout;\n                    return clearTimeout(marker);\n                  }\n\n                  try {\n                    // when when somebody has screwed with setTimeout but no I.E. maddness\n                    return cachedClearTimeout(marker);\n                  } catch (e) {\n                    try {\n                      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n                      return cachedClearTimeout.call(null, marker);\n                    } catch (e) {\n                      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n                      // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n                      return cachedClearTimeout.call(this, marker);\n                    }\n                  }\n                }\n\n                var queue = [];\n                var draining = false;\n                var currentQueue;\n                var queueIndex = -1;\n\n                function cleanUpNextTick() {\n                  if (!draining || !currentQueue) {\n                    return;\n                  }\n\n                  draining = false;\n\n                  if (currentQueue.length) {\n                    queue = currentQueue.concat(queue);\n                  } else {\n                    queueIndex = -1;\n                  }\n\n                  if (queue.length) {\n                    drainQueue();\n                  }\n                }\n\n                function drainQueue() {\n                  if (draining) {\n                    return;\n                  }\n\n                  var timeout = runTimeout(cleanUpNextTick);\n                  draining = true;\n                  var len = queue.length;\n\n                  while (len) {\n                    currentQueue = queue;\n                    queue = [];\n\n                    while (++queueIndex < len) {\n                      if (currentQueue) {\n                        currentQueue[queueIndex].run();\n                      }\n                    }\n\n                    queueIndex = -1;\n                    len = queue.length;\n                  }\n\n                  currentQueue = null;\n                  draining = false;\n                  runClearTimeout(timeout);\n                }\n\n                process.nextTick = function (fun) {\n                  var args = new Array(arguments.length - 1);\n\n                  if (arguments.length > 1) {\n                    for (var i = 1; i < arguments.length; i++) {\n                      args[i - 1] = arguments[i];\n                    }\n                  }\n\n                  queue.push(new Item(fun, args));\n\n                  if (queue.length === 1 && !draining) {\n                    runTimeout(drainQueue);\n                  }\n                }; // v8 likes predictible objects\n\n\n                function Item(fun, array) {\n                  this.fun = fun;\n                  this.array = array;\n                }\n\n                Item.prototype.run = function () {\n                  this.fun.apply(null, this.array);\n                };\n\n                process.title = 'browser';\n                process.browser = true;\n                process.env = {};\n                process.argv = [];\n                process.version = ''; // empty string to avoid regexp issues\n\n                process.versions = {};\n\n                function noop() {}\n\n                process.on = noop;\n                process.addListener = noop;\n                process.once = noop;\n                process.off = noop;\n                process.removeListener = noop;\n                process.removeAllListeners = noop;\n                process.emit = noop;\n                process.prependListener = noop;\n                process.prependOnceListener = noop;\n\n                process.listeners = function (name) {\n                  return [];\n                };\n\n                process.binding = function (name) {\n                  throw new Error('process.binding is not supported');\n                };\n\n                process.cwd = function () {\n                  return '/';\n                };\n\n                process.chdir = function (dir) {\n                  throw new Error('process.chdir is not supported');\n                };\n\n                process.umask = function () {\n                  return 0;\n                };\n              }, {}],\n              194: [function (require, module, exports) {\n                (function (global) {\n                  /*! https://mths.be/punycode v1.4.1 by @mathias */\n                  ;\n\n                  (function (root) {\n                    /** Detect free variables */\n                    var freeExports = _typeof(exports) == 'object' && exports && !exports.nodeType && exports;\n                    var freeModule = _typeof(module) == 'object' && module && !module.nodeType && module;\n                    var freeGlobal = _typeof(global) == 'object' && global;\n\n                    if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal) {\n                      root = freeGlobal;\n                    }\n                    /**\n                    * The `punycode` object.\n                    * @name punycode\n                    * @type Object\n                    */\n\n\n                    var punycode,\n\n                    /** Highest positive signed 32-bit float value */\n                    maxInt = 2147483647,\n                        // aka. 0x7FFFFFFF or 2^31-1\n\n                    /** Bootstring parameters */\n                    base = 36,\n                        tMin = 1,\n                        tMax = 26,\n                        skew = 38,\n                        damp = 700,\n                        initialBias = 72,\n                        initialN = 128,\n                        // 0x80\n                    delimiter = '-',\n                        // '\\x2D'\n\n                    /** Regular expressions */\n                    regexPunycode = /^xn--/,\n                        regexNonASCII = /[^\\x20-\\x7E]/,\n                        // unprintable ASCII chars + non-ASCII chars\n                    regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g,\n                        // RFC 3490 separators\n\n                    /** Error messages */\n                    errors = {\n                      'overflow': 'Overflow: input needs wider integers to process',\n                      'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n                      'invalid-input': 'Invalid input'\n                    },\n\n                    /** Convenience shortcuts */\n                    baseMinusTMin = base - tMin,\n                        floor = Math.floor,\n                        stringFromCharCode = String.fromCharCode,\n\n                    /** Temporary variable */\n                    key;\n                    /*--------------------------------------------------------------------------*/\n\n                    /**\n                    * A generic error utility function.\n                    * @private\n                    * @param {String} type The error type.\n                    * @returns {Error} Throws a `RangeError` with the applicable error message.\n                    */\n\n                    function error(type) {\n                      throw new RangeError(errors[type]);\n                    }\n                    /**\n                    * A generic `Array#map` utility function.\n                    * @private\n                    * @param {Array} array The array to iterate over.\n                    * @param {Function} callback The function that gets called for every array\n                    * item.\n                    * @returns {Array} A new array of values returned by the callback function.\n                    */\n\n\n                    function map(array, fn) {\n                      var length = array.length;\n                      var result = [];\n\n                      while (length--) {\n                        result[length] = fn(array[length]);\n                      }\n\n                      return result;\n                    }\n                    /**\n                    * A simple `Array#map`-like wrapper to work with domain name strings or email\n                    * addresses.\n                    * @private\n                    * @param {String} domain The domain name or email address.\n                    * @param {Function} callback The function that gets called for every\n                    * character.\n                    * @returns {Array} A new string of characters returned by the callback\n                    * function.\n                    */\n\n\n                    function mapDomain(string, fn) {\n                      var parts = string.split('@');\n                      var result = '';\n\n                      if (parts.length > 1) {\n                        // In email addresses, only the domain name should be punycoded. Leave\n                        // the local part (i.e. everything up to `@`) intact.\n                        result = parts[0] + '@';\n                        string = parts[1];\n                      } // Avoid `split(regex)` for IE8 compatibility. See #17.\n\n\n                      string = string.replace(regexSeparators, '\\x2E');\n                      var labels = string.split('.');\n                      var encoded = map(labels, fn).join('.');\n                      return result + encoded;\n                    }\n                    /**\n                    * Creates an array containing the numeric code points of each Unicode\n                    * character in the string. While JavaScript uses UCS-2 internally,\n                    * this function will convert a pair of surrogate halves (each of which\n                    * UCS-2 exposes as separate characters) into a single code point,\n                    * matching UTF-16.\n                    * @see `punycode.ucs2.encode`\n                    * @see <https://mathiasbynens.be/notes/javascript-encoding>\n                    * @memberOf punycode.ucs2\n                    * @name decode\n                    * @param {String} string The Unicode input string (UCS-2).\n                    * @returns {Array} The new array of code points.\n                    */\n\n\n                    function ucs2decode(string) {\n                      var output = [],\n                          counter = 0,\n                          length = string.length,\n                          value,\n                          extra;\n\n                      while (counter < length) {\n                        value = string.charCodeAt(counter++);\n\n                        if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n                          // high surrogate, and there is a next character\n                          extra = string.charCodeAt(counter++);\n\n                          if ((extra & 0xFC00) == 0xDC00) {\n                            // low surrogate\n                            output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n                          } else {\n                            // unmatched surrogate; only append this code unit, in case the next\n                            // code unit is the high surrogate of a surrogate pair\n                            output.push(value);\n                            counter--;\n                          }\n                        } else {\n                          output.push(value);\n                        }\n                      }\n\n                      return output;\n                    }\n                    /**\n                    * Creates a string based on an array of numeric code points.\n                    * @see `punycode.ucs2.decode`\n                    * @memberOf punycode.ucs2\n                    * @name encode\n                    * @param {Array} codePoints The array of numeric code points.\n                    * @returns {String} The new Unicode string (UCS-2).\n                    */\n\n\n                    function ucs2encode(array) {\n                      return map(array, function (value) {\n                        var output = '';\n\n                        if (value > 0xFFFF) {\n                          value -= 0x10000;\n                          output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n                          value = 0xDC00 | value & 0x3FF;\n                        }\n\n                        output += stringFromCharCode(value);\n                        return output;\n                      }).join('');\n                    }\n                    /**\n                    * Converts a basic code point into a digit/integer.\n                    * @see `digitToBasic()`\n                    * @private\n                    * @param {Number} codePoint The basic numeric code point value.\n                    * @returns {Number} The numeric value of a basic code point (for use in\n                    * representing integers) in the range `0` to `base - 1`, or `base` if\n                    * the code point does not represent a value.\n                    */\n\n\n                    function basicToDigit(codePoint) {\n                      if (codePoint - 48 < 10) {\n                        return codePoint - 22;\n                      }\n\n                      if (codePoint - 65 < 26) {\n                        return codePoint - 65;\n                      }\n\n                      if (codePoint - 97 < 26) {\n                        return codePoint - 97;\n                      }\n\n                      return base;\n                    }\n                    /**\n                    * Converts a digit/integer into a basic code point.\n                    * @see `basicToDigit()`\n                    * @private\n                    * @param {Number} digit The numeric value of a basic code point.\n                    * @returns {Number} The basic code point whose value (when used for\n                    * representing integers) is `digit`, which needs to be in the range\n                    * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n                    * used; else, the lowercase form is used. The behavior is undefined\n                    * if `flag` is non-zero and `digit` has no uppercase form.\n                    */\n\n\n                    function digitToBasic(digit, flag) {\n                      //  0..25 map to ASCII a..z or A..Z\n                      // 26..35 map to ASCII 0..9\n                      return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n                    }\n                    /**\n                    * Bias adaptation function as per section 3.4 of RFC 3492.\n                    * https://tools.ietf.org/html/rfc3492#section-3.4\n                    * @private\n                    */\n\n\n                    function adapt(delta, numPoints, firstTime) {\n                      var k = 0;\n                      delta = firstTime ? floor(delta / damp) : delta >> 1;\n                      delta += floor(delta / numPoints);\n\n                      for (;\n                      /* no initialization */\n                      delta > baseMinusTMin * tMax >> 1; k += base) {\n                        delta = floor(delta / baseMinusTMin);\n                      }\n\n                      return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n                    }\n                    /**\n                    * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n                    * symbols.\n                    * @memberOf punycode\n                    * @param {String} input The Punycode string of ASCII-only symbols.\n                    * @returns {String} The resulting string of Unicode symbols.\n                    */\n\n\n                    function decode(input) {\n                      // Don't use UCS-2\n                      var output = [],\n                          inputLength = input.length,\n                          out,\n                          i = 0,\n                          n = initialN,\n                          bias = initialBias,\n                          basic,\n                          j,\n                          index,\n                          oldi,\n                          w,\n                          k,\n                          digit,\n                          t,\n\n                      /** Cached calculation results */\n                      baseMinusT; // Handle the basic code points: let `basic` be the number of input code\n                      // points before the last delimiter, or `0` if there is none, then copy\n                      // the first basic code points to the output.\n\n                      basic = input.lastIndexOf(delimiter);\n\n                      if (basic < 0) {\n                        basic = 0;\n                      }\n\n                      for (j = 0; j < basic; ++j) {\n                        // if it's not a basic code point\n                        if (input.charCodeAt(j) >= 0x80) {\n                          error('not-basic');\n                        }\n\n                        output.push(input.charCodeAt(j));\n                      } // Main decoding loop: start just after the last delimiter if any basic code\n                      // points were copied; start at the beginning otherwise.\n\n\n                      for (index = basic > 0 ? basic + 1 : 0; index < inputLength;)\n                      /* no final expression */\n                      {\n                        // `index` is the index of the next character to be consumed.\n                        // Decode a generalized variable-length integer into `delta`,\n                        // which gets added to `i`. The overflow checking is easier\n                        // if we increase `i` as we go, then subtract off its starting\n                        // value at the end to obtain `delta`.\n                        for (oldi = i, w = 1, k = base;;\n                        /* no condition */\n                        k += base) {\n                          if (index >= inputLength) {\n                            error('invalid-input');\n                          }\n\n                          digit = basicToDigit(input.charCodeAt(index++));\n\n                          if (digit >= base || digit > floor((maxInt - i) / w)) {\n                            error('overflow');\n                          }\n\n                          i += digit * w;\n                          t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n\n                          if (digit < t) {\n                            break;\n                          }\n\n                          baseMinusT = base - t;\n\n                          if (w > floor(maxInt / baseMinusT)) {\n                            error('overflow');\n                          }\n\n                          w *= baseMinusT;\n                        }\n\n                        out = output.length + 1;\n                        bias = adapt(i - oldi, out, oldi == 0); // `i` was supposed to wrap around from `out` to `0`,\n                        // incrementing `n` each time, so we'll fix that now:\n\n                        if (floor(i / out) > maxInt - n) {\n                          error('overflow');\n                        }\n\n                        n += floor(i / out);\n                        i %= out; // Insert `n` at position `i` of the output\n\n                        output.splice(i++, 0, n);\n                      }\n\n                      return ucs2encode(output);\n                    }\n                    /**\n                    * Converts a string of Unicode symbols (e.g. a domain name label) to a\n                    * Punycode string of ASCII-only symbols.\n                    * @memberOf punycode\n                    * @param {String} input The string of Unicode symbols.\n                    * @returns {String} The resulting Punycode string of ASCII-only symbols.\n                    */\n\n\n                    function encode(input) {\n                      var n,\n                          delta,\n                          handledCPCount,\n                          basicLength,\n                          bias,\n                          j,\n                          m,\n                          q,\n                          k,\n                          t,\n                          currentValue,\n                          output = [],\n\n                      /** `inputLength` will hold the number of code points in `input`. */\n                      inputLength,\n\n                      /** Cached calculation results */\n                      handledCPCountPlusOne,\n                          baseMinusT,\n                          qMinusT; // Convert the input in UCS-2 to Unicode\n\n                      input = ucs2decode(input); // Cache the length\n\n                      inputLength = input.length; // Initialize the state\n\n                      n = initialN;\n                      delta = 0;\n                      bias = initialBias; // Handle the basic code points\n\n                      for (j = 0; j < inputLength; ++j) {\n                        currentValue = input[j];\n\n                        if (currentValue < 0x80) {\n                          output.push(stringFromCharCode(currentValue));\n                        }\n                      }\n\n                      handledCPCount = basicLength = output.length; // `handledCPCount` is the number of code points that have been handled;\n                      // `basicLength` is the number of basic code points.\n                      // Finish the basic string - if it is not empty - with a delimiter\n\n                      if (basicLength) {\n                        output.push(delimiter);\n                      } // Main encoding loop:\n\n\n                      while (handledCPCount < inputLength) {\n                        // All non-basic code points < n have been handled already. Find the next\n                        // larger one:\n                        for (m = maxInt, j = 0; j < inputLength; ++j) {\n                          currentValue = input[j];\n\n                          if (currentValue >= n && currentValue < m) {\n                            m = currentValue;\n                          }\n                        } // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n                        // but guard against overflow\n\n\n                        handledCPCountPlusOne = handledCPCount + 1;\n\n                        if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n                          error('overflow');\n                        }\n\n                        delta += (m - n) * handledCPCountPlusOne;\n                        n = m;\n\n                        for (j = 0; j < inputLength; ++j) {\n                          currentValue = input[j];\n\n                          if (currentValue < n && ++delta > maxInt) {\n                            error('overflow');\n                          }\n\n                          if (currentValue == n) {\n                            // Represent delta as a generalized variable-length integer\n                            for (q = delta, k = base;;\n                            /* no condition */\n                            k += base) {\n                              t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n\n                              if (q < t) {\n                                break;\n                              }\n\n                              qMinusT = q - t;\n                              baseMinusT = base - t;\n                              output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0)));\n                              q = floor(qMinusT / baseMinusT);\n                            }\n\n                            output.push(stringFromCharCode(digitToBasic(q, 0)));\n                            bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n                            delta = 0;\n                            ++handledCPCount;\n                          }\n                        }\n\n                        ++delta;\n                        ++n;\n                      }\n\n                      return output.join('');\n                    }\n                    /**\n                    * Converts a Punycode string representing a domain name or an email address\n                    * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n                    * it doesn't matter if you call it on a string that has already been\n                    * converted to Unicode.\n                    * @memberOf punycode\n                    * @param {String} input The Punycoded domain name or email address to\n                    * convert to Unicode.\n                    * @returns {String} The Unicode representation of the given Punycode\n                    * string.\n                    */\n\n\n                    function toUnicode(input) {\n                      return mapDomain(input, function (string) {\n                        return regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string;\n                      });\n                    }\n                    /**\n                    * Converts a Unicode string representing a domain name or an email address to\n                    * Punycode. Only the non-ASCII parts of the domain name will be converted,\n                    * i.e. it doesn't matter if you call it with a domain that's already in\n                    * ASCII.\n                    * @memberOf punycode\n                    * @param {String} input The domain name or email address to convert, as a\n                    * Unicode string.\n                    * @returns {String} The Punycode representation of the given domain name or\n                    * email address.\n                    */\n\n\n                    function toASCII(input) {\n                      return mapDomain(input, function (string) {\n                        return regexNonASCII.test(string) ? 'xn--' + encode(string) : string;\n                      });\n                    }\n                    /*--------------------------------------------------------------------------*/\n\n                    /** Define the public API */\n\n\n                    punycode = {\n                      /**\n                      * A string representing the current Punycode.js version number.\n                      * @memberOf punycode\n                      * @type String\n                      */\n                      'version': '1.4.1',\n\n                      /**\n                      * An object of methods to convert from JavaScript's internal character\n                      * representation (UCS-2) to Unicode code points, and back.\n                      * @see <https://mathiasbynens.be/notes/javascript-encoding>\n                      * @memberOf punycode\n                      * @type Object\n                      */\n                      'ucs2': {\n                        'decode': ucs2decode,\n                        'encode': ucs2encode\n                      },\n                      'decode': decode,\n                      'encode': encode,\n                      'toASCII': toASCII,\n                      'toUnicode': toUnicode\n                    };\n                    /** Expose `punycode` */\n                    // Some AMD build optimizers, like r.js, check for specific condition patterns\n                    // like the following:\n\n                    if (typeof define == 'function' && _typeof(define.amd) == 'object' && define.amd) {\n                      define('punycode', function () {\n                        return punycode;\n                      });\n                    } else if (freeExports && freeModule) {\n                      if (module.exports == freeExports) {\n                        // in Node.js, io.js, or RingoJS v0.8.0+\n                        freeModule.exports = punycode;\n                      } else {\n                        // in Narwhal or RingoJS v0.7.0-\n                        for (key in punycode) {\n                          punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n                        }\n                      }\n                    } else {\n                      // in Rhino or a web browser\n                      root.punycode = punycode;\n                    }\n                  })(this);\n                }).call(this, typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});\n              }, {}],\n              195: [function (require, module, exports) {\n                // Copyright Joyent, Inc. and other Node contributors.\n                //\n                // Permission is hereby granted, free of charge, to any person obtaining a\n                // copy of this software and associated documentation files (the\n                // \"Software\"), to deal in the Software without restriction, including\n                // without limitation the rights to use, copy, modify, merge, publish,\n                // distribute, sublicense, and/or sell copies of the Software, and to permit\n                // persons to whom the Software is furnished to do so, subject to the\n                // following conditions:\n                //\n                // The above copyright notice and this permission notice shall be included\n                // in all copies or substantial portions of the Software.\n                //\n                // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n                // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n                // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n                // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n                // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n                // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n                // USE OR OTHER DEALINGS IN THE SOFTWARE.\n                'use strict'; // If obj.hasOwnProperty has been overridden, then calling\n                // obj.hasOwnProperty(prop) will break.\n                // See: https://github.com/joyent/node/issues/1707\n\n                function hasOwnProperty(obj, prop) {\n                  return Object.prototype.hasOwnProperty.call(obj, prop);\n                }\n\n                module.exports = function (qs, sep, eq, options) {\n                  sep = sep || '&';\n                  eq = eq || '=';\n                  var obj = {};\n\n                  if (typeof qs !== 'string' || qs.length === 0) {\n                    return obj;\n                  }\n\n                  var regexp = /\\+/g;\n                  qs = qs.split(sep);\n                  var maxKeys = 1000;\n\n                  if (options && typeof options.maxKeys === 'number') {\n                    maxKeys = options.maxKeys;\n                  }\n\n                  var len = qs.length; // maxKeys <= 0 means that we should not limit keys count\n\n                  if (maxKeys > 0 && len > maxKeys) {\n                    len = maxKeys;\n                  }\n\n                  for (var i = 0; i < len; ++i) {\n                    var x = qs[i].replace(regexp, '%20'),\n                        idx = x.indexOf(eq),\n                        kstr,\n                        vstr,\n                        k,\n                        v;\n\n                    if (idx >= 0) {\n                      kstr = x.substr(0, idx);\n                      vstr = x.substr(idx + 1);\n                    } else {\n                      kstr = x;\n                      vstr = '';\n                    }\n\n                    k = decodeURIComponent(kstr);\n                    v = decodeURIComponent(vstr);\n\n                    if (!hasOwnProperty(obj, k)) {\n                      obj[k] = v;\n                    } else if (isArray(obj[k])) {\n                      obj[k].push(v);\n                    } else {\n                      obj[k] = [obj[k], v];\n                    }\n                  }\n\n                  return obj;\n                };\n\n                var isArray = Array.isArray || function (xs) {\n                  return Object.prototype.toString.call(xs) === '[object Array]';\n                };\n              }, {}],\n              196: [function (require, module, exports) {\n                // Copyright Joyent, Inc. and other Node contributors.\n                //\n                // Permission is hereby granted, free of charge, to any person obtaining a\n                // copy of this software and associated documentation files (the\n                // \"Software\"), to deal in the Software without restriction, including\n                // without limitation the rights to use, copy, modify, merge, publish,\n                // distribute, sublicense, and/or sell copies of the Software, and to permit\n                // persons to whom the Software is furnished to do so, subject to the\n                // following conditions:\n                //\n                // The above copyright notice and this permission notice shall be included\n                // in all copies or substantial portions of the Software.\n                //\n                // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n                // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n                // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n                // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n                // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n                // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n                // USE OR OTHER DEALINGS IN THE SOFTWARE.\n                'use strict';\n\n                var stringifyPrimitive = function stringifyPrimitive(v) {\n                  switch (_typeof(v)) {\n                    case 'string':\n                      return v;\n\n                    case 'boolean':\n                      return v ? 'true' : 'false';\n\n                    case 'number':\n                      return isFinite(v) ? v : '';\n\n                    default:\n                      return '';\n                  }\n                };\n\n                module.exports = function (obj, sep, eq, name) {\n                  sep = sep || '&';\n                  eq = eq || '=';\n\n                  if (obj === null) {\n                    obj = undefined;\n                  }\n\n                  if (_typeof(obj) === 'object') {\n                    return map(objectKeys(obj), function (k) {\n                      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n\n                      if (isArray(obj[k])) {\n                        return map(obj[k], function (v) {\n                          return ks + encodeURIComponent(stringifyPrimitive(v));\n                        }).join(sep);\n                      } else {\n                        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n                      }\n                    }).join(sep);\n                  }\n\n                  if (!name) return '';\n                  return encodeURIComponent(stringifyPrimitive(name)) + eq + encodeURIComponent(stringifyPrimitive(obj));\n                };\n\n                var isArray = Array.isArray || function (xs) {\n                  return Object.prototype.toString.call(xs) === '[object Array]';\n                };\n\n                function map(xs, f) {\n                  if (xs.map) return xs.map(f);\n                  var res = [];\n\n                  for (var i = 0; i < xs.length; i++) {\n                    res.push(f(xs[i], i));\n                  }\n\n                  return res;\n                }\n\n                var objectKeys = Object.keys || function (obj) {\n                  var res = [];\n\n                  for (var key in obj) {\n                    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n                  }\n\n                  return res;\n                };\n              }, {}],\n              197: [function (require, module, exports) {\n                'use strict';\n\n                exports.decode = exports.parse = require('./decode');\n                exports.encode = exports.stringify = require('./encode');\n              }, {\n                \"./decode\": 195,\n                \"./encode\": 196\n              }],\n              198: [function (require, module, exports) {\n                /* -*- Mode: js; js-indent-level: 2; -*- */\n\n                /*\n                * Copyright 2011 Mozilla Foundation and contributors\n                * Licensed under the New BSD license. See LICENSE or:\n                * http://opensource.org/licenses/BSD-3-Clause\n                */\n                var util = require('./util');\n\n                var has = Object.prototype.hasOwnProperty;\n                var hasNativeMap = typeof Map !== \"undefined\";\n                /**\n                * A data structure which is a combination of an array and a set. Adding a new\n                * member is O(1), testing for membership is O(1), and finding the index of an\n                * element is O(1). Removing elements from the set is not supported. Only\n                * strings are supported for membership.\n                */\n\n                function ArraySet() {\n                  this._array = [];\n                  this._set = hasNativeMap ? new Map() : Object.create(null);\n                }\n                /**\n                * Static method for creating ArraySet instances from an existing array.\n                */\n\n\n                ArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n                  var set = new ArraySet();\n\n                  for (var i = 0, len = aArray.length; i < len; i++) {\n                    set.add(aArray[i], aAllowDuplicates);\n                  }\n\n                  return set;\n                };\n                /**\n                * Return how many unique items are in this ArraySet. If duplicates have been\n                * added, than those do not count towards the size.\n                *\n                * @returns Number\n                */\n\n\n                ArraySet.prototype.size = function ArraySet_size() {\n                  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n                };\n                /**\n                * Add the given string to this set.\n                *\n                * @param String aStr\n                */\n\n\n                ArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n                  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n                  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n                  var idx = this._array.length;\n\n                  if (!isDuplicate || aAllowDuplicates) {\n                    this._array.push(aStr);\n                  }\n\n                  if (!isDuplicate) {\n                    if (hasNativeMap) {\n                      this._set.set(aStr, idx);\n                    } else {\n                      this._set[sStr] = idx;\n                    }\n                  }\n                };\n                /**\n                * Is the given string a member of this set?\n                *\n                * @param String aStr\n                */\n\n\n                ArraySet.prototype.has = function ArraySet_has(aStr) {\n                  if (hasNativeMap) {\n                    return this._set.has(aStr);\n                  } else {\n                    var sStr = util.toSetString(aStr);\n                    return has.call(this._set, sStr);\n                  }\n                };\n                /**\n                * What is the index of the given string in the array?\n                *\n                * @param String aStr\n                */\n\n\n                ArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n                  if (hasNativeMap) {\n                    var idx = this._set.get(aStr);\n\n                    if (idx >= 0) {\n                      return idx;\n                    }\n                  } else {\n                    var sStr = util.toSetString(aStr);\n\n                    if (has.call(this._set, sStr)) {\n                      return this._set[sStr];\n                    }\n                  }\n\n                  throw new Error('\"' + aStr + '\" is not in the set.');\n                };\n                /**\n                * What is the element at the given index?\n                *\n                * @param Number aIdx\n                */\n\n\n                ArraySet.prototype.at = function ArraySet_at(aIdx) {\n                  if (aIdx >= 0 && aIdx < this._array.length) {\n                    return this._array[aIdx];\n                  }\n\n                  throw new Error('No element indexed by ' + aIdx);\n                };\n                /**\n                * Returns the array representation of this set (which has the proper indices\n                * indicated by indexOf). Note that this is a copy of the internal array used\n                * for storing the members so that no one can mess with internal state.\n                */\n\n\n                ArraySet.prototype.toArray = function ArraySet_toArray() {\n                  return this._array.slice();\n                };\n\n                exports.ArraySet = ArraySet;\n              }, {\n                \"./util\": 207\n              }],\n              199: [function (require, module, exports) {\n                /* -*- Mode: js; js-indent-level: 2; -*- */\n\n                /*\n                * Copyright 2011 Mozilla Foundation and contributors\n                * Licensed under the New BSD license. See LICENSE or:\n                * http://opensource.org/licenses/BSD-3-Clause\n                *\n                * Based on the Base 64 VLQ implementation in Closure Compiler:\n                * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n                *\n                * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n                * Redistribution and use in source and binary forms, with or without\n                * modification, are permitted provided that the following conditions are\n                * met:\n                *\n                *  * Redistributions of source code must retain the above copyright\n                *    notice, this list of conditions and the following disclaimer.\n                *  * Redistributions in binary form must reproduce the above\n                *    copyright notice, this list of conditions and the following\n                *    disclaimer in the documentation and/or other materials provided\n                *    with the distribution.\n                *  * Neither the name of Google Inc. nor the names of its\n                *    contributors may be used to endorse or promote products derived\n                *    from this software without specific prior written permission.\n                *\n                * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n                * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n                * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n                * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n                * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n                * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n                * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n                * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n                * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n                * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n                * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n                */\n                var base64 = require('./base64'); // A single base 64 digit can contain 6 bits of data. For the base 64 variable\n                // length quantities we use in the source map spec, the first bit is the sign,\n                // the next four bits are the actual value, and the 6th bit is the\n                // continuation bit. The continuation bit tells us whether there are more\n                // digits in this value following this digit.\n                //\n                //   Continuation\n                //   |    Sign\n                //   |    |\n                //   V    V\n                //   101011\n\n\n                var VLQ_BASE_SHIFT = 5; // binary: 100000\n\n                var VLQ_BASE = 1 << VLQ_BASE_SHIFT; // binary: 011111\n\n                var VLQ_BASE_MASK = VLQ_BASE - 1; // binary: 100000\n\n                var VLQ_CONTINUATION_BIT = VLQ_BASE;\n                /**\n                * Converts from a two-complement value to a value where the sign bit is\n                * placed in the least significant bit.  For example, as decimals:\n                *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n                *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n                */\n\n                function toVLQSigned(aValue) {\n                  return aValue < 0 ? (-aValue << 1) + 1 : (aValue << 1) + 0;\n                }\n                /**\n                * Converts to a two-complement value from a value where the sign bit is\n                * placed in the least significant bit.  For example, as decimals:\n                *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n                *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n                */\n\n\n                function fromVLQSigned(aValue) {\n                  var isNegative = (aValue & 1) === 1;\n                  var shifted = aValue >> 1;\n                  return isNegative ? -shifted : shifted;\n                }\n                /**\n                * Returns the base 64 VLQ encoded value.\n                */\n\n\n                exports.encode = function base64VLQ_encode(aValue) {\n                  var encoded = \"\";\n                  var digit;\n                  var vlq = toVLQSigned(aValue);\n\n                  do {\n                    digit = vlq & VLQ_BASE_MASK;\n                    vlq >>>= VLQ_BASE_SHIFT;\n\n                    if (vlq > 0) {\n                      // There are still more digits in this value, so we must make sure the\n                      // continuation bit is marked.\n                      digit |= VLQ_CONTINUATION_BIT;\n                    }\n\n                    encoded += base64.encode(digit);\n                  } while (vlq > 0);\n\n                  return encoded;\n                };\n                /**\n                * Decodes the next base 64 VLQ value from the given string and returns the\n                * value and the rest of the string via the out parameter.\n                */\n\n\n                exports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n                  var strLen = aStr.length;\n                  var result = 0;\n                  var shift = 0;\n                  var continuation, digit;\n\n                  do {\n                    if (aIndex >= strLen) {\n                      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n                    }\n\n                    digit = base64.decode(aStr.charCodeAt(aIndex++));\n\n                    if (digit === -1) {\n                      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n                    }\n\n                    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n                    digit &= VLQ_BASE_MASK;\n                    result = result + (digit << shift);\n                    shift += VLQ_BASE_SHIFT;\n                  } while (continuation);\n\n                  aOutParam.value = fromVLQSigned(result);\n                  aOutParam.rest = aIndex;\n                };\n              }, {\n                \"./base64\": 200\n              }],\n              200: [function (require, module, exports) {\n                /* -*- Mode: js; js-indent-level: 2; -*- */\n\n                /*\n                * Copyright 2011 Mozilla Foundation and contributors\n                * Licensed under the New BSD license. See LICENSE or:\n                * http://opensource.org/licenses/BSD-3-Clause\n                */\n                var intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n                /**\n                * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n                */\n\n                exports.encode = function (number) {\n                  if (0 <= number && number < intToCharMap.length) {\n                    return intToCharMap[number];\n                  }\n\n                  throw new TypeError(\"Must be between 0 and 63: \" + number);\n                };\n                /**\n                * Decode a single base 64 character code digit to an integer. Returns -1 on\n                * failure.\n                */\n\n\n                exports.decode = function (charCode) {\n                  var bigA = 65; // 'A'\n\n                  var bigZ = 90; // 'Z'\n\n                  var littleA = 97; // 'a'\n\n                  var littleZ = 122; // 'z'\n\n                  var zero = 48; // '0'\n\n                  var nine = 57; // '9'\n\n                  var plus = 43; // '+'\n\n                  var slash = 47; // '/'\n\n                  var littleOffset = 26;\n                  var numberOffset = 52; // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n\n                  if (bigA <= charCode && charCode <= bigZ) {\n                    return charCode - bigA;\n                  } // 26 - 51: abcdefghijklmnopqrstuvwxyz\n\n\n                  if (littleA <= charCode && charCode <= littleZ) {\n                    return charCode - littleA + littleOffset;\n                  } // 52 - 61: 0123456789\n\n\n                  if (zero <= charCode && charCode <= nine) {\n                    return charCode - zero + numberOffset;\n                  } // 62: +\n\n\n                  if (charCode == plus) {\n                    return 62;\n                  } // 63: /\n\n\n                  if (charCode == slash) {\n                    return 63;\n                  } // Invalid base64 digit.\n\n\n                  return -1;\n                };\n              }, {}],\n              201: [function (require, module, exports) {\n                /* -*- Mode: js; js-indent-level: 2; -*- */\n\n                /*\n                * Copyright 2011 Mozilla Foundation and contributors\n                * Licensed under the New BSD license. See LICENSE or:\n                * http://opensource.org/licenses/BSD-3-Clause\n                */\n                exports.GREATEST_LOWER_BOUND = 1;\n                exports.LEAST_UPPER_BOUND = 2;\n                /**\n                * Recursive implementation of binary search.\n                *\n                * @param aLow Indices here and lower do not contain the needle.\n                * @param aHigh Indices here and higher do not contain the needle.\n                * @param aNeedle The element being searched for.\n                * @param aHaystack The non-empty array being searched.\n                * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n                * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n                *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n                *     closest element that is smaller than or greater than the one we are\n                *     searching for, respectively, if the exact element cannot be found.\n                */\n\n                function recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n                  // This function terminates when one of the following is true:\n                  //\n                  //   1. We find the exact element we are looking for.\n                  //\n                  //   2. We did not find the exact element, but we can return the index of\n                  //      the next-closest element.\n                  //\n                  //   3. We did not find the exact element, and there is no next-closest\n                  //      element than the one we are searching for, so we return -1.\n                  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n                  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n\n                  if (cmp === 0) {\n                    // Found the element we are looking for.\n                    return mid;\n                  } else if (cmp > 0) {\n                    // Our needle is greater than aHaystack[mid].\n                    if (aHigh - mid > 1) {\n                      // The element is in the upper half.\n                      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n                    } // The exact needle element was not found in this haystack. Determine if\n                    // we are in termination case (3) or (2) and return the appropriate thing.\n\n\n                    if (aBias == exports.LEAST_UPPER_BOUND) {\n                      return aHigh < aHaystack.length ? aHigh : -1;\n                    } else {\n                      return mid;\n                    }\n                  } else {\n                    // Our needle is less than aHaystack[mid].\n                    if (mid - aLow > 1) {\n                      // The element is in the lower half.\n                      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n                    } // we are in termination case (3) or (2) and return the appropriate thing.\n\n\n                    if (aBias == exports.LEAST_UPPER_BOUND) {\n                      return mid;\n                    } else {\n                      return aLow < 0 ? -1 : aLow;\n                    }\n                  }\n                }\n                /**\n                * This is an implementation of binary search which will always try and return\n                * the index of the closest element if there is no exact hit. This is because\n                * mappings between original and generated line/col pairs are single points,\n                * and there is an implicit region between each of them, so a miss just means\n                * that you aren't on the very start of a region.\n                *\n                * @param aNeedle The element you are looking for.\n                * @param aHaystack The array that is being searched.\n                * @param aCompare A function which takes the needle and an element in the\n                *     array and returns -1, 0, or 1 depending on whether the needle is less\n                *     than, equal to, or greater than the element, respectively.\n                * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n                *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n                *     closest element that is smaller than or greater than the one we are\n                *     searching for, respectively, if the exact element cannot be found.\n                *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n                */\n\n\n                exports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n                  if (aHaystack.length === 0) {\n                    return -1;\n                  }\n\n                  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack, aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n\n                  if (index < 0) {\n                    return -1;\n                  } // We have found either the exact element, or the next-closest element than\n                  // the one we are searching for. However, there may be more than one such\n                  // element. Make sure we always return the smallest of these.\n\n\n                  while (index - 1 >= 0) {\n                    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n                      break;\n                    }\n\n                    --index;\n                  }\n\n                  return index;\n                };\n              }, {}],\n              202: [function (require, module, exports) {\n                /* -*- Mode: js; js-indent-level: 2; -*- */\n\n                /*\n                * Copyright 2014 Mozilla Foundation and contributors\n                * Licensed under the New BSD license. See LICENSE or:\n                * http://opensource.org/licenses/BSD-3-Clause\n                */\n                var util = require('./util');\n                /**\n                * Determine whether mappingB is after mappingA with respect to generated\n                * position.\n                */\n\n\n                function generatedPositionAfter(mappingA, mappingB) {\n                  // Optimized for most common case\n                  var lineA = mappingA.generatedLine;\n                  var lineB = mappingB.generatedLine;\n                  var columnA = mappingA.generatedColumn;\n                  var columnB = mappingB.generatedColumn;\n                  return lineB > lineA || lineB == lineA && columnB >= columnA || util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n                }\n                /**\n                * A data structure to provide a sorted view of accumulated mappings in a\n                * performance conscious manner. It trades a neglibable overhead in general\n                * case for a large speedup in case of mappings being added in order.\n                */\n\n\n                function MappingList() {\n                  this._array = [];\n                  this._sorted = true; // Serves as infimum\n\n                  this._last = {\n                    generatedLine: -1,\n                    generatedColumn: 0\n                  };\n                }\n                /**\n                * Iterate through internal items. This method takes the same arguments that\n                * `Array.prototype.forEach` takes.\n                *\n                * NOTE: The order of the mappings is NOT guaranteed.\n                */\n\n\n                MappingList.prototype.unsortedForEach = function MappingList_forEach(aCallback, aThisArg) {\n                  this._array.forEach(aCallback, aThisArg);\n                };\n                /**\n                * Add the given source mapping.\n                *\n                * @param Object aMapping\n                */\n\n\n                MappingList.prototype.add = function MappingList_add(aMapping) {\n                  if (generatedPositionAfter(this._last, aMapping)) {\n                    this._last = aMapping;\n\n                    this._array.push(aMapping);\n                  } else {\n                    this._sorted = false;\n\n                    this._array.push(aMapping);\n                  }\n                };\n                /**\n                * Returns the flat, sorted array of mappings. The mappings are sorted by\n                * generated position.\n                *\n                * WARNING: This method returns internal data without copying, for\n                * performance. The return value must NOT be mutated, and should be treated as\n                * an immutable borrow. If you want to take ownership, you must make your own\n                * copy.\n                */\n\n\n                MappingList.prototype.toArray = function MappingList_toArray() {\n                  if (!this._sorted) {\n                    this._array.sort(util.compareByGeneratedPositionsInflated);\n\n                    this._sorted = true;\n                  }\n\n                  return this._array;\n                };\n\n                exports.MappingList = MappingList;\n              }, {\n                \"./util\": 207\n              }],\n              203: [function (require, module, exports) {\n                /* -*- Mode: js; js-indent-level: 2; -*- */\n\n                /*\n                * Copyright 2011 Mozilla Foundation and contributors\n                * Licensed under the New BSD license. See LICENSE or:\n                * http://opensource.org/licenses/BSD-3-Clause\n                */\n                // It turns out that some (most?) JavaScript engines don't self-host\n                // `Array.prototype.sort`. This makes sense because C++ will likely remain\n                // faster than JS when doing raw CPU-intensive sorting. However, when using a\n                // custom comparator function, calling back and forth between the VM's C++ and\n                // JIT'd JS is rather slow *and* loses JIT type information, resulting in\n                // worse generated code for the comparator function than would be optimal. In\n                // fact, when sorting with a comparator, these costs outweigh the benefits of\n                // sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n                // a ~3500ms mean speed-up in `bench/bench.html`.\n\n                /**\n                 * Swap the elements indexed by `x` and `y` in the array `ary`.\n                 *\n                 * @param {Array} ary\n                 *        The array.\n                 * @param {Number} x\n                 *        The index of the first item.\n                 * @param {Number} y\n                 *        The index of the second item.\n                 */\n                function swap(ary, x, y) {\n                  var temp = ary[x];\n                  ary[x] = ary[y];\n                  ary[y] = temp;\n                }\n                /**\n                * Returns a random integer within the range `low .. high` inclusive.\n                *\n                * @param {Number} low\n                *        The lower bound on the range.\n                * @param {Number} high\n                *        The upper bound on the range.\n                */\n\n\n                function randomIntInRange(low, high) {\n                  return Math.round(low + Math.random() * (high - low));\n                }\n                /**\n                * The Quick Sort algorithm.\n                *\n                * @param {Array} ary\n                *        An array to sort.\n                * @param {function} comparator\n                *        Function to use to compare two items.\n                * @param {Number} p\n                *        Start index of the array\n                * @param {Number} r\n                *        End index of the array\n                */\n\n\n                function doQuickSort(ary, comparator, p, r) {\n                  // If our lower bound is less than our upper bound, we (1) partition the\n                  // array into two pieces and (2) recurse on each half. If it is not, this is\n                  // the empty array and our base case.\n                  if (p < r) {\n                    // (1) Partitioning.\n                    //\n                    // The partitioning chooses a pivot between `p` and `r` and moves all\n                    // elements that are less than or equal to the pivot to the before it, and\n                    // all the elements that are greater than it after it. The effect is that\n                    // once partition is done, the pivot is in the exact place it will be when\n                    // the array is put in sorted order, and it will not need to be moved\n                    // again. This runs in O(n) time.\n                    // Always choose a random pivot so that an input array which is reverse\n                    // sorted does not cause O(n^2) running time.\n                    var pivotIndex = randomIntInRange(p, r);\n                    var i = p - 1;\n                    swap(ary, pivotIndex, r);\n                    var pivot = ary[r]; // Immediately after `j` is incremented in this loop, the following hold\n                    // true:\n                    //\n                    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n                    //\n                    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n\n                    for (var j = p; j < r; j++) {\n                      if (comparator(ary[j], pivot) <= 0) {\n                        i += 1;\n                        swap(ary, i, j);\n                      }\n                    }\n\n                    swap(ary, i + 1, j);\n                    var q = i + 1; // (2) Recurse on each half.\n\n                    doQuickSort(ary, comparator, p, q - 1);\n                    doQuickSort(ary, comparator, q + 1, r);\n                  }\n                }\n                /**\n                * Sort the given array in-place with the given comparator function.\n                *\n                * @param {Array} ary\n                *        An array to sort.\n                * @param {function} comparator\n                *        Function to use to compare two items.\n                */\n\n\n                exports.quickSort = function (ary, comparator) {\n                  doQuickSort(ary, comparator, 0, ary.length - 1);\n                };\n              }, {}],\n              204: [function (require, module, exports) {\n                /* -*- Mode: js; js-indent-level: 2; -*- */\n\n                /*\n                * Copyright 2011 Mozilla Foundation and contributors\n                * Licensed under the New BSD license. See LICENSE or:\n                * http://opensource.org/licenses/BSD-3-Clause\n                */\n                var util = require('./util');\n\n                var binarySearch = require('./binary-search');\n\n                var ArraySet = require('./array-set').ArraySet;\n\n                var base64VLQ = require('./base64-vlq');\n\n                var quickSort = require('./quick-sort').quickSort;\n\n                function SourceMapConsumer(aSourceMap, aSourceMapURL) {\n                  var sourceMap = aSourceMap;\n\n                  if (typeof aSourceMap === 'string') {\n                    sourceMap = util.parseSourceMapInput(aSourceMap);\n                  }\n\n                  return sourceMap.sections != null ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL) : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n                }\n\n                SourceMapConsumer.fromSourceMap = function (aSourceMap, aSourceMapURL) {\n                  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n                };\n                /**\n                * The version of the source mapping spec that we are consuming.\n                */\n\n\n                SourceMapConsumer.prototype._version = 3; // `__generatedMappings` and `__originalMappings` are arrays that hold the\n                // parsed mapping coordinates from the source map's \"mappings\" attribute. They\n                // are lazily instantiated, accessed via the `_generatedMappings` and\n                // `_originalMappings` getters respectively, and we only parse the mappings\n                // and create these arrays once queried for a source location. We jump through\n                // these hoops because there can be many thousands of mappings, and parsing\n                // them is expensive, so we only want to do it if we must.\n                //\n                // Each object in the arrays is of the form:\n                //\n                //     {\n                //       generatedLine: The line number in the generated code,\n                //       generatedColumn: The column number in the generated code,\n                //       source: The path to the original source file that generated this\n                //               chunk of code,\n                //       originalLine: The line number in the original source that\n                //                     corresponds to this chunk of generated code,\n                //       originalColumn: The column number in the original source that\n                //                       corresponds to this chunk of generated code,\n                //       name: The name of the original symbol which generated this chunk of\n                //             code.\n                //     }\n                //\n                // All properties except for `generatedLine` and `generatedColumn` can be\n                // `null`.\n                //\n                // `_generatedMappings` is ordered by the generated positions.\n                //\n                // `_originalMappings` is ordered by the original positions.\n\n                SourceMapConsumer.prototype.__generatedMappings = null;\n                Object.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n                  configurable: true,\n                  enumerable: true,\n                  get: function get() {\n                    if (!this.__generatedMappings) {\n                      this._parseMappings(this._mappings, this.sourceRoot);\n                    }\n\n                    return this.__generatedMappings;\n                  }\n                });\n                SourceMapConsumer.prototype.__originalMappings = null;\n                Object.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n                  configurable: true,\n                  enumerable: true,\n                  get: function get() {\n                    if (!this.__originalMappings) {\n                      this._parseMappings(this._mappings, this.sourceRoot);\n                    }\n\n                    return this.__originalMappings;\n                  }\n                });\n\n                SourceMapConsumer.prototype._charIsMappingSeparator = function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n                  var c = aStr.charAt(index);\n                  return c === \";\" || c === \",\";\n                };\n                /**\n                * Parse the mappings in a string in to a data structure which we can easily\n                * query (the ordered arrays in the `this.__generatedMappings` and\n                * `this.__originalMappings` properties).\n                */\n\n\n                SourceMapConsumer.prototype._parseMappings = function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n                  throw new Error(\"Subclasses must implement _parseMappings\");\n                };\n\n                SourceMapConsumer.GENERATED_ORDER = 1;\n                SourceMapConsumer.ORIGINAL_ORDER = 2;\n                SourceMapConsumer.GREATEST_LOWER_BOUND = 1;\n                SourceMapConsumer.LEAST_UPPER_BOUND = 2;\n                /**\n                * Iterate over each mapping between an original source/line/column and a\n                * generated line/column in this source map.\n                *\n                * @param Function aCallback\n                *        The function that is called with each mapping.\n                * @param Object aContext\n                *        Optional. If specified, this object will be the value of `this` every\n                *        time that `aCallback` is called.\n                * @param aOrder\n                *        Either `SourceMapConsumer.GENERATED_ORDER` or\n                *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n                *        iterate over the mappings sorted by the generated file's line/column\n                *        order or the original's source/line/column order, respectively. Defaults to\n                *        `SourceMapConsumer.GENERATED_ORDER`.\n                */\n\n                SourceMapConsumer.prototype.eachMapping = function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n                  var context = aContext || null;\n                  var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n                  var mappings;\n\n                  switch (order) {\n                    case SourceMapConsumer.GENERATED_ORDER:\n                      mappings = this._generatedMappings;\n                      break;\n\n                    case SourceMapConsumer.ORIGINAL_ORDER:\n                      mappings = this._originalMappings;\n                      break;\n\n                    default:\n                      throw new Error(\"Unknown order of iteration.\");\n                  }\n\n                  var sourceRoot = this.sourceRoot;\n                  mappings.map(function (mapping) {\n                    var source = mapping.source === null ? null : this._sources.at(mapping.source);\n                    source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);\n                    return {\n                      source: source,\n                      generatedLine: mapping.generatedLine,\n                      generatedColumn: mapping.generatedColumn,\n                      originalLine: mapping.originalLine,\n                      originalColumn: mapping.originalColumn,\n                      name: mapping.name === null ? null : this._names.at(mapping.name)\n                    };\n                  }, this).forEach(aCallback, context);\n                };\n                /**\n                * Returns all generated line and column information for the original source,\n                * line, and column provided. If no column is provided, returns all mappings\n                * corresponding to a either the line we are searching for or the next\n                * closest line that has any mappings. Otherwise, returns all mappings\n                * corresponding to the given line and either the column we are searching for\n                * or the next closest column that has any offsets.\n                *\n                * The only argument is an object with the following properties:\n                *\n                *   - source: The filename of the original source.\n                *   - line: The line number in the original source.  The line number is 1-based.\n                *   - column: Optional. the column number in the original source.\n                *    The column number is 0-based.\n                *\n                * and an array of objects is returned, each with the following properties:\n                *\n                *   - line: The line number in the generated source, or null.  The\n                *    line number is 1-based.\n                *   - column: The column number in the generated source, or null.\n                *    The column number is 0-based.\n                */\n\n\n                SourceMapConsumer.prototype.allGeneratedPositionsFor = function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n                  var line = util.getArg(aArgs, 'line'); // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n                  // returns the index of the closest mapping less than the needle. By\n                  // setting needle.originalColumn to 0, we thus find the last mapping for\n                  // the given line, provided such a mapping exists.\n\n                  var needle = {\n                    source: util.getArg(aArgs, 'source'),\n                    originalLine: line,\n                    originalColumn: util.getArg(aArgs, 'column', 0)\n                  };\n                  needle.source = this._findSourceIndex(needle.source);\n\n                  if (needle.source < 0) {\n                    return [];\n                  }\n\n                  var mappings = [];\n\n                  var index = this._findMapping(needle, this._originalMappings, \"originalLine\", \"originalColumn\", util.compareByOriginalPositions, binarySearch.LEAST_UPPER_BOUND);\n\n                  if (index >= 0) {\n                    var mapping = this._originalMappings[index];\n\n                    if (aArgs.column === undefined) {\n                      var originalLine = mapping.originalLine; // Iterate until either we run out of mappings, or we run into\n                      // a mapping for a different line than the one we found. Since\n                      // mappings are sorted, this is guaranteed to find all mappings for\n                      // the line we found.\n\n                      while (mapping && mapping.originalLine === originalLine) {\n                        mappings.push({\n                          line: util.getArg(mapping, 'generatedLine', null),\n                          column: util.getArg(mapping, 'generatedColumn', null),\n                          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n                        });\n                        mapping = this._originalMappings[++index];\n                      }\n                    } else {\n                      var originalColumn = mapping.originalColumn; // Iterate until either we run out of mappings, or we run into\n                      // a mapping for a different line than the one we were searching for.\n                      // Since mappings are sorted, this is guaranteed to find all mappings for\n                      // the line we are searching for.\n\n                      while (mapping && mapping.originalLine === line && mapping.originalColumn == originalColumn) {\n                        mappings.push({\n                          line: util.getArg(mapping, 'generatedLine', null),\n                          column: util.getArg(mapping, 'generatedColumn', null),\n                          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n                        });\n                        mapping = this._originalMappings[++index];\n                      }\n                    }\n                  }\n\n                  return mappings;\n                };\n\n                exports.SourceMapConsumer = SourceMapConsumer;\n                /**\n                * A BasicSourceMapConsumer instance represents a parsed source map which we can\n                * query for information about the original file positions by giving it a file\n                * position in the generated source.\n                *\n                * The first parameter is the raw source map (either as a JSON string, or\n                * already parsed to an object). According to the spec, source maps have the\n                * following attributes:\n                *\n                *   - version: Which version of the source map spec this map is following.\n                *   - sources: An array of URLs to the original source files.\n                *   - names: An array of identifiers which can be referrenced by individual mappings.\n                *   - sourceRoot: Optional. The URL root from which all sources are relative.\n                *   - sourcesContent: Optional. An array of contents of the original source files.\n                *   - mappings: A string of base64 VLQs which contain the actual mappings.\n                *   - file: Optional. The generated file this source map is associated with.\n                *\n                * Here is an example source map, taken from the source map spec[0]:\n                *\n                *     {\n                *       version : 3,\n                *       file: \"out.js\",\n                *       sourceRoot : \"\",\n                *       sources: [\"foo.js\", \"bar.js\"],\n                *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n                *       mappings: \"AA,AB;;ABCDE;\"\n                *     }\n                *\n                * The second parameter, if given, is a string whose value is the URL\n                * at which the source map was found.  This URL is used to compute the\n                * sources array.\n                *\n                * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n                */\n\n                function BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\n                  var sourceMap = aSourceMap;\n\n                  if (typeof aSourceMap === 'string') {\n                    sourceMap = util.parseSourceMapInput(aSourceMap);\n                  }\n\n                  var version = util.getArg(sourceMap, 'version');\n                  var sources = util.getArg(sourceMap, 'sources'); // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n                  // requires the array) to play nice here.\n\n                  var names = util.getArg(sourceMap, 'names', []);\n                  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n                  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n                  var mappings = util.getArg(sourceMap, 'mappings');\n                  var file = util.getArg(sourceMap, 'file', null); // Once again, Sass deviates from the spec and supplies the version as a\n                  // string rather than a number, so we use loose equality checking here.\n\n                  if (version != this._version) {\n                    throw new Error('Unsupported version: ' + version);\n                  }\n\n                  if (sourceRoot) {\n                    sourceRoot = util.normalize(sourceRoot);\n                  }\n\n                  sources = sources.map(String) // Some source maps produce relative source paths like \"./foo.js\" instead of\n                  // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n                  // See bugzil.la/1090768.\n                  .map(util.normalize) // Always ensure that absolute sources are internally stored relative to\n                  // the source root, if the source root is absolute. Not doing this would\n                  // be particularly problematic when the source root is a prefix of the\n                  // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n                  .map(function (source) {\n                    return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source) ? util.relative(sourceRoot, source) : source;\n                  }); // Pass `true` below to allow duplicate names and sources. While source maps\n                  // are intended to be compressed and deduplicated, the TypeScript compiler\n                  // sometimes generates source maps with duplicates in them. See Github issue\n                  // #72 and bugzil.la/889492.\n\n                  this._names = ArraySet.fromArray(names.map(String), true);\n                  this._sources = ArraySet.fromArray(sources, true);\n                  this._absoluteSources = this._sources.toArray().map(function (s) {\n                    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\n                  });\n                  this.sourceRoot = sourceRoot;\n                  this.sourcesContent = sourcesContent;\n                  this._mappings = mappings;\n                  this._sourceMapURL = aSourceMapURL;\n                  this.file = file;\n                }\n\n                BasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\n                BasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n                /**\n                * Utility function to find the index of a source.  Returns -1 if not\n                * found.\n                */\n\n                BasicSourceMapConsumer.prototype._findSourceIndex = function (aSource) {\n                  var relativeSource = aSource;\n\n                  if (this.sourceRoot != null) {\n                    relativeSource = util.relative(this.sourceRoot, relativeSource);\n                  }\n\n                  if (this._sources.has(relativeSource)) {\n                    return this._sources.indexOf(relativeSource);\n                  } // Maybe aSource is an absolute URL as returned by |sources|.  In\n                  // this case we can't simply undo the transform.\n\n\n                  var i;\n\n                  for (i = 0; i < this._absoluteSources.length; ++i) {\n                    if (this._absoluteSources[i] == aSource) {\n                      return i;\n                    }\n                  }\n\n                  return -1;\n                };\n                /**\n                * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n                *\n                * @param SourceMapGenerator aSourceMap\n                *        The source map that will be consumed.\n                * @param String aSourceMapURL\n                *        The URL at which the source map can be found (optional)\n                * @returns BasicSourceMapConsumer\n                */\n\n\n                BasicSourceMapConsumer.fromSourceMap = function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\n                  var smc = Object.create(BasicSourceMapConsumer.prototype);\n                  var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n                  var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n                  smc.sourceRoot = aSourceMap._sourceRoot;\n                  smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(), smc.sourceRoot);\n                  smc.file = aSourceMap._file;\n                  smc._sourceMapURL = aSourceMapURL;\n                  smc._absoluteSources = smc._sources.toArray().map(function (s) {\n                    return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\n                  }); // Because we are modifying the entries (by converting string sources and\n                  // names to indices into the sources and names ArraySets), we have to make\n                  // a copy of the entry or else bad things happen. Shared mutable state\n                  // strikes again! See github issue #191.\n\n                  var generatedMappings = aSourceMap._mappings.toArray().slice();\n\n                  var destGeneratedMappings = smc.__generatedMappings = [];\n                  var destOriginalMappings = smc.__originalMappings = [];\n\n                  for (var i = 0, length = generatedMappings.length; i < length; i++) {\n                    var srcMapping = generatedMappings[i];\n                    var destMapping = new Mapping();\n                    destMapping.generatedLine = srcMapping.generatedLine;\n                    destMapping.generatedColumn = srcMapping.generatedColumn;\n\n                    if (srcMapping.source) {\n                      destMapping.source = sources.indexOf(srcMapping.source);\n                      destMapping.originalLine = srcMapping.originalLine;\n                      destMapping.originalColumn = srcMapping.originalColumn;\n\n                      if (srcMapping.name) {\n                        destMapping.name = names.indexOf(srcMapping.name);\n                      }\n\n                      destOriginalMappings.push(destMapping);\n                    }\n\n                    destGeneratedMappings.push(destMapping);\n                  }\n\n                  quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n                  return smc;\n                };\n                /**\n                * The version of the source mapping spec that we are consuming.\n                */\n\n\n                BasicSourceMapConsumer.prototype._version = 3;\n                /**\n                * The list of original sources.\n                */\n\n                Object.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n                  get: function get() {\n                    return this._absoluteSources.slice();\n                  }\n                });\n                /**\n                * Provide the JIT with a nice shape / hidden class.\n                */\n\n                function Mapping() {\n                  this.generatedLine = 0;\n                  this.generatedColumn = 0;\n                  this.source = null;\n                  this.originalLine = null;\n                  this.originalColumn = null;\n                  this.name = null;\n                }\n                /**\n                * Parse the mappings in a string in to a data structure which we can easily\n                * query (the ordered arrays in the `this.__generatedMappings` and\n                * `this.__originalMappings` properties).\n                */\n\n\n                BasicSourceMapConsumer.prototype._parseMappings = function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n                  var generatedLine = 1;\n                  var previousGeneratedColumn = 0;\n                  var previousOriginalLine = 0;\n                  var previousOriginalColumn = 0;\n                  var previousSource = 0;\n                  var previousName = 0;\n                  var length = aStr.length;\n                  var index = 0;\n                  var cachedSegments = {};\n                  var temp = {};\n                  var originalMappings = [];\n                  var generatedMappings = [];\n                  var mapping, str, segment, end, value;\n\n                  while (index < length) {\n                    if (aStr.charAt(index) === ';') {\n                      generatedLine++;\n                      index++;\n                      previousGeneratedColumn = 0;\n                    } else if (aStr.charAt(index) === ',') {\n                      index++;\n                    } else {\n                      mapping = new Mapping();\n                      mapping.generatedLine = generatedLine; // Because each offset is encoded relative to the previous one,\n                      // many segments often have the same encoding. We can exploit this\n                      // fact by caching the parsed variable length fields of each segment,\n                      // allowing us to avoid a second parse if we encounter the same\n                      // segment again.\n\n                      for (end = index; end < length; end++) {\n                        if (this._charIsMappingSeparator(aStr, end)) {\n                          break;\n                        }\n                      }\n\n                      str = aStr.slice(index, end);\n                      segment = cachedSegments[str];\n\n                      if (segment) {\n                        index += str.length;\n                      } else {\n                        segment = [];\n\n                        while (index < end) {\n                          base64VLQ.decode(aStr, index, temp);\n                          value = temp.value;\n                          index = temp.rest;\n                          segment.push(value);\n                        }\n\n                        if (segment.length === 2) {\n                          throw new Error('Found a source, but no line and column');\n                        }\n\n                        if (segment.length === 3) {\n                          throw new Error('Found a source and line, but no column');\n                        }\n\n                        cachedSegments[str] = segment;\n                      } // Generated column.\n\n\n                      mapping.generatedColumn = previousGeneratedColumn + segment[0];\n                      previousGeneratedColumn = mapping.generatedColumn;\n\n                      if (segment.length > 1) {\n                        // Original source.\n                        mapping.source = previousSource + segment[1];\n                        previousSource += segment[1]; // Original line.\n\n                        mapping.originalLine = previousOriginalLine + segment[2];\n                        previousOriginalLine = mapping.originalLine; // Lines are stored 0-based\n\n                        mapping.originalLine += 1; // Original column.\n\n                        mapping.originalColumn = previousOriginalColumn + segment[3];\n                        previousOriginalColumn = mapping.originalColumn;\n\n                        if (segment.length > 4) {\n                          // Original name.\n                          mapping.name = previousName + segment[4];\n                          previousName += segment[4];\n                        }\n                      }\n\n                      generatedMappings.push(mapping);\n\n                      if (typeof mapping.originalLine === 'number') {\n                        originalMappings.push(mapping);\n                      }\n                    }\n                  }\n\n                  quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n                  this.__generatedMappings = generatedMappings;\n                  quickSort(originalMappings, util.compareByOriginalPositions);\n                  this.__originalMappings = originalMappings;\n                };\n                /**\n                * Find the mapping that best matches the hypothetical \"needle\" mapping that\n                * we are searching for in the given \"haystack\" of mappings.\n                */\n\n\n                BasicSourceMapConsumer.prototype._findMapping = function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName, aColumnName, aComparator, aBias) {\n                  // To return the position we are searching for, we must first find the\n                  // mapping for the given position and then return the opposite position it\n                  // points to. Because the mappings are sorted, we can use binary search to\n                  // find the best mapping.\n                  if (aNeedle[aLineName] <= 0) {\n                    throw new TypeError('Line must be greater than or equal to 1, got ' + aNeedle[aLineName]);\n                  }\n\n                  if (aNeedle[aColumnName] < 0) {\n                    throw new TypeError('Column must be greater than or equal to 0, got ' + aNeedle[aColumnName]);\n                  }\n\n                  return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n                };\n                /**\n                * Compute the last column for each generated mapping. The last column is\n                * inclusive.\n                */\n\n\n                BasicSourceMapConsumer.prototype.computeColumnSpans = function SourceMapConsumer_computeColumnSpans() {\n                  for (var index = 0; index < this._generatedMappings.length; ++index) {\n                    var mapping = this._generatedMappings[index]; // Mappings do not contain a field for the last generated columnt. We\n                    // can come up with an optimistic estimate, however, by assuming that\n                    // mappings are contiguous (i.e. given two consecutive mappings, the\n                    // first mapping ends where the second one starts).\n\n                    if (index + 1 < this._generatedMappings.length) {\n                      var nextMapping = this._generatedMappings[index + 1];\n\n                      if (mapping.generatedLine === nextMapping.generatedLine) {\n                        mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n                        continue;\n                      }\n                    } // The last mapping for each line spans the entire line.\n\n\n                    mapping.lastGeneratedColumn = Infinity;\n                  }\n                };\n                /**\n                * Returns the original source, line, and column information for the generated\n                * source's line and column positions provided. The only argument is an object\n                * with the following properties:\n                *\n                *   - line: The line number in the generated source.  The line number\n                *     is 1-based.\n                *   - column: The column number in the generated source.  The column\n                *     number is 0-based.\n                *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n                *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n                *     closest element that is smaller than or greater than the one we are\n                *     searching for, respectively, if the exact element cannot be found.\n                *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n                *\n                * and an object is returned with the following properties:\n                *\n                *   - source: The original source file, or null.\n                *   - line: The line number in the original source, or null.  The\n                *     line number is 1-based.\n                *   - column: The column number in the original source, or null.  The\n                *     column number is 0-based.\n                *   - name: The original identifier, or null.\n                */\n\n\n                BasicSourceMapConsumer.prototype.originalPositionFor = function SourceMapConsumer_originalPositionFor(aArgs) {\n                  var needle = {\n                    generatedLine: util.getArg(aArgs, 'line'),\n                    generatedColumn: util.getArg(aArgs, 'column')\n                  };\n\n                  var index = this._findMapping(needle, this._generatedMappings, \"generatedLine\", \"generatedColumn\", util.compareByGeneratedPositionsDeflated, util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND));\n\n                  if (index >= 0) {\n                    var mapping = this._generatedMappings[index];\n\n                    if (mapping.generatedLine === needle.generatedLine) {\n                      var source = util.getArg(mapping, 'source', null);\n\n                      if (source !== null) {\n                        source = this._sources.at(source);\n                        source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n                      }\n\n                      var name = util.getArg(mapping, 'name', null);\n\n                      if (name !== null) {\n                        name = this._names.at(name);\n                      }\n\n                      return {\n                        source: source,\n                        line: util.getArg(mapping, 'originalLine', null),\n                        column: util.getArg(mapping, 'originalColumn', null),\n                        name: name\n                      };\n                    }\n                  }\n\n                  return {\n                    source: null,\n                    line: null,\n                    column: null,\n                    name: null\n                  };\n                };\n                /**\n                * Return true if we have the source content for every source in the source\n                * map, false otherwise.\n                */\n\n\n                BasicSourceMapConsumer.prototype.hasContentsOfAllSources = function BasicSourceMapConsumer_hasContentsOfAllSources() {\n                  if (!this.sourcesContent) {\n                    return false;\n                  }\n\n                  return this.sourcesContent.length >= this._sources.size() && !this.sourcesContent.some(function (sc) {\n                    return sc == null;\n                  });\n                };\n                /**\n                * Returns the original source content. The only argument is the url of the\n                * original source file. Returns null if no original source content is\n                * available.\n                */\n\n\n                BasicSourceMapConsumer.prototype.sourceContentFor = function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n                  if (!this.sourcesContent) {\n                    return null;\n                  }\n\n                  var index = this._findSourceIndex(aSource);\n\n                  if (index >= 0) {\n                    return this.sourcesContent[index];\n                  }\n\n                  var relativeSource = aSource;\n\n                  if (this.sourceRoot != null) {\n                    relativeSource = util.relative(this.sourceRoot, relativeSource);\n                  }\n\n                  var url;\n\n                  if (this.sourceRoot != null && (url = util.urlParse(this.sourceRoot))) {\n                    // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n                    // many users. We can help them out when they expect file:// URIs to\n                    // behave like it would if they were running a local HTTP server. See\n                    // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n                    var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n\n                    if (url.scheme == \"file\" && this._sources.has(fileUriAbsPath)) {\n                      return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)];\n                    }\n\n                    if ((!url.path || url.path == \"/\") && this._sources.has(\"/\" + relativeSource)) {\n                      return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n                    }\n                  } // This function is used recursively from\n                  // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n                  // don't want to throw if we can't find the source - we just want to\n                  // return null, so we provide a flag to exit gracefully.\n\n\n                  if (nullOnMissing) {\n                    return null;\n                  } else {\n                    throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n                  }\n                };\n                /**\n                * Returns the generated line and column information for the original source,\n                * line, and column positions provided. The only argument is an object with\n                * the following properties:\n                *\n                *   - source: The filename of the original source.\n                *   - line: The line number in the original source.  The line number\n                *     is 1-based.\n                *   - column: The column number in the original source.  The column\n                *     number is 0-based.\n                *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n                *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n                *     closest element that is smaller than or greater than the one we are\n                *     searching for, respectively, if the exact element cannot be found.\n                *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n                *\n                * and an object is returned with the following properties:\n                *\n                *   - line: The line number in the generated source, or null.  The\n                *     line number is 1-based.\n                *   - column: The column number in the generated source, or null.\n                *     The column number is 0-based.\n                */\n\n\n                BasicSourceMapConsumer.prototype.generatedPositionFor = function SourceMapConsumer_generatedPositionFor(aArgs) {\n                  var source = util.getArg(aArgs, 'source');\n                  source = this._findSourceIndex(source);\n\n                  if (source < 0) {\n                    return {\n                      line: null,\n                      column: null,\n                      lastColumn: null\n                    };\n                  }\n\n                  var needle = {\n                    source: source,\n                    originalLine: util.getArg(aArgs, 'line'),\n                    originalColumn: util.getArg(aArgs, 'column')\n                  };\n\n                  var index = this._findMapping(needle, this._originalMappings, \"originalLine\", \"originalColumn\", util.compareByOriginalPositions, util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND));\n\n                  if (index >= 0) {\n                    var mapping = this._originalMappings[index];\n\n                    if (mapping.source === needle.source) {\n                      return {\n                        line: util.getArg(mapping, 'generatedLine', null),\n                        column: util.getArg(mapping, 'generatedColumn', null),\n                        lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n                      };\n                    }\n                  }\n\n                  return {\n                    line: null,\n                    column: null,\n                    lastColumn: null\n                  };\n                };\n\n                exports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n                /**\n                * An IndexedSourceMapConsumer instance represents a parsed source map which\n                * we can query for information. It differs from BasicSourceMapConsumer in\n                * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n                * input.\n                *\n                * The first parameter is a raw source map (either as a JSON string, or already\n                * parsed to an object). According to the spec for indexed source maps, they\n                * have the following attributes:\n                *\n                *   - version: Which version of the source map spec this map is following.\n                *   - file: Optional. The generated file this source map is associated with.\n                *   - sections: A list of section definitions.\n                *\n                * Each value under the \"sections\" field has two fields:\n                *   - offset: The offset into the original specified at which this section\n                *       begins to apply, defined as an object with a \"line\" and \"column\"\n                *       field.\n                *   - map: A source map definition. This source map could also be indexed,\n                *       but doesn't have to be.\n                *\n                * Instead of the \"map\" field, it's also possible to have a \"url\" field\n                * specifying a URL to retrieve a source map from, but that's currently\n                * unsupported.\n                *\n                * Here's an example source map, taken from the source map spec[0], but\n                * modified to omit a section which uses the \"url\" field.\n                *\n                *  {\n                *    version : 3,\n                *    file: \"app.js\",\n                *    sections: [{\n                *      offset: {line:100, column:10},\n                *      map: {\n                *        version : 3,\n                *        file: \"section.js\",\n                *        sources: [\"foo.js\", \"bar.js\"],\n                *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n                *        mappings: \"AAAA,E;;ABCDE;\"\n                *      }\n                *    }],\n                *  }\n                *\n                * The second parameter, if given, is a string whose value is the URL\n                * at which the source map was found.  This URL is used to compute the\n                * sources array.\n                *\n                * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n                */\n\n                function IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\n                  var sourceMap = aSourceMap;\n\n                  if (typeof aSourceMap === 'string') {\n                    sourceMap = util.parseSourceMapInput(aSourceMap);\n                  }\n\n                  var version = util.getArg(sourceMap, 'version');\n                  var sections = util.getArg(sourceMap, 'sections');\n\n                  if (version != this._version) {\n                    throw new Error('Unsupported version: ' + version);\n                  }\n\n                  this._sources = new ArraySet();\n                  this._names = new ArraySet();\n                  var lastOffset = {\n                    line: -1,\n                    column: 0\n                  };\n                  this._sections = sections.map(function (s) {\n                    if (s.url) {\n                      // The url field will require support for asynchronicity.\n                      // See https://github.com/mozilla/source-map/issues/16\n                      throw new Error('Support for url field in sections not implemented.');\n                    }\n\n                    var offset = util.getArg(s, 'offset');\n                    var offsetLine = util.getArg(offset, 'line');\n                    var offsetColumn = util.getArg(offset, 'column');\n\n                    if (offsetLine < lastOffset.line || offsetLine === lastOffset.line && offsetColumn < lastOffset.column) {\n                      throw new Error('Section offsets must be ordered and non-overlapping.');\n                    }\n\n                    lastOffset = offset;\n                    return {\n                      generatedOffset: {\n                        // The offset fields are 0-based, but we use 1-based indices when\n                        // encoding/decoding from VLQ.\n                        generatedLine: offsetLine + 1,\n                        generatedColumn: offsetColumn + 1\n                      },\n                      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)\n                    };\n                  });\n                }\n\n                IndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\n                IndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n                /**\n                * The version of the source mapping spec that we are consuming.\n                */\n\n                IndexedSourceMapConsumer.prototype._version = 3;\n                /**\n                * The list of original sources.\n                */\n\n                Object.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n                  get: function get() {\n                    var sources = [];\n\n                    for (var i = 0; i < this._sections.length; i++) {\n                      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n                        sources.push(this._sections[i].consumer.sources[j]);\n                      }\n                    }\n\n                    return sources;\n                  }\n                });\n                /**\n                * Returns the original source, line, and column information for the generated\n                * source's line and column positions provided. The only argument is an object\n                * with the following properties:\n                *\n                *   - line: The line number in the generated source.  The line number\n                *     is 1-based.\n                *   - column: The column number in the generated source.  The column\n                *     number is 0-based.\n                *\n                * and an object is returned with the following properties:\n                *\n                *   - source: The original source file, or null.\n                *   - line: The line number in the original source, or null.  The\n                *     line number is 1-based.\n                *   - column: The column number in the original source, or null.  The\n                *     column number is 0-based.\n                *   - name: The original identifier, or null.\n                */\n\n                IndexedSourceMapConsumer.prototype.originalPositionFor = function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n                  var needle = {\n                    generatedLine: util.getArg(aArgs, 'line'),\n                    generatedColumn: util.getArg(aArgs, 'column')\n                  }; // Find the section containing the generated position we're trying to map\n                  // to an original position.\n\n                  var sectionIndex = binarySearch.search(needle, this._sections, function (needle, section) {\n                    var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n\n                    if (cmp) {\n                      return cmp;\n                    }\n\n                    return needle.generatedColumn - section.generatedOffset.generatedColumn;\n                  });\n                  var section = this._sections[sectionIndex];\n\n                  if (!section) {\n                    return {\n                      source: null,\n                      line: null,\n                      column: null,\n                      name: null\n                    };\n                  }\n\n                  return section.consumer.originalPositionFor({\n                    line: needle.generatedLine - (section.generatedOffset.generatedLine - 1),\n                    column: needle.generatedColumn - (section.generatedOffset.generatedLine === needle.generatedLine ? section.generatedOffset.generatedColumn - 1 : 0),\n                    bias: aArgs.bias\n                  });\n                };\n                /**\n                * Return true if we have the source content for every source in the source\n                * map, false otherwise.\n                */\n\n\n                IndexedSourceMapConsumer.prototype.hasContentsOfAllSources = function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n                  return this._sections.every(function (s) {\n                    return s.consumer.hasContentsOfAllSources();\n                  });\n                };\n                /**\n                * Returns the original source content. The only argument is the url of the\n                * original source file. Returns null if no original source content is\n                * available.\n                */\n\n\n                IndexedSourceMapConsumer.prototype.sourceContentFor = function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n                  for (var i = 0; i < this._sections.length; i++) {\n                    var section = this._sections[i];\n                    var content = section.consumer.sourceContentFor(aSource, true);\n\n                    if (content) {\n                      return content;\n                    }\n                  }\n\n                  if (nullOnMissing) {\n                    return null;\n                  } else {\n                    throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n                  }\n                };\n                /**\n                * Returns the generated line and column information for the original source,\n                * line, and column positions provided. The only argument is an object with\n                * the following properties:\n                *\n                *   - source: The filename of the original source.\n                *   - line: The line number in the original source.  The line number\n                *     is 1-based.\n                *   - column: The column number in the original source.  The column\n                *     number is 0-based.\n                *\n                * and an object is returned with the following properties:\n                *\n                *   - line: The line number in the generated source, or null.  The\n                *     line number is 1-based. \n                *   - column: The column number in the generated source, or null.\n                *     The column number is 0-based.\n                */\n\n\n                IndexedSourceMapConsumer.prototype.generatedPositionFor = function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n                  for (var i = 0; i < this._sections.length; i++) {\n                    var section = this._sections[i]; // Only consider this section if the requested source is in the list of\n                    // sources of the consumer.\n\n                    if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {\n                      continue;\n                    }\n\n                    var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n\n                    if (generatedPosition) {\n                      var ret = {\n                        line: generatedPosition.line + (section.generatedOffset.generatedLine - 1),\n                        column: generatedPosition.column + (section.generatedOffset.generatedLine === generatedPosition.line ? section.generatedOffset.generatedColumn - 1 : 0)\n                      };\n                      return ret;\n                    }\n                  }\n\n                  return {\n                    line: null,\n                    column: null\n                  };\n                };\n                /**\n                * Parse the mappings in a string in to a data structure which we can easily\n                * query (the ordered arrays in the `this.__generatedMappings` and\n                * `this.__originalMappings` properties).\n                */\n\n\n                IndexedSourceMapConsumer.prototype._parseMappings = function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n                  this.__generatedMappings = [];\n                  this.__originalMappings = [];\n\n                  for (var i = 0; i < this._sections.length; i++) {\n                    var section = this._sections[i];\n                    var sectionMappings = section.consumer._generatedMappings;\n\n                    for (var j = 0; j < sectionMappings.length; j++) {\n                      var mapping = sectionMappings[j];\n\n                      var source = section.consumer._sources.at(mapping.source);\n\n                      source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\n\n                      this._sources.add(source);\n\n                      source = this._sources.indexOf(source);\n                      var name = null;\n\n                      if (mapping.name) {\n                        name = section.consumer._names.at(mapping.name);\n\n                        this._names.add(name);\n\n                        name = this._names.indexOf(name);\n                      } // The mappings coming from the consumer for the section have\n                      // generated positions relative to the start of the section, so we\n                      // need to offset them to be relative to the start of the concatenated\n                      // generated file.\n\n\n                      var adjustedMapping = {\n                        source: source,\n                        generatedLine: mapping.generatedLine + (section.generatedOffset.generatedLine - 1),\n                        generatedColumn: mapping.generatedColumn + (section.generatedOffset.generatedLine === mapping.generatedLine ? section.generatedOffset.generatedColumn - 1 : 0),\n                        originalLine: mapping.originalLine,\n                        originalColumn: mapping.originalColumn,\n                        name: name\n                      };\n\n                      this.__generatedMappings.push(adjustedMapping);\n\n                      if (typeof adjustedMapping.originalLine === 'number') {\n                        this.__originalMappings.push(adjustedMapping);\n                      }\n                    }\n                  }\n\n                  quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n                  quickSort(this.__originalMappings, util.compareByOriginalPositions);\n                };\n\n                exports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n              }, {\n                \"./array-set\": 198,\n                \"./base64-vlq\": 199,\n                \"./binary-search\": 201,\n                \"./quick-sort\": 203,\n                \"./util\": 207\n              }],\n              205: [function (require, module, exports) {\n                /* -*- Mode: js; js-indent-level: 2; -*- */\n\n                /*\n                * Copyright 2011 Mozilla Foundation and contributors\n                * Licensed under the New BSD license. See LICENSE or:\n                * http://opensource.org/licenses/BSD-3-Clause\n                */\n                var base64VLQ = require('./base64-vlq');\n\n                var util = require('./util');\n\n                var ArraySet = require('./array-set').ArraySet;\n\n                var MappingList = require('./mapping-list').MappingList;\n                /**\n                * An instance of the SourceMapGenerator represents a source map which is\n                * being built incrementally. You may pass an object with the following\n                * properties:\n                *\n                *   - file: The filename of the generated source.\n                *   - sourceRoot: A root for all relative URLs in this source map.\n                */\n\n\n                function SourceMapGenerator(aArgs) {\n                  if (!aArgs) {\n                    aArgs = {};\n                  }\n\n                  this._file = util.getArg(aArgs, 'file', null);\n                  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n                  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n                  this._sources = new ArraySet();\n                  this._names = new ArraySet();\n                  this._mappings = new MappingList();\n                  this._sourcesContents = null;\n                }\n\n                SourceMapGenerator.prototype._version = 3;\n                /**\n                * Creates a new SourceMapGenerator based on a SourceMapConsumer\n                *\n                * @param aSourceMapConsumer The SourceMap.\n                */\n\n                SourceMapGenerator.fromSourceMap = function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n                  var sourceRoot = aSourceMapConsumer.sourceRoot;\n                  var generator = new SourceMapGenerator({\n                    file: aSourceMapConsumer.file,\n                    sourceRoot: sourceRoot\n                  });\n                  aSourceMapConsumer.eachMapping(function (mapping) {\n                    var newMapping = {\n                      generated: {\n                        line: mapping.generatedLine,\n                        column: mapping.generatedColumn\n                      }\n                    };\n\n                    if (mapping.source != null) {\n                      newMapping.source = mapping.source;\n\n                      if (sourceRoot != null) {\n                        newMapping.source = util.relative(sourceRoot, newMapping.source);\n                      }\n\n                      newMapping.original = {\n                        line: mapping.originalLine,\n                        column: mapping.originalColumn\n                      };\n\n                      if (mapping.name != null) {\n                        newMapping.name = mapping.name;\n                      }\n                    }\n\n                    generator.addMapping(newMapping);\n                  });\n                  aSourceMapConsumer.sources.forEach(function (sourceFile) {\n                    var sourceRelative = sourceFile;\n\n                    if (sourceRoot !== null) {\n                      sourceRelative = util.relative(sourceRoot, sourceFile);\n                    }\n\n                    if (!generator._sources.has(sourceRelative)) {\n                      generator._sources.add(sourceRelative);\n                    }\n\n                    var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n\n                    if (content != null) {\n                      generator.setSourceContent(sourceFile, content);\n                    }\n                  });\n                  return generator;\n                };\n                /**\n                * Add a single mapping from original source line and column to the generated\n                * source's line and column for this source map being created. The mapping\n                * object should have the following properties:\n                *\n                *   - generated: An object with the generated line and column positions.\n                *   - original: An object with the original line and column positions.\n                *   - source: The original source file (relative to the sourceRoot).\n                *   - name: An optional original token name for this mapping.\n                */\n\n\n                SourceMapGenerator.prototype.addMapping = function SourceMapGenerator_addMapping(aArgs) {\n                  var generated = util.getArg(aArgs, 'generated');\n                  var original = util.getArg(aArgs, 'original', null);\n                  var source = util.getArg(aArgs, 'source', null);\n                  var name = util.getArg(aArgs, 'name', null);\n\n                  if (!this._skipValidation) {\n                    this._validateMapping(generated, original, source, name);\n                  }\n\n                  if (source != null) {\n                    source = String(source);\n\n                    if (!this._sources.has(source)) {\n                      this._sources.add(source);\n                    }\n                  }\n\n                  if (name != null) {\n                    name = String(name);\n\n                    if (!this._names.has(name)) {\n                      this._names.add(name);\n                    }\n                  }\n\n                  this._mappings.add({\n                    generatedLine: generated.line,\n                    generatedColumn: generated.column,\n                    originalLine: original != null && original.line,\n                    originalColumn: original != null && original.column,\n                    source: source,\n                    name: name\n                  });\n                };\n                /**\n                * Set the source content for a source file.\n                */\n\n\n                SourceMapGenerator.prototype.setSourceContent = function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n                  var source = aSourceFile;\n\n                  if (this._sourceRoot != null) {\n                    source = util.relative(this._sourceRoot, source);\n                  }\n\n                  if (aSourceContent != null) {\n                    // Add the source content to the _sourcesContents map.\n                    // Create a new _sourcesContents map if the property is null.\n                    if (!this._sourcesContents) {\n                      this._sourcesContents = Object.create(null);\n                    }\n\n                    this._sourcesContents[util.toSetString(source)] = aSourceContent;\n                  } else if (this._sourcesContents) {\n                    // Remove the source file from the _sourcesContents map.\n                    // If the _sourcesContents map is empty, set the property to null.\n                    delete this._sourcesContents[util.toSetString(source)];\n\n                    if (Object.keys(this._sourcesContents).length === 0) {\n                      this._sourcesContents = null;\n                    }\n                  }\n                };\n                /**\n                * Applies the mappings of a sub-source-map for a specific source file to the\n                * source map being generated. Each mapping to the supplied source file is\n                * rewritten using the supplied source map. Note: The resolution for the\n                * resulting mappings is the minimium of this map and the supplied map.\n                *\n                * @param aSourceMapConsumer The source map to be applied.\n                * @param aSourceFile Optional. The filename of the source file.\n                *        If omitted, SourceMapConsumer's file property will be used.\n                * @param aSourceMapPath Optional. The dirname of the path to the source map\n                *        to be applied. If relative, it is relative to the SourceMapConsumer.\n                *        This parameter is needed when the two source maps aren't in the same\n                *        directory, and the source map to be applied contains relative source\n                *        paths. If so, those relative source paths need to be rewritten\n                *        relative to the SourceMapGenerator.\n                */\n\n\n                SourceMapGenerator.prototype.applySourceMap = function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n                  var sourceFile = aSourceFile; // If aSourceFile is omitted, we will use the file property of the SourceMap\n\n                  if (aSourceFile == null) {\n                    if (aSourceMapConsumer.file == null) {\n                      throw new Error('SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' + 'or the source map\\'s \"file\" property. Both were omitted.');\n                    }\n\n                    sourceFile = aSourceMapConsumer.file;\n                  }\n\n                  var sourceRoot = this._sourceRoot; // Make \"sourceFile\" relative if an absolute Url is passed.\n\n                  if (sourceRoot != null) {\n                    sourceFile = util.relative(sourceRoot, sourceFile);\n                  } // Applying the SourceMap can add and remove items from the sources and\n                  // the names array.\n\n\n                  var newSources = new ArraySet();\n                  var newNames = new ArraySet(); // Find mappings for the \"sourceFile\"\n\n                  this._mappings.unsortedForEach(function (mapping) {\n                    if (mapping.source === sourceFile && mapping.originalLine != null) {\n                      // Check if it can be mapped by the source map, then update the mapping.\n                      var original = aSourceMapConsumer.originalPositionFor({\n                        line: mapping.originalLine,\n                        column: mapping.originalColumn\n                      });\n\n                      if (original.source != null) {\n                        // Copy mapping\n                        mapping.source = original.source;\n\n                        if (aSourceMapPath != null) {\n                          mapping.source = util.join(aSourceMapPath, mapping.source);\n                        }\n\n                        if (sourceRoot != null) {\n                          mapping.source = util.relative(sourceRoot, mapping.source);\n                        }\n\n                        mapping.originalLine = original.line;\n                        mapping.originalColumn = original.column;\n\n                        if (original.name != null) {\n                          mapping.name = original.name;\n                        }\n                      }\n                    }\n\n                    var source = mapping.source;\n\n                    if (source != null && !newSources.has(source)) {\n                      newSources.add(source);\n                    }\n\n                    var name = mapping.name;\n\n                    if (name != null && !newNames.has(name)) {\n                      newNames.add(name);\n                    }\n                  }, this);\n\n                  this._sources = newSources;\n                  this._names = newNames; // Copy sourcesContents of applied map.\n\n                  aSourceMapConsumer.sources.forEach(function (sourceFile) {\n                    var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n\n                    if (content != null) {\n                      if (aSourceMapPath != null) {\n                        sourceFile = util.join(aSourceMapPath, sourceFile);\n                      }\n\n                      if (sourceRoot != null) {\n                        sourceFile = util.relative(sourceRoot, sourceFile);\n                      }\n\n                      this.setSourceContent(sourceFile, content);\n                    }\n                  }, this);\n                };\n                /**\n                * A mapping can have one of the three levels of data:\n                *\n                *   1. Just the generated position.\n                *   2. The Generated position, original position, and original source.\n                *   3. Generated and original position, original source, as well as a name\n                *      token.\n                *\n                * To maintain consistency, we validate that any new mapping being added falls\n                * in to one of these categories.\n                */\n\n\n                SourceMapGenerator.prototype._validateMapping = function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource, aName) {\n                  // When aOriginal is truthy but has empty values for .line and .column,\n                  // it is most likely a programmer error. In this case we throw a very\n                  // specific error message to try to guide them the right way.\n                  // For example: https://github.com/Polymer/polymer-bundler/pull/519\n                  if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n                    throw new Error('original.line and original.column are not numbers -- you probably meant to omit ' + 'the original mapping entirely and only map the generated position. If so, pass ' + 'null for the original mapping instead of an object with empty or null values.');\n                  }\n\n                  if (aGenerated && 'line' in aGenerated && 'column' in aGenerated && aGenerated.line > 0 && aGenerated.column >= 0 && !aOriginal && !aSource && !aName) {\n                    // Case 1.\n                    return;\n                  } else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated && aOriginal && 'line' in aOriginal && 'column' in aOriginal && aGenerated.line > 0 && aGenerated.column >= 0 && aOriginal.line > 0 && aOriginal.column >= 0 && aSource) {\n                    // Cases 2 and 3.\n                    return;\n                  } else {\n                    throw new Error('Invalid mapping: ' + JSON.stringify({\n                      generated: aGenerated,\n                      source: aSource,\n                      original: aOriginal,\n                      name: aName\n                    }));\n                  }\n                };\n                /**\n                * Serialize the accumulated mappings in to the stream of base 64 VLQs\n                * specified by the source map format.\n                */\n\n\n                SourceMapGenerator.prototype._serializeMappings = function SourceMapGenerator_serializeMappings() {\n                  var previousGeneratedColumn = 0;\n                  var previousGeneratedLine = 1;\n                  var previousOriginalColumn = 0;\n                  var previousOriginalLine = 0;\n                  var previousName = 0;\n                  var previousSource = 0;\n                  var result = '';\n                  var next;\n                  var mapping;\n                  var nameIdx;\n                  var sourceIdx;\n\n                  var mappings = this._mappings.toArray();\n\n                  for (var i = 0, len = mappings.length; i < len; i++) {\n                    mapping = mappings[i];\n                    next = '';\n\n                    if (mapping.generatedLine !== previousGeneratedLine) {\n                      previousGeneratedColumn = 0;\n\n                      while (mapping.generatedLine !== previousGeneratedLine) {\n                        next += ';';\n                        previousGeneratedLine++;\n                      }\n                    } else {\n                      if (i > 0) {\n                        if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n                          continue;\n                        }\n\n                        next += ',';\n                      }\n                    }\n\n                    next += base64VLQ.encode(mapping.generatedColumn - previousGeneratedColumn);\n                    previousGeneratedColumn = mapping.generatedColumn;\n\n                    if (mapping.source != null) {\n                      sourceIdx = this._sources.indexOf(mapping.source);\n                      next += base64VLQ.encode(sourceIdx - previousSource);\n                      previousSource = sourceIdx; // lines are stored 0-based in SourceMap spec version 3\n\n                      next += base64VLQ.encode(mapping.originalLine - 1 - previousOriginalLine);\n                      previousOriginalLine = mapping.originalLine - 1;\n                      next += base64VLQ.encode(mapping.originalColumn - previousOriginalColumn);\n                      previousOriginalColumn = mapping.originalColumn;\n\n                      if (mapping.name != null) {\n                        nameIdx = this._names.indexOf(mapping.name);\n                        next += base64VLQ.encode(nameIdx - previousName);\n                        previousName = nameIdx;\n                      }\n                    }\n\n                    result += next;\n                  }\n\n                  return result;\n                };\n\n                SourceMapGenerator.prototype._generateSourcesContent = function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n                  return aSources.map(function (source) {\n                    if (!this._sourcesContents) {\n                      return null;\n                    }\n\n                    if (aSourceRoot != null) {\n                      source = util.relative(aSourceRoot, source);\n                    }\n\n                    var key = util.toSetString(source);\n                    return Object.prototype.hasOwnProperty.call(this._sourcesContents, key) ? this._sourcesContents[key] : null;\n                  }, this);\n                };\n                /**\n                * Externalize the source map.\n                */\n\n\n                SourceMapGenerator.prototype.toJSON = function SourceMapGenerator_toJSON() {\n                  var map = {\n                    version: this._version,\n                    sources: this._sources.toArray(),\n                    names: this._names.toArray(),\n                    mappings: this._serializeMappings()\n                  };\n\n                  if (this._file != null) {\n                    map.file = this._file;\n                  }\n\n                  if (this._sourceRoot != null) {\n                    map.sourceRoot = this._sourceRoot;\n                  }\n\n                  if (this._sourcesContents) {\n                    map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n                  }\n\n                  return map;\n                };\n                /**\n                * Render the source map being generated to a string.\n                */\n\n\n                SourceMapGenerator.prototype.toString = function SourceMapGenerator_toString() {\n                  return JSON.stringify(this.toJSON());\n                };\n\n                exports.SourceMapGenerator = SourceMapGenerator;\n              }, {\n                \"./array-set\": 198,\n                \"./base64-vlq\": 199,\n                \"./mapping-list\": 202,\n                \"./util\": 207\n              }],\n              206: [function (require, module, exports) {\n                /* -*- Mode: js; js-indent-level: 2; -*- */\n\n                /*\n                * Copyright 2011 Mozilla Foundation and contributors\n                * Licensed under the New BSD license. See LICENSE or:\n                * http://opensource.org/licenses/BSD-3-Clause\n                */\n                var SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\n\n                var util = require('./util'); // Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n                // operating systems these days (capturing the result).\n\n\n                var REGEX_NEWLINE = /(\\r?\\n)/; // Newline character code for charCodeAt() comparisons\n\n                var NEWLINE_CODE = 10; // Private symbol for identifying `SourceNode`s when multiple versions of\n                // the source-map library are loaded. This MUST NOT CHANGE across\n                // versions!\n\n                var isSourceNode = \"$$$isSourceNode$$$\";\n                /**\n                * SourceNodes provide a way to abstract over interpolating/concatenating\n                * snippets of generated JavaScript source code while maintaining the line and\n                * column information associated with the original source code.\n                *\n                * @param aLine The original line number.\n                * @param aColumn The original column number.\n                * @param aSource The original source's filename.\n                * @param aChunks Optional. An array of strings which are snippets of\n                *        generated JS, or other SourceNodes.\n                * @param aName The original identifier.\n                */\n\n                function SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n                  this.children = [];\n                  this.sourceContents = {};\n                  this.line = aLine == null ? null : aLine;\n                  this.column = aColumn == null ? null : aColumn;\n                  this.source = aSource == null ? null : aSource;\n                  this.name = aName == null ? null : aName;\n                  this[isSourceNode] = true;\n                  if (aChunks != null) this.add(aChunks);\n                }\n                /**\n                * Creates a SourceNode from generated code and a SourceMapConsumer.\n                *\n                * @param aGeneratedCode The generated code\n                * @param aSourceMapConsumer The SourceMap for the generated code\n                * @param aRelativePath Optional. The path that relative sources in the\n                *        SourceMapConsumer should be relative to.\n                */\n\n\n                SourceNode.fromStringWithSourceMap = function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n                  // The SourceNode we want to fill with the generated code\n                  // and the SourceMap\n                  var node = new SourceNode(); // All even indices of this array are one line of the generated code,\n                  // while all odd indices are the newlines between two adjacent lines\n                  // (since `REGEX_NEWLINE` captures its match).\n                  // Processed fragments are accessed by calling `shiftNextLine`.\n\n                  var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n                  var remainingLinesIndex = 0;\n\n                  var shiftNextLine = function shiftNextLine() {\n                    var lineContents = getNextLine(); // The last line of a file might not have a newline.\n\n                    var newLine = getNextLine() || \"\";\n                    return lineContents + newLine;\n\n                    function getNextLine() {\n                      return remainingLinesIndex < remainingLines.length ? remainingLines[remainingLinesIndex++] : undefined;\n                    }\n                  }; // We need to remember the position of \"remainingLines\"\n\n\n                  var lastGeneratedLine = 1,\n                      lastGeneratedColumn = 0; // The generate SourceNodes we need a code range.\n                  // To extract it current and last mapping is used.\n                  // Here we store the last mapping.\n\n                  var lastMapping = null;\n                  aSourceMapConsumer.eachMapping(function (mapping) {\n                    if (lastMapping !== null) {\n                      // We add the code from \"lastMapping\" to \"mapping\":\n                      // First check if there is a new line in between.\n                      if (lastGeneratedLine < mapping.generatedLine) {\n                        // Associate first line with \"lastMapping\"\n                        addMappingWithCode(lastMapping, shiftNextLine());\n                        lastGeneratedLine++;\n                        lastGeneratedColumn = 0; // The remaining code is added without mapping\n                      } else {\n                        // There is no new line in between.\n                        // Associate the code between \"lastGeneratedColumn\" and\n                        // \"mapping.generatedColumn\" with \"lastMapping\"\n                        var nextLine = remainingLines[remainingLinesIndex] || '';\n                        var code = nextLine.substr(0, mapping.generatedColumn - lastGeneratedColumn);\n                        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn - lastGeneratedColumn);\n                        lastGeneratedColumn = mapping.generatedColumn;\n                        addMappingWithCode(lastMapping, code); // No more remaining code, continue\n\n                        lastMapping = mapping;\n                        return;\n                      }\n                    } // We add the generated code until the first mapping\n                    // to the SourceNode without any mapping.\n                    // Each line is added as separate string.\n\n\n                    while (lastGeneratedLine < mapping.generatedLine) {\n                      node.add(shiftNextLine());\n                      lastGeneratedLine++;\n                    }\n\n                    if (lastGeneratedColumn < mapping.generatedColumn) {\n                      var nextLine = remainingLines[remainingLinesIndex] || '';\n                      node.add(nextLine.substr(0, mapping.generatedColumn));\n                      remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n                      lastGeneratedColumn = mapping.generatedColumn;\n                    }\n\n                    lastMapping = mapping;\n                  }, this); // We have processed all mappings.\n\n                  if (remainingLinesIndex < remainingLines.length) {\n                    if (lastMapping) {\n                      // Associate the remaining code in the current line with \"lastMapping\"\n                      addMappingWithCode(lastMapping, shiftNextLine());\n                    } // and add the remaining lines without any mapping\n\n\n                    node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n                  } // Copy sourcesContent into SourceNode\n\n\n                  aSourceMapConsumer.sources.forEach(function (sourceFile) {\n                    var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n\n                    if (content != null) {\n                      if (aRelativePath != null) {\n                        sourceFile = util.join(aRelativePath, sourceFile);\n                      }\n\n                      node.setSourceContent(sourceFile, content);\n                    }\n                  });\n                  return node;\n\n                  function addMappingWithCode(mapping, code) {\n                    if (mapping === null || mapping.source === undefined) {\n                      node.add(code);\n                    } else {\n                      var source = aRelativePath ? util.join(aRelativePath, mapping.source) : mapping.source;\n                      node.add(new SourceNode(mapping.originalLine, mapping.originalColumn, source, code, mapping.name));\n                    }\n                  }\n                };\n                /**\n                * Add a chunk of generated JS to this source node.\n                *\n                * @param aChunk A string snippet of generated JS code, another instance of\n                *        SourceNode, or an array where each member is one of those things.\n                */\n\n\n                SourceNode.prototype.add = function SourceNode_add(aChunk) {\n                  if (Array.isArray(aChunk)) {\n                    aChunk.forEach(function (chunk) {\n                      this.add(chunk);\n                    }, this);\n                  } else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n                    if (aChunk) {\n                      this.children.push(aChunk);\n                    }\n                  } else {\n                    throw new TypeError(\"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk);\n                  }\n\n                  return this;\n                };\n                /**\n                * Add a chunk of generated JS to the beginning of this source node.\n                *\n                * @param aChunk A string snippet of generated JS code, another instance of\n                *        SourceNode, or an array where each member is one of those things.\n                */\n\n\n                SourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n                  if (Array.isArray(aChunk)) {\n                    for (var i = aChunk.length - 1; i >= 0; i--) {\n                      this.prepend(aChunk[i]);\n                    }\n                  } else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n                    this.children.unshift(aChunk);\n                  } else {\n                    throw new TypeError(\"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk);\n                  }\n\n                  return this;\n                };\n                /**\n                * Walk over the tree of JS snippets in this node and its children. The\n                * walking function is called once for each snippet of JS and is passed that\n                * snippet and the its original associated source's line/column location.\n                *\n                * @param aFn The traversal function.\n                */\n\n\n                SourceNode.prototype.walk = function SourceNode_walk(aFn) {\n                  var chunk;\n\n                  for (var i = 0, len = this.children.length; i < len; i++) {\n                    chunk = this.children[i];\n\n                    if (chunk[isSourceNode]) {\n                      chunk.walk(aFn);\n                    } else {\n                      if (chunk !== '') {\n                        aFn(chunk, {\n                          source: this.source,\n                          line: this.line,\n                          column: this.column,\n                          name: this.name\n                        });\n                      }\n                    }\n                  }\n                };\n                /**\n                * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n                * each of `this.children`.\n                *\n                * @param aSep The separator.\n                */\n\n\n                SourceNode.prototype.join = function SourceNode_join(aSep) {\n                  var newChildren;\n                  var i;\n                  var len = this.children.length;\n\n                  if (len > 0) {\n                    newChildren = [];\n\n                    for (i = 0; i < len - 1; i++) {\n                      newChildren.push(this.children[i]);\n                      newChildren.push(aSep);\n                    }\n\n                    newChildren.push(this.children[i]);\n                    this.children = newChildren;\n                  }\n\n                  return this;\n                };\n                /**\n                * Call String.prototype.replace on the very right-most source snippet. Useful\n                * for trimming whitespace from the end of a source node, etc.\n                *\n                * @param aPattern The pattern to replace.\n                * @param aReplacement The thing to replace the pattern with.\n                */\n\n\n                SourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n                  var lastChild = this.children[this.children.length - 1];\n\n                  if (lastChild[isSourceNode]) {\n                    lastChild.replaceRight(aPattern, aReplacement);\n                  } else if (typeof lastChild === 'string') {\n                    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n                  } else {\n                    this.children.push(''.replace(aPattern, aReplacement));\n                  }\n\n                  return this;\n                };\n                /**\n                * Set the source content for a source file. This will be added to the SourceMapGenerator\n                * in the sourcesContent field.\n                *\n                * @param aSourceFile The filename of the source file\n                * @param aSourceContent The content of the source file\n                */\n\n\n                SourceNode.prototype.setSourceContent = function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n                  this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n                };\n                /**\n                * Walk over the tree of SourceNodes. The walking function is called for each\n                * source file content and is passed the filename and source content.\n                *\n                * @param aFn The traversal function.\n                */\n\n\n                SourceNode.prototype.walkSourceContents = function SourceNode_walkSourceContents(aFn) {\n                  for (var i = 0, len = this.children.length; i < len; i++) {\n                    if (this.children[i][isSourceNode]) {\n                      this.children[i].walkSourceContents(aFn);\n                    }\n                  }\n\n                  var sources = Object.keys(this.sourceContents);\n\n                  for (var i = 0, len = sources.length; i < len; i++) {\n                    aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n                  }\n                };\n                /**\n                * Return the string representation of this source node. Walks over the tree\n                * and concatenates all the various snippets together to one string.\n                */\n\n\n                SourceNode.prototype.toString = function SourceNode_toString() {\n                  var str = \"\";\n                  this.walk(function (chunk) {\n                    str += chunk;\n                  });\n                  return str;\n                };\n                /**\n                * Returns the string representation of this source node along with a source\n                * map.\n                */\n\n\n                SourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n                  var generated = {\n                    code: \"\",\n                    line: 1,\n                    column: 0\n                  };\n                  var map = new SourceMapGenerator(aArgs);\n                  var sourceMappingActive = false;\n                  var lastOriginalSource = null;\n                  var lastOriginalLine = null;\n                  var lastOriginalColumn = null;\n                  var lastOriginalName = null;\n                  this.walk(function (chunk, original) {\n                    generated.code += chunk;\n\n                    if (original.source !== null && original.line !== null && original.column !== null) {\n                      if (lastOriginalSource !== original.source || lastOriginalLine !== original.line || lastOriginalColumn !== original.column || lastOriginalName !== original.name) {\n                        map.addMapping({\n                          source: original.source,\n                          original: {\n                            line: original.line,\n                            column: original.column\n                          },\n                          generated: {\n                            line: generated.line,\n                            column: generated.column\n                          },\n                          name: original.name\n                        });\n                      }\n\n                      lastOriginalSource = original.source;\n                      lastOriginalLine = original.line;\n                      lastOriginalColumn = original.column;\n                      lastOriginalName = original.name;\n                      sourceMappingActive = true;\n                    } else if (sourceMappingActive) {\n                      map.addMapping({\n                        generated: {\n                          line: generated.line,\n                          column: generated.column\n                        }\n                      });\n                      lastOriginalSource = null;\n                      sourceMappingActive = false;\n                    }\n\n                    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n                      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n                        generated.line++;\n                        generated.column = 0; // Mappings end at eol\n\n                        if (idx + 1 === length) {\n                          lastOriginalSource = null;\n                          sourceMappingActive = false;\n                        } else if (sourceMappingActive) {\n                          map.addMapping({\n                            source: original.source,\n                            original: {\n                              line: original.line,\n                              column: original.column\n                            },\n                            generated: {\n                              line: generated.line,\n                              column: generated.column\n                            },\n                            name: original.name\n                          });\n                        }\n                      } else {\n                        generated.column++;\n                      }\n                    }\n                  });\n                  this.walkSourceContents(function (sourceFile, sourceContent) {\n                    map.setSourceContent(sourceFile, sourceContent);\n                  });\n                  return {\n                    code: generated.code,\n                    map: map\n                  };\n                };\n\n                exports.SourceNode = SourceNode;\n              }, {\n                \"./source-map-generator\": 205,\n                \"./util\": 207\n              }],\n              207: [function (require, module, exports) {\n                /* -*- Mode: js; js-indent-level: 2; -*- */\n\n                /*\n                * Copyright 2011 Mozilla Foundation and contributors\n                * Licensed under the New BSD license. See LICENSE or:\n                * http://opensource.org/licenses/BSD-3-Clause\n                */\n\n                /**\n                * This is a helper function for getting values from parameter/options\n                * objects.\n                *\n                * @param args The object we are extracting values from\n                * @param name The name of the property we are getting.\n                * @param defaultValue An optional value to return if the property is missing\n                * from the object. If this is not specified and the property is missing, an\n                * error will be thrown.\n                */\n                function getArg(aArgs, aName, aDefaultValue) {\n                  if (aName in aArgs) {\n                    return aArgs[aName];\n                  } else if (arguments.length === 3) {\n                    return aDefaultValue;\n                  } else {\n                    throw new Error('\"' + aName + '\" is a required argument.');\n                  }\n                }\n\n                exports.getArg = getArg;\n                var urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\n                var dataUrlRegexp = /^data:.+\\,.+$/;\n\n                function urlParse(aUrl) {\n                  var match = aUrl.match(urlRegexp);\n\n                  if (!match) {\n                    return null;\n                  }\n\n                  return {\n                    scheme: match[1],\n                    auth: match[2],\n                    host: match[3],\n                    port: match[4],\n                    path: match[5]\n                  };\n                }\n\n                exports.urlParse = urlParse;\n\n                function urlGenerate(aParsedUrl) {\n                  var url = '';\n\n                  if (aParsedUrl.scheme) {\n                    url += aParsedUrl.scheme + ':';\n                  }\n\n                  url += '//';\n\n                  if (aParsedUrl.auth) {\n                    url += aParsedUrl.auth + '@';\n                  }\n\n                  if (aParsedUrl.host) {\n                    url += aParsedUrl.host;\n                  }\n\n                  if (aParsedUrl.port) {\n                    url += \":\" + aParsedUrl.port;\n                  }\n\n                  if (aParsedUrl.path) {\n                    url += aParsedUrl.path;\n                  }\n\n                  return url;\n                }\n\n                exports.urlGenerate = urlGenerate;\n                /**\n                * Normalizes a path, or the path portion of a URL:\n                *\n                * - Replaces consecutive slashes with one slash.\n                * - Removes unnecessary '.' parts.\n                * - Removes unnecessary '<dir>/..' parts.\n                *\n                * Based on code in the Node.js 'path' core module.\n                *\n                * @param aPath The path or url to normalize.\n                */\n\n                function normalize(aPath) {\n                  var path = aPath;\n                  var url = urlParse(aPath);\n\n                  if (url) {\n                    if (!url.path) {\n                      return aPath;\n                    }\n\n                    path = url.path;\n                  }\n\n                  var isAbsolute = exports.isAbsolute(path);\n                  var parts = path.split(/\\/+/);\n\n                  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n                    part = parts[i];\n\n                    if (part === '.') {\n                      parts.splice(i, 1);\n                    } else if (part === '..') {\n                      up++;\n                    } else if (up > 0) {\n                      if (part === '') {\n                        // The first part is blank if the path is absolute. Trying to go\n                        // above the root is a no-op. Therefore we can remove all '..' parts\n                        // directly after the root.\n                        parts.splice(i + 1, up);\n                        up = 0;\n                      } else {\n                        parts.splice(i, 2);\n                        up--;\n                      }\n                    }\n                  }\n\n                  path = parts.join('/');\n\n                  if (path === '') {\n                    path = isAbsolute ? '/' : '.';\n                  }\n\n                  if (url) {\n                    url.path = path;\n                    return urlGenerate(url);\n                  }\n\n                  return path;\n                }\n\n                exports.normalize = normalize;\n                /**\n                * Joins two paths/URLs.\n                *\n                * @param aRoot The root path or URL.\n                * @param aPath The path or URL to be joined with the root.\n                *\n                * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n                *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n                *   first.\n                * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n                *   is updated with the result and aRoot is returned. Otherwise the result\n                *   is returned.\n                *   - If aPath is absolute, the result is aPath.\n                *   - Otherwise the two paths are joined with a slash.\n                * - Joining for example 'http://' and 'www.example.com' is also supported.\n                */\n\n                function join(aRoot, aPath) {\n                  if (aRoot === \"\") {\n                    aRoot = \".\";\n                  }\n\n                  if (aPath === \"\") {\n                    aPath = \".\";\n                  }\n\n                  var aPathUrl = urlParse(aPath);\n                  var aRootUrl = urlParse(aRoot);\n\n                  if (aRootUrl) {\n                    aRoot = aRootUrl.path || '/';\n                  } // `join(foo, '//www.example.org')`\n\n\n                  if (aPathUrl && !aPathUrl.scheme) {\n                    if (aRootUrl) {\n                      aPathUrl.scheme = aRootUrl.scheme;\n                    }\n\n                    return urlGenerate(aPathUrl);\n                  }\n\n                  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n                    return aPath;\n                  } // `join('http://', 'www.example.com')`\n\n\n                  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n                    aRootUrl.host = aPath;\n                    return urlGenerate(aRootUrl);\n                  }\n\n                  var joined = aPath.charAt(0) === '/' ? aPath : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n                  if (aRootUrl) {\n                    aRootUrl.path = joined;\n                    return urlGenerate(aRootUrl);\n                  }\n\n                  return joined;\n                }\n\n                exports.join = join;\n\n                exports.isAbsolute = function (aPath) {\n                  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n                };\n                /**\n                * Make a path relative to a URL or another path.\n                *\n                * @param aRoot The root path or URL.\n                * @param aPath The path or URL to be made relative to aRoot.\n                */\n\n\n                function relative(aRoot, aPath) {\n                  if (aRoot === \"\") {\n                    aRoot = \".\";\n                  }\n\n                  aRoot = aRoot.replace(/\\/$/, ''); // It is possible for the path to be above the root. In this case, simply\n                  // checking whether the root is a prefix of the path won't work. Instead, we\n                  // need to remove components from the root one by one, until either we find\n                  // a prefix that fits, or we run out of components to remove.\n\n                  var level = 0;\n\n                  while (aPath.indexOf(aRoot + '/') !== 0) {\n                    var index = aRoot.lastIndexOf(\"/\");\n\n                    if (index < 0) {\n                      return aPath;\n                    } // If the only part of the root that is left is the scheme (i.e. http://,\n                    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n                    // have exhausted all components, so the path is not relative to the root.\n\n\n                    aRoot = aRoot.slice(0, index);\n\n                    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n                      return aPath;\n                    }\n\n                    ++level;\n                  } // Make sure we add a \"../\" for each component we removed from the root.\n\n\n                  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n                }\n\n                exports.relative = relative;\n\n                var supportsNullProto = function () {\n                  var obj = Object.create(null);\n                  return !('__proto__' in obj);\n                }();\n\n                function identity(s) {\n                  return s;\n                }\n                /**\n                * Because behavior goes wacky when you set `__proto__` on objects, we\n                * have to prefix all the strings in our set with an arbitrary character.\n                *\n                * See https://github.com/mozilla/source-map/pull/31 and\n                * https://github.com/mozilla/source-map/issues/30\n                *\n                * @param String aStr\n                */\n\n\n                function toSetString(aStr) {\n                  if (isProtoString(aStr)) {\n                    return '$' + aStr;\n                  }\n\n                  return aStr;\n                }\n\n                exports.toSetString = supportsNullProto ? identity : toSetString;\n\n                function fromSetString(aStr) {\n                  if (isProtoString(aStr)) {\n                    return aStr.slice(1);\n                  }\n\n                  return aStr;\n                }\n\n                exports.fromSetString = supportsNullProto ? identity : fromSetString;\n\n                function isProtoString(s) {\n                  if (!s) {\n                    return false;\n                  }\n\n                  var length = s.length;\n\n                  if (length < 9\n                  /* \"__proto__\".length */\n                  ) {\n                      return false;\n                    }\n\n                  if (s.charCodeAt(length - 1) !== 95\n                  /* '_' */\n                  || s.charCodeAt(length - 2) !== 95\n                  /* '_' */\n                  || s.charCodeAt(length - 3) !== 111\n                  /* 'o' */\n                  || s.charCodeAt(length - 4) !== 116\n                  /* 't' */\n                  || s.charCodeAt(length - 5) !== 111\n                  /* 'o' */\n                  || s.charCodeAt(length - 6) !== 114\n                  /* 'r' */\n                  || s.charCodeAt(length - 7) !== 112\n                  /* 'p' */\n                  || s.charCodeAt(length - 8) !== 95\n                  /* '_' */\n                  || s.charCodeAt(length - 9) !== 95\n                  /* '_' */\n                  ) {\n                      return false;\n                    }\n\n                  for (var i = length - 10; i >= 0; i--) {\n                    if (s.charCodeAt(i) !== 36\n                    /* '$' */\n                    ) {\n                        return false;\n                      }\n                  }\n\n                  return true;\n                }\n                /**\n                * Comparator between two mappings where the original positions are compared.\n                *\n                * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n                * mappings with the same original source/line/column, but different generated\n                * line and column the same. Useful when searching for a mapping with a\n                * stubbed out mapping.\n                */\n\n\n                function compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n                  var cmp = strcmp(mappingA.source, mappingB.source);\n\n                  if (cmp !== 0) {\n                    return cmp;\n                  }\n\n                  cmp = mappingA.originalLine - mappingB.originalLine;\n\n                  if (cmp !== 0) {\n                    return cmp;\n                  }\n\n                  cmp = mappingA.originalColumn - mappingB.originalColumn;\n\n                  if (cmp !== 0 || onlyCompareOriginal) {\n                    return cmp;\n                  }\n\n                  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n\n                  if (cmp !== 0) {\n                    return cmp;\n                  }\n\n                  cmp = mappingA.generatedLine - mappingB.generatedLine;\n\n                  if (cmp !== 0) {\n                    return cmp;\n                  }\n\n                  return strcmp(mappingA.name, mappingB.name);\n                }\n\n                exports.compareByOriginalPositions = compareByOriginalPositions;\n                /**\n                * Comparator between two mappings with deflated source and name indices where\n                * the generated positions are compared.\n                *\n                * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n                * mappings with the same generated line and column, but different\n                * source/name/original line and column the same. Useful when searching for a\n                * mapping with a stubbed out mapping.\n                */\n\n                function compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n                  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n\n                  if (cmp !== 0) {\n                    return cmp;\n                  }\n\n                  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n\n                  if (cmp !== 0 || onlyCompareGenerated) {\n                    return cmp;\n                  }\n\n                  cmp = strcmp(mappingA.source, mappingB.source);\n\n                  if (cmp !== 0) {\n                    return cmp;\n                  }\n\n                  cmp = mappingA.originalLine - mappingB.originalLine;\n\n                  if (cmp !== 0) {\n                    return cmp;\n                  }\n\n                  cmp = mappingA.originalColumn - mappingB.originalColumn;\n\n                  if (cmp !== 0) {\n                    return cmp;\n                  }\n\n                  return strcmp(mappingA.name, mappingB.name);\n                }\n\n                exports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\n                function strcmp(aStr1, aStr2) {\n                  if (aStr1 === aStr2) {\n                    return 0;\n                  }\n\n                  if (aStr1 === null) {\n                    return 1; // aStr2 !== null\n                  }\n\n                  if (aStr2 === null) {\n                    return -1; // aStr1 !== null\n                  }\n\n                  if (aStr1 > aStr2) {\n                    return 1;\n                  }\n\n                  return -1;\n                }\n                /**\n                * Comparator between two mappings with inflated source and name strings where\n                * the generated positions are compared.\n                */\n\n\n                function compareByGeneratedPositionsInflated(mappingA, mappingB) {\n                  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n\n                  if (cmp !== 0) {\n                    return cmp;\n                  }\n\n                  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n\n                  if (cmp !== 0) {\n                    return cmp;\n                  }\n\n                  cmp = strcmp(mappingA.source, mappingB.source);\n\n                  if (cmp !== 0) {\n                    return cmp;\n                  }\n\n                  cmp = mappingA.originalLine - mappingB.originalLine;\n\n                  if (cmp !== 0) {\n                    return cmp;\n                  }\n\n                  cmp = mappingA.originalColumn - mappingB.originalColumn;\n\n                  if (cmp !== 0) {\n                    return cmp;\n                  }\n\n                  return strcmp(mappingA.name, mappingB.name);\n                }\n\n                exports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n                /**\n                * Strip any JSON XSSI avoidance prefix from the string (as documented\n                * in the source maps specification), and then parse the string as\n                * JSON.\n                */\n\n                function parseSourceMapInput(str) {\n                  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n                }\n\n                exports.parseSourceMapInput = parseSourceMapInput;\n                /**\n                * Compute the URL of a source given the the source root, the source's\n                * URL, and the source map's URL.\n                */\n\n                function computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n                  sourceURL = sourceURL || '';\n\n                  if (sourceRoot) {\n                    // This follows what Chrome does.\n                    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n                      sourceRoot += '/';\n                    } // The spec says:\n                    //   Line 4: An optional source root, useful for relocating source\n                    //   files on a server or removing repeated values in the\n                    //   “sources” entry.  This value is prepended to the individual\n                    //   entries in the “source” field.\n\n\n                    sourceURL = sourceRoot + sourceURL;\n                  } // Historically, SourceMapConsumer did not take the sourceMapURL as\n                  // a parameter.  This mode is still somewhat supported, which is why\n                  // this code block is conditional.  However, it's preferable to pass\n                  // the source map URL to SourceMapConsumer, so that this function\n                  // can implement the source URL resolution algorithm as outlined in\n                  // the spec.  This block is basically the equivalent of:\n                  //    new URL(sourceURL, sourceMapURL).toString()\n                  // ... except it avoids using URL, which wasn't available in the\n                  // older releases of node still supported by this library.\n                  //\n                  // The spec says:\n                  //   If the sources are not absolute URLs after prepending of the\n                  //   “sourceRoot”, the sources are resolved relative to the\n                  //   SourceMap (like resolving script src in a html document).\n\n\n                  if (sourceMapURL) {\n                    var parsed = urlParse(sourceMapURL);\n\n                    if (!parsed) {\n                      throw new Error(\"sourceMapURL could not be parsed\");\n                    }\n\n                    if (parsed.path) {\n                      // Strip the last path component, but keep the \"/\".\n                      var index = parsed.path.lastIndexOf('/');\n\n                      if (index >= 0) {\n                        parsed.path = parsed.path.substring(0, index + 1);\n                      }\n                    }\n\n                    sourceURL = join(urlGenerate(parsed), sourceURL);\n                  }\n\n                  return normalize(sourceURL);\n                }\n\n                exports.computeSourceURL = computeSourceURL;\n              }, {}],\n              208: [function (require, module, exports) {\n                /*\n                * Copyright 2009-2011 Mozilla Foundation and contributors\n                * Licensed under the New BSD license. See LICENSE.txt or:\n                * http://opensource.org/licenses/BSD-3-Clause\n                */\n                exports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\n                exports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\n                exports.SourceNode = require('./lib/source-node').SourceNode;\n              }, {\n                \"./lib/source-map-consumer\": 204,\n                \"./lib/source-map-generator\": 205,\n                \"./lib/source-node\": 206\n              }],\n              209: [function (require, module, exports) {\n                // Copyright Joyent, Inc. and other Node contributors.\n                //\n                // Permission is hereby granted, free of charge, to any person obtaining a\n                // copy of this software and associated documentation files (the\n                // \"Software\"), to deal in the Software without restriction, including\n                // without limitation the rights to use, copy, modify, merge, publish,\n                // distribute, sublicense, and/or sell copies of the Software, and to permit\n                // persons to whom the Software is furnished to do so, subject to the\n                // following conditions:\n                //\n                // The above copyright notice and this permission notice shall be included\n                // in all copies or substantial portions of the Software.\n                //\n                // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n                // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n                // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n                // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n                // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n                // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n                // USE OR OTHER DEALINGS IN THE SOFTWARE.\n                'use strict';\n\n                var punycode = require('punycode');\n\n                var util = require('./util');\n\n                exports.parse = urlParse;\n                exports.resolve = urlResolve;\n                exports.resolveObject = urlResolveObject;\n                exports.format = urlFormat;\n                exports.Url = Url;\n\n                function Url() {\n                  this.protocol = null;\n                  this.slashes = null;\n                  this.auth = null;\n                  this.host = null;\n                  this.port = null;\n                  this.hostname = null;\n                  this.hash = null;\n                  this.search = null;\n                  this.query = null;\n                  this.pathname = null;\n                  this.path = null;\n                  this.href = null;\n                } // Reference: RFC 3986, RFC 1808, RFC 2396\n                // define these here so at least they only have to be\n                // compiled once on the first module load.\n\n\n                var protocolPattern = /^([a-z0-9.+-]+:)/i,\n                    portPattern = /:[0-9]*$/,\n                    // Special case for a simple path URL\n                simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n                    // RFC 2396: characters reserved for delimiting URLs.\n                // We actually just auto-escape these.\n                delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n                    // RFC 2396: characters not allowed for various reasons.\n                unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n                    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n                autoEscape = ['\\''].concat(unwise),\n                    // Characters that are never ever allowed in a hostname.\n                // Note that any invalid chars are also handled, but these\n                // are the ones that are *expected* to be seen, so we fast-path\n                // them.\n                nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n                    hostEndingChars = ['/', '?', '#'],\n                    hostnameMaxLen = 255,\n                    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n                    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n                    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n                unsafeProtocol = {\n                  'javascript': true,\n                  'javascript:': true\n                },\n                    // protocols that never have a hostname.\n                hostlessProtocol = {\n                  'javascript': true,\n                  'javascript:': true\n                },\n                    // protocols that always contain a // bit.\n                slashedProtocol = {\n                  'http': true,\n                  'https': true,\n                  'ftp': true,\n                  'gopher': true,\n                  'file': true,\n                  'http:': true,\n                  'https:': true,\n                  'ftp:': true,\n                  'gopher:': true,\n                  'file:': true\n                },\n                    querystring = require('querystring');\n\n                function urlParse(url, parseQueryString, slashesDenoteHost) {\n                  if (url && util.isObject(url) && url instanceof Url) return url;\n                  var u = new Url();\n                  u.parse(url, parseQueryString, slashesDenoteHost);\n                  return u;\n                }\n\n                Url.prototype.parse = function (url, parseQueryString, slashesDenoteHost) {\n                  if (!util.isString(url)) {\n                    throw new TypeError(\"Parameter 'url' must be a string, not \" + _typeof(url));\n                  } // Copy chrome, IE, opera backslash-handling behavior.\n                  // Back slashes before the query string get converted to forward slashes\n                  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n\n\n                  var queryIndex = url.indexOf('?'),\n                      splitter = queryIndex !== -1 && queryIndex < url.indexOf('#') ? '?' : '#',\n                      uSplit = url.split(splitter),\n                      slashRegex = /\\\\/g;\n                  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n                  url = uSplit.join(splitter);\n                  var rest = url; // trim before proceeding.\n                  // This is to support parse stuff like \"  http://foo.com  \\n\"\n\n                  rest = rest.trim();\n\n                  if (!slashesDenoteHost && url.split('#').length === 1) {\n                    // Try fast path regexp\n                    var simplePath = simplePathPattern.exec(rest);\n\n                    if (simplePath) {\n                      this.path = rest;\n                      this.href = rest;\n                      this.pathname = simplePath[1];\n\n                      if (simplePath[2]) {\n                        this.search = simplePath[2];\n\n                        if (parseQueryString) {\n                          this.query = querystring.parse(this.search.substr(1));\n                        } else {\n                          this.query = this.search.substr(1);\n                        }\n                      } else if (parseQueryString) {\n                        this.search = '';\n                        this.query = {};\n                      }\n\n                      return this;\n                    }\n                  }\n\n                  var proto = protocolPattern.exec(rest);\n\n                  if (proto) {\n                    proto = proto[0];\n                    var lowerProto = proto.toLowerCase();\n                    this.protocol = lowerProto;\n                    rest = rest.substr(proto.length);\n                  } // figure out if it's got a host\n                  // user@server is *always* interpreted as a hostname, and url\n                  // resolution will treat //foo/bar as host=foo,path=bar because that's\n                  // how the browser resolves relative URLs.\n\n\n                  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n                    var slashes = rest.substr(0, 2) === '//';\n\n                    if (slashes && !(proto && hostlessProtocol[proto])) {\n                      rest = rest.substr(2);\n                      this.slashes = true;\n                    }\n                  }\n\n                  if (!hostlessProtocol[proto] && (slashes || proto && !slashedProtocol[proto])) {\n                    // there's a hostname.\n                    // the first instance of /, ?, ;, or # ends the host.\n                    //\n                    // If there is an @ in the hostname, then non-host chars *are* allowed\n                    // to the left of the last @ sign, unless some host-ending character\n                    // comes *before* the @-sign.\n                    // URLs are obnoxious.\n                    //\n                    // ex:\n                    // http://a@b@c/ => user:a@b host:c\n                    // http://a@b?@c => user:a host:c path:/?@c\n                    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n                    // Review our test case against browsers more comprehensively.\n                    // find the first instance of any hostEndingChars\n                    var hostEnd = -1;\n\n                    for (var i = 0; i < hostEndingChars.length; i++) {\n                      var hec = rest.indexOf(hostEndingChars[i]);\n                      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) hostEnd = hec;\n                    } // at this point, either we have an explicit point where the\n                    // auth portion cannot go past, or the last @ char is the decider.\n\n\n                    var auth, atSign;\n\n                    if (hostEnd === -1) {\n                      // atSign can be anywhere.\n                      atSign = rest.lastIndexOf('@');\n                    } else {\n                      // atSign must be in auth portion.\n                      // http://a@b/c@d => host:b auth:a path:/c@d\n                      atSign = rest.lastIndexOf('@', hostEnd);\n                    } // Now we have a portion which is definitely the auth.\n                    // Pull that off.\n\n\n                    if (atSign !== -1) {\n                      auth = rest.slice(0, atSign);\n                      rest = rest.slice(atSign + 1);\n                      this.auth = decodeURIComponent(auth);\n                    } // the host is the remaining to the left of the first non-host char\n\n\n                    hostEnd = -1;\n\n                    for (var i = 0; i < nonHostChars.length; i++) {\n                      var hec = rest.indexOf(nonHostChars[i]);\n                      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) hostEnd = hec;\n                    } // if we still have not hit it, then the entire thing is a host.\n\n\n                    if (hostEnd === -1) hostEnd = rest.length;\n                    this.host = rest.slice(0, hostEnd);\n                    rest = rest.slice(hostEnd); // pull out port.\n\n                    this.parseHost(); // we've indicated that there is a hostname,\n                    // so even if it's empty, it has to be present.\n\n                    this.hostname = this.hostname || ''; // if hostname begins with [ and ends with ]\n                    // assume that it's an IPv6 address.\n\n                    var ipv6Hostname = this.hostname[0] === '[' && this.hostname[this.hostname.length - 1] === ']'; // validate a little.\n\n                    if (!ipv6Hostname) {\n                      var hostparts = this.hostname.split(/\\./);\n\n                      for (var i = 0, l = hostparts.length; i < l; i++) {\n                        var part = hostparts[i];\n                        if (!part) continue;\n\n                        if (!part.match(hostnamePartPattern)) {\n                          var newpart = '';\n\n                          for (var j = 0, k = part.length; j < k; j++) {\n                            if (part.charCodeAt(j) > 127) {\n                              // we replace non-ASCII char with a temporary placeholder\n                              // we need this to make sure size of hostname is not\n                              // broken by replacing non-ASCII by nothing\n                              newpart += 'x';\n                            } else {\n                              newpart += part[j];\n                            }\n                          } // we test again with ASCII char only\n\n\n                          if (!newpart.match(hostnamePartPattern)) {\n                            var validParts = hostparts.slice(0, i);\n                            var notHost = hostparts.slice(i + 1);\n                            var bit = part.match(hostnamePartStart);\n\n                            if (bit) {\n                              validParts.push(bit[1]);\n                              notHost.unshift(bit[2]);\n                            }\n\n                            if (notHost.length) {\n                              rest = '/' + notHost.join('.') + rest;\n                            }\n\n                            this.hostname = validParts.join('.');\n                            break;\n                          }\n                        }\n                      }\n                    }\n\n                    if (this.hostname.length > hostnameMaxLen) {\n                      this.hostname = '';\n                    } else {\n                      // hostnames are always lower case.\n                      this.hostname = this.hostname.toLowerCase();\n                    }\n\n                    if (!ipv6Hostname) {\n                      // IDNA Support: Returns a punycoded representation of \"domain\".\n                      // It only converts parts of the domain name that\n                      // have non-ASCII characters, i.e. it doesn't matter if\n                      // you call it with a domain that already is ASCII-only.\n                      this.hostname = punycode.toASCII(this.hostname);\n                    }\n\n                    var p = this.port ? ':' + this.port : '';\n                    var h = this.hostname || '';\n                    this.host = h + p;\n                    this.href += this.host; // strip [ and ] from the hostname\n                    // the host field still retains them, though\n\n                    if (ipv6Hostname) {\n                      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n\n                      if (rest[0] !== '/') {\n                        rest = '/' + rest;\n                      }\n                    }\n                  } // now rest is set to the post-host stuff.\n                  // chop off any delim chars.\n\n\n                  if (!unsafeProtocol[lowerProto]) {\n                    // First, make 100% sure that any \"autoEscape\" chars get\n                    // escaped, even if encodeURIComponent doesn't think they\n                    // need to be.\n                    for (var i = 0, l = autoEscape.length; i < l; i++) {\n                      var ae = autoEscape[i];\n                      if (rest.indexOf(ae) === -1) continue;\n                      var esc = encodeURIComponent(ae);\n\n                      if (esc === ae) {\n                        esc = escape(ae);\n                      }\n\n                      rest = rest.split(ae).join(esc);\n                    }\n                  } // chop off from the tail first.\n\n\n                  var hash = rest.indexOf('#');\n\n                  if (hash !== -1) {\n                    // got a fragment string.\n                    this.hash = rest.substr(hash);\n                    rest = rest.slice(0, hash);\n                  }\n\n                  var qm = rest.indexOf('?');\n\n                  if (qm !== -1) {\n                    this.search = rest.substr(qm);\n                    this.query = rest.substr(qm + 1);\n\n                    if (parseQueryString) {\n                      this.query = querystring.parse(this.query);\n                    }\n\n                    rest = rest.slice(0, qm);\n                  } else if (parseQueryString) {\n                    // no query string, but parseQueryString still requested\n                    this.search = '';\n                    this.query = {};\n                  }\n\n                  if (rest) this.pathname = rest;\n\n                  if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) {\n                    this.pathname = '/';\n                  } //to support http.request\n\n\n                  if (this.pathname || this.search) {\n                    var p = this.pathname || '';\n                    var s = this.search || '';\n                    this.path = p + s;\n                  } // finally, reconstruct the href based on what has been validated.\n\n\n                  this.href = this.format();\n                  return this;\n                }; // format a parsed object into a url string\n\n\n                function urlFormat(obj) {\n                  // ensure it's an object, and not a string url.\n                  // If it's an obj, this is a no-op.\n                  // this way, you can call url_format() on strings\n                  // to clean up potentially wonky urls.\n                  if (util.isString(obj)) obj = urlParse(obj);\n                  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n                  return obj.format();\n                }\n\n                Url.prototype.format = function () {\n                  var auth = this.auth || '';\n\n                  if (auth) {\n                    auth = encodeURIComponent(auth);\n                    auth = auth.replace(/%3A/i, ':');\n                    auth += '@';\n                  }\n\n                  var protocol = this.protocol || '',\n                      pathname = this.pathname || '',\n                      hash = this.hash || '',\n                      host = false,\n                      query = '';\n\n                  if (this.host) {\n                    host = auth + this.host;\n                  } else if (this.hostname) {\n                    host = auth + (this.hostname.indexOf(':') === -1 ? this.hostname : '[' + this.hostname + ']');\n\n                    if (this.port) {\n                      host += ':' + this.port;\n                    }\n                  }\n\n                  if (this.query && util.isObject(this.query) && Object.keys(this.query).length) {\n                    query = querystring.stringify(this.query);\n                  }\n\n                  var search = this.search || query && '?' + query || '';\n                  if (protocol && protocol.substr(-1) !== ':') protocol += ':'; // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n                  // unless they had them to begin with.\n\n                  if (this.slashes || (!protocol || slashedProtocol[protocol]) && host !== false) {\n                    host = '//' + (host || '');\n                    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n                  } else if (!host) {\n                    host = '';\n                  }\n\n                  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n                  if (search && search.charAt(0) !== '?') search = '?' + search;\n                  pathname = pathname.replace(/[?#]/g, function (match) {\n                    return encodeURIComponent(match);\n                  });\n                  search = search.replace('#', '%23');\n                  return protocol + host + pathname + search + hash;\n                };\n\n                function urlResolve(source, relative) {\n                  return urlParse(source, false, true).resolve(relative);\n                }\n\n                Url.prototype.resolve = function (relative) {\n                  return this.resolveObject(urlParse(relative, false, true)).format();\n                };\n\n                function urlResolveObject(source, relative) {\n                  if (!source) return relative;\n                  return urlParse(source, false, true).resolveObject(relative);\n                }\n\n                Url.prototype.resolveObject = function (relative) {\n                  if (util.isString(relative)) {\n                    var rel = new Url();\n                    rel.parse(relative, false, true);\n                    relative = rel;\n                  }\n\n                  var result = new Url();\n                  var tkeys = Object.keys(this);\n\n                  for (var tk = 0; tk < tkeys.length; tk++) {\n                    var tkey = tkeys[tk];\n                    result[tkey] = this[tkey];\n                  } // hash is always overridden, no matter what.\n                  // even href=\"\" will remove it.\n\n\n                  result.hash = relative.hash; // if the relative url is empty, then there's nothing left to do here.\n\n                  if (relative.href === '') {\n                    result.href = result.format();\n                    return result;\n                  } // hrefs like //foo/bar always cut to the protocol.\n\n\n                  if (relative.slashes && !relative.protocol) {\n                    // take everything except the protocol from relative\n                    var rkeys = Object.keys(relative);\n\n                    for (var rk = 0; rk < rkeys.length; rk++) {\n                      var rkey = rkeys[rk];\n                      if (rkey !== 'protocol') result[rkey] = relative[rkey];\n                    } //urlParse appends trailing / to urls like http://www.example.com\n\n\n                    if (slashedProtocol[result.protocol] && result.hostname && !result.pathname) {\n                      result.path = result.pathname = '/';\n                    }\n\n                    result.href = result.format();\n                    return result;\n                  }\n\n                  if (relative.protocol && relative.protocol !== result.protocol) {\n                    // if it's a known url protocol, then changing\n                    // the protocol does weird things\n                    // first, if it's not file:, then we MUST have a host,\n                    // and if there was a path\n                    // to begin with, then we MUST have a path.\n                    // if it is file:, then the host is dropped,\n                    // because that's known to be hostless.\n                    // anything else is assumed to be absolute.\n                    if (!slashedProtocol[relative.protocol]) {\n                      var keys = Object.keys(relative);\n\n                      for (var v = 0; v < keys.length; v++) {\n                        var k = keys[v];\n                        result[k] = relative[k];\n                      }\n\n                      result.href = result.format();\n                      return result;\n                    }\n\n                    result.protocol = relative.protocol;\n\n                    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n                      var relPath = (relative.pathname || '').split('/');\n\n                      while (relPath.length && !(relative.host = relPath.shift())) {\n                        ;\n                      }\n\n                      if (!relative.host) relative.host = '';\n                      if (!relative.hostname) relative.hostname = '';\n                      if (relPath[0] !== '') relPath.unshift('');\n                      if (relPath.length < 2) relPath.unshift('');\n                      result.pathname = relPath.join('/');\n                    } else {\n                      result.pathname = relative.pathname;\n                    }\n\n                    result.search = relative.search;\n                    result.query = relative.query;\n                    result.host = relative.host || '';\n                    result.auth = relative.auth;\n                    result.hostname = relative.hostname || relative.host;\n                    result.port = relative.port; // to support http.request\n\n                    if (result.pathname || result.search) {\n                      var p = result.pathname || '';\n                      var s = result.search || '';\n                      result.path = p + s;\n                    }\n\n                    result.slashes = result.slashes || relative.slashes;\n                    result.href = result.format();\n                    return result;\n                  }\n\n                  var isSourceAbs = result.pathname && result.pathname.charAt(0) === '/',\n                      isRelAbs = relative.host || relative.pathname && relative.pathname.charAt(0) === '/',\n                      mustEndAbs = isRelAbs || isSourceAbs || result.host && relative.pathname,\n                      removeAllDots = mustEndAbs,\n                      srcPath = result.pathname && result.pathname.split('/') || [],\n                      relPath = relative.pathname && relative.pathname.split('/') || [],\n                      psychotic = result.protocol && !slashedProtocol[result.protocol]; // if the url is a non-slashed url, then relative\n                  // links like ../.. should be able\n                  // to crawl up to the hostname, as well.  This is strange.\n                  // result.protocol has already been set by now.\n                  // Later on, put the first path part into the host field.\n\n                  if (psychotic) {\n                    result.hostname = '';\n                    result.port = null;\n\n                    if (result.host) {\n                      if (srcPath[0] === '') srcPath[0] = result.host;else srcPath.unshift(result.host);\n                    }\n\n                    result.host = '';\n\n                    if (relative.protocol) {\n                      relative.hostname = null;\n                      relative.port = null;\n\n                      if (relative.host) {\n                        if (relPath[0] === '') relPath[0] = relative.host;else relPath.unshift(relative.host);\n                      }\n\n                      relative.host = null;\n                    }\n\n                    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n                  }\n\n                  if (isRelAbs) {\n                    // it's absolute.\n                    result.host = relative.host || relative.host === '' ? relative.host : result.host;\n                    result.hostname = relative.hostname || relative.hostname === '' ? relative.hostname : result.hostname;\n                    result.search = relative.search;\n                    result.query = relative.query;\n                    srcPath = relPath; // fall through to the dot-handling below.\n                  } else if (relPath.length) {\n                    // it's relative\n                    // throw away the existing file, and take the new path instead.\n                    if (!srcPath) srcPath = [];\n                    srcPath.pop();\n                    srcPath = srcPath.concat(relPath);\n                    result.search = relative.search;\n                    result.query = relative.query;\n                  } else if (!util.isNullOrUndefined(relative.search)) {\n                    // just pull out the search.\n                    // like href='?foo'.\n                    // Put this after the other two cases because it simplifies the booleans\n                    if (psychotic) {\n                      result.hostname = result.host = srcPath.shift(); //occationaly the auth can get stuck only in host\n                      //this especially happens in cases like\n                      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n\n                      var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;\n\n                      if (authInHost) {\n                        result.auth = authInHost.shift();\n                        result.host = result.hostname = authInHost.shift();\n                      }\n                    }\n\n                    result.search = relative.search;\n                    result.query = relative.query; //to support http.request\n\n                    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n                      result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');\n                    }\n\n                    result.href = result.format();\n                    return result;\n                  }\n\n                  if (!srcPath.length) {\n                    // no path at all.  easy.\n                    // we've already handled the other stuff above.\n                    result.pathname = null; //to support http.request\n\n                    if (result.search) {\n                      result.path = '/' + result.search;\n                    } else {\n                      result.path = null;\n                    }\n\n                    result.href = result.format();\n                    return result;\n                  } // if a url ENDs in . or .., then it must get a trailing slash.\n                  // however, if it ends in anything else non-slashy,\n                  // then it must NOT get a trailing slash.\n\n\n                  var last = srcPath.slice(-1)[0];\n                  var hasTrailingSlash = (result.host || relative.host || srcPath.length > 1) && (last === '.' || last === '..') || last === ''; // strip single dots, resolve double dots to parent dir\n                  // if the path tries to go above the root, `up` ends up > 0\n\n                  var up = 0;\n\n                  for (var i = srcPath.length; i >= 0; i--) {\n                    last = srcPath[i];\n\n                    if (last === '.') {\n                      srcPath.splice(i, 1);\n                    } else if (last === '..') {\n                      srcPath.splice(i, 1);\n                      up++;\n                    } else if (up) {\n                      srcPath.splice(i, 1);\n                      up--;\n                    }\n                  } // if the path is allowed to go above the root, restore leading ..s\n\n\n                  if (!mustEndAbs && !removeAllDots) {\n                    for (; up--; up) {\n                      srcPath.unshift('..');\n                    }\n                  }\n\n                  if (mustEndAbs && srcPath[0] !== '' && (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n                    srcPath.unshift('');\n                  }\n\n                  if (hasTrailingSlash && srcPath.join('/').substr(-1) !== '/') {\n                    srcPath.push('');\n                  }\n\n                  var isAbsolute = srcPath[0] === '' || srcPath[0] && srcPath[0].charAt(0) === '/'; // put the host back\n\n                  if (psychotic) {\n                    result.hostname = result.host = isAbsolute ? '' : srcPath.length ? srcPath.shift() : ''; //occationaly the auth can get stuck only in host\n                    //this especially happens in cases like\n                    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n\n                    var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;\n\n                    if (authInHost) {\n                      result.auth = authInHost.shift();\n                      result.host = result.hostname = authInHost.shift();\n                    }\n                  }\n\n                  mustEndAbs = mustEndAbs || result.host && srcPath.length;\n\n                  if (mustEndAbs && !isAbsolute) {\n                    srcPath.unshift('');\n                  }\n\n                  if (!srcPath.length) {\n                    result.pathname = null;\n                    result.path = null;\n                  } else {\n                    result.pathname = srcPath.join('/');\n                  } //to support request.http\n\n\n                  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n                    result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');\n                  }\n\n                  result.auth = relative.auth || result.auth;\n                  result.slashes = result.slashes || relative.slashes;\n                  result.href = result.format();\n                  return result;\n                };\n\n                Url.prototype.parseHost = function () {\n                  var host = this.host;\n                  var port = portPattern.exec(host);\n\n                  if (port) {\n                    port = port[0];\n\n                    if (port !== ':') {\n                      this.port = port.substr(1);\n                    }\n\n                    host = host.substr(0, host.length - port.length);\n                  }\n\n                  if (host) this.hostname = host;\n                };\n              }, {\n                \"./util\": 210,\n                \"punycode\": 194,\n                \"querystring\": 197\n              }],\n              210: [function (require, module, exports) {\n                'use strict';\n\n                module.exports = {\n                  isString: function isString(arg) {\n                    return typeof arg === 'string';\n                  },\n                  isObject: function isObject(arg) {\n                    return _typeof(arg) === 'object' && arg !== null;\n                  },\n                  isNull: function isNull(arg) {\n                    return arg === null;\n                  },\n                  isNullOrUndefined: function isNullOrUndefined(arg) {\n                    return arg == null;\n                  }\n                };\n              }, {}],\n              211: [function (require, module, exports) {\n                /* eslint-disable no-useless-escape */\n                var htmlparser = require('htmlparser2');\n\n                var quoteRegexp = require('lodash/escapeRegExp');\n\n                var cloneDeep = require('lodash/cloneDeep');\n\n                var mergeWith = require('lodash/mergeWith');\n\n                var isString = require('lodash/isString');\n\n                var isPlainObject = require('lodash/isPlainObject');\n\n                var parseSrcset = require('parse-srcset');\n\n                var postcss = require('postcss');\n\n                var url = require('url'); // Tags that can conceivably represent stand-alone media.\n\n\n                var mediaTags = ['img', 'audio', 'video', 'picture', 'svg', 'object', 'map', 'iframe', 'embed']; // Tags that are inherently vulnerable to being used in XSS attacks.\n\n                var vulnerableTags = ['script', 'style'];\n\n                function each(obj, cb) {\n                  if (obj) {\n                    Object.keys(obj).forEach(function (key) {\n                      cb(obj[key], key);\n                    });\n                  }\n                } // Avoid false positives with .__proto__, .hasOwnProperty, etc.\n\n\n                function has(obj, key) {\n                  return {}.hasOwnProperty.call(obj, key);\n                } // Returns those elements of `a` for which `cb(a)` returns truthy\n\n\n                function filter(a, cb) {\n                  var n = [];\n                  each(a, function (v) {\n                    if (cb(v)) {\n                      n.push(v);\n                    }\n                  });\n                  return n;\n                }\n\n                function isEmptyObject(obj) {\n                  for (var key in obj) {\n                    if (has(obj, key)) {\n                      return false;\n                    }\n                  }\n\n                  return true;\n                }\n\n                function stringifySrcset(parsedSrcset) {\n                  return parsedSrcset.map(function (part) {\n                    if (!part.url) {\n                      throw new Error('URL missing');\n                    }\n\n                    return part.url + (part.w ? \" \".concat(part.w, \"w\") : '') + (part.h ? \" \".concat(part.h, \"h\") : '') + (part.d ? \" \".concat(part.d, \"x\") : '');\n                  }).join(', ');\n                }\n\n                module.exports = sanitizeHtml; // A valid attribute name.\n                // We use a tolerant definition based on the set of strings defined by\n                // html.spec.whatwg.org/multipage/parsing.html#before-attribute-name-state\n                // and html.spec.whatwg.org/multipage/parsing.html#attribute-name-state .\n                // The characters accepted are ones which can be appended to the attribute\n                // name buffer without triggering a parse error:\n                //   * unexpected-equals-sign-before-attribute-name\n                //   * unexpected-null-character\n                //   * unexpected-character-in-attribute-name\n                // We exclude the empty string because it's impossible to get to the after\n                // attribute name state with an empty attribute name buffer.\n\n                var VALID_HTML_ATTRIBUTE_NAME = /^[^\\0\\t\\n\\f\\r /<=>]+$/; // Ignore the _recursing flag; it's there for recursive\n                // invocation as a guard against this exploit:\n                // https://github.com/fb55/htmlparser2/issues/105\n\n                function sanitizeHtml(html, options, _recursing) {\n                  var result = ''; // Used for hot swapping the result variable with an empty string in order to \"capture\" the text written to it.\n\n                  var tempResult = '';\n\n                  function Frame(tag, attribs) {\n                    var that = this;\n                    this.tag = tag;\n                    this.attribs = attribs || {};\n                    this.tagPosition = result.length;\n                    this.text = ''; // Node inner text\n\n                    this.mediaChildren = [];\n\n                    this.updateParentNodeText = function () {\n                      if (stack.length) {\n                        var parentFrame = stack[stack.length - 1];\n                        parentFrame.text += that.text;\n                      }\n                    };\n\n                    this.updateParentNodeMediaChildren = function () {\n                      if (stack.length && mediaTags.indexOf(this.tag) > -1) {\n                        var parentFrame = stack[stack.length - 1];\n                        parentFrame.mediaChildren.push(this.tag);\n                      }\n                    };\n                  }\n\n                  if (!options) {\n                    options = sanitizeHtml.defaults;\n                    options.parser = htmlParserDefaults;\n                  } else {\n                    options = Object.assign({}, sanitizeHtml.defaults, options);\n\n                    if (options.parser) {\n                      options.parser = Object.assign({}, htmlParserDefaults, options.parser);\n                    } else {\n                      options.parser = htmlParserDefaults;\n                    }\n                  } // vulnerableTags\n\n\n                  vulnerableTags.forEach(function (tag) {\n                    if (options.allowedTags && options.allowedTags.indexOf(tag) > -1 && !options.allowVulnerableTags) {\n                      // eslint-disable-next-line no-console\n                      console.warn(\"\\n\\n\\u26A0\\uFE0F Your `allowedTags` option includes, `\".concat(tag, \"`, which is inherently\\nvulnerable to XSS attacks. Please remove it from `allowedTags`.\\nOr, to disable this warning, add the `allowVulnerableTags` option\\nand ensure you are accounting for this risk.\\n\\n\"));\n                    }\n                  }); // Tags that contain something other than HTML, or where discarding\n                  // the text when the tag is disallowed makes sense for other reasons.\n                  // If we are not allowing these tags, we should drop their content too.\n                  // For other tags you would drop the tag but keep its content.\n\n                  var nonTextTagsArray = options.nonTextTags || ['script', 'style', 'textarea', 'option'];\n                  var allowedAttributesMap;\n                  var allowedAttributesGlobMap;\n\n                  if (options.allowedAttributes) {\n                    allowedAttributesMap = {};\n                    allowedAttributesGlobMap = {};\n                    each(options.allowedAttributes, function (attributes, tag) {\n                      allowedAttributesMap[tag] = [];\n                      var globRegex = [];\n                      attributes.forEach(function (obj) {\n                        if (isString(obj) && obj.indexOf('*') >= 0) {\n                          globRegex.push(quoteRegexp(obj).replace(/\\\\\\*/g, '.*'));\n                        } else {\n                          allowedAttributesMap[tag].push(obj);\n                        }\n                      });\n                      allowedAttributesGlobMap[tag] = new RegExp('^(' + globRegex.join('|') + ')$');\n                    });\n                  }\n\n                  var allowedClassesMap = {};\n                  each(options.allowedClasses, function (classes, tag) {\n                    // Implicitly allows the class attribute\n                    if (allowedAttributesMap) {\n                      if (!has(allowedAttributesMap, tag)) {\n                        allowedAttributesMap[tag] = [];\n                      }\n\n                      allowedAttributesMap[tag].push('class');\n                    }\n\n                    allowedClassesMap[tag] = classes;\n                  });\n                  var transformTagsMap = {};\n                  var transformTagsAll;\n                  each(options.transformTags, function (transform, tag) {\n                    var transFun;\n\n                    if (typeof transform === 'function') {\n                      transFun = transform;\n                    } else if (typeof transform === 'string') {\n                      transFun = sanitizeHtml.simpleTransform(transform);\n                    }\n\n                    if (tag === '*') {\n                      transformTagsAll = transFun;\n                    } else {\n                      transformTagsMap[tag] = transFun;\n                    }\n                  });\n                  var depth;\n                  var stack;\n                  var skipMap;\n                  var transformMap;\n                  var skipText;\n                  var skipTextDepth;\n                  var addedText = false;\n                  initializeState();\n                  var parser = new htmlparser.Parser({\n                    onopentag: function onopentag(name, attribs) {\n                      // If `enforceHtmlBoundary` is `true` and this has found the opening\n                      // `html` tag, reset the state.\n                      if (options.enforceHtmlBoundary && name === 'html') {\n                        initializeState();\n                      }\n\n                      if (skipText) {\n                        skipTextDepth++;\n                        return;\n                      }\n\n                      var frame = new Frame(name, attribs);\n                      stack.push(frame);\n                      var skip = false;\n                      var hasText = !!frame.text;\n                      var transformedTag;\n\n                      if (has(transformTagsMap, name)) {\n                        transformedTag = transformTagsMap[name](name, attribs);\n                        frame.attribs = attribs = transformedTag.attribs;\n\n                        if (transformedTag.text !== undefined) {\n                          frame.innerText = transformedTag.text;\n                        }\n\n                        if (name !== transformedTag.tagName) {\n                          frame.name = name = transformedTag.tagName;\n                          transformMap[depth] = transformedTag.tagName;\n                        }\n                      }\n\n                      if (transformTagsAll) {\n                        transformedTag = transformTagsAll(name, attribs);\n                        frame.attribs = attribs = transformedTag.attribs;\n\n                        if (name !== transformedTag.tagName) {\n                          frame.name = name = transformedTag.tagName;\n                          transformMap[depth] = transformedTag.tagName;\n                        }\n                      }\n\n                      if (options.allowedTags && options.allowedTags.indexOf(name) === -1 || options.disallowedTagsMode === 'recursiveEscape' && !isEmptyObject(skipMap)) {\n                        skip = true;\n                        skipMap[depth] = true;\n\n                        if (options.disallowedTagsMode === 'discard') {\n                          if (nonTextTagsArray.indexOf(name) !== -1) {\n                            skipText = true;\n                            skipTextDepth = 1;\n                          }\n                        }\n\n                        skipMap[depth] = true;\n                      }\n\n                      depth++;\n\n                      if (skip) {\n                        if (options.disallowedTagsMode === 'discard') {\n                          // We want the contents but not this tag\n                          return;\n                        }\n\n                        tempResult = result;\n                        result = '';\n                      }\n\n                      result += '<' + name;\n\n                      if (!allowedAttributesMap || has(allowedAttributesMap, name) || allowedAttributesMap['*']) {\n                        each(attribs, function (value, a) {\n                          if (!VALID_HTML_ATTRIBUTE_NAME.test(a)) {\n                            // This prevents part of an attribute name in the output from being\n                            // interpreted as the end of an attribute, or end of a tag.\n                            delete frame.attribs[a];\n                            return;\n                          }\n\n                          var parsed; // check allowedAttributesMap for the element and attribute and modify the value\n                          // as necessary if there are specific values defined.\n\n                          var passedAllowedAttributesMapCheck = false;\n\n                          if (!allowedAttributesMap || has(allowedAttributesMap, name) && allowedAttributesMap[name].indexOf(a) !== -1 || allowedAttributesMap['*'] && allowedAttributesMap['*'].indexOf(a) !== -1 || has(allowedAttributesGlobMap, name) && allowedAttributesGlobMap[name].test(a) || allowedAttributesGlobMap['*'] && allowedAttributesGlobMap['*'].test(a)) {\n                            passedAllowedAttributesMapCheck = true;\n                          } else if (allowedAttributesMap && allowedAttributesMap[name]) {\n                            var _iterator10 = _createForOfIteratorHelper(allowedAttributesMap[name]),\n                                _step;\n\n                            try {\n                              for (_iterator10.s(); !(_step = _iterator10.n()).done;) {\n                                var o = _step.value;\n\n                                if (isPlainObject(o) && o.name && o.name === a) {\n                                  passedAllowedAttributesMapCheck = true;\n                                  var newValue = '';\n\n                                  if (o.multiple === true) {\n                                    // verify the values that are allowed\n                                    var splitStrArray = value.split(' ');\n\n                                    var _iterator11 = _createForOfIteratorHelper(splitStrArray),\n                                        _step2;\n\n                                    try {\n                                      for (_iterator11.s(); !(_step2 = _iterator11.n()).done;) {\n                                        var s = _step2.value;\n\n                                        if (o.values.indexOf(s) !== -1) {\n                                          if (newValue === '') {\n                                            newValue = s;\n                                          } else {\n                                            newValue += ' ' + s;\n                                          }\n                                        }\n                                      }\n                                    } catch (err) {\n                                      _iterator11.e(err);\n                                    } finally {\n                                      _iterator11.f();\n                                    }\n                                  } else if (o.values.indexOf(value) >= 0) {\n                                    // verified an allowed value matches the entire attribute value\n                                    newValue = value;\n                                  }\n\n                                  value = newValue;\n                                }\n                              }\n                            } catch (err) {\n                              _iterator10.e(err);\n                            } finally {\n                              _iterator10.f();\n                            }\n                          }\n\n                          if (passedAllowedAttributesMapCheck) {\n                            if (options.allowedSchemesAppliedToAttributes.indexOf(a) !== -1) {\n                              if (naughtyHref(name, value)) {\n                                delete frame.attribs[a];\n                                return;\n                              }\n                            }\n\n                            if (name === 'iframe' && a === 'src') {\n                              var allowed = true;\n\n                              try {\n                                // naughtyHref is in charge of whether protocol relative URLs\n                                // are cool. We should just accept them\n                                parsed = url.parse(value, false, true);\n                                var isRelativeUrl = parsed && parsed.host === null && parsed.protocol === null;\n\n                                if (isRelativeUrl) {\n                                  // default value of allowIframeRelativeUrls is true\n                                  // unless allowedIframeHostnames or allowedIframeDomains specified\n                                  allowed = has(options, 'allowIframeRelativeUrls') ? options.allowIframeRelativeUrls : !options.allowedIframeHostnames && !options.allowedIframeDomains;\n                                } else if (options.allowedIframeHostnames || options.allowedIframeDomains) {\n                                  var allowedHostname = (options.allowedIframeHostnames || []).find(function (hostname) {\n                                    return hostname === parsed.hostname;\n                                  });\n                                  var allowedDomain = (options.allowedIframeDomains || []).find(function (domain) {\n                                    return parsed.hostname === domain || parsed.hostname.endsWith(\".\".concat(domain));\n                                  });\n                                  allowed = allowedHostname || allowedDomain;\n                                }\n                              } catch (e) {\n                                // Unparseable iframe src\n                                allowed = false;\n                              }\n\n                              if (!allowed) {\n                                delete frame.attribs[a];\n                                return;\n                              }\n                            }\n\n                            if (a === 'srcset') {\n                              try {\n                                parsed = parseSrcset(value);\n                                each(parsed, function (value) {\n                                  if (naughtyHref('srcset', value.url)) {\n                                    value.evil = true;\n                                  }\n                                });\n                                parsed = filter(parsed, function (v) {\n                                  return !v.evil;\n                                });\n\n                                if (!parsed.length) {\n                                  delete frame.attribs[a];\n                                  return;\n                                } else {\n                                  value = stringifySrcset(filter(parsed, function (v) {\n                                    return !v.evil;\n                                  }));\n                                  frame.attribs[a] = value;\n                                }\n                              } catch (e) {\n                                // Unparseable srcset\n                                delete frame.attribs[a];\n                                return;\n                              }\n                            }\n\n                            if (a === 'class') {\n                              value = filterClasses(value, allowedClassesMap[name]);\n\n                              if (!value.length) {\n                                delete frame.attribs[a];\n                                return;\n                              }\n                            }\n\n                            if (a === 'style') {\n                              try {\n                                var abstractSyntaxTree = postcss.parse(name + ' {' + value + '}');\n                                var filteredAST = filterCss(abstractSyntaxTree, options.allowedStyles);\n                                value = stringifyStyleAttributes(filteredAST);\n\n                                if (value.length === 0) {\n                                  delete frame.attribs[a];\n                                  return;\n                                }\n                              } catch (e) {\n                                delete frame.attribs[a];\n                                return;\n                              }\n                            }\n\n                            result += ' ' + a;\n\n                            if (value && value.length) {\n                              result += '=\"' + escapeHtml(value, true) + '\"';\n                            }\n                          } else {\n                            delete frame.attribs[a];\n                          }\n                        });\n                      }\n\n                      if (options.selfClosing.indexOf(name) !== -1) {\n                        result += ' />';\n                      } else {\n                        result += '>';\n\n                        if (frame.innerText && !hasText && !options.textFilter) {\n                          result += frame.innerText;\n                          addedText = true;\n                        }\n                      }\n\n                      if (skip) {\n                        result = tempResult + escapeHtml(result);\n                        tempResult = '';\n                      }\n                    },\n                    ontext: function ontext(text) {\n                      if (skipText) {\n                        return;\n                      }\n\n                      var lastFrame = stack[stack.length - 1];\n                      var tag;\n\n                      if (lastFrame) {\n                        tag = lastFrame.tag; // If inner text was set by transform function then let's use it\n\n                        text = lastFrame.innerText !== undefined ? lastFrame.innerText : text;\n                      }\n\n                      if (options.disallowedTagsMode === 'discard' && (tag === 'script' || tag === 'style')) {\n                        // htmlparser2 gives us these as-is. Escaping them ruins the content. Allowing\n                        // script tags is, by definition, game over for XSS protection, so if that's\n                        // your concern, don't allow them. The same is essentially true for style tags\n                        // which have their own collection of XSS vectors.\n                        result += text;\n                      } else {\n                        var escaped = escapeHtml(text, false);\n\n                        if (options.textFilter && !addedText) {\n                          result += options.textFilter(escaped, tag);\n                        } else if (!addedText) {\n                          result += escaped;\n                        }\n                      }\n\n                      if (stack.length) {\n                        var frame = stack[stack.length - 1];\n                        frame.text += text;\n                      }\n                    },\n                    onclosetag: function onclosetag(name) {\n                      if (skipText) {\n                        skipTextDepth--;\n\n                        if (!skipTextDepth) {\n                          skipText = false;\n                        } else {\n                          return;\n                        }\n                      }\n\n                      var frame = stack.pop();\n\n                      if (!frame) {\n                        // Do not crash on bad markup\n                        return;\n                      }\n\n                      skipText = options.enforceHtmlBoundary ? name === 'html' : false;\n                      depth--;\n                      var skip = skipMap[depth];\n\n                      if (skip) {\n                        delete skipMap[depth];\n\n                        if (options.disallowedTagsMode === 'discard') {\n                          frame.updateParentNodeText();\n                          return;\n                        }\n\n                        tempResult = result;\n                        result = '';\n                      }\n\n                      if (transformMap[depth]) {\n                        name = transformMap[depth];\n                        delete transformMap[depth];\n                      }\n\n                      if (options.exclusiveFilter && options.exclusiveFilter(frame)) {\n                        result = result.substr(0, frame.tagPosition);\n                        return;\n                      }\n\n                      frame.updateParentNodeMediaChildren();\n                      frame.updateParentNodeText();\n\n                      if (options.selfClosing.indexOf(name) !== -1) {\n                        // Already output />\n                        if (skip) {\n                          result = tempResult;\n                          tempResult = '';\n                        }\n\n                        return;\n                      }\n\n                      result += '</' + name + '>';\n\n                      if (skip) {\n                        result = tempResult + escapeHtml(result);\n                        tempResult = '';\n                      }\n                    }\n                  }, options.parser);\n                  parser.write(html);\n                  parser.end();\n                  return result;\n\n                  function initializeState() {\n                    result = '';\n                    depth = 0;\n                    stack = [];\n                    skipMap = {};\n                    transformMap = {};\n                    skipText = false;\n                    skipTextDepth = 0;\n                  }\n\n                  function escapeHtml(s, quote) {\n                    if (typeof s !== 'string') {\n                      s = s + '';\n                    }\n\n                    if (options.parser.decodeEntities) {\n                      s = s.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\>/g, '&gt;');\n\n                      if (quote) {\n                        s = s.replace(/\\\"/g, '&quot;');\n                      }\n                    } // TODO: this is inadequate because it will pass `&0;`. This approach\n                    // will not work, each & must be considered with regard to whether it\n                    // is followed by a 100% syntactically valid entity or not, and escaped\n                    // if it is not. If this bothers you, don't set parser.decodeEntities\n                    // to false. (The default is true.)\n\n\n                    s = s.replace(/&(?![a-zA-Z0-9#]{1,20};)/g, '&amp;') // Match ampersands not part of existing HTML entity\n                    .replace(/</g, '&lt;').replace(/\\>/g, '&gt;');\n\n                    if (quote) {\n                      s = s.replace(/\\\"/g, '&quot;');\n                    }\n\n                    return s;\n                  }\n\n                  function naughtyHref(name, href) {\n                    // Browsers ignore character codes of 32 (space) and below in a surprising\n                    // number of situations. Start reading here:\n                    // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet#Embedded_tab\n                    // eslint-disable-next-line no-control-regex\n                    href = href.replace(/[\\x00-\\x20]+/g, ''); // Clobber any comments in URLs, which the browser might\n                    // interpret inside an XML data island, allowing\n                    // a javascript: URL to be snuck through\n\n                    href = href.replace(/<\\!\\-\\-.*?\\-\\-\\>/g, ''); // Case insensitive so we don't get faked out by JAVASCRIPT #1\n\n                    var matches = href.match(/^([a-zA-Z]+)\\:/);\n\n                    if (!matches) {\n                      // Protocol-relative URL starting with any combination of '/' and '\\'\n                      if (href.match(/^[\\/\\\\]{2}/)) {\n                        return !options.allowProtocolRelative;\n                      } // No scheme\n\n\n                      return false;\n                    }\n\n                    var scheme = matches[1].toLowerCase();\n\n                    if (has(options.allowedSchemesByTag, name)) {\n                      return options.allowedSchemesByTag[name].indexOf(scheme) === -1;\n                    }\n\n                    return !options.allowedSchemes || options.allowedSchemes.indexOf(scheme) === -1;\n                  }\n                  /**\n                  * Filters user input css properties by whitelisted regex attributes.\n                  *\n                  * @param {object} abstractSyntaxTree  - Object representation of CSS attributes.\n                  * @property {array[Declaration]} abstractSyntaxTree.nodes[0] - Each object cointains prop and value key, i.e { prop: 'color', value: 'red' }.\n                  * @param {object} allowedStyles       - Keys are properties (i.e color), value is list of permitted regex rules (i.e /green/i).\n                  * @return {object}                    - Abstract Syntax Tree with filtered style attributes.\n                  */\n\n\n                  function filterCss(abstractSyntaxTree, allowedStyles) {\n                    if (!allowedStyles) {\n                      return abstractSyntaxTree;\n                    }\n\n                    var filteredAST = cloneDeep(abstractSyntaxTree);\n                    var astRules = abstractSyntaxTree.nodes[0];\n                    var selectedRule; // Merge global and tag-specific styles into new AST.\n\n                    if (allowedStyles[astRules.selector] && allowedStyles['*']) {\n                      selectedRule = mergeWith(cloneDeep(allowedStyles[astRules.selector]), allowedStyles['*'], function (objValue, srcValue) {\n                        if (Array.isArray(objValue)) {\n                          return objValue.concat(srcValue);\n                        }\n                      });\n                    } else {\n                      selectedRule = allowedStyles[astRules.selector] || allowedStyles['*'];\n                    }\n\n                    if (selectedRule) {\n                      filteredAST.nodes[0].nodes = astRules.nodes.reduce(filterDeclarations(selectedRule), []);\n                    }\n\n                    return filteredAST;\n                  }\n                  /**\n                  * Extracts the style attribues from an AbstractSyntaxTree and formats those\n                  * values in the inline style attribute format.\n                  *\n                  * @param  {AbstractSyntaxTree} filteredAST\n                  * @return {string}             - Example: \"color:yellow;text-align:center;font-family:helvetica;\"\n                  */\n\n\n                  function stringifyStyleAttributes(filteredAST) {\n                    return filteredAST.nodes[0].nodes.reduce(function (extractedAttributes, attributeObject) {\n                      extractedAttributes.push(attributeObject.prop + ':' + attributeObject.value);\n                      return extractedAttributes;\n                    }, []).join(';');\n                  }\n                  /**\n                  * Filters the existing attributes for the given property. Discards any attributes\n                  * which don't match the whitelist.\n                  *\n                  * @param  {object} selectedRule             - Example: { color: red, font-family: helvetica }\n                  * @param  {array} allowedDeclarationsList   - List of declarations which pass whitelisting.\n                  * @param  {object} attributeObject          - Object representing the current css property.\n                  * @property {string} attributeObject.type   - Typically 'declaration'.\n                  * @property {string} attributeObject.prop   - The CSS property, i.e 'color'.\n                  * @property {string} attributeObject.value  - The corresponding value to the css property, i.e 'red'.\n                  * @return {function}                        - When used in Array.reduce, will return an array of Declaration objects\n                  */\n\n\n                  function filterDeclarations(selectedRule) {\n                    return function (allowedDeclarationsList, attributeObject) {\n                      // If this property is whitelisted...\n                      if (selectedRule.hasOwnProperty(attributeObject.prop)) {\n                        var matchesRegex = selectedRule[attributeObject.prop].some(function (regularExpression) {\n                          return regularExpression.test(attributeObject.value);\n                        });\n\n                        if (matchesRegex) {\n                          allowedDeclarationsList.push(attributeObject);\n                        }\n                      }\n\n                      return allowedDeclarationsList;\n                    };\n                  }\n\n                  function filterClasses(classes, allowed) {\n                    if (!allowed) {\n                      // The class attribute is allowed without filtering on this tag\n                      return classes;\n                    }\n\n                    classes = classes.split(/\\s+/);\n                    return classes.filter(function (clss) {\n                      return allowed.indexOf(clss) !== -1;\n                    }).join(' ');\n                  }\n                } // Defaults are accessible to you so that you can use them as a starting point\n                // programmatically if you wish\n\n\n                var htmlParserDefaults = {\n                  decodeEntities: true\n                };\n                sanitizeHtml.defaults = {\n                  allowedTags: ['h3', 'h4', 'h5', 'h6', 'blockquote', 'p', 'a', 'ul', 'ol', 'nl', 'li', 'b', 'i', 'strong', 'em', 'strike', 'abbr', 'code', 'hr', 'br', 'div', 'table', 'thead', 'caption', 'tbody', 'tr', 'th', 'td', 'pre', 'iframe'],\n                  disallowedTagsMode: 'discard',\n                  allowedAttributes: {\n                    a: ['href', 'name', 'target'],\n                    // We don't currently allow img itself by default, but this\n                    // would make sense if we did. You could add srcset here,\n                    // and if you do the URL is checked for safety\n                    img: ['src']\n                  },\n                  // Lots of these won't come up by default because we don't allow them\n                  selfClosing: ['img', 'br', 'hr', 'area', 'base', 'basefont', 'input', 'link', 'meta'],\n                  // URL schemes we permit\n                  allowedSchemes: ['http', 'https', 'ftp', 'mailto'],\n                  allowedSchemesByTag: {},\n                  allowedSchemesAppliedToAttributes: ['href', 'src', 'cite'],\n                  allowProtocolRelative: true,\n                  enforceHtmlBoundary: false\n                };\n\n                sanitizeHtml.simpleTransform = function (newTagName, newAttribs, merge) {\n                  merge = merge === undefined ? true : merge;\n                  newAttribs = newAttribs || {};\n                  return function (tagName, attribs) {\n                    var attrib;\n\n                    if (merge) {\n                      for (attrib in newAttribs) {\n                        attribs[attrib] = newAttribs[attrib];\n                      }\n                    } else {\n                      attribs = newAttribs;\n                    }\n\n                    return {\n                      tagName: newTagName,\n                      attribs: attribs\n                    };\n                  };\n                };\n              }, {\n                \"htmlparser2\": 31,\n                \"lodash/cloneDeep\": 140,\n                \"lodash/escapeRegExp\": 143,\n                \"lodash/isPlainObject\": 155,\n                \"lodash/isString\": 157,\n                \"lodash/mergeWith\": 162,\n                \"parse-srcset\": 167,\n                \"postcss\": 181,\n                \"url\": 209\n              }]\n            }, {}, [211])(211);\n          });\n          /* WEBPACK VAR INJECTION */\n\n        }).call(this, __webpack_require__(\"c8ba\"));\n        /***/\n      },\n\n      /***/\n      \"057f\":\n      /***/\n      function f(module, exports, __webpack_require__) {\n        var toIndexedObject = __webpack_require__(\"fc6a\");\n\n        var nativeGetOwnPropertyNames = __webpack_require__(\"241c\").f;\n\n        var toString = {}.toString;\n        var windowNames = (typeof window === \"undefined\" ? \"undefined\" : _typeof2(window)) == 'object' && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];\n\n        var getWindowNames = function getWindowNames(it) {\n          try {\n            return nativeGetOwnPropertyNames(it);\n          } catch (error) {\n            return windowNames.slice();\n          }\n        }; // fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\n\n\n        module.exports.f = function getOwnPropertyNames(it) {\n          return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : nativeGetOwnPropertyNames(toIndexedObject(it));\n        };\n        /***/\n\n      },\n\n      /***/\n      \"06cf\":\n      /***/\n      function cf(module, exports, __webpack_require__) {\n        var DESCRIPTORS = __webpack_require__(\"83ab\");\n\n        var propertyIsEnumerableModule = __webpack_require__(\"d1e7\");\n\n        var createPropertyDescriptor = __webpack_require__(\"5c6c\");\n\n        var toIndexedObject = __webpack_require__(\"fc6a\");\n\n        var toPrimitive = __webpack_require__(\"c04e\");\n\n        var has = __webpack_require__(\"5135\");\n\n        var IE8_DOM_DEFINE = __webpack_require__(\"0cfb\");\n\n        var nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor; // `Object.getOwnPropertyDescriptor` method\n        // https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor\n\n        exports.f = DESCRIPTORS ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n          O = toIndexedObject(O);\n          P = toPrimitive(P, true);\n          if (IE8_DOM_DEFINE) try {\n            return nativeGetOwnPropertyDescriptor(O, P);\n          } catch (error) {\n            /* empty */\n          }\n          if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);\n        };\n        /***/\n      },\n\n      /***/\n      \"0cfb\":\n      /***/\n      function cfb(module, exports, __webpack_require__) {\n        var DESCRIPTORS = __webpack_require__(\"83ab\");\n\n        var fails = __webpack_require__(\"d039\");\n\n        var createElement = __webpack_require__(\"cc12\"); // Thank's IE8 for his funny defineProperty\n\n\n        module.exports = !DESCRIPTORS && !fails(function () {\n          return Object.defineProperty(createElement('div'), 'a', {\n            get: function get() {\n              return 7;\n            }\n          }).a != 7;\n        });\n        /***/\n      },\n\n      /***/\n      \"1276\":\n      /***/\n      function _(module, exports, __webpack_require__) {\n        \"use strict\";\n\n        var fixRegExpWellKnownSymbolLogic = __webpack_require__(\"d784\");\n\n        var isRegExp = __webpack_require__(\"44e7\");\n\n        var anObject = __webpack_require__(\"825a\");\n\n        var requireObjectCoercible = __webpack_require__(\"1d80\");\n\n        var speciesConstructor = __webpack_require__(\"4840\");\n\n        var advanceStringIndex = __webpack_require__(\"8aa5\");\n\n        var toLength = __webpack_require__(\"50c4\");\n\n        var callRegExpExec = __webpack_require__(\"14c3\");\n\n        var regexpExec = __webpack_require__(\"9263\");\n\n        var fails = __webpack_require__(\"d039\");\n\n        var arrayPush = [].push;\n        var min = Math.min;\n        var MAX_UINT32 = 0xFFFFFFFF; // babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError\n\n        var SUPPORTS_Y = !fails(function () {\n          return !RegExp(MAX_UINT32, 'y');\n        }); // @@split logic\n\n        fixRegExpWellKnownSymbolLogic('split', 2, function (SPLIT, nativeSplit, maybeCallNative) {\n          var internalSplit;\n\n          if ('abbc'.split(/(b)*/)[1] == 'c' || 'test'.split(/(?:)/, -1).length != 4 || 'ab'.split(/(?:ab)*/).length != 2 || '.'.split(/(.?)(.?)/).length != 4 || '.'.split(/()()/).length > 1 || ''.split(/.?/).length) {\n            // based on es5-shim implementation, need to rework it\n            internalSplit = function internalSplit(separator, limit) {\n              var string = String(requireObjectCoercible(this));\n              var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n              if (lim === 0) return [];\n              if (separator === undefined) return [string]; // If `separator` is not a regex, use native split\n\n              if (!isRegExp(separator)) {\n                return nativeSplit.call(string, separator, lim);\n              }\n\n              var output = [];\n              var flags = (separator.ignoreCase ? 'i' : '') + (separator.multiline ? 'm' : '') + (separator.unicode ? 'u' : '') + (separator.sticky ? 'y' : '');\n              var lastLastIndex = 0; // Make `global` and avoid `lastIndex` issues by working with a copy\n\n              var separatorCopy = new RegExp(separator.source, flags + 'g');\n              var match, lastIndex, lastLength;\n\n              while (match = regexpExec.call(separatorCopy, string)) {\n                lastIndex = separatorCopy.lastIndex;\n\n                if (lastIndex > lastLastIndex) {\n                  output.push(string.slice(lastLastIndex, match.index));\n                  if (match.length > 1 && match.index < string.length) arrayPush.apply(output, match.slice(1));\n                  lastLength = match[0].length;\n                  lastLastIndex = lastIndex;\n                  if (output.length >= lim) break;\n                }\n\n                if (separatorCopy.lastIndex === match.index) separatorCopy.lastIndex++; // Avoid an infinite loop\n              }\n\n              if (lastLastIndex === string.length) {\n                if (lastLength || !separatorCopy.test('')) output.push('');\n              } else output.push(string.slice(lastLastIndex));\n\n              return output.length > lim ? output.slice(0, lim) : output;\n            }; // Chakra, V8\n\n          } else if ('0'.split(undefined, 0).length) {\n            internalSplit = function internalSplit(separator, limit) {\n              return separator === undefined && limit === 0 ? [] : nativeSplit.call(this, separator, limit);\n            };\n          } else internalSplit = nativeSplit;\n\n          return [// `String.prototype.split` method\n          // https://tc39.github.io/ecma262/#sec-string.prototype.split\n          function split(separator, limit) {\n            var O = requireObjectCoercible(this);\n            var splitter = separator == undefined ? undefined : separator[SPLIT];\n            return splitter !== undefined ? splitter.call(separator, O, limit) : internalSplit.call(String(O), separator, limit);\n          }, // `RegExp.prototype[@@split]` method\n          // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split\n          //\n          // NOTE: This cannot be properly polyfilled in engines that don't support\n          // the 'y' flag.\n          function (regexp, limit) {\n            var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== nativeSplit);\n            if (res.done) return res.value;\n            var rx = anObject(regexp);\n            var S = String(this);\n            var C = speciesConstructor(rx, RegExp);\n            var unicodeMatching = rx.unicode;\n            var flags = (rx.ignoreCase ? 'i' : '') + (rx.multiline ? 'm' : '') + (rx.unicode ? 'u' : '') + (SUPPORTS_Y ? 'y' : 'g'); // ^(? + rx + ) is needed, in combination with some S slicing, to\n            // simulate the 'y' flag.\n\n            var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);\n            var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n            if (lim === 0) return [];\n            if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];\n            var p = 0;\n            var q = 0;\n            var A = [];\n\n            while (q < S.length) {\n              splitter.lastIndex = SUPPORTS_Y ? q : 0;\n              var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));\n              var e;\n\n              if (z === null || (e = min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p) {\n                q = advanceStringIndex(S, q, unicodeMatching);\n              } else {\n                A.push(S.slice(p, q));\n                if (A.length === lim) return A;\n\n                for (var i = 1; i <= z.length - 1; i++) {\n                  A.push(z[i]);\n                  if (A.length === lim) return A;\n                }\n\n                q = p = e;\n              }\n            }\n\n            A.push(S.slice(p));\n            return A;\n          }];\n        }, !SUPPORTS_Y);\n        /***/\n      },\n\n      /***/\n      \"14c3\":\n      /***/\n      function c3(module, exports, __webpack_require__) {\n        var classof = __webpack_require__(\"c6b6\");\n\n        var regexpExec = __webpack_require__(\"9263\"); // `RegExpExec` abstract operation\n        // https://tc39.github.io/ecma262/#sec-regexpexec\n\n\n        module.exports = function (R, S) {\n          var exec = R.exec;\n\n          if (typeof exec === 'function') {\n            var result = exec.call(R, S);\n\n            if (_typeof2(result) !== 'object') {\n              throw TypeError('RegExp exec method returned something other than an Object or null');\n            }\n\n            return result;\n          }\n\n          if (classof(R) !== 'RegExp') {\n            throw TypeError('RegExp#exec called on incompatible receiver');\n          }\n\n          return regexpExec.call(R, S);\n        };\n        /***/\n\n      },\n\n      /***/\n      \"1be4\":\n      /***/\n      function be4(module, exports, __webpack_require__) {\n        var getBuiltIn = __webpack_require__(\"d066\");\n\n        module.exports = getBuiltIn('document', 'documentElement');\n        /***/\n      },\n\n      /***/\n      \"1c0b\":\n      /***/\n      function c0b(module, exports) {\n        module.exports = function (it) {\n          if (typeof it != 'function') {\n            throw TypeError(String(it) + ' is not a function');\n          }\n\n          return it;\n        };\n        /***/\n\n      },\n\n      /***/\n      \"1c7e\":\n      /***/\n      function c7e(module, exports, __webpack_require__) {\n        var wellKnownSymbol = __webpack_require__(\"b622\");\n\n        var ITERATOR = wellKnownSymbol('iterator');\n        var SAFE_CLOSING = false;\n\n        try {\n          var called = 0;\n          var iteratorWithReturn = {\n            next: function next() {\n              return {\n                done: !!called++\n              };\n            },\n            'return': function _return() {\n              SAFE_CLOSING = true;\n            }\n          };\n\n          iteratorWithReturn[ITERATOR] = function () {\n            return this;\n          }; // eslint-disable-next-line no-throw-literal\n\n\n          Array.from(iteratorWithReturn, function () {\n            throw 2;\n          });\n        } catch (error) {\n          /* empty */\n        }\n\n        module.exports = function (exec, SKIP_CLOSING) {\n          if (!SKIP_CLOSING && !SAFE_CLOSING) return false;\n          var ITERATION_SUPPORT = false;\n\n          try {\n            var object = {};\n\n            object[ITERATOR] = function () {\n              return {\n                next: function next() {\n                  return {\n                    done: ITERATION_SUPPORT = true\n                  };\n                }\n              };\n            };\n\n            exec(object);\n          } catch (error) {\n            /* empty */\n          }\n\n          return ITERATION_SUPPORT;\n        };\n        /***/\n\n      },\n\n      /***/\n      \"1d80\":\n      /***/\n      function d80(module, exports) {\n        // `RequireObjectCoercible` abstract operation\n        // https://tc39.github.io/ecma262/#sec-requireobjectcoercible\n        module.exports = function (it) {\n          if (it == undefined) throw TypeError(\"Can't call method on \" + it);\n          return it;\n        };\n        /***/\n\n      },\n\n      /***/\n      \"1dc7\":\n      /***/\n      function dc7(module, exports, __webpack_require__) {// extracted by mini-css-extract-plugin\n\n        /***/\n      },\n\n      /***/\n      \"1dde\":\n      /***/\n      function dde(module, exports, __webpack_require__) {\n        var fails = __webpack_require__(\"d039\");\n\n        var wellKnownSymbol = __webpack_require__(\"b622\");\n\n        var V8_VERSION = __webpack_require__(\"2d00\");\n\n        var SPECIES = wellKnownSymbol('species');\n\n        module.exports = function (METHOD_NAME) {\n          // We can't use this feature detection in V8 since it causes\n          // deoptimization and serious performance degradation\n          // https://github.com/zloirock/core-js/issues/677\n          return V8_VERSION >= 51 || !fails(function () {\n            var array = [];\n            var constructor = array.constructor = {};\n\n            constructor[SPECIES] = function () {\n              return {\n                foo: 1\n              };\n            };\n\n            return array[METHOD_NAME](Boolean).foo !== 1;\n          });\n        };\n        /***/\n\n      },\n\n      /***/\n      \"23cb\":\n      /***/\n      function cb(module, exports, __webpack_require__) {\n        var toInteger = __webpack_require__(\"a691\");\n\n        var max = Math.max;\n        var min = Math.min; // Helper for a popular repeating case of the spec:\n        // Let integer be ? ToInteger(index).\n        // If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\n\n        module.exports = function (index, length) {\n          var integer = toInteger(index);\n          return integer < 0 ? max(integer + length, 0) : min(integer, length);\n        };\n        /***/\n\n      },\n\n      /***/\n      \"23e7\":\n      /***/\n      function e7(module, exports, __webpack_require__) {\n        var global = __webpack_require__(\"da84\");\n\n        var getOwnPropertyDescriptor = __webpack_require__(\"06cf\").f;\n\n        var createNonEnumerableProperty = __webpack_require__(\"9112\");\n\n        var redefine = __webpack_require__(\"6eeb\");\n\n        var setGlobal = __webpack_require__(\"ce4e\");\n\n        var copyConstructorProperties = __webpack_require__(\"e893\");\n\n        var isForced = __webpack_require__(\"94ca\");\n        /*\n          options.target      - name of the target object\n          options.global      - target is the global object\n          options.stat        - export as static methods of target\n          options.proto       - export as prototype methods of target\n          options.real        - real prototype method for the `pure` version\n          options.forced      - export even if the native feature is available\n          options.bind        - bind methods to the target, required for the `pure` version\n          options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version\n          options.unsafe      - use the simple assignment of property instead of delete + defineProperty\n          options.sham        - add a flag to not completely full polyfills\n          options.enumerable  - export as enumerable property\n          options.noTargetGet - prevent calling a getter on target\n        */\n\n\n        module.exports = function (options, source) {\n          var TARGET = options.target;\n          var GLOBAL = options.global;\n          var STATIC = options.stat;\n          var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n\n          if (GLOBAL) {\n            target = global;\n          } else if (STATIC) {\n            target = global[TARGET] || setGlobal(TARGET, {});\n          } else {\n            target = (global[TARGET] || {}).prototype;\n          }\n\n          if (target) for (key in source) {\n            sourceProperty = source[key];\n\n            if (options.noTargetGet) {\n              descriptor = getOwnPropertyDescriptor(target, key);\n              targetProperty = descriptor && descriptor.value;\n            } else targetProperty = target[key];\n\n            FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced); // contained in target\n\n            if (!FORCED && targetProperty !== undefined) {\n              if (_typeof2(sourceProperty) === _typeof2(targetProperty)) continue;\n              copyConstructorProperties(sourceProperty, targetProperty);\n            } // add a flag to not completely full polyfills\n\n\n            if (options.sham || targetProperty && targetProperty.sham) {\n              createNonEnumerableProperty(sourceProperty, 'sham', true);\n            } // extend global\n\n\n            redefine(target, key, sourceProperty, options);\n          }\n        };\n        /***/\n\n      },\n\n      /***/\n      \"241c\":\n      /***/\n      function c(module, exports, __webpack_require__) {\n        var internalObjectKeys = __webpack_require__(\"ca84\");\n\n        var enumBugKeys = __webpack_require__(\"7839\");\n\n        var hiddenKeys = enumBugKeys.concat('length', 'prototype'); // `Object.getOwnPropertyNames` method\n        // https://tc39.github.io/ecma262/#sec-object.getownpropertynames\n\n        exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n          return internalObjectKeys(O, hiddenKeys);\n        };\n        /***/\n\n      },\n\n      /***/\n      \"2532\":\n      /***/\n      function _(module, exports, __webpack_require__) {\n        \"use strict\";\n\n        var $ = __webpack_require__(\"23e7\");\n\n        var notARegExp = __webpack_require__(\"5a34\");\n\n        var requireObjectCoercible = __webpack_require__(\"1d80\");\n\n        var correctIsRegExpLogic = __webpack_require__(\"ab13\"); // `String.prototype.includes` method\n        // https://tc39.github.io/ecma262/#sec-string.prototype.includes\n\n\n        $({\n          target: 'String',\n          proto: true,\n          forced: !correctIsRegExpLogic('includes')\n        }, {\n          includes: function includes(searchString\n          /* , position = 0 */\n          ) {\n            return !!~String(requireObjectCoercible(this)).indexOf(notARegExp(searchString), arguments.length > 1 ? arguments[1] : undefined);\n          }\n        });\n        /***/\n      },\n\n      /***/\n      \"25f0\":\n      /***/\n      function f0(module, exports, __webpack_require__) {\n        \"use strict\";\n\n        var redefine = __webpack_require__(\"6eeb\");\n\n        var anObject = __webpack_require__(\"825a\");\n\n        var fails = __webpack_require__(\"d039\");\n\n        var flags = __webpack_require__(\"ad6d\");\n\n        var TO_STRING = 'toString';\n        var RegExpPrototype = RegExp.prototype;\n        var nativeToString = RegExpPrototype[TO_STRING];\n        var NOT_GENERIC = fails(function () {\n          return nativeToString.call({\n            source: 'a',\n            flags: 'b'\n          }) != '/a/b';\n        }); // FF44- RegExp#toString has a wrong name\n\n        var INCORRECT_NAME = nativeToString.name != TO_STRING; // `RegExp.prototype.toString` method\n        // https://tc39.github.io/ecma262/#sec-regexp.prototype.tostring\n\n        if (NOT_GENERIC || INCORRECT_NAME) {\n          redefine(RegExp.prototype, TO_STRING, function toString() {\n            var R = anObject(this);\n            var p = String(R.source);\n            var rf = R.flags;\n            var f = String(rf === undefined && R instanceof RegExp && !('flags' in RegExpPrototype) ? flags.call(R) : rf);\n            return '/' + p + '/' + f;\n          }, {\n            unsafe: true\n          });\n        }\n        /***/\n\n      },\n\n      /***/\n      \"2d00\":\n      /***/\n      function d00(module, exports, __webpack_require__) {\n        var global = __webpack_require__(\"da84\");\n\n        var userAgent = __webpack_require__(\"342f\");\n\n        var process = global.process;\n        var versions = process && process.versions;\n        var v8 = versions && versions.v8;\n        var match, version;\n\n        if (v8) {\n          match = v8.split('.');\n          version = match[0] + match[1];\n        } else if (userAgent) {\n          match = userAgent.match(/Edge\\/(\\d+)/);\n\n          if (!match || match[1] >= 74) {\n            match = userAgent.match(/Chrome\\/(\\d+)/);\n            if (match) version = match[1];\n          }\n        }\n\n        module.exports = version && +version;\n        /***/\n      },\n\n      /***/\n      \"342f\":\n      /***/\n      function f(module, exports, __webpack_require__) {\n        var getBuiltIn = __webpack_require__(\"d066\");\n\n        module.exports = getBuiltIn('navigator', 'userAgent') || '';\n        /***/\n      },\n\n      /***/\n      \"35a1\":\n      /***/\n      function a1(module, exports, __webpack_require__) {\n        var classof = __webpack_require__(\"f5df\");\n\n        var Iterators = __webpack_require__(\"3f8c\");\n\n        var wellKnownSymbol = __webpack_require__(\"b622\");\n\n        var ITERATOR = wellKnownSymbol('iterator');\n\n        module.exports = function (it) {\n          if (it != undefined) return it[ITERATOR] || it['@@iterator'] || Iterators[classof(it)];\n        };\n        /***/\n\n      },\n\n      /***/\n      \"37e8\":\n      /***/\n      function e8(module, exports, __webpack_require__) {\n        var DESCRIPTORS = __webpack_require__(\"83ab\");\n\n        var definePropertyModule = __webpack_require__(\"9bf2\");\n\n        var anObject = __webpack_require__(\"825a\");\n\n        var objectKeys = __webpack_require__(\"df75\"); // `Object.defineProperties` method\n        // https://tc39.github.io/ecma262/#sec-object.defineproperties\n\n\n        module.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {\n          anObject(O);\n          var keys = objectKeys(Properties);\n          var length = keys.length;\n          var index = 0;\n          var key;\n\n          while (length > index) {\n            definePropertyModule.f(O, key = keys[index++], Properties[key]);\n          }\n\n          return O;\n        };\n        /***/\n      },\n\n      /***/\n      \"3bbe\":\n      /***/\n      function bbe(module, exports, __webpack_require__) {\n        var isObject = __webpack_require__(\"861d\");\n\n        module.exports = function (it) {\n          if (!isObject(it) && it !== null) {\n            throw TypeError(\"Can't set \" + String(it) + ' as a prototype');\n          }\n\n          return it;\n        };\n        /***/\n\n      },\n\n      /***/\n      \"3ca3\":\n      /***/\n      function ca3(module, exports, __webpack_require__) {\n        \"use strict\";\n\n        var charAt = __webpack_require__(\"6547\").charAt;\n\n        var InternalStateModule = __webpack_require__(\"69f3\");\n\n        var defineIterator = __webpack_require__(\"7dd0\");\n\n        var STRING_ITERATOR = 'String Iterator';\n        var setInternalState = InternalStateModule.set;\n        var getInternalState = InternalStateModule.getterFor(STRING_ITERATOR); // `String.prototype[@@iterator]` method\n        // https://tc39.github.io/ecma262/#sec-string.prototype-@@iterator\n\n        defineIterator(String, 'String', function (iterated) {\n          setInternalState(this, {\n            type: STRING_ITERATOR,\n            string: String(iterated),\n            index: 0\n          }); // `%StringIteratorPrototype%.next` method\n          // https://tc39.github.io/ecma262/#sec-%stringiteratorprototype%.next\n        }, function next() {\n          var state = getInternalState(this);\n          var string = state.string;\n          var index = state.index;\n          var point;\n          if (index >= string.length) return {\n            value: undefined,\n            done: true\n          };\n          point = charAt(string, index);\n          state.index += point.length;\n          return {\n            value: point,\n            done: false\n          };\n        });\n        /***/\n      },\n\n      /***/\n      \"3f8c\":\n      /***/\n      function f8c(module, exports) {\n        module.exports = {};\n        /***/\n      },\n\n      /***/\n      \"428f\":\n      /***/\n      function f(module, exports, __webpack_require__) {\n        var global = __webpack_require__(\"da84\");\n\n        module.exports = global;\n        /***/\n      },\n\n      /***/\n      \"44ad\":\n      /***/\n      function ad(module, exports, __webpack_require__) {\n        var fails = __webpack_require__(\"d039\");\n\n        var classof = __webpack_require__(\"c6b6\");\n\n        var split = ''.split; // fallback for non-array-like ES3 and non-enumerable old V8 strings\n\n        module.exports = fails(function () {\n          // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n          // eslint-disable-next-line no-prototype-builtins\n          return !Object('z').propertyIsEnumerable(0);\n        }) ? function (it) {\n          return classof(it) == 'String' ? split.call(it, '') : Object(it);\n        } : Object;\n        /***/\n      },\n\n      /***/\n      \"44d2\":\n      /***/\n      function d2(module, exports, __webpack_require__) {\n        var wellKnownSymbol = __webpack_require__(\"b622\");\n\n        var create = __webpack_require__(\"7c73\");\n\n        var definePropertyModule = __webpack_require__(\"9bf2\");\n\n        var UNSCOPABLES = wellKnownSymbol('unscopables');\n        var ArrayPrototype = Array.prototype; // Array.prototype[@@unscopables]\n        // https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\n\n        if (ArrayPrototype[UNSCOPABLES] == undefined) {\n          definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {\n            configurable: true,\n            value: create(null)\n          });\n        } // add a key to Array.prototype[@@unscopables]\n\n\n        module.exports = function (key) {\n          ArrayPrototype[UNSCOPABLES][key] = true;\n        };\n        /***/\n\n      },\n\n      /***/\n      \"44e7\":\n      /***/\n      function e7(module, exports, __webpack_require__) {\n        var isObject = __webpack_require__(\"861d\");\n\n        var classof = __webpack_require__(\"c6b6\");\n\n        var wellKnownSymbol = __webpack_require__(\"b622\");\n\n        var MATCH = wellKnownSymbol('match'); // `IsRegExp` abstract operation\n        // https://tc39.github.io/ecma262/#sec-isregexp\n\n        module.exports = function (it) {\n          var isRegExp;\n          return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');\n        };\n        /***/\n\n      },\n\n      /***/\n      \"4840\":\n      /***/\n      function _(module, exports, __webpack_require__) {\n        var anObject = __webpack_require__(\"825a\");\n\n        var aFunction = __webpack_require__(\"1c0b\");\n\n        var wellKnownSymbol = __webpack_require__(\"b622\");\n\n        var SPECIES = wellKnownSymbol('species'); // `SpeciesConstructor` abstract operation\n        // https://tc39.github.io/ecma262/#sec-speciesconstructor\n\n        module.exports = function (O, defaultConstructor) {\n          var C = anObject(O).constructor;\n          var S;\n          return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aFunction(S);\n        };\n        /***/\n\n      },\n\n      /***/\n      \"4930\":\n      /***/\n      function _(module, exports, __webpack_require__) {\n        var fails = __webpack_require__(\"d039\");\n\n        module.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n          // Chrome 38 Symbol has incorrect toString conversion\n          // eslint-disable-next-line no-undef\n          return !String(Symbol());\n        });\n        /***/\n      },\n\n      /***/\n      \"4d64\":\n      /***/\n      function d64(module, exports, __webpack_require__) {\n        var toIndexedObject = __webpack_require__(\"fc6a\");\n\n        var toLength = __webpack_require__(\"50c4\");\n\n        var toAbsoluteIndex = __webpack_require__(\"23cb\"); // `Array.prototype.{ indexOf, includes }` methods implementation\n\n\n        var createMethod = function createMethod(IS_INCLUDES) {\n          return function ($this, el, fromIndex) {\n            var O = toIndexedObject($this);\n            var length = toLength(O.length);\n            var index = toAbsoluteIndex(fromIndex, length);\n            var value; // Array#includes uses SameValueZero equality algorithm\n            // eslint-disable-next-line no-self-compare\n\n            if (IS_INCLUDES && el != el) while (length > index) {\n              value = O[index++]; // eslint-disable-next-line no-self-compare\n\n              if (value != value) return true; // Array#indexOf ignores holes, Array#includes - not\n            } else for (; length > index; index++) {\n              if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n            }\n            return !IS_INCLUDES && -1;\n          };\n        };\n\n        module.exports = {\n          // `Array.prototype.includes` method\n          // https://tc39.github.io/ecma262/#sec-array.prototype.includes\n          includes: createMethod(true),\n          // `Array.prototype.indexOf` method\n          // https://tc39.github.io/ecma262/#sec-array.prototype.indexof\n          indexOf: createMethod(false)\n        };\n        /***/\n      },\n\n      /***/\n      \"4df4\":\n      /***/\n      function df4(module, exports, __webpack_require__) {\n        \"use strict\";\n\n        var bind = __webpack_require__(\"0366\");\n\n        var toObject = __webpack_require__(\"7b0b\");\n\n        var callWithSafeIterationClosing = __webpack_require__(\"9bdd\");\n\n        var isArrayIteratorMethod = __webpack_require__(\"e95a\");\n\n        var toLength = __webpack_require__(\"50c4\");\n\n        var createProperty = __webpack_require__(\"8418\");\n\n        var getIteratorMethod = __webpack_require__(\"35a1\"); // `Array.from` method implementation\n        // https://tc39.github.io/ecma262/#sec-array.from\n\n\n        module.exports = function from(arrayLike\n        /* , mapfn = undefined, thisArg = undefined */\n        ) {\n          var O = toObject(arrayLike);\n          var C = typeof this == 'function' ? this : Array;\n          var argumentsLength = arguments.length;\n          var mapfn = argumentsLength > 1 ? arguments[1] : undefined;\n          var mapping = mapfn !== undefined;\n          var iteratorMethod = getIteratorMethod(O);\n          var index = 0;\n          var length, result, step, iterator, next, value;\n          if (mapping) mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : undefined, 2); // if the target is not iterable or it's an array with the default iterator - use a simple case\n\n          if (iteratorMethod != undefined && !(C == Array && isArrayIteratorMethod(iteratorMethod))) {\n            iterator = iteratorMethod.call(O);\n            next = iterator.next;\n            result = new C();\n\n            for (; !(step = next.call(iterator)).done; index++) {\n              value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;\n              createProperty(result, index, value);\n            }\n          } else {\n            length = toLength(O.length);\n            result = new C(length);\n\n            for (; length > index; index++) {\n              value = mapping ? mapfn(O[index], index) : O[index];\n              createProperty(result, index, value);\n            }\n          }\n\n          result.length = index;\n          return result;\n        };\n        /***/\n\n      },\n\n      /***/\n      \"4e82\":\n      /***/\n      function e82(module, exports, __webpack_require__) {\n        \"use strict\";\n\n        var $ = __webpack_require__(\"23e7\");\n\n        var aFunction = __webpack_require__(\"1c0b\");\n\n        var toObject = __webpack_require__(\"7b0b\");\n\n        var fails = __webpack_require__(\"d039\");\n\n        var arrayMethodIsStrict = __webpack_require__(\"a640\");\n\n        var test = [];\n        var nativeSort = test.sort; // IE8-\n\n        var FAILS_ON_UNDEFINED = fails(function () {\n          test.sort(undefined);\n        }); // V8 bug\n\n        var FAILS_ON_NULL = fails(function () {\n          test.sort(null);\n        }); // Old WebKit\n\n        var STRICT_METHOD = arrayMethodIsStrict('sort');\n        var FORCED = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || !STRICT_METHOD; // `Array.prototype.sort` method\n        // https://tc39.github.io/ecma262/#sec-array.prototype.sort\n\n        $({\n          target: 'Array',\n          proto: true,\n          forced: FORCED\n        }, {\n          sort: function sort(comparefn) {\n            return comparefn === undefined ? nativeSort.call(toObject(this)) : nativeSort.call(toObject(this), aFunction(comparefn));\n          }\n        });\n        /***/\n      },\n\n      /***/\n      \"50c4\":\n      /***/\n      function c4(module, exports, __webpack_require__) {\n        var toInteger = __webpack_require__(\"a691\");\n\n        var min = Math.min; // `ToLength` abstract operation\n        // https://tc39.github.io/ecma262/#sec-tolength\n\n        module.exports = function (argument) {\n          return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n        };\n        /***/\n\n      },\n\n      /***/\n      \"5135\":\n      /***/\n      function _(module, exports) {\n        var hasOwnProperty = {}.hasOwnProperty;\n\n        module.exports = function (it, key) {\n          return hasOwnProperty.call(it, key);\n        };\n        /***/\n\n      },\n\n      /***/\n      \"5692\":\n      /***/\n      function _(module, exports, __webpack_require__) {\n        var IS_PURE = __webpack_require__(\"c430\");\n\n        var store = __webpack_require__(\"c6cd\");\n\n        (module.exports = function (key, value) {\n          return store[key] || (store[key] = value !== undefined ? value : {});\n        })('versions', []).push({\n          version: '3.6.5',\n          mode: IS_PURE ? 'pure' : 'global',\n          copyright: '© 2020 Denis Pushkarev (zloirock.ru)'\n        });\n        /***/\n      },\n\n      /***/\n      \"56ef\":\n      /***/\n      function ef(module, exports, __webpack_require__) {\n        var getBuiltIn = __webpack_require__(\"d066\");\n\n        var getOwnPropertyNamesModule = __webpack_require__(\"241c\");\n\n        var getOwnPropertySymbolsModule = __webpack_require__(\"7418\");\n\n        var anObject = __webpack_require__(\"825a\"); // all object keys, includes non-enumerable and symbols\n\n\n        module.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\n          var keys = getOwnPropertyNamesModule.f(anObject(it));\n          var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n          return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;\n        };\n        /***/\n\n      },\n\n      /***/\n      \"5a34\":\n      /***/\n      function a34(module, exports, __webpack_require__) {\n        var isRegExp = __webpack_require__(\"44e7\");\n\n        module.exports = function (it) {\n          if (isRegExp(it)) {\n            throw TypeError(\"The method doesn't accept regular expressions\");\n          }\n\n          return it;\n        };\n        /***/\n\n      },\n\n      /***/\n      \"5bbb\":\n      /***/\n      function bbb(module, __webpack_exports__, __webpack_require__) {\n        \"use strict\";\n        /* harmony import */\n\n        var _node_modules_mini_css_extract_plugin_dist_loader_js_ref_9_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_9_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_9_oneOf_1_2_node_modules_sass_loader_dist_cjs_js_ref_9_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_EditorItem_vue_vue_type_style_index_0_id_7edeebf6_scoped_true_lang_sass___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"e2da\");\n        /* harmony import */\n\n\n        var _node_modules_mini_css_extract_plugin_dist_loader_js_ref_9_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_9_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_9_oneOf_1_2_node_modules_sass_loader_dist_cjs_js_ref_9_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_EditorItem_vue_vue_type_style_index_0_id_7edeebf6_scoped_true_lang_sass___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_mini_css_extract_plugin_dist_loader_js_ref_9_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_9_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_9_oneOf_1_2_node_modules_sass_loader_dist_cjs_js_ref_9_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_EditorItem_vue_vue_type_style_index_0_id_7edeebf6_scoped_true_lang_sass___WEBPACK_IMPORTED_MODULE_0__);\n        /* unused harmony reexport * */\n\n        /* unused harmony default export */\n\n\n        var _unused_webpack_default_export = _node_modules_mini_css_extract_plugin_dist_loader_js_ref_9_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_9_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_9_oneOf_1_2_node_modules_sass_loader_dist_cjs_js_ref_9_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_EditorItem_vue_vue_type_style_index_0_id_7edeebf6_scoped_true_lang_sass___WEBPACK_IMPORTED_MODULE_0___default.a;\n        /***/\n      },\n\n      /***/\n      \"5c6c\":\n      /***/\n      function c6c(module, exports) {\n        module.exports = function (bitmap, value) {\n          return {\n            enumerable: !(bitmap & 1),\n            configurable: !(bitmap & 2),\n            writable: !(bitmap & 4),\n            value: value\n          };\n        };\n        /***/\n\n      },\n\n      /***/\n      \"6547\":\n      /***/\n      function _(module, exports, __webpack_require__) {\n        var toInteger = __webpack_require__(\"a691\");\n\n        var requireObjectCoercible = __webpack_require__(\"1d80\"); // `String.prototype.{ codePointAt, at }` methods implementation\n\n\n        var createMethod = function createMethod(CONVERT_TO_STRING) {\n          return function ($this, pos) {\n            var S = String(requireObjectCoercible($this));\n            var position = toInteger(pos);\n            var size = S.length;\n            var first, second;\n            if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n            first = S.charCodeAt(position);\n            return first < 0xD800 || first > 0xDBFF || position + 1 === size || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF ? CONVERT_TO_STRING ? S.charAt(position) : first : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n          };\n        };\n\n        module.exports = {\n          // `String.prototype.codePointAt` method\n          // https://tc39.github.io/ecma262/#sec-string.prototype.codepointat\n          codeAt: createMethod(false),\n          // `String.prototype.at` method\n          // https://github.com/mathiasbynens/String.prototype.at\n          charAt: createMethod(true)\n        };\n        /***/\n      },\n\n      /***/\n      \"65f0\":\n      /***/\n      function f0(module, exports, __webpack_require__) {\n        var isObject = __webpack_require__(\"861d\");\n\n        var isArray = __webpack_require__(\"e8b5\");\n\n        var wellKnownSymbol = __webpack_require__(\"b622\");\n\n        var SPECIES = wellKnownSymbol('species'); // `ArraySpeciesCreate` abstract operation\n        // https://tc39.github.io/ecma262/#sec-arrayspeciescreate\n\n        module.exports = function (originalArray, length) {\n          var C;\n\n          if (isArray(originalArray)) {\n            C = originalArray.constructor; // cross-realm fallback\n\n            if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;else if (isObject(C)) {\n              C = C[SPECIES];\n              if (C === null) C = undefined;\n            }\n          }\n\n          return new (C === undefined ? Array : C)(length === 0 ? 0 : length);\n        };\n        /***/\n\n      },\n\n      /***/\n      \"69f3\":\n      /***/\n      function f3(module, exports, __webpack_require__) {\n        var NATIVE_WEAK_MAP = __webpack_require__(\"7f9a\");\n\n        var global = __webpack_require__(\"da84\");\n\n        var isObject = __webpack_require__(\"861d\");\n\n        var createNonEnumerableProperty = __webpack_require__(\"9112\");\n\n        var objectHas = __webpack_require__(\"5135\");\n\n        var sharedKey = __webpack_require__(\"f772\");\n\n        var hiddenKeys = __webpack_require__(\"d012\");\n\n        var WeakMap = global.WeakMap;\n        var set, get, has;\n\n        var enforce = function enforce(it) {\n          return has(it) ? get(it) : set(it, {});\n        };\n\n        var getterFor = function getterFor(TYPE) {\n          return function (it) {\n            var state;\n\n            if (!isObject(it) || (state = get(it)).type !== TYPE) {\n              throw TypeError('Incompatible receiver, ' + TYPE + ' required');\n            }\n\n            return state;\n          };\n        };\n\n        if (NATIVE_WEAK_MAP) {\n          var store = new WeakMap();\n          var wmget = store.get;\n          var wmhas = store.has;\n          var wmset = store.set;\n\n          set = function set(it, metadata) {\n            wmset.call(store, it, metadata);\n            return metadata;\n          };\n\n          get = function get(it) {\n            return wmget.call(store, it) || {};\n          };\n\n          has = function has(it) {\n            return wmhas.call(store, it);\n          };\n        } else {\n          var STATE = sharedKey('state');\n          hiddenKeys[STATE] = true;\n\n          set = function set(it, metadata) {\n            createNonEnumerableProperty(it, STATE, metadata);\n            return metadata;\n          };\n\n          get = function get(it) {\n            return objectHas(it, STATE) ? it[STATE] : {};\n          };\n\n          has = function has(it) {\n            return objectHas(it, STATE);\n          };\n        }\n\n        module.exports = {\n          set: set,\n          get: get,\n          has: has,\n          enforce: enforce,\n          getterFor: getterFor\n        };\n        /***/\n      },\n\n      /***/\n      \"6eeb\":\n      /***/\n      function eeb(module, exports, __webpack_require__) {\n        var global = __webpack_require__(\"da84\");\n\n        var createNonEnumerableProperty = __webpack_require__(\"9112\");\n\n        var has = __webpack_require__(\"5135\");\n\n        var setGlobal = __webpack_require__(\"ce4e\");\n\n        var inspectSource = __webpack_require__(\"8925\");\n\n        var InternalStateModule = __webpack_require__(\"69f3\");\n\n        var getInternalState = InternalStateModule.get;\n        var enforceInternalState = InternalStateModule.enforce;\n        var TEMPLATE = String(String).split('String');\n        (module.exports = function (O, key, value, options) {\n          var unsafe = options ? !!options.unsafe : false;\n          var simple = options ? !!options.enumerable : false;\n          var noTargetGet = options ? !!options.noTargetGet : false;\n\n          if (typeof value == 'function') {\n            if (typeof key == 'string' && !has(value, 'name')) createNonEnumerableProperty(value, 'name', key);\n            enforceInternalState(value).source = TEMPLATE.join(typeof key == 'string' ? key : '');\n          }\n\n          if (O === global) {\n            if (simple) O[key] = value;else setGlobal(key, value);\n            return;\n          } else if (!unsafe) {\n            delete O[key];\n          } else if (!noTargetGet && O[key]) {\n            simple = true;\n          }\n\n          if (simple) O[key] = value;else createNonEnumerableProperty(O, key, value); // add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n        })(Function.prototype, 'toString', function toString() {\n          return typeof this == 'function' && getInternalState(this).source || inspectSource(this);\n        });\n        /***/\n      },\n\n      /***/\n      \"7418\":\n      /***/\n      function _(module, exports) {\n        exports.f = Object.getOwnPropertySymbols;\n        /***/\n      },\n\n      /***/\n      \"746f\":\n      /***/\n      function f(module, exports, __webpack_require__) {\n        var path = __webpack_require__(\"428f\");\n\n        var has = __webpack_require__(\"5135\");\n\n        var wrappedWellKnownSymbolModule = __webpack_require__(\"e538\");\n\n        var defineProperty = __webpack_require__(\"9bf2\").f;\n\n        module.exports = function (NAME) {\n          var _Symbol6 = path.Symbol || (path.Symbol = {});\n\n          if (!has(_Symbol6, NAME)) defineProperty(_Symbol6, NAME, {\n            value: wrappedWellKnownSymbolModule.f(NAME)\n          });\n        };\n        /***/\n\n      },\n\n      /***/\n      \"7839\":\n      /***/\n      function _(module, exports) {\n        // IE8- don't enum bug keys\n        module.exports = ['constructor', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'toLocaleString', 'toString', 'valueOf'];\n        /***/\n      },\n\n      /***/\n      \"7b0b\":\n      /***/\n      function b0b(module, exports, __webpack_require__) {\n        var requireObjectCoercible = __webpack_require__(\"1d80\"); // `ToObject` abstract operation\n        // https://tc39.github.io/ecma262/#sec-toobject\n\n\n        module.exports = function (argument) {\n          return Object(requireObjectCoercible(argument));\n        };\n        /***/\n\n      },\n\n      /***/\n      \"7c73\":\n      /***/\n      function c73(module, exports, __webpack_require__) {\n        var anObject = __webpack_require__(\"825a\");\n\n        var defineProperties = __webpack_require__(\"37e8\");\n\n        var enumBugKeys = __webpack_require__(\"7839\");\n\n        var hiddenKeys = __webpack_require__(\"d012\");\n\n        var html = __webpack_require__(\"1be4\");\n\n        var documentCreateElement = __webpack_require__(\"cc12\");\n\n        var sharedKey = __webpack_require__(\"f772\");\n\n        var GT = '>';\n        var LT = '<';\n        var PROTOTYPE = 'prototype';\n        var SCRIPT = 'script';\n        var IE_PROTO = sharedKey('IE_PROTO');\n\n        var EmptyConstructor = function EmptyConstructor() {\n          /* empty */\n        };\n\n        var scriptTag = function scriptTag(content) {\n          return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n        }; // Create object with fake `null` prototype: use ActiveX Object with cleared prototype\n\n\n        var NullProtoObjectViaActiveX = function NullProtoObjectViaActiveX(activeXDocument) {\n          activeXDocument.write(scriptTag(''));\n          activeXDocument.close();\n          var temp = activeXDocument.parentWindow.Object;\n          activeXDocument = null; // avoid memory leak\n\n          return temp;\n        }; // Create object with fake `null` prototype: use iframe Object with cleared prototype\n\n\n        var NullProtoObjectViaIFrame = function NullProtoObjectViaIFrame() {\n          // Thrash, waste and sodomy: IE GC bug\n          var iframe = documentCreateElement('iframe');\n          var JS = 'java' + SCRIPT + ':';\n          var iframeDocument;\n          iframe.style.display = 'none';\n          html.appendChild(iframe); // https://github.com/zloirock/core-js/issues/475\n\n          iframe.src = String(JS);\n          iframeDocument = iframe.contentWindow.document;\n          iframeDocument.open();\n          iframeDocument.write(scriptTag('document.F=Object'));\n          iframeDocument.close();\n          return iframeDocument.F;\n        }; // Check for document.domain and active x support\n        // No need to use active x approach when document.domain is not set\n        // see https://github.com/es-shims/es5-shim/issues/150\n        // variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n        // avoid IE GC bug\n\n\n        var activeXDocument;\n\n        var _NullProtoObject = function NullProtoObject() {\n          try {\n            /* global ActiveXObject */\n            activeXDocument = document.domain && new ActiveXObject('htmlfile');\n          } catch (error) {\n            /* ignore */\n          }\n\n          _NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();\n          var length = enumBugKeys.length;\n\n          while (length--) {\n            delete _NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n          }\n\n          return _NullProtoObject();\n        };\n\n        hiddenKeys[IE_PROTO] = true; // `Object.create` method\n        // https://tc39.github.io/ecma262/#sec-object.create\n\n        module.exports = Object.create || function create(O, Properties) {\n          var result;\n\n          if (O !== null) {\n            EmptyConstructor[PROTOTYPE] = anObject(O);\n            result = new EmptyConstructor();\n            EmptyConstructor[PROTOTYPE] = null; // add \"__proto__\" for Object.getPrototypeOf polyfill\n\n            result[IE_PROTO] = O;\n          } else result = _NullProtoObject();\n\n          return Properties === undefined ? result : defineProperties(result, Properties);\n        };\n        /***/\n\n      },\n\n      /***/\n      \"7dd0\":\n      /***/\n      function dd0(module, exports, __webpack_require__) {\n        \"use strict\";\n\n        var $ = __webpack_require__(\"23e7\");\n\n        var createIteratorConstructor = __webpack_require__(\"9ed3\");\n\n        var getPrototypeOf = __webpack_require__(\"e163\");\n\n        var setPrototypeOf = __webpack_require__(\"d2bb\");\n\n        var setToStringTag = __webpack_require__(\"d44e\");\n\n        var createNonEnumerableProperty = __webpack_require__(\"9112\");\n\n        var redefine = __webpack_require__(\"6eeb\");\n\n        var wellKnownSymbol = __webpack_require__(\"b622\");\n\n        var IS_PURE = __webpack_require__(\"c430\");\n\n        var Iterators = __webpack_require__(\"3f8c\");\n\n        var IteratorsCore = __webpack_require__(\"ae93\");\n\n        var IteratorPrototype = IteratorsCore.IteratorPrototype;\n        var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;\n        var ITERATOR = wellKnownSymbol('iterator');\n        var KEYS = 'keys';\n        var VALUES = 'values';\n        var ENTRIES = 'entries';\n\n        var returnThis = function returnThis() {\n          return this;\n        };\n\n        module.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {\n          createIteratorConstructor(IteratorConstructor, NAME, next);\n\n          var getIterationMethod = function getIterationMethod(KIND) {\n            if (KIND === DEFAULT && defaultIterator) return defaultIterator;\n            if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];\n\n            switch (KIND) {\n              case KEYS:\n                return function keys() {\n                  return new IteratorConstructor(this, KIND);\n                };\n\n              case VALUES:\n                return function values() {\n                  return new IteratorConstructor(this, KIND);\n                };\n\n              case ENTRIES:\n                return function entries() {\n                  return new IteratorConstructor(this, KIND);\n                };\n            }\n\n            return function () {\n              return new IteratorConstructor(this);\n            };\n          };\n\n          var TO_STRING_TAG = NAME + ' Iterator';\n          var INCORRECT_VALUES_NAME = false;\n          var IterablePrototype = Iterable.prototype;\n          var nativeIterator = IterablePrototype[ITERATOR] || IterablePrototype['@@iterator'] || DEFAULT && IterablePrototype[DEFAULT];\n          var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);\n          var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;\n          var CurrentIteratorPrototype, methods, KEY; // fix native\n\n          if (anyNativeIterator) {\n            CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));\n\n            if (IteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {\n              if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {\n                if (setPrototypeOf) {\n                  setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);\n                } else if (typeof CurrentIteratorPrototype[ITERATOR] != 'function') {\n                  createNonEnumerableProperty(CurrentIteratorPrototype, ITERATOR, returnThis);\n                }\n              } // Set @@toStringTag to native iterators\n\n\n              setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);\n              if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;\n            }\n          } // fix Array#{values, @@iterator}.name in V8 / FF\n\n\n          if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {\n            INCORRECT_VALUES_NAME = true;\n\n            defaultIterator = function values() {\n              return nativeIterator.call(this);\n            };\n          } // define iterator\n\n\n          if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {\n            createNonEnumerableProperty(IterablePrototype, ITERATOR, defaultIterator);\n          }\n\n          Iterators[NAME] = defaultIterator; // export additional methods\n\n          if (DEFAULT) {\n            methods = {\n              values: getIterationMethod(VALUES),\n              keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),\n              entries: getIterationMethod(ENTRIES)\n            };\n            if (FORCED) for (KEY in methods) {\n              if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {\n                redefine(IterablePrototype, KEY, methods[KEY]);\n              }\n            } else $({\n              target: NAME,\n              proto: true,\n              forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME\n            }, methods);\n          }\n\n          return methods;\n        };\n        /***/\n\n      },\n\n      /***/\n      \"7f9a\":\n      /***/\n      function f9a(module, exports, __webpack_require__) {\n        var global = __webpack_require__(\"da84\");\n\n        var inspectSource = __webpack_require__(\"8925\");\n\n        var WeakMap = global.WeakMap;\n        module.exports = typeof WeakMap === 'function' && /native code/.test(inspectSource(WeakMap));\n        /***/\n      },\n\n      /***/\n      \"825a\":\n      /***/\n      function a(module, exports, __webpack_require__) {\n        var isObject = __webpack_require__(\"861d\");\n\n        module.exports = function (it) {\n          if (!isObject(it)) {\n            throw TypeError(String(it) + ' is not an object');\n          }\n\n          return it;\n        };\n        /***/\n\n      },\n\n      /***/\n      \"83ab\":\n      /***/\n      function ab(module, exports, __webpack_require__) {\n        var fails = __webpack_require__(\"d039\"); // Thank's IE8 for his funny defineProperty\n\n\n        module.exports = !fails(function () {\n          return Object.defineProperty({}, 1, {\n            get: function get() {\n              return 7;\n            }\n          })[1] != 7;\n        });\n        /***/\n      },\n\n      /***/\n      \"8418\":\n      /***/\n      function _(module, exports, __webpack_require__) {\n        \"use strict\";\n\n        var toPrimitive = __webpack_require__(\"c04e\");\n\n        var definePropertyModule = __webpack_require__(\"9bf2\");\n\n        var createPropertyDescriptor = __webpack_require__(\"5c6c\");\n\n        module.exports = function (object, key, value) {\n          var propertyKey = toPrimitive(key);\n          if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));else object[propertyKey] = value;\n        };\n        /***/\n\n      },\n\n      /***/\n      \"861d\":\n      /***/\n      function d(module, exports) {\n        module.exports = function (it) {\n          return _typeof2(it) === 'object' ? it !== null : typeof it === 'function';\n        };\n        /***/\n\n      },\n\n      /***/\n      \"8925\":\n      /***/\n      function _(module, exports, __webpack_require__) {\n        var store = __webpack_require__(\"c6cd\");\n\n        var functionToString = Function.toString; // this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper\n\n        if (typeof store.inspectSource != 'function') {\n          store.inspectSource = function (it) {\n            return functionToString.call(it);\n          };\n        }\n\n        module.exports = store.inspectSource;\n        /***/\n      },\n\n      /***/\n      \"8aa5\":\n      /***/\n      function aa5(module, exports, __webpack_require__) {\n        \"use strict\";\n\n        var charAt = __webpack_require__(\"6547\").charAt; // `AdvanceStringIndex` abstract operation\n        // https://tc39.github.io/ecma262/#sec-advancestringindex\n\n\n        module.exports = function (S, index, unicode) {\n          return index + (unicode ? charAt(S, index).length : 1);\n        };\n        /***/\n\n      },\n\n      /***/\n      \"8bbf\":\n      /***/\n      function bbf(module, exports) {\n        module.exports = __WEBPACK_EXTERNAL_MODULE__8bbf__;\n        /***/\n      },\n\n      /***/\n      \"90e3\":\n      /***/\n      function e3(module, exports) {\n        var id = 0;\n        var postfix = Math.random();\n\n        module.exports = function (key) {\n          return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);\n        };\n        /***/\n\n      },\n\n      /***/\n      \"9112\":\n      /***/\n      function _(module, exports, __webpack_require__) {\n        var DESCRIPTORS = __webpack_require__(\"83ab\");\n\n        var definePropertyModule = __webpack_require__(\"9bf2\");\n\n        var createPropertyDescriptor = __webpack_require__(\"5c6c\");\n\n        module.exports = DESCRIPTORS ? function (object, key, value) {\n          return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n        } : function (object, key, value) {\n          object[key] = value;\n          return object;\n        };\n        /***/\n      },\n\n      /***/\n      \"9263\":\n      /***/\n      function _(module, exports, __webpack_require__) {\n        \"use strict\";\n\n        var regexpFlags = __webpack_require__(\"ad6d\");\n\n        var stickyHelpers = __webpack_require__(\"9f7f\");\n\n        var nativeExec = RegExp.prototype.exec; // This always refers to the native implementation, because the\n        // String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\n        // which loads this file before patching the method.\n\n        var nativeReplace = String.prototype.replace;\n        var patchedExec = nativeExec;\n\n        var UPDATES_LAST_INDEX_WRONG = function () {\n          var re1 = /a/;\n          var re2 = /b*/g;\n          nativeExec.call(re1, 'a');\n          nativeExec.call(re2, 'a');\n          return re1.lastIndex !== 0 || re2.lastIndex !== 0;\n        }();\n\n        var UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y || stickyHelpers.BROKEN_CARET; // nonparticipating capturing group, copied from es5-shim's String#split patch.\n\n        var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n        var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y;\n\n        if (PATCH) {\n          patchedExec = function exec(str) {\n            var re = this;\n            var lastIndex, reCopy, match, i;\n            var sticky = UNSUPPORTED_Y && re.sticky;\n            var flags = regexpFlags.call(re);\n            var source = re.source;\n            var charsAdded = 0;\n            var strCopy = str;\n\n            if (sticky) {\n              flags = flags.replace('y', '');\n\n              if (flags.indexOf('g') === -1) {\n                flags += 'g';\n              }\n\n              strCopy = String(str).slice(re.lastIndex); // Support anchored sticky behavior.\n\n              if (re.lastIndex > 0 && (!re.multiline || re.multiline && str[re.lastIndex - 1] !== '\\n')) {\n                source = '(?: ' + source + ')';\n                strCopy = ' ' + strCopy;\n                charsAdded++;\n              } // ^(? + rx + ) is needed, in combination with some str slicing, to\n              // simulate the 'y' flag.\n\n\n              reCopy = new RegExp('^(?:' + source + ')', flags);\n            }\n\n            if (NPCG_INCLUDED) {\n              reCopy = new RegExp('^' + source + '$(?!\\\\s)', flags);\n            }\n\n            if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;\n            match = nativeExec.call(sticky ? reCopy : re, strCopy);\n\n            if (sticky) {\n              if (match) {\n                match.input = match.input.slice(charsAdded);\n                match[0] = match[0].slice(charsAdded);\n                match.index = re.lastIndex;\n                re.lastIndex += match[0].length;\n              } else re.lastIndex = 0;\n            } else if (UPDATES_LAST_INDEX_WRONG && match) {\n              re.lastIndex = re.global ? match.index + match[0].length : lastIndex;\n            }\n\n            if (NPCG_INCLUDED && match && match.length > 1) {\n              // Fix browsers whose `exec` methods don't consistently return `undefined`\n              // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n              nativeReplace.call(match[0], reCopy, function () {\n                for (i = 1; i < arguments.length - 2; i++) {\n                  if (arguments[i] === undefined) match[i] = undefined;\n                }\n              });\n            }\n\n            return match;\n          };\n        }\n\n        module.exports = patchedExec;\n        /***/\n      },\n\n      /***/\n      \"94ca\":\n      /***/\n      function ca(module, exports, __webpack_require__) {\n        var fails = __webpack_require__(\"d039\");\n\n        var replacement = /#|\\.prototype\\./;\n\n        var isForced = function isForced(feature, detection) {\n          var value = data[normalize(feature)];\n          return value == POLYFILL ? true : value == NATIVE ? false : typeof detection == 'function' ? fails(detection) : !!detection;\n        };\n\n        var normalize = isForced.normalize = function (string) {\n          return String(string).replace(replacement, '.').toLowerCase();\n        };\n\n        var data = isForced.data = {};\n        var NATIVE = isForced.NATIVE = 'N';\n        var POLYFILL = isForced.POLYFILL = 'P';\n        module.exports = isForced;\n        /***/\n      },\n\n      /***/\n      \"99af\":\n      /***/\n      function af(module, exports, __webpack_require__) {\n        \"use strict\";\n\n        var $ = __webpack_require__(\"23e7\");\n\n        var fails = __webpack_require__(\"d039\");\n\n        var isArray = __webpack_require__(\"e8b5\");\n\n        var isObject = __webpack_require__(\"861d\");\n\n        var toObject = __webpack_require__(\"7b0b\");\n\n        var toLength = __webpack_require__(\"50c4\");\n\n        var createProperty = __webpack_require__(\"8418\");\n\n        var arraySpeciesCreate = __webpack_require__(\"65f0\");\n\n        var arrayMethodHasSpeciesSupport = __webpack_require__(\"1dde\");\n\n        var wellKnownSymbol = __webpack_require__(\"b622\");\n\n        var V8_VERSION = __webpack_require__(\"2d00\");\n\n        var IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\n        var MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\n        var MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded'; // We can't use this feature detection in V8 since it causes\n        // deoptimization and serious performance degradation\n        // https://github.com/zloirock/core-js/issues/679\n\n        var IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {\n          var array = [];\n          array[IS_CONCAT_SPREADABLE] = false;\n          return array.concat()[0] !== array;\n        });\n        var SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');\n\n        var isConcatSpreadable = function isConcatSpreadable(O) {\n          if (!isObject(O)) return false;\n          var spreadable = O[IS_CONCAT_SPREADABLE];\n          return spreadable !== undefined ? !!spreadable : isArray(O);\n        };\n\n        var FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT; // `Array.prototype.concat` method\n        // https://tc39.github.io/ecma262/#sec-array.prototype.concat\n        // with adding support of @@isConcatSpreadable and @@species\n\n        $({\n          target: 'Array',\n          proto: true,\n          forced: FORCED\n        }, {\n          concat: function concat(arg) {\n            // eslint-disable-line no-unused-vars\n            var O = toObject(this);\n            var A = arraySpeciesCreate(O, 0);\n            var n = 0;\n            var i, k, length, len, E;\n\n            for (i = -1, length = arguments.length; i < length; i++) {\n              E = i === -1 ? O : arguments[i];\n\n              if (isConcatSpreadable(E)) {\n                len = toLength(E.length);\n                if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n\n                for (k = 0; k < len; k++, n++) {\n                  if (k in E) createProperty(A, n, E[k]);\n                }\n              } else {\n                if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n                createProperty(A, n++, E);\n              }\n            }\n\n            A.length = n;\n            return A;\n          }\n        });\n        /***/\n      },\n\n      /***/\n      \"9bdd\":\n      /***/\n      function bdd(module, exports, __webpack_require__) {\n        var anObject = __webpack_require__(\"825a\"); // call something on iterator step with safe closing on error\n\n\n        module.exports = function (iterator, fn, value, ENTRIES) {\n          try {\n            return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value); // 7.4.6 IteratorClose(iterator, completion)\n          } catch (error) {\n            var returnMethod = iterator['return'];\n            if (returnMethod !== undefined) anObject(returnMethod.call(iterator));\n            throw error;\n          }\n        };\n        /***/\n\n      },\n\n      /***/\n      \"9bf2\":\n      /***/\n      function bf2(module, exports, __webpack_require__) {\n        var DESCRIPTORS = __webpack_require__(\"83ab\");\n\n        var IE8_DOM_DEFINE = __webpack_require__(\"0cfb\");\n\n        var anObject = __webpack_require__(\"825a\");\n\n        var toPrimitive = __webpack_require__(\"c04e\");\n\n        var nativeDefineProperty = Object.defineProperty; // `Object.defineProperty` method\n        // https://tc39.github.io/ecma262/#sec-object.defineproperty\n\n        exports.f = DESCRIPTORS ? nativeDefineProperty : function defineProperty(O, P, Attributes) {\n          anObject(O);\n          P = toPrimitive(P, true);\n          anObject(Attributes);\n          if (IE8_DOM_DEFINE) try {\n            return nativeDefineProperty(O, P, Attributes);\n          } catch (error) {\n            /* empty */\n          }\n          if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');\n          if ('value' in Attributes) O[P] = Attributes.value;\n          return O;\n        };\n        /***/\n      },\n\n      /***/\n      \"9ed3\":\n      /***/\n      function ed3(module, exports, __webpack_require__) {\n        \"use strict\";\n\n        var IteratorPrototype = __webpack_require__(\"ae93\").IteratorPrototype;\n\n        var create = __webpack_require__(\"7c73\");\n\n        var createPropertyDescriptor = __webpack_require__(\"5c6c\");\n\n        var setToStringTag = __webpack_require__(\"d44e\");\n\n        var Iterators = __webpack_require__(\"3f8c\");\n\n        var returnThis = function returnThis() {\n          return this;\n        };\n\n        module.exports = function (IteratorConstructor, NAME, next) {\n          var TO_STRING_TAG = NAME + ' Iterator';\n          IteratorConstructor.prototype = create(IteratorPrototype, {\n            next: createPropertyDescriptor(1, next)\n          });\n          setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);\n          Iterators[TO_STRING_TAG] = returnThis;\n          return IteratorConstructor;\n        };\n        /***/\n\n      },\n\n      /***/\n      \"9f7f\":\n      /***/\n      function f7f(module, exports, __webpack_require__) {\n        \"use strict\";\n\n        var fails = __webpack_require__(\"d039\"); // babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError,\n        // so we use an intermediate function.\n\n\n        function RE(s, f) {\n          return RegExp(s, f);\n        }\n\n        exports.UNSUPPORTED_Y = fails(function () {\n          // babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError\n          var re = RE('a', 'y');\n          re.lastIndex = 2;\n          return re.exec('abcd') != null;\n        });\n        exports.BROKEN_CARET = fails(function () {\n          // https://bugzilla.mozilla.org/show_bug.cgi?id=773687\n          var re = RE('^r', 'gy');\n          re.lastIndex = 2;\n          return re.exec('str') != null;\n        });\n        /***/\n      },\n\n      /***/\n      \"a4d3\":\n      /***/\n      function a4d3(module, exports, __webpack_require__) {\n        \"use strict\";\n\n        var $ = __webpack_require__(\"23e7\");\n\n        var global = __webpack_require__(\"da84\");\n\n        var getBuiltIn = __webpack_require__(\"d066\");\n\n        var IS_PURE = __webpack_require__(\"c430\");\n\n        var DESCRIPTORS = __webpack_require__(\"83ab\");\n\n        var NATIVE_SYMBOL = __webpack_require__(\"4930\");\n\n        var USE_SYMBOL_AS_UID = __webpack_require__(\"fdbf\");\n\n        var fails = __webpack_require__(\"d039\");\n\n        var has = __webpack_require__(\"5135\");\n\n        var isArray = __webpack_require__(\"e8b5\");\n\n        var isObject = __webpack_require__(\"861d\");\n\n        var anObject = __webpack_require__(\"825a\");\n\n        var toObject = __webpack_require__(\"7b0b\");\n\n        var toIndexedObject = __webpack_require__(\"fc6a\");\n\n        var toPrimitive = __webpack_require__(\"c04e\");\n\n        var createPropertyDescriptor = __webpack_require__(\"5c6c\");\n\n        var nativeObjectCreate = __webpack_require__(\"7c73\");\n\n        var objectKeys = __webpack_require__(\"df75\");\n\n        var getOwnPropertyNamesModule = __webpack_require__(\"241c\");\n\n        var getOwnPropertyNamesExternal = __webpack_require__(\"057f\");\n\n        var getOwnPropertySymbolsModule = __webpack_require__(\"7418\");\n\n        var getOwnPropertyDescriptorModule = __webpack_require__(\"06cf\");\n\n        var definePropertyModule = __webpack_require__(\"9bf2\");\n\n        var propertyIsEnumerableModule = __webpack_require__(\"d1e7\");\n\n        var createNonEnumerableProperty = __webpack_require__(\"9112\");\n\n        var redefine = __webpack_require__(\"6eeb\");\n\n        var shared = __webpack_require__(\"5692\");\n\n        var sharedKey = __webpack_require__(\"f772\");\n\n        var hiddenKeys = __webpack_require__(\"d012\");\n\n        var uid = __webpack_require__(\"90e3\");\n\n        var wellKnownSymbol = __webpack_require__(\"b622\");\n\n        var wrappedWellKnownSymbolModule = __webpack_require__(\"e538\");\n\n        var defineWellKnownSymbol = __webpack_require__(\"746f\");\n\n        var setToStringTag = __webpack_require__(\"d44e\");\n\n        var InternalStateModule = __webpack_require__(\"69f3\");\n\n        var $forEach = __webpack_require__(\"b727\").forEach;\n\n        var HIDDEN = sharedKey('hidden');\n        var SYMBOL = 'Symbol';\n        var PROTOTYPE = 'prototype';\n        var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\n        var setInternalState = InternalStateModule.set;\n        var getInternalState = InternalStateModule.getterFor(SYMBOL);\n        var ObjectPrototype = Object[PROTOTYPE];\n        var $Symbol = global.Symbol;\n        var $stringify = getBuiltIn('JSON', 'stringify');\n        var nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n        var nativeDefineProperty = definePropertyModule.f;\n        var nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;\n        var nativePropertyIsEnumerable = propertyIsEnumerableModule.f;\n        var AllSymbols = shared('symbols');\n        var ObjectPrototypeSymbols = shared('op-symbols');\n        var StringToSymbolRegistry = shared('string-to-symbol-registry');\n        var SymbolToStringRegistry = shared('symbol-to-string-registry');\n        var WellKnownSymbolsStore = shared('wks');\n        var QObject = global.QObject; // Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\n\n        var USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild; // fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\n\n        var setSymbolDescriptor = DESCRIPTORS && fails(function () {\n          return nativeObjectCreate(nativeDefineProperty({}, 'a', {\n            get: function get() {\n              return nativeDefineProperty(this, 'a', {\n                value: 7\n              }).a;\n            }\n          })).a != 7;\n        }) ? function (O, P, Attributes) {\n          var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);\n          if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];\n          nativeDefineProperty(O, P, Attributes);\n\n          if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {\n            nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);\n          }\n        } : nativeDefineProperty;\n\n        var wrap = function wrap(tag, description) {\n          var symbol = AllSymbols[tag] = nativeObjectCreate($Symbol[PROTOTYPE]);\n          setInternalState(symbol, {\n            type: SYMBOL,\n            tag: tag,\n            description: description\n          });\n          if (!DESCRIPTORS) symbol.description = description;\n          return symbol;\n        };\n\n        var isSymbol = USE_SYMBOL_AS_UID ? function (it) {\n          return _typeof2(it) == 'symbol';\n        } : function (it) {\n          return Object(it) instanceof $Symbol;\n        };\n\n        var $defineProperty = function defineProperty(O, P, Attributes) {\n          if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);\n          anObject(O);\n          var key = toPrimitive(P, true);\n          anObject(Attributes);\n\n          if (has(AllSymbols, key)) {\n            if (!Attributes.enumerable) {\n              if (!has(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));\n              O[HIDDEN][key] = true;\n            } else {\n              if (has(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;\n              Attributes = nativeObjectCreate(Attributes, {\n                enumerable: createPropertyDescriptor(0, false)\n              });\n            }\n\n            return setSymbolDescriptor(O, key, Attributes);\n          }\n\n          return nativeDefineProperty(O, key, Attributes);\n        };\n\n        var $defineProperties = function defineProperties(O, Properties) {\n          anObject(O);\n          var properties = toIndexedObject(Properties);\n          var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));\n          $forEach(keys, function (key) {\n            if (!DESCRIPTORS || $propertyIsEnumerable.call(properties, key)) $defineProperty(O, key, properties[key]);\n          });\n          return O;\n        };\n\n        var $create = function create(O, Properties) {\n          return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);\n        };\n\n        var $propertyIsEnumerable = function propertyIsEnumerable(V) {\n          var P = toPrimitive(V, true);\n          var enumerable = nativePropertyIsEnumerable.call(this, P);\n          if (this === ObjectPrototype && has(AllSymbols, P) && !has(ObjectPrototypeSymbols, P)) return false;\n          return enumerable || !has(this, P) || !has(AllSymbols, P) || has(this, HIDDEN) && this[HIDDEN][P] ? enumerable : true;\n        };\n\n        var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {\n          var it = toIndexedObject(O);\n          var key = toPrimitive(P, true);\n          if (it === ObjectPrototype && has(AllSymbols, key) && !has(ObjectPrototypeSymbols, key)) return;\n          var descriptor = nativeGetOwnPropertyDescriptor(it, key);\n\n          if (descriptor && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) {\n            descriptor.enumerable = true;\n          }\n\n          return descriptor;\n        };\n\n        var $getOwnPropertyNames = function getOwnPropertyNames(O) {\n          var names = nativeGetOwnPropertyNames(toIndexedObject(O));\n          var result = [];\n          $forEach(names, function (key) {\n            if (!has(AllSymbols, key) && !has(hiddenKeys, key)) result.push(key);\n          });\n          return result;\n        };\n\n        var $getOwnPropertySymbols = function getOwnPropertySymbols(O) {\n          var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;\n          var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));\n          var result = [];\n          $forEach(names, function (key) {\n            if (has(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || has(ObjectPrototype, key))) {\n              result.push(AllSymbols[key]);\n            }\n          });\n          return result;\n        }; // `Symbol` constructor\n        // https://tc39.github.io/ecma262/#sec-symbol-constructor\n\n\n        if (!NATIVE_SYMBOL) {\n          $Symbol = function _Symbol7() {\n            if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor');\n            var description = !arguments.length || arguments[0] === undefined ? undefined : String(arguments[0]);\n            var tag = uid(description);\n\n            var setter = function setter(value) {\n              if (this === ObjectPrototype) setter.call(ObjectPrototypeSymbols, value);\n              if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n              setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));\n            };\n\n            if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, {\n              configurable: true,\n              set: setter\n            });\n            return wrap(tag, description);\n          };\n\n          redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n            return getInternalState(this).tag;\n          });\n          redefine($Symbol, 'withoutSetter', function (description) {\n            return wrap(uid(description), description);\n          });\n          propertyIsEnumerableModule.f = $propertyIsEnumerable;\n          definePropertyModule.f = $defineProperty;\n          getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;\n          getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;\n          getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;\n\n          wrappedWellKnownSymbolModule.f = function (name) {\n            return wrap(wellKnownSymbol(name), name);\n          };\n\n          if (DESCRIPTORS) {\n            // https://github.com/tc39/proposal-Symbol-description\n            nativeDefineProperty($Symbol[PROTOTYPE], 'description', {\n              configurable: true,\n              get: function description() {\n                return getInternalState(this).description;\n              }\n            });\n\n            if (!IS_PURE) {\n              redefine(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, {\n                unsafe: true\n              });\n            }\n          }\n        }\n\n        $({\n          global: true,\n          wrap: true,\n          forced: !NATIVE_SYMBOL,\n          sham: !NATIVE_SYMBOL\n        }, {\n          Symbol: $Symbol\n        });\n        $forEach(objectKeys(WellKnownSymbolsStore), function (name) {\n          defineWellKnownSymbol(name);\n        });\n        $({\n          target: SYMBOL,\n          stat: true,\n          forced: !NATIVE_SYMBOL\n        }, {\n          // `Symbol.for` method\n          // https://tc39.github.io/ecma262/#sec-symbol.for\n          'for': function _for(key) {\n            var string = String(key);\n            if (has(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];\n            var symbol = $Symbol(string);\n            StringToSymbolRegistry[string] = symbol;\n            SymbolToStringRegistry[symbol] = string;\n            return symbol;\n          },\n          // `Symbol.keyFor` method\n          // https://tc39.github.io/ecma262/#sec-symbol.keyfor\n          keyFor: function keyFor(sym) {\n            if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol');\n            if (has(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];\n          },\n          useSetter: function useSetter() {\n            USE_SETTER = true;\n          },\n          useSimple: function useSimple() {\n            USE_SETTER = false;\n          }\n        });\n        $({\n          target: 'Object',\n          stat: true,\n          forced: !NATIVE_SYMBOL,\n          sham: !DESCRIPTORS\n        }, {\n          // `Object.create` method\n          // https://tc39.github.io/ecma262/#sec-object.create\n          create: $create,\n          // `Object.defineProperty` method\n          // https://tc39.github.io/ecma262/#sec-object.defineproperty\n          defineProperty: $defineProperty,\n          // `Object.defineProperties` method\n          // https://tc39.github.io/ecma262/#sec-object.defineproperties\n          defineProperties: $defineProperties,\n          // `Object.getOwnPropertyDescriptor` method\n          // https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptors\n          getOwnPropertyDescriptor: $getOwnPropertyDescriptor\n        });\n        $({\n          target: 'Object',\n          stat: true,\n          forced: !NATIVE_SYMBOL\n        }, {\n          // `Object.getOwnPropertyNames` method\n          // https://tc39.github.io/ecma262/#sec-object.getownpropertynames\n          getOwnPropertyNames: $getOwnPropertyNames,\n          // `Object.getOwnPropertySymbols` method\n          // https://tc39.github.io/ecma262/#sec-object.getownpropertysymbols\n          getOwnPropertySymbols: $getOwnPropertySymbols\n        }); // Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives\n        // https://bugs.chromium.org/p/v8/issues/detail?id=3443\n\n        $({\n          target: 'Object',\n          stat: true,\n          forced: fails(function () {\n            getOwnPropertySymbolsModule.f(1);\n          })\n        }, {\n          getOwnPropertySymbols: function getOwnPropertySymbols(it) {\n            return getOwnPropertySymbolsModule.f(toObject(it));\n          }\n        }); // `JSON.stringify` method behavior with symbols\n        // https://tc39.github.io/ecma262/#sec-json.stringify\n\n        if ($stringify) {\n          var FORCED_JSON_STRINGIFY = !NATIVE_SYMBOL || fails(function () {\n            var symbol = $Symbol(); // MS Edge converts symbol values to JSON as {}\n\n            return $stringify([symbol]) != '[null]' // WebKit converts symbol values to JSON as null\n            || $stringify({\n              a: symbol\n            }) != '{}' // V8 throws on boxed symbols\n            || $stringify(Object(symbol)) != '{}';\n          });\n          $({\n            target: 'JSON',\n            stat: true,\n            forced: FORCED_JSON_STRINGIFY\n          }, {\n            // eslint-disable-next-line no-unused-vars\n            stringify: function stringify(it, replacer, space) {\n              var args = [it];\n              var index = 1;\n              var $replacer;\n\n              while (arguments.length > index) {\n                args.push(arguments[index++]);\n              }\n\n              $replacer = replacer;\n              if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n\n              if (!isArray(replacer)) replacer = function replacer(key, value) {\n                if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n                if (!isSymbol(value)) return value;\n              };\n              args[1] = replacer;\n              return $stringify.apply(null, args);\n            }\n          });\n        } // `Symbol.prototype[@@toPrimitive]` method\n        // https://tc39.github.io/ecma262/#sec-symbol.prototype-@@toprimitive\n\n\n        if (!$Symbol[PROTOTYPE][TO_PRIMITIVE]) {\n          createNonEnumerableProperty($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n        } // `Symbol.prototype[@@toStringTag]` property\n        // https://tc39.github.io/ecma262/#sec-symbol.prototype-@@tostringtag\n\n\n        setToStringTag($Symbol, SYMBOL);\n        hiddenKeys[HIDDEN] = true;\n        /***/\n      },\n\n      /***/\n      \"a630\":\n      /***/\n      function a630(module, exports, __webpack_require__) {\n        var $ = __webpack_require__(\"23e7\");\n\n        var from = __webpack_require__(\"4df4\");\n\n        var checkCorrectnessOfIteration = __webpack_require__(\"1c7e\");\n\n        var INCORRECT_ITERATION = !checkCorrectnessOfIteration(function (iterable) {\n          Array.from(iterable);\n        }); // `Array.from` method\n        // https://tc39.github.io/ecma262/#sec-array.from\n\n        $({\n          target: 'Array',\n          stat: true,\n          forced: INCORRECT_ITERATION\n        }, {\n          from: from\n        });\n        /***/\n      },\n\n      /***/\n      \"a640\":\n      /***/\n      function a640(module, exports, __webpack_require__) {\n        \"use strict\";\n\n        var fails = __webpack_require__(\"d039\");\n\n        module.exports = function (METHOD_NAME, argument) {\n          var method = [][METHOD_NAME];\n          return !!method && fails(function () {\n            // eslint-disable-next-line no-useless-call,no-throw-literal\n            method.call(null, argument || function () {\n              throw 1;\n            }, 1);\n          });\n        };\n        /***/\n\n      },\n\n      /***/\n      \"a691\":\n      /***/\n      function a691(module, exports) {\n        var ceil = Math.ceil;\n        var floor = Math.floor; // `ToInteger` abstract operation\n        // https://tc39.github.io/ecma262/#sec-tointeger\n\n        module.exports = function (argument) {\n          return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);\n        };\n        /***/\n\n      },\n\n      /***/\n      \"ab13\":\n      /***/\n      function ab13(module, exports, __webpack_require__) {\n        var wellKnownSymbol = __webpack_require__(\"b622\");\n\n        var MATCH = wellKnownSymbol('match');\n\n        module.exports = function (METHOD_NAME) {\n          var regexp = /./;\n\n          try {\n            '/./'[METHOD_NAME](regexp);\n          } catch (e) {\n            try {\n              regexp[MATCH] = false;\n              return '/./'[METHOD_NAME](regexp);\n            } catch (f) {\n              /* empty */\n            }\n          }\n\n          return false;\n        };\n        /***/\n\n      },\n\n      /***/\n      \"abb4\":\n      /***/\n      function abb4(module, __webpack_exports__, __webpack_require__) {\n        \"use strict\";\n        /* harmony import */\n\n        var _node_modules_mini_css_extract_plugin_dist_loader_js_ref_9_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_9_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_9_oneOf_1_2_node_modules_sass_loader_dist_cjs_js_ref_9_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_EditorView_vue_vue_type_style_index_0_id_519148ff_scoped_true_lang_sass___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"1dc7\");\n        /* harmony import */\n\n\n        var _node_modules_mini_css_extract_plugin_dist_loader_js_ref_9_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_9_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_9_oneOf_1_2_node_modules_sass_loader_dist_cjs_js_ref_9_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_EditorView_vue_vue_type_style_index_0_id_519148ff_scoped_true_lang_sass___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_mini_css_extract_plugin_dist_loader_js_ref_9_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_9_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_9_oneOf_1_2_node_modules_sass_loader_dist_cjs_js_ref_9_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_EditorView_vue_vue_type_style_index_0_id_519148ff_scoped_true_lang_sass___WEBPACK_IMPORTED_MODULE_0__);\n        /* unused harmony reexport * */\n\n        /* unused harmony default export */\n\n\n        var _unused_webpack_default_export = _node_modules_mini_css_extract_plugin_dist_loader_js_ref_9_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_9_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_9_oneOf_1_2_node_modules_sass_loader_dist_cjs_js_ref_9_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_EditorView_vue_vue_type_style_index_0_id_519148ff_scoped_true_lang_sass___WEBPACK_IMPORTED_MODULE_0___default.a;\n        /***/\n      },\n\n      /***/\n      \"ac1f\":\n      /***/\n      function ac1f(module, exports, __webpack_require__) {\n        \"use strict\";\n\n        var $ = __webpack_require__(\"23e7\");\n\n        var exec = __webpack_require__(\"9263\");\n\n        $({\n          target: 'RegExp',\n          proto: true,\n          forced: /./.exec !== exec\n        }, {\n          exec: exec\n        });\n        /***/\n      },\n\n      /***/\n      \"ad6d\":\n      /***/\n      function ad6d(module, exports, __webpack_require__) {\n        \"use strict\";\n\n        var anObject = __webpack_require__(\"825a\"); // `RegExp.prototype.flags` getter implementation\n        // https://tc39.github.io/ecma262/#sec-get-regexp.prototype.flags\n\n\n        module.exports = function () {\n          var that = anObject(this);\n          var result = '';\n          if (that.global) result += 'g';\n          if (that.ignoreCase) result += 'i';\n          if (that.multiline) result += 'm';\n          if (that.dotAll) result += 's';\n          if (that.unicode) result += 'u';\n          if (that.sticky) result += 'y';\n          return result;\n        };\n        /***/\n\n      },\n\n      /***/\n      \"ae40\":\n      /***/\n      function ae40(module, exports, __webpack_require__) {\n        var DESCRIPTORS = __webpack_require__(\"83ab\");\n\n        var fails = __webpack_require__(\"d039\");\n\n        var has = __webpack_require__(\"5135\");\n\n        var defineProperty = Object.defineProperty;\n        var cache = {};\n\n        var thrower = function thrower(it) {\n          throw it;\n        };\n\n        module.exports = function (METHOD_NAME, options) {\n          if (has(cache, METHOD_NAME)) return cache[METHOD_NAME];\n          if (!options) options = {};\n          var method = [][METHOD_NAME];\n          var ACCESSORS = has(options, 'ACCESSORS') ? options.ACCESSORS : false;\n          var argument0 = has(options, 0) ? options[0] : thrower;\n          var argument1 = has(options, 1) ? options[1] : undefined;\n          return cache[METHOD_NAME] = !!method && !fails(function () {\n            if (ACCESSORS && !DESCRIPTORS) return true;\n            var O = {\n              length: -1\n            };\n            if (ACCESSORS) defineProperty(O, 1, {\n              enumerable: true,\n              get: thrower\n            });else O[1] = 1;\n            method.call(O, argument0, argument1);\n          });\n        };\n        /***/\n\n      },\n\n      /***/\n      \"ae93\":\n      /***/\n      function ae93(module, exports, __webpack_require__) {\n        \"use strict\";\n\n        var getPrototypeOf = __webpack_require__(\"e163\");\n\n        var createNonEnumerableProperty = __webpack_require__(\"9112\");\n\n        var has = __webpack_require__(\"5135\");\n\n        var wellKnownSymbol = __webpack_require__(\"b622\");\n\n        var IS_PURE = __webpack_require__(\"c430\");\n\n        var ITERATOR = wellKnownSymbol('iterator');\n        var BUGGY_SAFARI_ITERATORS = false;\n\n        var returnThis = function returnThis() {\n          return this;\n        }; // `%IteratorPrototype%` object\n        // https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object\n\n\n        var IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;\n\n        if ([].keys) {\n          arrayIterator = [].keys(); // Safari 8 has buggy iterators w/o `next`\n\n          if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;else {\n            PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));\n            if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;\n          }\n        }\n\n        if (IteratorPrototype == undefined) IteratorPrototype = {}; // 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n\n        if (!IS_PURE && !has(IteratorPrototype, ITERATOR)) {\n          createNonEnumerableProperty(IteratorPrototype, ITERATOR, returnThis);\n        }\n\n        module.exports = {\n          IteratorPrototype: IteratorPrototype,\n          BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS\n        };\n        /***/\n      },\n\n      /***/\n      \"b041\":\n      /***/\n      function b041(module, exports, __webpack_require__) {\n        \"use strict\";\n\n        var TO_STRING_TAG_SUPPORT = __webpack_require__(\"00ee\");\n\n        var classof = __webpack_require__(\"f5df\"); // `Object.prototype.toString` method implementation\n        // https://tc39.github.io/ecma262/#sec-object.prototype.tostring\n\n\n        module.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {\n          return '[object ' + classof(this) + ']';\n        };\n        /***/\n      },\n\n      /***/\n      \"b0ed\":\n      /***/\n      function b0ed(module, exports, __webpack_require__) {// extracted by mini-css-extract-plugin\n\n        /***/\n      },\n\n      /***/\n      \"b622\":\n      /***/\n      function b622(module, exports, __webpack_require__) {\n        var global = __webpack_require__(\"da84\");\n\n        var shared = __webpack_require__(\"5692\");\n\n        var has = __webpack_require__(\"5135\");\n\n        var uid = __webpack_require__(\"90e3\");\n\n        var NATIVE_SYMBOL = __webpack_require__(\"4930\");\n\n        var USE_SYMBOL_AS_UID = __webpack_require__(\"fdbf\");\n\n        var WellKnownSymbolsStore = shared('wks');\n        var _Symbol8 = global.Symbol;\n        var createWellKnownSymbol = USE_SYMBOL_AS_UID ? _Symbol8 : _Symbol8 && _Symbol8.withoutSetter || uid;\n\n        module.exports = function (name) {\n          if (!has(WellKnownSymbolsStore, name)) {\n            if (NATIVE_SYMBOL && has(_Symbol8, name)) WellKnownSymbolsStore[name] = _Symbol8[name];else WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);\n          }\n\n          return WellKnownSymbolsStore[name];\n        };\n        /***/\n\n      },\n\n      /***/\n      \"b635\":\n      /***/\n      function b635(module, __webpack_exports__, __webpack_require__) {\n        \"use strict\";\n        /* WEBPACK VAR INJECTION */\n\n        (function (global) {\n          /* harmony export (binding) */\n          __webpack_require__.d(__webpack_exports__, \"c\", function () {\n            return install;\n          });\n          /* harmony export (binding) */\n\n\n          __webpack_require__.d(__webpack_exports__, \"a\", function () {\n            return Editor;\n          });\n          /* harmony import */\n\n\n          var _components_Editor_vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"ceb0\"); // Declare install function executed by Vue.use()\n\n\n          function install(Vue) {\n            if (install.installed) return;\n            install.installed = true;\n            Vue.component(\"OvizEditor\", _components_Editor_vue__WEBPACK_IMPORTED_MODULE_0__[\n            /* default */\n            \"a\"]);\n          } // Create module definition for Vue.use()\n\n\n          var plugin = {\n            install: install\n          }; // Auto-install when vue is found (eg. in browser via <script> tag)\n\n          var GlobalVue = null;\n\n          if (typeof window !== \"undefined\") {\n            GlobalVue = window.Vue;\n          } else if (typeof global !== \"undefined\") {\n            GlobalVue = global.Vue;\n          }\n\n          if (GlobalVue) {\n            GlobalVue.use(plugin);\n          }\n\n          var Editor = _components_Editor_vue__WEBPACK_IMPORTED_MODULE_0__[\n          /* default */\n          \"a\"];\n          /* harmony default export */\n\n          __webpack_exports__[\"b\"] = plugin;\n          /* WEBPACK VAR INJECTION */\n        }).call(this, __webpack_require__(\"c8ba\"));\n        /***/\n      },\n\n      /***/\n      \"b727\":\n      /***/\n      function b727(module, exports, __webpack_require__) {\n        var bind = __webpack_require__(\"0366\");\n\n        var IndexedObject = __webpack_require__(\"44ad\");\n\n        var toObject = __webpack_require__(\"7b0b\");\n\n        var toLength = __webpack_require__(\"50c4\");\n\n        var arraySpeciesCreate = __webpack_require__(\"65f0\");\n\n        var push = [].push; // `Array.prototype.{ forEach, map, filter, some, every, find, findIndex }` methods implementation\n\n        var createMethod = function createMethod(TYPE) {\n          var IS_MAP = TYPE == 1;\n          var IS_FILTER = TYPE == 2;\n          var IS_SOME = TYPE == 3;\n          var IS_EVERY = TYPE == 4;\n          var IS_FIND_INDEX = TYPE == 6;\n          var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n          return function ($this, callbackfn, that, specificCreate) {\n            var O = toObject($this);\n            var self = IndexedObject(O);\n            var boundFunction = bind(callbackfn, that, 3);\n            var length = toLength(self.length);\n            var index = 0;\n            var create = specificCreate || arraySpeciesCreate;\n            var target = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n            var value, result;\n\n            for (; length > index; index++) {\n              if (NO_HOLES || index in self) {\n                value = self[index];\n                result = boundFunction(value, index, O);\n\n                if (TYPE) {\n                  if (IS_MAP) target[index] = result; // map\n                  else if (result) switch (TYPE) {\n                      case 3:\n                        return true;\n                      // some\n\n                      case 5:\n                        return value;\n                      // find\n\n                      case 6:\n                        return index;\n                      // findIndex\n\n                      case 2:\n                        push.call(target, value);\n                      // filter\n                    } else if (IS_EVERY) return false; // every\n                }\n              }\n            }\n\n            return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;\n          };\n        };\n\n        module.exports = {\n          // `Array.prototype.forEach` method\n          // https://tc39.github.io/ecma262/#sec-array.prototype.foreach\n          forEach: createMethod(0),\n          // `Array.prototype.map` method\n          // https://tc39.github.io/ecma262/#sec-array.prototype.map\n          map: createMethod(1),\n          // `Array.prototype.filter` method\n          // https://tc39.github.io/ecma262/#sec-array.prototype.filter\n          filter: createMethod(2),\n          // `Array.prototype.some` method\n          // https://tc39.github.io/ecma262/#sec-array.prototype.some\n          some: createMethod(3),\n          // `Array.prototype.every` method\n          // https://tc39.github.io/ecma262/#sec-array.prototype.every\n          every: createMethod(4),\n          // `Array.prototype.find` method\n          // https://tc39.github.io/ecma262/#sec-array.prototype.find\n          find: createMethod(5),\n          // `Array.prototype.findIndex` method\n          // https://tc39.github.io/ecma262/#sec-array.prototype.findIndex\n          findIndex: createMethod(6)\n        };\n        /***/\n      },\n\n      /***/\n      \"be59\":\n      /***/\n      function be59(module, __webpack_exports__, __webpack_require__) {\n        \"use strict\";\n        /* harmony import */\n\n        var _node_modules_mini_css_extract_plugin_dist_loader_js_ref_9_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_9_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_9_oneOf_1_2_node_modules_sass_loader_dist_cjs_js_ref_9_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_EditorPageTable_vue_vue_type_style_index_0_id_1879397e_lang_sass_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"b0ed\");\n        /* harmony import */\n\n\n        var _node_modules_mini_css_extract_plugin_dist_loader_js_ref_9_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_9_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_9_oneOf_1_2_node_modules_sass_loader_dist_cjs_js_ref_9_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_EditorPageTable_vue_vue_type_style_index_0_id_1879397e_lang_sass_scoped_true___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_mini_css_extract_plugin_dist_loader_js_ref_9_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_9_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_9_oneOf_1_2_node_modules_sass_loader_dist_cjs_js_ref_9_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_EditorPageTable_vue_vue_type_style_index_0_id_1879397e_lang_sass_scoped_true___WEBPACK_IMPORTED_MODULE_0__);\n        /* unused harmony reexport * */\n\n        /* unused harmony default export */\n\n\n        var _unused_webpack_default_export = _node_modules_mini_css_extract_plugin_dist_loader_js_ref_9_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_9_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_9_oneOf_1_2_node_modules_sass_loader_dist_cjs_js_ref_9_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_EditorPageTable_vue_vue_type_style_index_0_id_1879397e_lang_sass_scoped_true___WEBPACK_IMPORTED_MODULE_0___default.a;\n        /***/\n      },\n\n      /***/\n      \"c04e\":\n      /***/\n      function c04e(module, exports, __webpack_require__) {\n        var isObject = __webpack_require__(\"861d\"); // `ToPrimitive` abstract operation\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        // instead of the ES6 spec version, we didn't implement @@toPrimitive case\n        // and the second argument - flag - preferred type is a string\n\n\n        module.exports = function (input, PREFERRED_STRING) {\n          if (!isObject(input)) return input;\n          var fn, val;\n          if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n          if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;\n          if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n          throw TypeError(\"Can't convert object to primitive value\");\n        };\n        /***/\n\n      },\n\n      /***/\n      \"c430\":\n      /***/\n      function c430(module, exports) {\n        module.exports = false;\n        /***/\n      },\n\n      /***/\n      \"c6b6\":\n      /***/\n      function c6b6(module, exports) {\n        var toString = {}.toString;\n\n        module.exports = function (it) {\n          return toString.call(it).slice(8, -1);\n        };\n        /***/\n\n      },\n\n      /***/\n      \"c6cd\":\n      /***/\n      function c6cd(module, exports, __webpack_require__) {\n        var global = __webpack_require__(\"da84\");\n\n        var setGlobal = __webpack_require__(\"ce4e\");\n\n        var SHARED = '__core-js_shared__';\n        var store = global[SHARED] || setGlobal(SHARED, {});\n        module.exports = store;\n        /***/\n      },\n\n      /***/\n      \"c8ba\":\n      /***/\n      function c8ba(module, exports) {\n        var g; // This works in non-strict mode\n\n        g = function () {\n          return this;\n        }();\n\n        try {\n          // This works if eval is allowed (see CSP)\n          g = g || new Function(\"return this\")();\n        } catch (e) {\n          // This works if the window reference is available\n          if ((typeof window === \"undefined\" ? \"undefined\" : _typeof2(window)) === \"object\") g = window;\n        } // g can still be undefined, but nothing to do about it...\n        // We return undefined, instead of nothing here, so it's\n        // easier to handle this case. if(!global) { ...}\n\n\n        module.exports = g;\n        /***/\n      },\n\n      /***/\n      \"ca84\":\n      /***/\n      function ca84(module, exports, __webpack_require__) {\n        var has = __webpack_require__(\"5135\");\n\n        var toIndexedObject = __webpack_require__(\"fc6a\");\n\n        var indexOf = __webpack_require__(\"4d64\").indexOf;\n\n        var hiddenKeys = __webpack_require__(\"d012\");\n\n        module.exports = function (object, names) {\n          var O = toIndexedObject(object);\n          var i = 0;\n          var result = [];\n          var key;\n\n          for (key in O) {\n            !has(hiddenKeys, key) && has(O, key) && result.push(key);\n          } // Don't enum bug & hidden keys\n\n\n          while (names.length > i) {\n            if (has(O, key = names[i++])) {\n              ~indexOf(result, key) || result.push(key);\n            }\n          }\n\n          return result;\n        };\n        /***/\n\n      },\n\n      /***/\n      \"caad\":\n      /***/\n      function caad(module, exports, __webpack_require__) {\n        \"use strict\";\n\n        var $ = __webpack_require__(\"23e7\");\n\n        var $includes = __webpack_require__(\"4d64\").includes;\n\n        var addToUnscopables = __webpack_require__(\"44d2\");\n\n        var arrayMethodUsesToLength = __webpack_require__(\"ae40\");\n\n        var USES_TO_LENGTH = arrayMethodUsesToLength('indexOf', {\n          ACCESSORS: true,\n          1: 0\n        }); // `Array.prototype.includes` method\n        // https://tc39.github.io/ecma262/#sec-array.prototype.includes\n\n        $({\n          target: 'Array',\n          proto: true,\n          forced: !USES_TO_LENGTH\n        }, {\n          includes: function includes(el\n          /* , fromIndex = 0 */\n          ) {\n            return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n          }\n        }); // https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\n\n        addToUnscopables('includes');\n        /***/\n      },\n\n      /***/\n      \"cc12\":\n      /***/\n      function cc12(module, exports, __webpack_require__) {\n        var global = __webpack_require__(\"da84\");\n\n        var isObject = __webpack_require__(\"861d\");\n\n        var document = global.document; // typeof document.createElement is 'object' in old IE\n\n        var EXISTS = isObject(document) && isObject(document.createElement);\n\n        module.exports = function (it) {\n          return EXISTS ? document.createElement(it) : {};\n        };\n        /***/\n\n      },\n\n      /***/\n      \"ce4e\":\n      /***/\n      function ce4e(module, exports, __webpack_require__) {\n        var global = __webpack_require__(\"da84\");\n\n        var createNonEnumerableProperty = __webpack_require__(\"9112\");\n\n        module.exports = function (key, value) {\n          try {\n            createNonEnumerableProperty(global, key, value);\n          } catch (error) {\n            global[key] = value;\n          }\n\n          return value;\n        };\n        /***/\n\n      },\n\n      /***/\n      \"ceb0\":\n      /***/\n      function ceb0(module, __webpack_exports__, __webpack_require__) {\n        \"use strict\"; // CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{\"cacheDirectory\":\"node_modules/.cache/vue-loader\",\"cacheIdentifier\":\"dbcb0d02-vue-loader-template\"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/Editor.vue?vue&type=template&id=68999f30&\n\n        var render = function render() {\n          var _vm = this;\n\n          var _h = _vm.$createElement;\n\n          var _c = _vm._self._c || _h;\n\n          return _c('div', {\n            staticClass: \"v-editor\",\n            style: _vm.editorStyle,\n            attrs: {\n              \"role\": \"tablist\"\n            }\n          }, _vm._l(_vm.config.sections, function (secDef) {\n            return _c('b-card', {\n              key: secDef.id,\n              staticClass: \"mb-1\",\n              style: {\n                background: _vm.cardBackground\n              },\n              attrs: {\n                \"no-body\": \"\",\n                \"id\": \"panel-\" + secDef.id\n              }\n            }, [_c('b-card-header', {\n              staticClass: \"p-1\",\n              attrs: {\n                \"header-tag\": \"header\",\n                \"role\": \"tab\"\n              }\n            }, [_c('b-btn', {\n              directives: [{\n                name: \"b-toggle\",\n                rawName: \"v-b-toggle\",\n                value: \"accordion-\" + secDef.id,\n                expression: \"`accordion-${secDef.id}`\"\n              }],\n              staticClass: \"sec-btn\",\n              attrs: {\n                \"block\": \"\",\n                \"href\": \"#\",\n                \"variant\": \"secondary\"\n              }\n            }, [_c('span', {\n              staticClass: \"float-right\"\n            }, [_c('i', {\n              staticClass: \"collapse-icon\"\n            })]), secDef.icon ? _c('i', {\n              \"class\": \"fa fa-\" + secDef.icon\n            }) : _c('i', {\n              staticClass: \"fa fa-fw fa-cog\"\n            }), _vm._v(_vm._s(secDef.title) + \" \")])], 1), _c('b-collapse', {\n              attrs: {\n                \"id\": \"accordion-\" + secDef.id,\n                \"accordion\": \"editor-accordion\",\n                \"role\": \"tabpanel\"\n              }\n            }, [secDef.builtin === 'unknown' ? [_c('div', {\n              staticClass: \"p-y-2\"\n            }, [_vm._v(\"Unknown\")])] : secDef.builtin === 'files' ? [_c('section-files')] : secDef.layout === 'tabs' ? _c('b-tabs', {\n              attrs: {\n                \"no-fade\": \"\",\n                \"card\": \"\"\n              }\n            }, _vm._l(secDef.tabs, function (tabDef, tabIndex) {\n              return _c('b-tab', {\n                key: tabDef.id,\n                attrs: {\n                  \"title\": tabDef.name,\n                  \"id\": \"tab-\" + tabDef.id,\n                  \"active\": tabIndex === 0\n                }\n              }, [_c('editor-view', {\n                attrs: {\n                  \"config\": tabDef.view,\n                  \"scope\": tabDef.id\n                }\n              })], 1);\n            }), 1) : secDef.layout === 'single-page' ? _c('editor-view', {\n              attrs: {\n                \"config\": secDef.view,\n                \"scope\": secDef.id\n              }\n            }) : _vm._e()], 2)], 1);\n          }), 1);\n        };\n\n        var staticRenderFns = []; // CONCATENATED MODULE: ./src/components/Editor.vue?vue&type=template&id=68999f30&\n        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.concat.js\n\n        var es_array_concat = __webpack_require__(\"99af\"); // CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{\"cacheDirectory\":\"node_modules/.cache/vue-loader\",\"cacheIdentifier\":\"dbcb0d02-vue-loader-template\"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/EditorView.vue?vue&type=template&id=519148ff&scoped=true&\n\n\n        var EditorViewvue_type_template_id_519148ff_scoped_true_render = function EditorViewvue_type_template_id_519148ff_scoped_true_render() {\n          var _vm = this;\n\n          var _h = _vm.$createElement;\n\n          var _c = _vm._self._c || _h;\n\n          return _vm.config.type === 'list' ? _c('b-list-group', _vm._l(_vm.config.items, function (item, index) {\n            return _c('editor-item', {\n              key: index,\n              attrs: {\n                \"config\": item,\n                \"scope\": _vm.scope + \"-\" + index\n              }\n            });\n          }), 1) : _vm.config.type === 'custom-legacy' ? _c('div', {\n            staticClass: \"custom-view\"\n          }, [_c('div', {\n            staticClass: \"custom-view-header\",\n            domProps: {\n              \"innerHTML\": _vm._s(_vm.config.header_html)\n            }\n          }), _c('div', {\n            staticClass: \"custom-view-body\",\n            domProps: {\n              \"innerHTML\": _vm._s(_vm.config.body_html)\n            }\n          })]) : _vm.config.type === 'table' ? _c('div', {\n            style: _vm.tableStyle(_vm.config)\n          }, [_c('editor-page-table', {\n            attrs: {\n              \"tableConfig\": _vm.config\n            }\n          })], 1) : _vm.config.type === 'vue' ? _c(_vm.config.component, {\n            ref: \"cuscom\",\n            tag: \"component\",\n            attrs: {\n              \"data\": _vm.config.data\n            }\n          }) : _vm._e();\n        };\n\n        var EditorViewvue_type_template_id_519148ff_scoped_true_staticRenderFns = []; // CONCATENATED MODULE: ./src/components/EditorView.vue?vue&type=template&id=519148ff&scoped=true&\n        // CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{\"cacheDirectory\":\"node_modules/.cache/vue-loader\",\"cacheIdentifier\":\"dbcb0d02-vue-loader-template\"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/EditorItem.vue?vue&type=template&id=7edeebf6&scoped=true&\n\n        var EditorItemvue_type_template_id_7edeebf6_scoped_true_render = function EditorItemvue_type_template_id_7edeebf6_scoped_true_render() {\n          var _vm = this;\n\n          var _h = _vm.$createElement;\n\n          var _c = _vm._self._c || _h;\n\n          return _c('b-list-group-item', [_vm.config.type === 'text' ? _c('div', [_c('label', [_vm._v(_vm._s(_vm.config.title))]), _c('div', {\n            staticClass: \"small text-muted\",\n            domProps: {\n              \"innerHTML\": _vm._s(_vm.sanitizeHTML(_vm.config.content))\n            }\n          })]) : _vm.config.type === 'checkbox' ? _c('div', {\n            staticClass: \"form-check\"\n          }, [_c('b-form-checkbox', {\n            attrs: {\n              \"disabled\": _vm.config.disabled\n            },\n            model: {\n              value: _vm.value,\n              callback: function callback($$v) {\n                _vm.value = $$v;\n              },\n              expression: \"value\"\n            }\n          }, [_vm._v(_vm._s(_vm.config.title))])], 1) : _vm.config.type === 'button' ? _c('div', [_c('b-btn', {\n            attrs: {\n              \"block\": \"\",\n              \"size\": \"sm\",\n              \"variant\": _vm.config.variant || 'secondary',\n              \"id\": \"input-\" + _vm.scope\n            },\n            on: {\n              \"click\": _vm.config.action\n            }\n          }, [_vm._v(_vm._s(_vm.config.title))])], 1) : _vm.config.type === 'input' ? _c('div', [_vm.config.layout === 'compact' ? [_c('b-input-group', {\n            attrs: {\n              \"size\": \"sm\",\n              \"prepend\": _vm.config.title,\n              \"id\": \"input-\" + _vm.scope\n            }\n          }, [_c('b-form-input', {\n            attrs: {\n              \"disabled\": _vm.config.disabled\n            },\n            on: {\n              \"blur\": _vm.onBlur,\n              \"change\": _vm.onClickApply\n            },\n            model: {\n              value: _vm.value,\n              callback: function callback($$v) {\n                _vm.value = typeof $$v === 'string' ? $$v.trim() : $$v;\n              },\n              expression: \"value\"\n            }\n          }), _c('b-input-group-append', [_c('b-btn', {\n            attrs: {\n              \"variant\": \"primary\"\n            },\n            on: {\n              \"click\": _vm.onClickApply\n            }\n          }, [_vm._v(\"Apply\")])], 1)], 1)] : [_vm.config.title ? _c('label', {\n            attrs: {\n              \"for\": \"input-\" + _vm.scope\n            }\n          }, [_vm._v(_vm._s(_vm.config.title))]) : _vm._e(), _c('b-input-group', {\n            attrs: {\n              \"size\": \"sm\",\n              \"id\": \"input-\" + _vm.scope\n            }\n          }, [_c('b-form-input', {\n            attrs: {\n              \"size\": \"sm\",\n              \"type\": \"text\",\n              \"disabled\": _vm.config.disabled\n            },\n            on: {\n              \"blur\": _vm.onBlur,\n              \"change\": _vm.onClickApply\n            },\n            model: {\n              value: _vm.value,\n              callback: function callback($$v) {\n                _vm.value = typeof $$v === 'string' ? $$v.trim() : $$v;\n              },\n              expression: \"value\"\n            }\n          }), _c('b-input-group-append', [_c('b-btn', {\n            attrs: {\n              \"variant\": \"primary\"\n            },\n            on: {\n              \"click\": _vm.onClickApply\n            }\n          }, [_vm._v(\"Apply\")])], 1)], 1)]], 2) : _vm.config.type === 'select' ? _c('div', [_vm.config.layout === 'compact' ? [_c('b-input-group', {\n            attrs: {\n              \"size\": \"sm\",\n              \"prepend\": _vm.config.title,\n              \"id\": \"input-\" + _vm.scope\n            }\n          }, [_c('b-form-select', {\n            attrs: {\n              \"options\": _vm.config.options,\n              \"disabled\": _vm.config.disabled\n            },\n            model: {\n              value: _vm.value,\n              callback: function callback($$v) {\n                _vm.value = $$v;\n              },\n              expression: \"value\"\n            }\n          })], 1)] : [_vm.config.title ? _c('label', {\n            attrs: {\n              \"for\": \"input-\" + _vm.scope\n            }\n          }, [_vm._v(_vm._s(_vm.config.title))]) : _vm._e(), _c('b-form-select', {\n            attrs: {\n              \"size\": \"sm\",\n              \"options\": _vm.config.options,\n              \"id\": \"input-\" + _vm.scope,\n              \"disabled\": _vm.config.disabled\n            },\n            model: {\n              value: _vm.value,\n              callback: function callback($$v) {\n                _vm.value = $$v;\n              },\n              expression: \"value\"\n            }\n          })]], 2) : _vm.config.type === 'vue' ? _c(_vm.config.component, {\n            ref: \"component\",\n            tag: \"component\",\n            attrs: {\n              \"data\": typeof _vm.config.data === 'function' ? _vm.config.data() : _vm.config.data\n            }\n          }) : _vm._e()], 1);\n        };\n\n        var EditorItemvue_type_template_id_7edeebf6_scoped_true_staticRenderFns = []; // CONCATENATED MODULE: ./src/components/EditorItem.vue?vue&type=template&id=7edeebf6&scoped=true&\n        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.map.js\n\n        var es_array_map = __webpack_require__(\"d81d\"); // EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.slice.js\n\n\n        var es_array_slice = __webpack_require__(\"fb6a\"); // EXTERNAL MODULE: ./node_modules/core-js/modules/es.regexp.exec.js\n\n\n        var es_regexp_exec = __webpack_require__(\"ac1f\"); // EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.split.js\n\n\n        var es_string_split = __webpack_require__(\"1276\"); // EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.js\n\n\n        var es_symbol = __webpack_require__(\"a4d3\"); // EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.description.js\n\n\n        var es_symbol_description = __webpack_require__(\"e01a\"); // EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.iterator.js\n\n\n        var es_symbol_iterator = __webpack_require__(\"d28b\"); // EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.iterator.js\n\n\n        var es_array_iterator = __webpack_require__(\"e260\"); // EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.to-string.js\n\n\n        var es_object_to_string = __webpack_require__(\"d3b7\"); // EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.iterator.js\n\n\n        var es_string_iterator = __webpack_require__(\"3ca3\"); // EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.iterator.js\n\n\n        var web_dom_collections_iterator = __webpack_require__(\"ddb0\"); // CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/typeof.js\n\n\n        function _typeof(obj) {\n          \"@babel/helpers - typeof\";\n\n          if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n            _typeof = function _typeof(obj) {\n              return typeof obj;\n            };\n          } else {\n            _typeof = function _typeof(obj) {\n              return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n            };\n          }\n\n          return _typeof(obj);\n        } // CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js\n\n\n        function _arrayWithHoles(arr) {\n          if (Array.isArray(arr)) return arr;\n        } // CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js\n\n\n        function _iterableToArrayLimit(arr, i) {\n          if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n          var _arr = [];\n          var _n = true;\n          var _d = false;\n          var _e = undefined;\n\n          try {\n            for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n              _arr.push(_s.value);\n\n              if (i && _arr.length === i) break;\n            }\n          } catch (err) {\n            _d = true;\n            _e = err;\n          } finally {\n            try {\n              if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n            } finally {\n              if (_d) throw _e;\n            }\n          }\n\n          return _arr;\n        } // EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.from.js\n\n\n        var es_array_from = __webpack_require__(\"a630\"); // EXTERNAL MODULE: ./node_modules/core-js/modules/es.regexp.to-string.js\n\n\n        var es_regexp_to_string = __webpack_require__(\"25f0\"); // CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js\n\n\n        function _arrayLikeToArray(arr, len) {\n          if (len == null || len > arr.length) len = arr.length;\n\n          for (var i = 0, arr2 = new Array(len); i < len; i++) {\n            arr2[i] = arr[i];\n          }\n\n          return arr2;\n        } // CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js\n\n\n        function _unsupportedIterableToArray(o, minLen) {\n          if (!o) return;\n          if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n          var n = Object.prototype.toString.call(o).slice(8, -1);\n          if (n === \"Object\" && o.constructor) n = o.constructor.name;\n          if (n === \"Map\" || n === \"Set\") return Array.from(o);\n          if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n        } // CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js\n\n\n        function _nonIterableRest() {\n          throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n        } // CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js\n\n\n        function _slicedToArray(arr, i) {\n          return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n        } // CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\n\n\n        function _createForOfIteratorHelper(o, allowArrayLike) {\n          var it;\n\n          if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n            if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n              if (it) o = it;\n              var i = 0;\n\n              var F = function F() {};\n\n              return {\n                s: F,\n                n: function n() {\n                  if (i >= o.length) return {\n                    done: true\n                  };\n                  return {\n                    done: false,\n                    value: o[i++]\n                  };\n                },\n                e: function e(_e) {\n                  throw _e;\n                },\n                f: F\n              };\n            }\n\n            throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n          }\n\n          var normalCompletion = true,\n              didErr = false,\n              err;\n          return {\n            s: function s() {\n              it = o[Symbol.iterator]();\n            },\n            n: function n() {\n              var step = it.next();\n              normalCompletion = step.done;\n              return step;\n            },\n            e: function e(_e2) {\n              didErr = true;\n              err = _e2;\n            },\n            f: function f() {\n              try {\n                if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n              } finally {\n                if (didErr) throw err;\n              }\n            }\n          };\n        } // EXTERNAL MODULE: ./node_modules/sanitize-html/dist/sanitize-html.js\n\n\n        var sanitize_html = __webpack_require__(\"04ef\");\n\n        var sanitize_html_default = /*#__PURE__*/__webpack_require__.n(sanitize_html); // CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/EditorItem.vue?vue&type=script&lang=js&\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n\n\n        function findPath(obj, path) {\n          var s = path.split(\".\").map(function (x) {\n            return x[0] === \"#\" ? parseInt(x.slice(1)) : x;\n          });\n          var p = s.slice(0, s.length - 1);\n          var last = s[s.length - 1];\n          var o = obj;\n\n          var _iterator = _createForOfIteratorHelper(p),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var idx = _step.value;\n              o = obj[idx];\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n\n          return [o, last];\n        }\n\n        function get(obj, path) {\n          var _findPath = findPath(obj, path),\n              _findPath2 = _slicedToArray(_findPath, 2),\n              o = _findPath2[0],\n              last = _findPath2[1];\n\n          return o[last];\n        }\n\n        function set(obj, path, value) {\n          var _findPath3 = findPath(obj, path),\n              _findPath4 = _slicedToArray(_findPath3, 2),\n              o = _findPath4[0],\n              last = _findPath4[1];\n\n          o[last] = value;\n        }\n        /* harmony default export */\n\n\n        var EditorItemvue_type_script_lang_js_ = {\n          name: \"editor-item\",\n          props: [\"config\", \"scope\"],\n          data: function data() {\n            return {\n              value: null,\n              commited: false,\n              sanitizeHTML: sanitize_html_default.a,\n              justUpdated: false\n            };\n          },\n          methods: {\n            onBlur: function onBlur() {\n              var _this = this;\n\n              this.commited = false;\n              setTimeout(function () {\n                if (!_this.commited) _this.update();\n              }, 500);\n            },\n            onClickApply: function onClickApply() {\n              this.commited = true;\n              this.updateBoundValue(this.value, 0);\n            },\n            updateBoundValue: function updateBoundValue(val, oldVal) {\n              var _this2 = this;\n\n              if (this.justUpdated) {\n                this.justUpdated = false;\n                return;\n              }\n\n              if (oldVal === null) {\n                return;\n              }\n\n              var hasFormat = false;\n\n              if (this.config.type === \"input\") {\n                if (this.config.format === \"int\") {\n                  val = parseInt(val);\n                  hasFormat = true;\n                } else if (this.config.format === \"float\") {\n                  val = parseFloat(val);\n                  hasFormat = true;\n                }\n              }\n\n              if (hasFormat && isNaN(val)) {\n                alert(\"The input is invalid.\");\n                this.$nextTick(function () {\n                  return _this2.update();\n                });\n                return;\n              }\n\n              if (\"bind\" in this.config) {\n                var bind = this.config.bind;\n\n                if (_typeof(bind) === \"object\") {\n                  set(bind.object, bind.path, this.value);\n\n                  if (bind.callback) {\n                    bind.callback.call(this, val, oldVal);\n                  }\n                }\n              }\n\n              if (\"value\" in this.config) {\n                var value = this.config.value;\n\n                if (_typeof(value) === \"object\") {\n                  if (value.callback) {\n                    value.callback.call(this, val, oldVal);\n                  }\n                }\n              }\n            },\n            update: function update() {\n              var manually = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n              if (this.config.type === \"vue\") {\n                this.$forceUpdate();\n                return;\n              }\n\n              if (\"bind\" in this.config) {\n                var bind = this.config.bind;\n\n                if (_typeof(bind) === \"object\") {\n                  this.justUpdated = true;\n                  this.value = get(bind.object, bind.path);\n                }\n              }\n\n              if (\"value\" in this.config) {\n                var value = this.config.value;\n\n                if (_typeof(value) === \"object\") {\n                  this.justUpdated = true;\n                  this.value = value.current;\n                }\n              }\n\n              if (manually) this.$forceUpdate();\n            }\n          },\n          watch: {\n            value: function value(val, oldVal) {\n              if (this.config.type === \"input\") {\n                return;\n              }\n\n              this.updateBoundValue(val, oldVal);\n            }\n          },\n          created: function created() {\n            this.update(false);\n          },\n          mounted: function mounted() {\n            if (this.config.ref) {\n              this.$root.$data.editorRef[this.config.ref] = this;\n            }\n          }\n        }; // CONCATENATED MODULE: ./src/components/EditorItem.vue?vue&type=script&lang=js&\n\n        /* harmony default export */\n\n        var components_EditorItemvue_type_script_lang_js_ = EditorItemvue_type_script_lang_js_; // EXTERNAL MODULE: ./src/components/EditorItem.vue?vue&type=style&index=0&id=7edeebf6&scoped=true&lang=sass&\n\n        var EditorItemvue_type_style_index_0_id_7edeebf6_scoped_true_lang_sass_ = __webpack_require__(\"5bbb\"); // CONCATENATED MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\n\n        /* globals __VUE_SSR_CONTEXT__ */\n        // IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n        // This module is a runtime utility for cleaner component module output and will\n        // be included in the final webpack user bundle.\n\n\n        function normalizeComponent(scriptExports, render, staticRenderFns, functionalTemplate, injectStyles, scopeId, moduleIdentifier,\n        /* server only */\n        shadowMode\n        /* vue-cli only */\n        ) {\n          // Vue.extend constructor export interop\n          var options = typeof scriptExports === 'function' ? scriptExports.options : scriptExports; // render functions\n\n          if (render) {\n            options.render = render;\n            options.staticRenderFns = staticRenderFns;\n            options._compiled = true;\n          } // functional template\n\n\n          if (functionalTemplate) {\n            options.functional = true;\n          } // scopedId\n\n\n          if (scopeId) {\n            options._scopeId = 'data-v-' + scopeId;\n          }\n\n          var hook;\n\n          if (moduleIdentifier) {\n            // server build\n            hook = function hook(context) {\n              // 2.3 injection\n              context = context || // cached call\n              this.$vnode && this.$vnode.ssrContext || // stateful\n              this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext; // functional\n              // 2.2 with runInNewContext: true\n\n              if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n                context = __VUE_SSR_CONTEXT__;\n              } // inject component styles\n\n\n              if (injectStyles) {\n                injectStyles.call(this, context);\n              } // register component module identifier for async chunk inferrence\n\n\n              if (context && context._registeredComponents) {\n                context._registeredComponents.add(moduleIdentifier);\n              }\n            }; // used by ssr in case component is cached and beforeCreate\n            // never gets called\n\n\n            options._ssrRegister = hook;\n          } else if (injectStyles) {\n            hook = shadowMode ? function () {\n              injectStyles.call(this, (options.functional ? this.parent : this).$root.$options.shadowRoot);\n            } : injectStyles;\n          }\n\n          if (hook) {\n            if (options.functional) {\n              // for template-only hot-reload because in that case the render fn doesn't\n              // go through the normalizer\n              options._injectStyles = hook; // register for functional component in vue file\n\n              var originalRender = options.render;\n\n              options.render = function renderWithStyleInjection(h, context) {\n                hook.call(context);\n                return originalRender(h, context);\n              };\n            } else {\n              // inject component registration as beforeCreate hook\n              var existing = options.beforeCreate;\n              options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\n            }\n          }\n\n          return {\n            exports: scriptExports,\n            options: options\n          };\n        } // CONCATENATED MODULE: ./src/components/EditorItem.vue\n\n        /* normalize component */\n\n\n        var component = normalizeComponent(components_EditorItemvue_type_script_lang_js_, EditorItemvue_type_template_id_7edeebf6_scoped_true_render, EditorItemvue_type_template_id_7edeebf6_scoped_true_staticRenderFns, false, null, \"7edeebf6\", null);\n        /* harmony default export */\n\n        var EditorItem = component.exports; // CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{\"cacheDirectory\":\"node_modules/.cache/vue-loader\",\"cacheIdentifier\":\"dbcb0d02-vue-loader-template\"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/EditorPageTable.vue?vue&type=template&id=1879397e&scoped=true&\n\n        var EditorPageTablevue_type_template_id_1879397e_scoped_true_render = function EditorPageTablevue_type_template_id_1879397e_scoped_true_render() {\n          var _vm = this;\n\n          var _h = _vm.$createElement;\n\n          var _c = _vm._self._c || _h;\n\n          return _c('table', {\n            staticClass: \"table table-sm\"\n          }, [_c('thead', [_c('tr', _vm._l(_vm.cols, function (col, index) {\n            return _c('th', {\n              key: index,\n              on: {\n                \"click\": function click($event) {\n                  return _vm.changeSort(col.key);\n                }\n              }\n            }, [_c('span', [_vm._v(_vm._s(col.name))]), col.sortable ? [_vm.sortBy[0] === col.key ? _c('span', {\n              \"class\": \"fas fa-sort-\" + (_vm.sortBy[1] ? 'up' : 'down')\n            }) : _c('span', {\n              staticClass: \"fas fa-sort inactive\"\n            })] : _vm._e()], 2);\n          }), 0)]), _c('tbody', _vm._l(_vm.rows, function (row, index) {\n            return _c('tr', {\n              key: index\n            }, _vm._l(_vm.cols, function (col, index) {\n              return _c('td', {\n                key: index\n              }, [_typeof2(row.value[col.key]) === 'object' ? [row.value[col.key].type === 'checkbox' ? [_c('input', {\n                directives: [{\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: row.value[col.key].checked,\n                  expression: \"row.value[col.key].checked\"\n                }],\n                attrs: {\n                  \"type\": \"checkbox\"\n                },\n                domProps: {\n                  \"checked\": Array.isArray(row.value[col.key].checked) ? _vm._i(row.value[col.key].checked, null) > -1 : row.value[col.key].checked\n                },\n                on: {\n                  \"change\": [function ($event) {\n                    var $$a = row.value[col.key].checked,\n                        $$el = $event.target,\n                        $$c = $$el.checked ? true : false;\n\n                    if (Array.isArray($$a)) {\n                      var $$v = null,\n                          $$i = _vm._i($$a, $$v);\n\n                      if ($$el.checked) {\n                        $$i < 0 && _vm.$set(row.value[col.key], \"checked\", $$a.concat([$$v]));\n                      } else {\n                        $$i > -1 && _vm.$set(row.value[col.key], \"checked\", $$a.slice(0, $$i).concat($$a.slice($$i + 1)));\n                      }\n                    } else {\n                      _vm.$set(row.value[col.key], \"checked\", $$c);\n                    }\n                  }, function ($event) {\n                    row.value[col.key].onChange.call(this, arguments[0]);\n                  }]\n                }\n              })] : _vm._e(), row.value[col.key].type === 'input' ? [_c('input', {\n                attrs: {\n                  \"type\": \"text\"\n                },\n                domProps: {\n                  \"value\": row.value[col.key].value\n                },\n                on: {\n                  \"change\": function change($event) {\n                    row.value[col.key].onChange.call(this, arguments[0]);\n                  }\n                }\n              })] : _vm._e(), row.value[col.key].type === 'select' ? [_c('select', {\n                on: {\n                  \"change\": function change($event) {\n                    row.value[col.key].onChange.call(this, arguments[0]);\n                  }\n                }\n              }, _vm._l(row.value[col.key].opts, function (opt) {\n                return _c('option', {\n                  key: opt.value,\n                  domProps: {\n                    \"selected\": row.value[col.key].value === opt.value,\n                    \"value\": opt.value\n                  }\n                }, [_vm._v(_vm._s(opt.text))]);\n              }), 0)] : _vm._e(), row.value[col.key].type === 'button' ? [_c('a', {\n                attrs: {\n                  \"href\": \"#\"\n                },\n                domProps: {\n                  \"innerHTML\": _vm._s(row.value[col.key].content)\n                },\n                on: {\n                  \"click\": function click($event) {\n                    $event.preventDefault();\n                    row.value[col.key].onClick.call(this, arguments[0]);\n                  }\n                }\n              })] : _vm._e()] : [_c('span', {\n                domProps: {\n                  \"innerHTML\": _vm._s(row.value[col.key])\n                }\n              })]], 2);\n            }), 0);\n          }), 0)]);\n        };\n\n        var EditorPageTablevue_type_template_id_1879397e_scoped_true_staticRenderFns = []; // CONCATENATED MODULE: ./src/components/EditorPageTable.vue?vue&type=template&id=1879397e&scoped=true&\n        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.includes.js\n\n        var es_array_includes = __webpack_require__(\"caad\"); // EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.sort.js\n\n\n        var es_array_sort = __webpack_require__(\"4e82\"); // EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.includes.js\n\n\n        var es_string_includes = __webpack_require__(\"2532\"); // EXTERNAL MODULE: external {\"commonjs\":\"vue\",\"commonjs2\":\"vue\",\"root\":\"Vue\"}\n\n\n        var external_commonjs_vue_commonjs2_vue_root_Vue_ = __webpack_require__(\"8bbf\");\n\n        var external_commonjs_vue_commonjs2_vue_root_Vue_default = /*#__PURE__*/__webpack_require__.n(external_commonjs_vue_commonjs2_vue_root_Vue_); // CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/EditorPageTable.vue?vue&type=script&lang=js&\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n\n\n        function fromPairs(pairs) {\n          var result = {};\n\n          var _iterator = _createForOfIteratorHelper(pairs),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var _step$value = _slicedToArray(_step.value, 2),\n                  k = _step$value[0],\n                  v = _step$value[1];\n\n              result[k] = v;\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n\n          return result;\n        }\n        /* harmony default export */\n\n\n        var EditorPageTablevue_type_script_lang_js_ = {\n          name: \"editor-page-table\",\n          props: [\"tableConfig\"],\n          data: function data() {\n            return {\n              rows: [],\n              cols: [],\n              sortBy: [null, null]\n            };\n          },\n          methods: {\n            updateTableData: function updateTableData() {\n              var conf = this.tableConfig;\n              var sortableCols = conf.sortableColumns || [];\n\n              if (conf.refreshOnDataLoaded) {// event.on(event.BEFORE_DRAW, () => {\n                //     this.updateData();\n                // });\n              }\n\n              var cols = conf.columns.map(function (x) {\n                return typeof x === \"string\" ? {\n                  name: x,\n                  key: x,\n                  sortable: sortableCols.includes(x)\n                } : x;\n              });\n              var rows = Array.from(Array(conf.numberOfRows())).map(function (d, i) {\n                return {\n                  value: fromPairs(cols.map(function (col) {\n                    return [col.key, conf.dataFor(i, col.key)];\n                  }))\n                };\n              });\n              this.rows = rows;\n              this.cols = cols;\n            },\n            updateData: function updateData() {\n              if (this.tableConfig.__tableUpdate) {\n                this.updateTableData();\n                external_commonjs_vue_commonjs2_vue_root_Vue_default.a[\"delete\"](this.tableConfig, \"__tableUpdate\");\n              } else {\n                this.updateTableData();\n                external_commonjs_vue_commonjs2_vue_root_Vue_default.a.set(this.tableConfig, \"__tableUpdate\", true);\n              }\n            },\n            update: function update() {\n              this.updateData();\n            },\n            rowClicked: function rowClicked(item, index) {\n              if (this.tableConfig.onClick) {\n                this.tableConfig.onClick.call(this, item, index, this);\n              }\n            },\n            changeSort: function changeSort(key) {\n              var ascend = true;\n\n              if (this.sortBy && this.sortBy[0] === key) {\n                ascend = !this.sortBy[1];\n              }\n\n              this.sortBy = [key, ascend];\n              this.rows = this.rows.sort(function (a, b) {\n                var va = a.value[key];\n                var vb = b.value[key];\n                return va === vb ? 0 : ascend === va > vb ? 1 : -1;\n              });\n            }\n          },\n          mounted: function mounted() {\n            if (this.tableConfig.ref) this.$root.$data.editorRef[this.tableConfig.ref] = this;\n            this.updateTableData();\n          }\n        }; // CONCATENATED MODULE: ./src/components/EditorPageTable.vue?vue&type=script&lang=js&\n\n        /* harmony default export */\n\n        var components_EditorPageTablevue_type_script_lang_js_ = EditorPageTablevue_type_script_lang_js_; // EXTERNAL MODULE: ./src/components/EditorPageTable.vue?vue&type=style&index=0&id=1879397e&lang=sass&scoped=true&\n\n        var EditorPageTablevue_type_style_index_0_id_1879397e_lang_sass_scoped_true_ = __webpack_require__(\"be59\"); // CONCATENATED MODULE: ./src/components/EditorPageTable.vue\n\n        /* normalize component */\n\n\n        var EditorPageTable_component = normalizeComponent(components_EditorPageTablevue_type_script_lang_js_, EditorPageTablevue_type_template_id_1879397e_scoped_true_render, EditorPageTablevue_type_template_id_1879397e_scoped_true_staticRenderFns, false, null, \"1879397e\", null);\n        /* harmony default export */\n\n        var EditorPageTable = EditorPageTable_component.exports; // CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/EditorView.vue?vue&type=script&lang=js&\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n\n        /* harmony default export */\n\n        var EditorViewvue_type_script_lang_js_ = {\n          name: \"editor-view\",\n          components: {\n            EditorItem: EditorItem,\n            EditorPageTable: EditorPageTable\n          },\n          props: [\"config\", \"scope\"],\n          methods: {\n            tableStyle: function tableStyle(config) {\n              return \"\".concat(config.height ? \"height:\".concat(config.height, \"px;\") : \"\", \"overflow:auto;white-space:nowrap;\");\n            }\n          },\n          mounted: function mounted() {\n            if (\"ref\" in this.config && this.config.ref && this.config.type === \"vue\") {\n              this.$root.$data.editorRef[this.config.ref] = this.$refs.cuscom;\n            }\n          }\n        }; // CONCATENATED MODULE: ./src/components/EditorView.vue?vue&type=script&lang=js&\n\n        /* harmony default export */\n\n        var components_EditorViewvue_type_script_lang_js_ = EditorViewvue_type_script_lang_js_; // EXTERNAL MODULE: ./src/components/EditorView.vue?vue&type=style&index=0&id=519148ff&scoped=true&lang=sass&\n\n        var EditorViewvue_type_style_index_0_id_519148ff_scoped_true_lang_sass_ = __webpack_require__(\"abb4\"); // CONCATENATED MODULE: ./src/components/EditorView.vue\n\n        /* normalize component */\n\n\n        var EditorView_component = normalizeComponent(components_EditorViewvue_type_script_lang_js_, EditorViewvue_type_template_id_519148ff_scoped_true_render, EditorViewvue_type_template_id_519148ff_scoped_true_staticRenderFns, false, null, \"519148ff\", null);\n        /* harmony default export */\n\n        var EditorView = EditorView_component.exports; // CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/Editor.vue?vue&type=script&lang=js&\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n        //\n\n        /* harmony default export */\n\n        var Editorvue_type_script_lang_js_ = {\n          name: \"oviz-editor\",\n          components: {\n            EditorView: EditorView\n          },\n          props: {\n            config: {\n              \"default\": {\n                sections: []\n              }\n            },\n            editorWidth: {\n              \"default\": 280\n            },\n            cardBackground: {\n              \"default\": \"#f4f4f4\"\n            }\n          },\n          data: function data() {\n            return {};\n          },\n          computed: {\n            editorStyle: function editorStyle() {\n              var w = \"\".concat(this.editorWidth, \"px\");\n              return \"width:\".concat(w, \";min-width:\").concat(w, \";max-width:\").concat(w, \";\");\n            }\n          },\n          created: function created() {\n            var _this = this;\n\n            this.$nextTick(function () {\n              _this.$emit(\"create\");\n            });\n          },\n          mounted: function mounted() {\n            var _this2 = this;\n\n            this.$nextTick(function () {\n              _this2.$emit(\"mount\");\n            });\n          }\n        }; // CONCATENATED MODULE: ./src/components/Editor.vue?vue&type=script&lang=js&\n\n        /* harmony default export */\n\n        var components_Editorvue_type_script_lang_js_ = Editorvue_type_script_lang_js_; // CONCATENATED MODULE: ./src/components/Editor.vue\n\n        /* normalize component */\n\n        var Editor_component = normalizeComponent(components_Editorvue_type_script_lang_js_, render, staticRenderFns, false, null, null, null);\n        /* harmony default export */\n\n        var Editor = __webpack_exports__[\"a\"] = Editor_component.exports;\n        /***/\n      },\n\n      /***/\n      \"d012\":\n      /***/\n      function d012(module, exports) {\n        module.exports = {};\n        /***/\n      },\n\n      /***/\n      \"d039\":\n      /***/\n      function d039(module, exports) {\n        module.exports = function (exec) {\n          try {\n            return !!exec();\n          } catch (error) {\n            return true;\n          }\n        };\n        /***/\n\n      },\n\n      /***/\n      \"d066\":\n      /***/\n      function d066(module, exports, __webpack_require__) {\n        var path = __webpack_require__(\"428f\");\n\n        var global = __webpack_require__(\"da84\");\n\n        var aFunction = function aFunction(variable) {\n          return typeof variable == 'function' ? variable : undefined;\n        };\n\n        module.exports = function (namespace, method) {\n          return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace]) : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];\n        };\n        /***/\n\n      },\n\n      /***/\n      \"d1e7\":\n      /***/\n      function d1e7(module, exports, __webpack_require__) {\n        \"use strict\";\n\n        var nativePropertyIsEnumerable = {}.propertyIsEnumerable;\n        var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor; // Nashorn ~ JDK8 bug\n\n        var NASHORN_BUG = getOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({\n          1: 2\n        }, 1); // `Object.prototype.propertyIsEnumerable` method implementation\n        // https://tc39.github.io/ecma262/#sec-object.prototype.propertyisenumerable\n\n        exports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n          var descriptor = getOwnPropertyDescriptor(this, V);\n          return !!descriptor && descriptor.enumerable;\n        } : nativePropertyIsEnumerable;\n        /***/\n      },\n\n      /***/\n      \"d28b\":\n      /***/\n      function d28b(module, exports, __webpack_require__) {\n        var defineWellKnownSymbol = __webpack_require__(\"746f\"); // `Symbol.iterator` well-known symbol\n        // https://tc39.github.io/ecma262/#sec-symbol.iterator\n\n\n        defineWellKnownSymbol('iterator');\n        /***/\n      },\n\n      /***/\n      \"d2bb\":\n      /***/\n      function d2bb(module, exports, __webpack_require__) {\n        var anObject = __webpack_require__(\"825a\");\n\n        var aPossiblePrototype = __webpack_require__(\"3bbe\"); // `Object.setPrototypeOf` method\n        // https://tc39.github.io/ecma262/#sec-object.setprototypeof\n        // Works with __proto__ only. Old v8 can't work with null proto objects.\n\n        /* eslint-disable no-proto */\n\n\n        module.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n          var CORRECT_SETTER = false;\n          var test = {};\n          var setter;\n\n          try {\n            setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;\n            setter.call(test, []);\n            CORRECT_SETTER = test instanceof Array;\n          } catch (error) {\n            /* empty */\n          }\n\n          return function setPrototypeOf(O, proto) {\n            anObject(O);\n            aPossiblePrototype(proto);\n            if (CORRECT_SETTER) setter.call(O, proto);else O.__proto__ = proto;\n            return O;\n          };\n        }() : undefined);\n        /***/\n      },\n\n      /***/\n      \"d3b7\":\n      /***/\n      function d3b7(module, exports, __webpack_require__) {\n        var TO_STRING_TAG_SUPPORT = __webpack_require__(\"00ee\");\n\n        var redefine = __webpack_require__(\"6eeb\");\n\n        var toString = __webpack_require__(\"b041\"); // `Object.prototype.toString` method\n        // https://tc39.github.io/ecma262/#sec-object.prototype.tostring\n\n\n        if (!TO_STRING_TAG_SUPPORT) {\n          redefine(Object.prototype, 'toString', toString, {\n            unsafe: true\n          });\n        }\n        /***/\n\n      },\n\n      /***/\n      \"d44e\":\n      /***/\n      function d44e(module, exports, __webpack_require__) {\n        var defineProperty = __webpack_require__(\"9bf2\").f;\n\n        var has = __webpack_require__(\"5135\");\n\n        var wellKnownSymbol = __webpack_require__(\"b622\");\n\n        var TO_STRING_TAG = wellKnownSymbol('toStringTag');\n\n        module.exports = function (it, TAG, STATIC) {\n          if (it && !has(it = STATIC ? it : it.prototype, TO_STRING_TAG)) {\n            defineProperty(it, TO_STRING_TAG, {\n              configurable: true,\n              value: TAG\n            });\n          }\n        };\n        /***/\n\n      },\n\n      /***/\n      \"d784\":\n      /***/\n      function d784(module, exports, __webpack_require__) {\n        \"use strict\"; // TODO: Remove from `core-js@4` since it's moved to entry points\n\n        __webpack_require__(\"ac1f\");\n\n        var redefine = __webpack_require__(\"6eeb\");\n\n        var fails = __webpack_require__(\"d039\");\n\n        var wellKnownSymbol = __webpack_require__(\"b622\");\n\n        var regexpExec = __webpack_require__(\"9263\");\n\n        var createNonEnumerableProperty = __webpack_require__(\"9112\");\n\n        var SPECIES = wellKnownSymbol('species');\n        var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n          // #replace needs built-in support for named groups.\n          // #match works fine because it just return the exec results, even if it has\n          // a \"grops\" property.\n          var re = /./;\n\n          re.exec = function () {\n            var result = [];\n            result.groups = {\n              a: '7'\n            };\n            return result;\n          };\n\n          return ''.replace(re, '$<a>') !== '7';\n        }); // IE <= 11 replaces $0 with the whole match, as if it was $&\n        // https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0\n\n        var REPLACE_KEEPS_$0 = function () {\n          return 'a'.replace(/./, '$0') === '$0';\n        }();\n\n        var REPLACE = wellKnownSymbol('replace'); // Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string\n\n        var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = function () {\n          if (/./[REPLACE]) {\n            return /./[REPLACE]('a', '$0') === '';\n          }\n\n          return false;\n        }(); // Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n        // Weex JS has frozen built-in prototypes, so use try / catch wrapper\n\n\n        var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {\n          var re = /(?:)/;\n          var originalExec = re.exec;\n\n          re.exec = function () {\n            return originalExec.apply(this, arguments);\n          };\n\n          var result = 'ab'.split(re);\n          return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';\n        });\n\n        module.exports = function (KEY, length, exec, sham) {\n          var SYMBOL = wellKnownSymbol(KEY);\n          var DELEGATES_TO_SYMBOL = !fails(function () {\n            // String methods call symbol-named RegEp methods\n            var O = {};\n\n            O[SYMBOL] = function () {\n              return 7;\n            };\n\n            return ''[KEY](O) != 7;\n          });\n          var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {\n            // Symbol-named RegExp methods call .exec\n            var execCalled = false;\n            var re = /a/;\n\n            if (KEY === 'split') {\n              // We can't use real regex here since it causes deoptimization\n              // and serious performance degradation in V8\n              // https://github.com/zloirock/core-js/issues/306\n              re = {}; // RegExp[@@split] doesn't call the regex's exec method, but first creates\n              // a new one. We need to return the patched regex when creating the new one.\n\n              re.constructor = {};\n\n              re.constructor[SPECIES] = function () {\n                return re;\n              };\n\n              re.flags = '';\n              re[SYMBOL] = /./[SYMBOL];\n            }\n\n            re.exec = function () {\n              execCalled = true;\n              return null;\n            };\n\n            re[SYMBOL]('');\n            return !execCalled;\n          });\n\n          if (!DELEGATES_TO_SYMBOL || !DELEGATES_TO_EXEC || KEY === 'replace' && !(REPLACE_SUPPORTS_NAMED_GROUPS && REPLACE_KEEPS_$0 && !REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE) || KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC) {\n            var nativeRegExpMethod = /./[SYMBOL];\n            var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {\n              if (regexp.exec === regexpExec) {\n                if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n                  // The native String method already delegates to @@method (this\n                  // polyfilled function), leasing to infinite recursion.\n                  // We avoid it by directly calling the native @@method method.\n                  return {\n                    done: true,\n                    value: nativeRegExpMethod.call(regexp, str, arg2)\n                  };\n                }\n\n                return {\n                  done: true,\n                  value: nativeMethod.call(str, regexp, arg2)\n                };\n              }\n\n              return {\n                done: false\n              };\n            }, {\n              REPLACE_KEEPS_$0: REPLACE_KEEPS_$0,\n              REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE\n            });\n            var stringMethod = methods[0];\n            var regexMethod = methods[1];\n            redefine(String.prototype, KEY, stringMethod);\n            redefine(RegExp.prototype, SYMBOL, length == 2 // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n            // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n            ? function (string, arg) {\n              return regexMethod.call(string, this, arg);\n            } // 21.2.5.6 RegExp.prototype[@@match](string)\n            // 21.2.5.9 RegExp.prototype[@@search](string)\n            : function (string) {\n              return regexMethod.call(string, this);\n            });\n          }\n\n          if (sham) createNonEnumerableProperty(RegExp.prototype[SYMBOL], 'sham', true);\n        };\n        /***/\n\n      },\n\n      /***/\n      \"d81d\":\n      /***/\n      function d81d(module, exports, __webpack_require__) {\n        \"use strict\";\n\n        var $ = __webpack_require__(\"23e7\");\n\n        var $map = __webpack_require__(\"b727\").map;\n\n        var arrayMethodHasSpeciesSupport = __webpack_require__(\"1dde\");\n\n        var arrayMethodUsesToLength = __webpack_require__(\"ae40\");\n\n        var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map'); // FF49- issue\n\n        var USES_TO_LENGTH = arrayMethodUsesToLength('map'); // `Array.prototype.map` method\n        // https://tc39.github.io/ecma262/#sec-array.prototype.map\n        // with adding support of @@species\n\n        $({\n          target: 'Array',\n          proto: true,\n          forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH\n        }, {\n          map: function map(callbackfn\n          /* , thisArg */\n          ) {\n            return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n          }\n        });\n        /***/\n      },\n\n      /***/\n      \"da84\":\n      /***/\n      function da84(module, exports, __webpack_require__) {\n        /* WEBPACK VAR INJECTION */\n        (function (global) {\n          var check = function check(it) {\n            return it && it.Math == Math && it;\n          }; // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\n\n\n          module.exports = // eslint-disable-next-line no-undef\n          check((typeof globalThis === \"undefined\" ? \"undefined\" : _typeof2(globalThis)) == 'object' && globalThis) || check((typeof window === \"undefined\" ? \"undefined\" : _typeof2(window)) == 'object' && window) || check((typeof self === \"undefined\" ? \"undefined\" : _typeof2(self)) == 'object' && self) || check(_typeof2(global) == 'object' && global) || // eslint-disable-next-line no-new-func\n          Function('return this')();\n          /* WEBPACK VAR INJECTION */\n        }).call(this, __webpack_require__(\"c8ba\"));\n        /***/\n      },\n\n      /***/\n      \"ddb0\":\n      /***/\n      function ddb0(module, exports, __webpack_require__) {\n        var global = __webpack_require__(\"da84\");\n\n        var DOMIterables = __webpack_require__(\"fdbc\");\n\n        var ArrayIteratorMethods = __webpack_require__(\"e260\");\n\n        var createNonEnumerableProperty = __webpack_require__(\"9112\");\n\n        var wellKnownSymbol = __webpack_require__(\"b622\");\n\n        var ITERATOR = wellKnownSymbol('iterator');\n        var TO_STRING_TAG = wellKnownSymbol('toStringTag');\n        var ArrayValues = ArrayIteratorMethods.values;\n\n        for (var COLLECTION_NAME in DOMIterables) {\n          var Collection = global[COLLECTION_NAME];\n          var CollectionPrototype = Collection && Collection.prototype;\n\n          if (CollectionPrototype) {\n            // some Chrome versions have non-configurable methods on DOMTokenList\n            if (CollectionPrototype[ITERATOR] !== ArrayValues) try {\n              createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);\n            } catch (error) {\n              CollectionPrototype[ITERATOR] = ArrayValues;\n            }\n\n            if (!CollectionPrototype[TO_STRING_TAG]) {\n              createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);\n            }\n\n            if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {\n              // some Chrome versions have non-configurable methods on DOMTokenList\n              if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {\n                createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);\n              } catch (error) {\n                CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];\n              }\n            }\n          }\n        }\n        /***/\n\n      },\n\n      /***/\n      \"df75\":\n      /***/\n      function df75(module, exports, __webpack_require__) {\n        var internalObjectKeys = __webpack_require__(\"ca84\");\n\n        var enumBugKeys = __webpack_require__(\"7839\"); // `Object.keys` method\n        // https://tc39.github.io/ecma262/#sec-object.keys\n\n\n        module.exports = Object.keys || function keys(O) {\n          return internalObjectKeys(O, enumBugKeys);\n        };\n        /***/\n\n      },\n\n      /***/\n      \"e01a\":\n      /***/\n      function e01a(module, exports, __webpack_require__) {\n        \"use strict\"; // `Symbol.prototype.description` getter\n        // https://tc39.github.io/ecma262/#sec-symbol.prototype.description\n\n        var $ = __webpack_require__(\"23e7\");\n\n        var DESCRIPTORS = __webpack_require__(\"83ab\");\n\n        var global = __webpack_require__(\"da84\");\n\n        var has = __webpack_require__(\"5135\");\n\n        var isObject = __webpack_require__(\"861d\");\n\n        var defineProperty = __webpack_require__(\"9bf2\").f;\n\n        var copyConstructorProperties = __webpack_require__(\"e893\");\n\n        var NativeSymbol = global.Symbol;\n\n        if (DESCRIPTORS && typeof NativeSymbol == 'function' && (!('description' in NativeSymbol.prototype) || // Safari 12 bug\n        NativeSymbol().description !== undefined)) {\n          var EmptyStringDescriptionStore = {}; // wrap Symbol constructor for correct work with undefined description\n\n          var SymbolWrapper = function _Symbol9() {\n            var description = arguments.length < 1 || arguments[0] === undefined ? undefined : String(arguments[0]);\n            var result = this instanceof SymbolWrapper ? new NativeSymbol(description) // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'\n            : description === undefined ? NativeSymbol() : NativeSymbol(description);\n            if (description === '') EmptyStringDescriptionStore[result] = true;\n            return result;\n          };\n\n          copyConstructorProperties(SymbolWrapper, NativeSymbol);\n          var symbolPrototype = SymbolWrapper.prototype = NativeSymbol.prototype;\n          symbolPrototype.constructor = SymbolWrapper;\n          var symbolToString = symbolPrototype.toString;\n\n          var _native = String(NativeSymbol('test')) == 'Symbol(test)';\n\n          var regexp = /^Symbol\\((.*)\\)[^)]+$/;\n          defineProperty(symbolPrototype, 'description', {\n            configurable: true,\n            get: function description() {\n              var symbol = isObject(this) ? this.valueOf() : this;\n              var string = symbolToString.call(symbol);\n              if (has(EmptyStringDescriptionStore, symbol)) return '';\n              var desc = _native ? string.slice(7, -1) : string.replace(regexp, '$1');\n              return desc === '' ? undefined : desc;\n            }\n          });\n          $({\n            global: true,\n            forced: true\n          }, {\n            Symbol: SymbolWrapper\n          });\n        }\n        /***/\n\n      },\n\n      /***/\n      \"e163\":\n      /***/\n      function e163(module, exports, __webpack_require__) {\n        var has = __webpack_require__(\"5135\");\n\n        var toObject = __webpack_require__(\"7b0b\");\n\n        var sharedKey = __webpack_require__(\"f772\");\n\n        var CORRECT_PROTOTYPE_GETTER = __webpack_require__(\"e177\");\n\n        var IE_PROTO = sharedKey('IE_PROTO');\n        var ObjectPrototype = Object.prototype; // `Object.getPrototypeOf` method\n        // https://tc39.github.io/ecma262/#sec-object.getprototypeof\n\n        module.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {\n          O = toObject(O);\n          if (has(O, IE_PROTO)) return O[IE_PROTO];\n\n          if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n            return O.constructor.prototype;\n          }\n\n          return O instanceof Object ? ObjectPrototype : null;\n        };\n        /***/\n      },\n\n      /***/\n      \"e177\":\n      /***/\n      function e177(module, exports, __webpack_require__) {\n        var fails = __webpack_require__(\"d039\");\n\n        module.exports = !fails(function () {\n          function F() {\n            /* empty */\n          }\n\n          F.prototype.constructor = null;\n          return Object.getPrototypeOf(new F()) !== F.prototype;\n        });\n        /***/\n      },\n\n      /***/\n      \"e260\":\n      /***/\n      function e260(module, exports, __webpack_require__) {\n        \"use strict\";\n\n        var toIndexedObject = __webpack_require__(\"fc6a\");\n\n        var addToUnscopables = __webpack_require__(\"44d2\");\n\n        var Iterators = __webpack_require__(\"3f8c\");\n\n        var InternalStateModule = __webpack_require__(\"69f3\");\n\n        var defineIterator = __webpack_require__(\"7dd0\");\n\n        var ARRAY_ITERATOR = 'Array Iterator';\n        var setInternalState = InternalStateModule.set;\n        var getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR); // `Array.prototype.entries` method\n        // https://tc39.github.io/ecma262/#sec-array.prototype.entries\n        // `Array.prototype.keys` method\n        // https://tc39.github.io/ecma262/#sec-array.prototype.keys\n        // `Array.prototype.values` method\n        // https://tc39.github.io/ecma262/#sec-array.prototype.values\n        // `Array.prototype[@@iterator]` method\n        // https://tc39.github.io/ecma262/#sec-array.prototype-@@iterator\n        // `CreateArrayIterator` internal method\n        // https://tc39.github.io/ecma262/#sec-createarrayiterator\n\n        module.exports = defineIterator(Array, 'Array', function (iterated, kind) {\n          setInternalState(this, {\n            type: ARRAY_ITERATOR,\n            target: toIndexedObject(iterated),\n            // target\n            index: 0,\n            // next index\n            kind: kind // kind\n\n          }); // `%ArrayIteratorPrototype%.next` method\n          // https://tc39.github.io/ecma262/#sec-%arrayiteratorprototype%.next\n        }, function () {\n          var state = getInternalState(this);\n          var target = state.target;\n          var kind = state.kind;\n          var index = state.index++;\n\n          if (!target || index >= target.length) {\n            state.target = undefined;\n            return {\n              value: undefined,\n              done: true\n            };\n          }\n\n          if (kind == 'keys') return {\n            value: index,\n            done: false\n          };\n          if (kind == 'values') return {\n            value: target[index],\n            done: false\n          };\n          return {\n            value: [index, target[index]],\n            done: false\n          };\n        }, 'values'); // argumentsList[@@iterator] is %ArrayProto_values%\n        // https://tc39.github.io/ecma262/#sec-createunmappedargumentsobject\n        // https://tc39.github.io/ecma262/#sec-createmappedargumentsobject\n\n        Iterators.Arguments = Iterators.Array; // https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\n\n        addToUnscopables('keys');\n        addToUnscopables('values');\n        addToUnscopables('entries');\n        /***/\n      },\n\n      /***/\n      \"e2da\":\n      /***/\n      function e2da(module, exports, __webpack_require__) {// extracted by mini-css-extract-plugin\n\n        /***/\n      },\n\n      /***/\n      \"e538\":\n      /***/\n      function e538(module, exports, __webpack_require__) {\n        var wellKnownSymbol = __webpack_require__(\"b622\");\n\n        exports.f = wellKnownSymbol;\n        /***/\n      },\n\n      /***/\n      \"e893\":\n      /***/\n      function e893(module, exports, __webpack_require__) {\n        var has = __webpack_require__(\"5135\");\n\n        var ownKeys = __webpack_require__(\"56ef\");\n\n        var getOwnPropertyDescriptorModule = __webpack_require__(\"06cf\");\n\n        var definePropertyModule = __webpack_require__(\"9bf2\");\n\n        module.exports = function (target, source) {\n          var keys = ownKeys(source);\n          var defineProperty = definePropertyModule.f;\n          var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n\n          for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n          }\n        };\n        /***/\n\n      },\n\n      /***/\n      \"e8b5\":\n      /***/\n      function e8b5(module, exports, __webpack_require__) {\n        var classof = __webpack_require__(\"c6b6\"); // `IsArray` abstract operation\n        // https://tc39.github.io/ecma262/#sec-isarray\n\n\n        module.exports = Array.isArray || function isArray(arg) {\n          return classof(arg) == 'Array';\n        };\n        /***/\n\n      },\n\n      /***/\n      \"e95a\":\n      /***/\n      function e95a(module, exports, __webpack_require__) {\n        var wellKnownSymbol = __webpack_require__(\"b622\");\n\n        var Iterators = __webpack_require__(\"3f8c\");\n\n        var ITERATOR = wellKnownSymbol('iterator');\n        var ArrayPrototype = Array.prototype; // check on default Array iterator\n\n        module.exports = function (it) {\n          return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);\n        };\n        /***/\n\n      },\n\n      /***/\n      \"f5df\":\n      /***/\n      function f5df(module, exports, __webpack_require__) {\n        var TO_STRING_TAG_SUPPORT = __webpack_require__(\"00ee\");\n\n        var classofRaw = __webpack_require__(\"c6b6\");\n\n        var wellKnownSymbol = __webpack_require__(\"b622\");\n\n        var TO_STRING_TAG = wellKnownSymbol('toStringTag'); // ES3 wrong here\n\n        var CORRECT_ARGUMENTS = classofRaw(function () {\n          return arguments;\n        }()) == 'Arguments'; // fallback for IE11 Script Access Denied error\n\n        var tryGet = function tryGet(it, key) {\n          try {\n            return it[key];\n          } catch (error) {\n            /* empty */\n          }\n        }; // getting tag from ES6+ `Object.prototype.toString`\n\n\n        module.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n          var O, tag, result;\n          return it === undefined ? 'Undefined' : it === null ? 'Null' // @@toStringTag case\n          : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag // builtinTag case\n          : CORRECT_ARGUMENTS ? classofRaw(O) // ES3 arguments fallback\n          : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;\n        };\n        /***/\n      },\n\n      /***/\n      \"f772\":\n      /***/\n      function f772(module, exports, __webpack_require__) {\n        var shared = __webpack_require__(\"5692\");\n\n        var uid = __webpack_require__(\"90e3\");\n\n        var keys = shared('keys');\n\n        module.exports = function (key) {\n          return keys[key] || (keys[key] = uid(key));\n        };\n        /***/\n\n      },\n\n      /***/\n      \"fb15\":\n      /***/\n      function fb15(module, __webpack_exports__, __webpack_require__) {\n        \"use strict\"; // ESM COMPAT FLAG\n\n        __webpack_require__.r(__webpack_exports__); // EXPORTS\n\n\n        __webpack_require__.d(__webpack_exports__, \"install\", function () {\n          return (\n            /* reexport */\n            src_0[\"c\"\n            /* install */\n            ]\n          );\n        });\n\n        __webpack_require__.d(__webpack_exports__, \"Editor\", function () {\n          return (\n            /* reexport */\n            src_0[\"a\"\n            /* Editor */\n            ]\n          );\n        }); // CONCATENATED MODULE: ./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js\n        // This file is imported into lib/wc client bundles.\n\n\n        if (typeof window !== 'undefined') {\n          var currentScript = window.document.currentScript;\n\n          if (false) {\n            var getCurrentScript;\n          }\n\n          var src = currentScript && currentScript.src.match(/(.+\\/)[^/]+\\.js(\\?.*)?$/);\n\n          if (src) {\n            __webpack_require__.p = src[1]; // eslint-disable-line\n          }\n        } // Indicate to webpack that this file can be concatenated\n\n        /* harmony default export */\n\n\n        var setPublicPath = null; // EXTERNAL MODULE: ./src/index.js\n\n        var src_0 = __webpack_require__(\"b635\"); // CONCATENATED MODULE: ./node_modules/@vue/cli-service/lib/commands/build/entry-lib.js\n\n        /* harmony default export */\n\n\n        var entry_lib = __webpack_exports__[\"default\"] = src_0[\"b\"\n        /* default */\n        ];\n        /***/\n      },\n\n      /***/\n      \"fb6a\":\n      /***/\n      function fb6a(module, exports, __webpack_require__) {\n        \"use strict\";\n\n        var $ = __webpack_require__(\"23e7\");\n\n        var isObject = __webpack_require__(\"861d\");\n\n        var isArray = __webpack_require__(\"e8b5\");\n\n        var toAbsoluteIndex = __webpack_require__(\"23cb\");\n\n        var toLength = __webpack_require__(\"50c4\");\n\n        var toIndexedObject = __webpack_require__(\"fc6a\");\n\n        var createProperty = __webpack_require__(\"8418\");\n\n        var wellKnownSymbol = __webpack_require__(\"b622\");\n\n        var arrayMethodHasSpeciesSupport = __webpack_require__(\"1dde\");\n\n        var arrayMethodUsesToLength = __webpack_require__(\"ae40\");\n\n        var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('slice');\n        var USES_TO_LENGTH = arrayMethodUsesToLength('slice', {\n          ACCESSORS: true,\n          0: 0,\n          1: 2\n        });\n        var SPECIES = wellKnownSymbol('species');\n        var nativeSlice = [].slice;\n        var max = Math.max; // `Array.prototype.slice` method\n        // https://tc39.github.io/ecma262/#sec-array.prototype.slice\n        // fallback for not array-like ES3 strings and DOM objects\n\n        $({\n          target: 'Array',\n          proto: true,\n          forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH\n        }, {\n          slice: function slice(start, end) {\n            var O = toIndexedObject(this);\n            var length = toLength(O.length);\n            var k = toAbsoluteIndex(start, length);\n            var fin = toAbsoluteIndex(end === undefined ? length : end, length); // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible\n\n            var Constructor, result, n;\n\n            if (isArray(O)) {\n              Constructor = O.constructor; // cross-realm fallback\n\n              if (typeof Constructor == 'function' && (Constructor === Array || isArray(Constructor.prototype))) {\n                Constructor = undefined;\n              } else if (isObject(Constructor)) {\n                Constructor = Constructor[SPECIES];\n                if (Constructor === null) Constructor = undefined;\n              }\n\n              if (Constructor === Array || Constructor === undefined) {\n                return nativeSlice.call(O, k, fin);\n              }\n            }\n\n            result = new (Constructor === undefined ? Array : Constructor)(max(fin - k, 0));\n\n            for (n = 0; k < fin; k++, n++) {\n              if (k in O) createProperty(result, n, O[k]);\n            }\n\n            result.length = n;\n            return result;\n          }\n        });\n        /***/\n      },\n\n      /***/\n      \"fc6a\":\n      /***/\n      function fc6a(module, exports, __webpack_require__) {\n        // toObject with fallback for non-array-like ES3 strings\n        var IndexedObject = __webpack_require__(\"44ad\");\n\n        var requireObjectCoercible = __webpack_require__(\"1d80\");\n\n        module.exports = function (it) {\n          return IndexedObject(requireObjectCoercible(it));\n        };\n        /***/\n\n      },\n\n      /***/\n      \"fdbc\":\n      /***/\n      function fdbc(module, exports) {\n        // iterable DOM collections\n        // flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods\n        module.exports = {\n          CSSRuleList: 0,\n          CSSStyleDeclaration: 0,\n          CSSValueList: 0,\n          ClientRectList: 0,\n          DOMRectList: 0,\n          DOMStringList: 0,\n          DOMTokenList: 1,\n          DataTransferItemList: 0,\n          FileList: 0,\n          HTMLAllCollection: 0,\n          HTMLCollection: 0,\n          HTMLFormElement: 0,\n          HTMLSelectElement: 0,\n          MediaList: 0,\n          MimeTypeArray: 0,\n          NamedNodeMap: 0,\n          NodeList: 1,\n          PaintRequestList: 0,\n          Plugin: 0,\n          PluginArray: 0,\n          SVGLengthList: 0,\n          SVGNumberList: 0,\n          SVGPathSegList: 0,\n          SVGPointList: 0,\n          SVGStringList: 0,\n          SVGTransformList: 0,\n          SourceBufferList: 0,\n          StyleSheetList: 0,\n          TextTrackCueList: 0,\n          TextTrackList: 0,\n          TouchList: 0\n        };\n        /***/\n      },\n\n      /***/\n      \"fdbf\":\n      /***/\n      function fdbf(module, exports, __webpack_require__) {\n        var NATIVE_SYMBOL = __webpack_require__(\"4930\");\n\n        module.exports = NATIVE_SYMBOL // eslint-disable-next-line no-undef\n        && !Symbol.sham // eslint-disable-next-line no-undef\n        && _typeof2(Symbol.iterator) == 'symbol';\n        /***/\n      }\n      /******/\n\n    })\n  );\n});","map":null,"metadata":{},"sourceType":"module"}