svg {
	width = 1500; height = 1000
	XYPlot {
		height = 500
		width = config.plotWidth
		valueRange = boxData.valueRange
		padding-y = 20
		padding-l = 40
		data = {
			boxData1: boxData.boxData[0],
			boxData2: boxData.boxData[1]
		}
		AxisBackground { dashArray = "1, 2" }
		AxisBackground {
			orientation = "vertical"
			includeEndTicks = true
			dashArray = "1, 2"
		}
		Rect{
			width = 100%
			height = 100%
			stroke = "#000"
			fill = "none"
		}
		@for (item, index) in boxData.boxData{
			Boxes {
				key = index
				data = "boxData" + (index + 1).toString()
				showMean = true
				showNotch = false
				x = -4 + 8 * index
				:box (_d) {
					Rect.full  {
						zIndex = 1
						fill = "white"
						stroke = colors[index]
						// fillOpacity = 
						behavior:tooltip {
							content = (`min: ${_d.data[0].toFixed(2)} <br>
										first quartile: ${_d.data[1].toFixed(2)} <br>
										median: ${_d.data[2].toFixed(2)} <br>
										third quartile: ${_d.data[3].toFixed(2)} <br>
										max: ${_d.data[4].toFixed(2)} <br>`)
						}
						x = 33%
						width = 33%
					}
				}
				:whiskle (d) {
					Line { x1 = 50%; x2 = 50%; y1 = 0; y2 = 100%; stroke = colors[index];
					}
				}
				:outlier{
					@if config.showOutliers {
						Circle.centered { r = 2; fill = colors[index] }
					} @else {
						Circle.centered { fill = "none" }
					}
				}
				:mean(means) {
					Line {x1 = 33%; x2 = 66%; stroke = colors[index]}
				}
				:median(d) {}
			}
		}
		Axis("left");
		Axis("bottom") {
			y = 100%
			:label (tick) {
				Text {
					text = tick.value + "  "
					rotation = @rotate(-config.xLabelRotation)
					anchor = @anchor("r", "m")
					fontSize = 13
				}
			}
		}
		// Text {text = title; anchor = @anchor("bottom", "center"); x = 50%; y = -7; fontSize = 14}
		Component {
			x = -25; y = 50%
			rotation = @rotate(-90)
			Text(ylabel) { anchor = @anchor("bottom", "center") }
		}
		// Component {
		// 	x = 0; y = @geo(100,2)
		// 	@for (item, index) in categories {
		// 		Component{
		// 			key = index
		// 			rotation = @rotate(45)
		// 			x = @scaled-x(item)
		// 			Text{
		// 				anchor = @anchor("middle","top")
		// 				text = item
		// 				fill = "#000"
		// 				fontSize = 12
		// 			}
		// 		}
		// 	}
		// }
		Component{
			x = 5%; y = 90%
			@for (item, index) in boxData.classifications{
				Line { key = index; x1 = 7.5; x2 = 7.5; y1 = 24 * index - 10; y2 = 24 * index + 10; stroke = colors[index] }
				
				Rect {
					key = index
					x = 0
					y = index * 24
					height = 10
					width = 15
					anchor = @anchor("middle","left")
					fill = "white"
					stroke = colors[index]
				}
				Line { key = [index, 1]; x1 = 0; x2 = 15; y1 = 24 * index; y2 = 24 * index; stroke = colors[index] }
				Text{
					x = 20
					y = index * 24
					key = index
					anchor = @anchor("middle","left")
					text = item
					fill = "#000"
					fontSize = 12
				}
			}
		}
	}
}